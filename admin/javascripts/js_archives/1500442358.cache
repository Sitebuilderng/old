/*! jQuery v1.10.1 | (c) 2005, 2013 jQuery Foundation, Inc. | jquery.org/license
//@ sourceMappingURL=jquery-1.10.1.min.map
*/
(function(e,t){var n,r,i=typeof t,o=e.location,a=e.document,s=a.documentElement,l=e.jQuery,u=e.$,c={},p=[],f="1.10.1",d=p.concat,h=p.push,g=p.slice,m=p.indexOf,y=c.toString,v=c.hasOwnProperty,b=f.trim,x=function(e,t){return new x.fn.init(e,t,r)},w=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,T=/\S+/g,C=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,N=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,k=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,E=/^[\],:{}\s]*$/,S=/(?:^|:|,)(?:\s*\[)+/g,A=/\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,j=/"[^"\\\r\n]*"|true|false|null|-?(?:\d+\.|)\d+(?:[eE][+-]?\d+|)/g,D=/^-ms-/,L=/-([\da-z])/gi,H=function(e,t){return t.toUpperCase()},q=function(e){(a.addEventListener||"load"===e.type||"complete"===a.readyState)&&(_(),x.ready())},_=function(){a.addEventListener?(a.removeEventListener("DOMContentLoaded",q,!1),e.removeEventListener("load",q,!1)):(a.detachEvent("onreadystatechange",q),e.detachEvent("onload",q))};x.fn=x.prototype={jquery:f,constructor:x,init:function(e,n,r){var i,o;if(!e)return this;if("string"==typeof e){if(i="<"===e.charAt(0)&&">"===e.charAt(e.length-1)&&e.length>=3?[null,e,null]:N.exec(e),!i||!i[1]&&n)return!n||n.jquery?(n||r).find(e):this.constructor(n).find(e);if(i[1]){if(n=n instanceof x?n[0]:n,x.merge(this,x.parseHTML(i[1],n&&n.nodeType?n.ownerDocument||n:a,!0)),k.test(i[1])&&x.isPlainObject(n))for(i in n)x.isFunction(this[i])?this[i](n[i]):this.attr(i,n[i]);return this}if(o=a.getElementById(i[2]),o&&o.parentNode){if(o.id!==i[2])return r.find(e);this.length=1,this[0]=o}return this.context=a,this.selector=e,this}return e.nodeType?(this.context=this[0]=e,this.length=1,this):x.isFunction(e)?r.ready(e):(e.selector!==t&&(this.selector=e.selector,this.context=e.context),x.makeArray(e,this))},selector:"",length:0,toArray:function(){return g.call(this)},get:function(e){return null==e?this.toArray():0>e?this[this.length+e]:this[e]},pushStack:function(e){var t=x.merge(this.constructor(),e);return t.prevObject=this,t.context=this.context,t},each:function(e,t){return x.each(this,e,t)},ready:function(e){return x.ready.promise().done(e),this},slice:function(){return this.pushStack(g.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,n=+e+(0>e?t:0);return this.pushStack(n>=0&&t>n?[this[n]]:[])},map:function(e){return this.pushStack(x.map(this,function(t,n){return e.call(t,n,t)}))},end:function(){return this.prevObject||this.constructor(null)},push:h,sort:[].sort,splice:[].splice},x.fn.init.prototype=x.fn,x.extend=x.fn.extend=function(){var e,n,r,i,o,a,s=arguments[0]||{},l=1,u=arguments.length,c=!1;for("boolean"==typeof s&&(c=s,s=arguments[1]||{},l=2),"object"==typeof s||x.isFunction(s)||(s={}),u===l&&(s=this,--l);u>l;l++)if(null!=(o=arguments[l]))for(i in o)e=s[i],r=o[i],s!==r&&(c&&r&&(x.isPlainObject(r)||(n=x.isArray(r)))?(n?(n=!1,a=e&&x.isArray(e)?e:[]):a=e&&x.isPlainObject(e)?e:{},s[i]=x.extend(c,a,r)):r!==t&&(s[i]=r));return s},x.extend({expando:"jQuery"+(f+Math.random()).replace(/\D/g,""),noConflict:function(t){return e.$===x&&(e.$=u),t&&e.jQuery===x&&(e.jQuery=l),x},isReady:!1,readyWait:1,holdReady:function(e){e?x.readyWait++:x.ready(!0)},ready:function(e){if(e===!0?!--x.readyWait:!x.isReady){if(!a.body)return setTimeout(x.ready);x.isReady=!0,e!==!0&&--x.readyWait>0||(n.resolveWith(a,[x]),x.fn.trigger&&x(a).trigger("ready").off("ready"))}},isFunction:function(e){return"function"===x.type(e)},isArray:Array.isArray||function(e){return"array"===x.type(e)},isWindow:function(e){return null!=e&&e==e.window},isNumeric:function(e){return!isNaN(parseFloat(e))&&isFinite(e)},type:function(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?c[y.call(e)]||"object":typeof e},isPlainObject:function(e){var n;if(!e||"object"!==x.type(e)||e.nodeType||x.isWindow(e))return!1;try{if(e.constructor&&!v.call(e,"constructor")&&!v.call(e.constructor.prototype,"isPrototypeOf"))return!1}catch(r){return!1}if(x.support.ownLast)for(n in e)return v.call(e,n);for(n in e);return n===t||v.call(e,n)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},error:function(e){throw Error(e)},parseHTML:function(e,t,n){if(!e||"string"!=typeof e)return null;"boolean"==typeof t&&(n=t,t=!1),t=t||a;var r=k.exec(e),i=!n&&[];return r?[t.createElement(r[1])]:(r=x.buildFragment([e],t,i),i&&x(i).remove(),x.merge([],r.childNodes))},parseJSON:function(n){return e.JSON&&e.JSON.parse?e.JSON.parse(n):null===n?n:"string"==typeof n&&(n=x.trim(n),n&&E.test(n.replace(A,"@").replace(j,"]").replace(S,"")))?Function("return "+n)():(x.error("Invalid JSON: "+n),t)},parseXML:function(n){var r,i;if(!n||"string"!=typeof n)return null;try{e.DOMParser?(i=new DOMParser,r=i.parseFromString(n,"text/xml")):(r=new ActiveXObject("Microsoft.XMLDOM"),r.async="false",r.loadXML(n))}catch(o){r=t}return r&&r.documentElement&&!r.getElementsByTagName("parsererror").length||x.error("Invalid XML: "+n),r},noop:function(){},globalEval:function(t){t&&x.trim(t)&&(e.execScript||function(t){e.eval.call(e,t)})(t)},camelCase:function(e){return e.replace(D,"ms-").replace(L,H)},nodeName:function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()},each:function(e,t,n){var r,i=0,o=e.length,a=M(e);if(n){if(a){for(;o>i;i++)if(r=t.apply(e[i],n),r===!1)break}else for(i in e)if(r=t.apply(e[i],n),r===!1)break}else if(a){for(;o>i;i++)if(r=t.call(e[i],i,e[i]),r===!1)break}else for(i in e)if(r=t.call(e[i],i,e[i]),r===!1)break;return e},trim:b&&!b.call("\ufeff\u00a0")?function(e){return null==e?"":b.call(e)}:function(e){return null==e?"":(e+"").replace(C,"")},makeArray:function(e,t){var n=t||[];return null!=e&&(M(Object(e))?x.merge(n,"string"==typeof e?[e]:e):h.call(n,e)),n},inArray:function(e,t,n){var r;if(t){if(m)return m.call(t,e,n);for(r=t.length,n=n?0>n?Math.max(0,r+n):n:0;r>n;n++)if(n in t&&t[n]===e)return n}return-1},merge:function(e,n){var r=n.length,i=e.length,o=0;if("number"==typeof r)for(;r>o;o++)e[i++]=n[o];else while(n[o]!==t)e[i++]=n[o++];return e.length=i,e},grep:function(e,t,n){var r,i=[],o=0,a=e.length;for(n=!!n;a>o;o++)r=!!t(e[o],o),n!==r&&i.push(e[o]);return i},map:function(e,t,n){var r,i=0,o=e.length,a=M(e),s=[];if(a)for(;o>i;i++)r=t(e[i],i,n),null!=r&&(s[s.length]=r);else for(i in e)r=t(e[i],i,n),null!=r&&(s[s.length]=r);return d.apply([],s)},guid:1,proxy:function(e,n){var r,i,o;return"string"==typeof n&&(o=e[n],n=e,e=o),x.isFunction(e)?(r=g.call(arguments,2),i=function(){return e.apply(n||this,r.concat(g.call(arguments)))},i.guid=e.guid=e.guid||x.guid++,i):t},access:function(e,n,r,i,o,a,s){var l=0,u=e.length,c=null==r;if("object"===x.type(r)){o=!0;for(l in r)x.access(e,n,l,r[l],!0,a,s)}else if(i!==t&&(o=!0,x.isFunction(i)||(s=!0),c&&(s?(n.call(e,i),n=null):(c=n,n=function(e,t,n){return c.call(x(e),n)})),n))for(;u>l;l++)n(e[l],r,s?i:i.call(e[l],l,n(e[l],r)));return o?e:c?n.call(e):u?n(e[0],r):a},now:function(){return(new Date).getTime()},swap:function(e,t,n,r){var i,o,a={};for(o in t)a[o]=e.style[o],e.style[o]=t[o];i=n.apply(e,r||[]);for(o in t)e.style[o]=a[o];return i}}),x.ready.promise=function(t){if(!n)if(n=x.Deferred(),"complete"===a.readyState)setTimeout(x.ready);else if(a.addEventListener)a.addEventListener("DOMContentLoaded",q,!1),e.addEventListener("load",q,!1);else{a.attachEvent("onreadystatechange",q),e.attachEvent("onload",q);var r=!1;try{r=null==e.frameElement&&a.documentElement}catch(i){}r&&r.doScroll&&function o(){if(!x.isReady){try{r.doScroll("left")}catch(e){return setTimeout(o,50)}_(),x.ready()}}()}return n.promise(t)},x.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(e,t){c["[object "+t+"]"]=t.toLowerCase()});function M(e){var t=e.length,n=x.type(e);return x.isWindow(e)?!1:1===e.nodeType&&t?!0:"array"===n||"function"!==n&&(0===t||"number"==typeof t&&t>0&&t-1 in e)}r=x(a),function(e,t){var n,r,i,o,a,s,l,u,c,p,f,d,h,g,m,y,v,b="sizzle"+-new Date,w=e.document,T=0,C=0,N=lt(),k=lt(),E=lt(),S=!1,A=function(){return 0},j=typeof t,D=1<<31,L={}.hasOwnProperty,H=[],q=H.pop,_=H.push,M=H.push,O=H.slice,F=H.indexOf||function(e){var t=0,n=this.length;for(;n>t;t++)if(this[t]===e)return t;return-1},B="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",P="[\\x20\\t\\r\\n\\f]",R="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",W=R.replace("w","w#"),$="\\["+P+"*("+R+")"+P+"*(?:([*^$|!~]?=)"+P+"*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|("+W+")|)|)"+P+"*\\]",I=":("+R+")(?:\\(((['\"])((?:\\\\.|[^\\\\])*?)\\3|((?:\\\\.|[^\\\\()[\\]]|"+$.replace(3,8)+")*)|.*)\\)|)",z=RegExp("^"+P+"+|((?:^|[^\\\\])(?:\\\\.)*)"+P+"+$","g"),X=RegExp("^"+P+"*,"+P+"*"),U=RegExp("^"+P+"*([>+~]|"+P+")"+P+"*"),V=RegExp(P+"*[+~]"),Y=RegExp("="+P+"*([^\\]'\"]*)"+P+"*\\]","g"),J=RegExp(I),G=RegExp("^"+W+"$"),Q={ID:RegExp("^#("+R+")"),CLASS:RegExp("^\\.("+R+")"),TAG:RegExp("^("+R.replace("w","w*")+")"),ATTR:RegExp("^"+$),PSEUDO:RegExp("^"+I),CHILD:RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+P+"*(even|odd|(([+-]|)(\\d*)n|)"+P+"*(?:([+-]|)"+P+"*(\\d+)|))"+P+"*\\)|)","i"),bool:RegExp("^(?:"+B+")$","i"),needsContext:RegExp("^"+P+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+P+"*((?:-\\d)?\\d*)"+P+"*\\)|)(?=[^-]|$)","i")},K=/^[^{]+\{\s*\[native \w/,Z=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,et=/^(?:input|select|textarea|button)$/i,tt=/^h\d$/i,nt=/'|\\/g,rt=RegExp("\\\\([\\da-f]{1,6}"+P+"?|("+P+")|.)","ig"),it=function(e,t,n){var r="0x"+t-65536;return r!==r||n?t:0>r?String.fromCharCode(r+65536):String.fromCharCode(55296|r>>10,56320|1023&r)};try{M.apply(H=O.call(w.childNodes),w.childNodes),H[w.childNodes.length].nodeType}catch(ot){M={apply:H.length?function(e,t){_.apply(e,O.call(t))}:function(e,t){var n=e.length,r=0;while(e[n++]=t[r++]);e.length=n-1}}}function at(e,t,n,i){var o,a,s,l,u,c,d,m,y,x;if((t?t.ownerDocument||t:w)!==f&&p(t),t=t||f,n=n||[],!e||"string"!=typeof e)return n;if(1!==(l=t.nodeType)&&9!==l)return[];if(h&&!i){if(o=Z.exec(e))if(s=o[1]){if(9===l){if(a=t.getElementById(s),!a||!a.parentNode)return n;if(a.id===s)return n.push(a),n}else if(t.ownerDocument&&(a=t.ownerDocument.getElementById(s))&&v(t,a)&&a.id===s)return n.push(a),n}else{if(o[2])return M.apply(n,t.getElementsByTagName(e)),n;if((s=o[3])&&r.getElementsByClassName&&t.getElementsByClassName)return M.apply(n,t.getElementsByClassName(s)),n}if(r.qsa&&(!g||!g.test(e))){if(m=d=b,y=t,x=9===l&&e,1===l&&"object"!==t.nodeName.toLowerCase()){c=bt(e),(d=t.getAttribute("id"))?m=d.replace(nt,"\\$&"):t.setAttribute("id",m),m="[id='"+m+"'] ",u=c.length;while(u--)c[u]=m+xt(c[u]);y=V.test(e)&&t.parentNode||t,x=c.join(",")}if(x)try{return M.apply(n,y.querySelectorAll(x)),n}catch(T){}finally{d||t.removeAttribute("id")}}}return At(e.replace(z,"$1"),t,n,i)}function st(e){return K.test(e+"")}function lt(){var e=[];function t(n,r){return e.push(n+=" ")>o.cacheLength&&delete t[e.shift()],t[n]=r}return t}function ut(e){return e[b]=!0,e}function ct(e){var t=f.createElement("div");try{return!!e(t)}catch(n){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function pt(e,t,n){e=e.split("|");var r,i=e.length,a=n?null:t;while(i--)(r=o.attrHandle[e[i]])&&r!==t||(o.attrHandle[e[i]]=a)}function ft(e,t){var n=e.getAttributeNode(t);return n&&n.specified?n.value:e[t]===!0?t.toLowerCase():null}function dt(e,t){return e.getAttribute(t,"type"===t.toLowerCase()?1:2)}function ht(e){return"input"===e.nodeName.toLowerCase()?e.defaultValue:t}function gt(e,t){var n=t&&e,r=n&&1===e.nodeType&&1===t.nodeType&&(~t.sourceIndex||D)-(~e.sourceIndex||D);if(r)return r;if(n)while(n=n.nextSibling)if(n===t)return-1;return e?1:-1}function mt(e){return function(t){var n=t.nodeName.toLowerCase();return"input"===n&&t.type===e}}function yt(e){return function(t){var n=t.nodeName.toLowerCase();return("input"===n||"button"===n)&&t.type===e}}function vt(e){return ut(function(t){return t=+t,ut(function(n,r){var i,o=e([],n.length,t),a=o.length;while(a--)n[i=o[a]]&&(n[i]=!(r[i]=n[i]))})})}s=at.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return t?"HTML"!==t.nodeName:!1},r=at.support={},p=at.setDocument=function(e){var n=e?e.ownerDocument||e:w,i=n.parentWindow;return n!==f&&9===n.nodeType&&n.documentElement?(f=n,d=n.documentElement,h=!s(n),i&&i.frameElement&&i.attachEvent("onbeforeunload",function(){p()}),r.attributes=ct(function(e){return e.innerHTML="<a href='#'></a>",pt("type|href|height|width",dt,"#"===e.firstChild.getAttribute("href")),pt(B,ft,null==e.getAttribute("disabled")),e.className="i",!e.getAttribute("className")}),r.input=ct(function(e){return e.innerHTML="<input>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")}),pt("value",ht,r.attributes&&r.input),r.getElementsByTagName=ct(function(e){return e.appendChild(n.createComment("")),!e.getElementsByTagName("*").length}),r.getElementsByClassName=ct(function(e){return e.innerHTML="<div class='a'></div><div class='a i'></div>",e.firstChild.className="i",2===e.getElementsByClassName("i").length}),r.getById=ct(function(e){return d.appendChild(e).id=b,!n.getElementsByName||!n.getElementsByName(b).length}),r.getById?(o.find.ID=function(e,t){if(typeof t.getElementById!==j&&h){var n=t.getElementById(e);return n&&n.parentNode?[n]:[]}},o.filter.ID=function(e){var t=e.replace(rt,it);return function(e){return e.getAttribute("id")===t}}):(delete o.find.ID,o.filter.ID=function(e){var t=e.replace(rt,it);return function(e){var n=typeof e.getAttributeNode!==j&&e.getAttributeNode("id");return n&&n.value===t}}),o.find.TAG=r.getElementsByTagName?function(e,n){return typeof n.getElementsByTagName!==j?n.getElementsByTagName(e):t}:function(e,t){var n,r=[],i=0,o=t.getElementsByTagName(e);if("*"===e){while(n=o[i++])1===n.nodeType&&r.push(n);return r}return o},o.find.CLASS=r.getElementsByClassName&&function(e,n){return typeof n.getElementsByClassName!==j&&h?n.getElementsByClassName(e):t},m=[],g=[],(r.qsa=st(n.querySelectorAll))&&(ct(function(e){e.innerHTML="<select><option selected=''></option></select>",e.querySelectorAll("[selected]").length||g.push("\\["+P+"*(?:value|"+B+")"),e.querySelectorAll(":checked").length||g.push(":checked")}),ct(function(e){var t=n.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("t",""),e.querySelectorAll("[t^='']").length&&g.push("[*^$]="+P+"*(?:''|\"\")"),e.querySelectorAll(":enabled").length||g.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),g.push(",.*:")})),(r.matchesSelector=st(y=d.webkitMatchesSelector||d.mozMatchesSelector||d.oMatchesSelector||d.msMatchesSelector))&&ct(function(e){r.disconnectedMatch=y.call(e,"div"),y.call(e,"[s!='']:x"),m.push("!=",I)}),g=g.length&&RegExp(g.join("|")),m=m.length&&RegExp(m.join("|")),v=st(d.contains)||d.compareDocumentPosition?function(e,t){var n=9===e.nodeType?e.documentElement:e,r=t&&t.parentNode;return e===r||!(!r||1!==r.nodeType||!(n.contains?n.contains(r):e.compareDocumentPosition&&16&e.compareDocumentPosition(r)))}:function(e,t){if(t)while(t=t.parentNode)if(t===e)return!0;return!1},r.sortDetached=ct(function(e){return 1&e.compareDocumentPosition(n.createElement("div"))}),A=d.compareDocumentPosition?function(e,t){if(e===t)return S=!0,0;var i=t.compareDocumentPosition&&e.compareDocumentPosition&&e.compareDocumentPosition(t);return i?1&i||!r.sortDetached&&t.compareDocumentPosition(e)===i?e===n||v(w,e)?-1:t===n||v(w,t)?1:c?F.call(c,e)-F.call(c,t):0:4&i?-1:1:e.compareDocumentPosition?-1:1}:function(e,t){var r,i=0,o=e.parentNode,a=t.parentNode,s=[e],l=[t];if(e===t)return S=!0,0;if(!o||!a)return e===n?-1:t===n?1:o?-1:a?1:c?F.call(c,e)-F.call(c,t):0;if(o===a)return gt(e,t);r=e;while(r=r.parentNode)s.unshift(r);r=t;while(r=r.parentNode)l.unshift(r);while(s[i]===l[i])i++;return i?gt(s[i],l[i]):s[i]===w?-1:l[i]===w?1:0},n):f},at.matches=function(e,t){return at(e,null,null,t)},at.matchesSelector=function(e,t){if((e.ownerDocument||e)!==f&&p(e),t=t.replace(Y,"='$1']"),!(!r.matchesSelector||!h||m&&m.test(t)||g&&g.test(t)))try{var n=y.call(e,t);if(n||r.disconnectedMatch||e.document&&11!==e.document.nodeType)return n}catch(i){}return at(t,f,null,[e]).length>0},at.contains=function(e,t){return(e.ownerDocument||e)!==f&&p(e),v(e,t)},at.attr=function(e,n){(e.ownerDocument||e)!==f&&p(e);var i=o.attrHandle[n.toLowerCase()],a=i&&L.call(o.attrHandle,n.toLowerCase())?i(e,n,!h):t;return a===t?r.attributes||!h?e.getAttribute(n):(a=e.getAttributeNode(n))&&a.specified?a.value:null:a},at.error=function(e){throw Error("Syntax error, unrecognized expression: "+e)},at.uniqueSort=function(e){var t,n=[],i=0,o=0;if(S=!r.detectDuplicates,c=!r.sortStable&&e.slice(0),e.sort(A),S){while(t=e[o++])t===e[o]&&(i=n.push(o));while(i--)e.splice(n[i],1)}return e},a=at.getText=function(e){var t,n="",r=0,i=e.nodeType;if(i){if(1===i||9===i||11===i){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=a(e)}else if(3===i||4===i)return e.nodeValue}else for(;t=e[r];r++)n+=a(t);return n},o=at.selectors={cacheLength:50,createPseudo:ut,match:Q,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(rt,it),e[3]=(e[4]||e[5]||"").replace(rt,it),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||at.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&at.error(e[0]),e},PSEUDO:function(e){var n,r=!e[5]&&e[2];return Q.CHILD.test(e[0])?null:(e[3]&&e[4]!==t?e[2]=e[4]:r&&J.test(r)&&(n=bt(r,!0))&&(n=r.indexOf(")",r.length-n)-r.length)&&(e[0]=e[0].slice(0,n),e[2]=r.slice(0,n)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(rt,it).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=N[e+" "];return t||(t=RegExp("(^|"+P+")"+e+"("+P+"|$)"))&&N(e,function(e){return t.test("string"==typeof e.className&&e.className||typeof e.getAttribute!==j&&e.getAttribute("class")||"")})},ATTR:function(e,t,n){return function(r){var i=at.attr(r,e);return null==i?"!="===t:t?(i+="","="===t?i===n:"!="===t?i!==n:"^="===t?n&&0===i.indexOf(n):"*="===t?n&&i.indexOf(n)>-1:"$="===t?n&&i.slice(-n.length)===n:"~="===t?(" "+i+" ").indexOf(n)>-1:"|="===t?i===n||i.slice(0,n.length+1)===n+"-":!1):!0}},CHILD:function(e,t,n,r,i){var o="nth"!==e.slice(0,3),a="last"!==e.slice(-4),s="of-type"===t;return 1===r&&0===i?function(e){return!!e.parentNode}:function(t,n,l){var u,c,p,f,d,h,g=o!==a?"nextSibling":"previousSibling",m=t.parentNode,y=s&&t.nodeName.toLowerCase(),v=!l&&!s;if(m){if(o){while(g){p=t;while(p=p[g])if(s?p.nodeName.toLowerCase()===y:1===p.nodeType)return!1;h=g="only"===e&&!h&&"nextSibling"}return!0}if(h=[a?m.firstChild:m.lastChild],a&&v){c=m[b]||(m[b]={}),u=c[e]||[],d=u[0]===T&&u[1],f=u[0]===T&&u[2],p=d&&m.childNodes[d];while(p=++d&&p&&p[g]||(f=d=0)||h.pop())if(1===p.nodeType&&++f&&p===t){c[e]=[T,d,f];break}}else if(v&&(u=(t[b]||(t[b]={}))[e])&&u[0]===T)f=u[1];else while(p=++d&&p&&p[g]||(f=d=0)||h.pop())if((s?p.nodeName.toLowerCase()===y:1===p.nodeType)&&++f&&(v&&((p[b]||(p[b]={}))[e]=[T,f]),p===t))break;return f-=i,f===r||0===f%r&&f/r>=0}}},PSEUDO:function(e,t){var n,r=o.pseudos[e]||o.setFilters[e.toLowerCase()]||at.error("unsupported pseudo: "+e);return r[b]?r(t):r.length>1?(n=[e,e,"",t],o.setFilters.hasOwnProperty(e.toLowerCase())?ut(function(e,n){var i,o=r(e,t),a=o.length;while(a--)i=F.call(e,o[a]),e[i]=!(n[i]=o[a])}):function(e){return r(e,0,n)}):r}},pseudos:{not:ut(function(e){var t=[],n=[],r=l(e.replace(z,"$1"));return r[b]?ut(function(e,t,n,i){var o,a=r(e,null,i,[]),s=e.length;while(s--)(o=a[s])&&(e[s]=!(t[s]=o))}):function(e,i,o){return t[0]=e,r(t,null,o,n),!n.pop()}}),has:ut(function(e){return function(t){return at(e,t).length>0}}),contains:ut(function(e){return function(t){return(t.textContent||t.innerText||a(t)).indexOf(e)>-1}}),lang:ut(function(e){return G.test(e||"")||at.error("unsupported lang: "+e),e=e.replace(rt,it).toLowerCase(),function(t){var n;do if(n=h?t.lang:t.getAttribute("xml:lang")||t.getAttribute("lang"))return n=n.toLowerCase(),n===e||0===n.indexOf(e+"-");while((t=t.parentNode)&&1===t.nodeType);return!1}}),target:function(t){var n=e.location&&e.location.hash;return n&&n.slice(1)===t.id},root:function(e){return e===d},focus:function(e){return e===f.activeElement&&(!f.hasFocus||f.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:function(e){return e.disabled===!1},disabled:function(e){return e.disabled===!0},checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,e.selected===!0},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeName>"@"||3===e.nodeType||4===e.nodeType)return!1;return!0},parent:function(e){return!o.pseudos.empty(e)},header:function(e){return tt.test(e.nodeName)},input:function(e){return et.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||t.toLowerCase()===e.type)},first:vt(function(){return[0]}),last:vt(function(e,t){return[t-1]}),eq:vt(function(e,t,n){return[0>n?n+t:n]}),even:vt(function(e,t){var n=0;for(;t>n;n+=2)e.push(n);return e}),odd:vt(function(e,t){var n=1;for(;t>n;n+=2)e.push(n);return e}),lt:vt(function(e,t,n){var r=0>n?n+t:n;for(;--r>=0;)e.push(r);return e}),gt:vt(function(e,t,n){var r=0>n?n+t:n;for(;t>++r;)e.push(r);return e})}};for(n in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})o.pseudos[n]=mt(n);for(n in{submit:!0,reset:!0})o.pseudos[n]=yt(n);function bt(e,t){var n,r,i,a,s,l,u,c=k[e+" "];if(c)return t?0:c.slice(0);s=e,l=[],u=o.preFilter;while(s){(!n||(r=X.exec(s)))&&(r&&(s=s.slice(r[0].length)||s),l.push(i=[])),n=!1,(r=U.exec(s))&&(n=r.shift(),i.push({value:n,type:r[0].replace(z," ")}),s=s.slice(n.length));for(a in o.filter)!(r=Q[a].exec(s))||u[a]&&!(r=u[a](r))||(n=r.shift(),i.push({value:n,type:a,matches:r}),s=s.slice(n.length));if(!n)break}return t?s.length:s?at.error(e):k(e,l).slice(0)}function xt(e){var t=0,n=e.length,r="";for(;n>t;t++)r+=e[t].value;return r}function wt(e,t,n){var r=t.dir,o=n&&"parentNode"===r,a=C++;return t.first?function(t,n,i){while(t=t[r])if(1===t.nodeType||o)return e(t,n,i)}:function(t,n,s){var l,u,c,p=T+" "+a;if(s){while(t=t[r])if((1===t.nodeType||o)&&e(t,n,s))return!0}else while(t=t[r])if(1===t.nodeType||o)if(c=t[b]||(t[b]={}),(u=c[r])&&u[0]===p){if((l=u[1])===!0||l===i)return l===!0}else if(u=c[r]=[p],u[1]=e(t,n,s)||i,u[1]===!0)return!0}}function Tt(e){return e.length>1?function(t,n,r){var i=e.length;while(i--)if(!e[i](t,n,r))return!1;return!0}:e[0]}function Ct(e,t,n,r,i){var o,a=[],s=0,l=e.length,u=null!=t;for(;l>s;s++)(o=e[s])&&(!n||n(o,r,i))&&(a.push(o),u&&t.push(s));return a}function Nt(e,t,n,r,i,o){return r&&!r[b]&&(r=Nt(r)),i&&!i[b]&&(i=Nt(i,o)),ut(function(o,a,s,l){var u,c,p,f=[],d=[],h=a.length,g=o||St(t||"*",s.nodeType?[s]:s,[]),m=!e||!o&&t?g:Ct(g,f,e,s,l),y=n?i||(o?e:h||r)?[]:a:m;if(n&&n(m,y,s,l),r){u=Ct(y,d),r(u,[],s,l),c=u.length;while(c--)(p=u[c])&&(y[d[c]]=!(m[d[c]]=p))}if(o){if(i||e){if(i){u=[],c=y.length;while(c--)(p=y[c])&&u.push(m[c]=p);i(null,y=[],u,l)}c=y.length;while(c--)(p=y[c])&&(u=i?F.call(o,p):f[c])>-1&&(o[u]=!(a[u]=p))}}else y=Ct(y===a?y.splice(h,y.length):y),i?i(null,a,y,l):M.apply(a,y)})}function kt(e){var t,n,r,i=e.length,a=o.relative[e[0].type],s=a||o.relative[" "],l=a?1:0,c=wt(function(e){return e===t},s,!0),p=wt(function(e){return F.call(t,e)>-1},s,!0),f=[function(e,n,r){return!a&&(r||n!==u)||((t=n).nodeType?c(e,n,r):p(e,n,r))}];for(;i>l;l++)if(n=o.relative[e[l].type])f=[wt(Tt(f),n)];else{if(n=o.filter[e[l].type].apply(null,e[l].matches),n[b]){for(r=++l;i>r;r++)if(o.relative[e[r].type])break;return Nt(l>1&&Tt(f),l>1&&xt(e.slice(0,l-1).concat({value:" "===e[l-2].type?"*":""})).replace(z,"$1"),n,r>l&&kt(e.slice(l,r)),i>r&&kt(e=e.slice(r)),i>r&&xt(e))}f.push(n)}return Tt(f)}function Et(e,t){var n=0,r=t.length>0,a=e.length>0,s=function(s,l,c,p,d){var h,g,m,y=[],v=0,b="0",x=s&&[],w=null!=d,C=u,N=s||a&&o.find.TAG("*",d&&l.parentNode||l),k=T+=null==C?1:Math.random()||.1;for(w&&(u=l!==f&&l,i=n);null!=(h=N[b]);b++){if(a&&h){g=0;while(m=e[g++])if(m(h,l,c)){p.push(h);break}w&&(T=k,i=++n)}r&&((h=!m&&h)&&v--,s&&x.push(h))}if(v+=b,r&&b!==v){g=0;while(m=t[g++])m(x,y,l,c);if(s){if(v>0)while(b--)x[b]||y[b]||(y[b]=q.call(p));y=Ct(y)}M.apply(p,y),w&&!s&&y.length>0&&v+t.length>1&&at.uniqueSort(p)}return w&&(T=k,u=C),x};return r?ut(s):s}l=at.compile=function(e,t){var n,r=[],i=[],o=E[e+" "];if(!o){t||(t=bt(e)),n=t.length;while(n--)o=kt(t[n]),o[b]?r.push(o):i.push(o);o=E(e,Et(i,r))}return o};function St(e,t,n){var r=0,i=t.length;for(;i>r;r++)at(e,t[r],n);return n}function At(e,t,n,i){var a,s,u,c,p,f=bt(e);if(!i&&1===f.length){if(s=f[0]=f[0].slice(0),s.length>2&&"ID"===(u=s[0]).type&&r.getById&&9===t.nodeType&&h&&o.relative[s[1].type]){if(t=(o.find.ID(u.matches[0].replace(rt,it),t)||[])[0],!t)return n;e=e.slice(s.shift().value.length)}a=Q.needsContext.test(e)?0:s.length;while(a--){if(u=s[a],o.relative[c=u.type])break;if((p=o.find[c])&&(i=p(u.matches[0].replace(rt,it),V.test(s[0].type)&&t.parentNode||t))){if(s.splice(a,1),e=i.length&&xt(s),!e)return M.apply(n,i),n;break}}}return l(e,f)(i,t,!h,n,V.test(e)),n}o.pseudos.nth=o.pseudos.eq;function jt(){}jt.prototype=o.filters=o.pseudos,o.setFilters=new jt,r.sortStable=b.split("").sort(A).join("")===b,p(),[0,0].sort(A),r.detectDuplicates=S,x.find=at,x.expr=at.selectors,x.expr[":"]=x.expr.pseudos,x.unique=at.uniqueSort,x.text=at.getText,x.isXMLDoc=at.isXML,x.contains=at.contains}(e);var O={};function F(e){var t=O[e]={};return x.each(e.match(T)||[],function(e,n){t[n]=!0}),t}x.Callbacks=function(e){e="string"==typeof e?O[e]||F(e):x.extend({},e);var n,r,i,o,a,s,l=[],u=!e.once&&[],c=function(t){for(r=e.memory&&t,i=!0,a=s||0,s=0,o=l.length,n=!0;l&&o>a;a++)if(l[a].apply(t[0],t[1])===!1&&e.stopOnFalse){r=!1;break}n=!1,l&&(u?u.length&&c(u.shift()):r?l=[]:p.disable())},p={add:function(){if(l){var t=l.length;(function i(t){x.each(t,function(t,n){var r=x.type(n);"function"===r?e.unique&&p.has(n)||l.push(n):n&&n.length&&"string"!==r&&i(n)})})(arguments),n?o=l.length:r&&(s=t,c(r))}return this},remove:function(){return l&&x.each(arguments,function(e,t){var r;while((r=x.inArray(t,l,r))>-1)l.splice(r,1),n&&(o>=r&&o--,a>=r&&a--)}),this},has:function(e){return e?x.inArray(e,l)>-1:!(!l||!l.length)},empty:function(){return l=[],o=0,this},disable:function(){return l=u=r=t,this},disabled:function(){return!l},lock:function(){return u=t,r||p.disable(),this},locked:function(){return!u},fireWith:function(e,t){return t=t||[],t=[e,t.slice?t.slice():t],!l||i&&!u||(n?u.push(t):c(t)),this},fire:function(){return p.fireWith(this,arguments),this},fired:function(){return!!i}};return p},x.extend({Deferred:function(e){var t=[["resolve","done",x.Callbacks("once memory"),"resolved"],["reject","fail",x.Callbacks("once memory"),"rejected"],["notify","progress",x.Callbacks("memory")]],n="pending",r={state:function(){return n},always:function(){return i.done(arguments).fail(arguments),this},then:function(){var e=arguments;return x.Deferred(function(n){x.each(t,function(t,o){var a=o[0],s=x.isFunction(e[t])&&e[t];i[o[1]](function(){var e=s&&s.apply(this,arguments);e&&x.isFunction(e.promise)?e.promise().done(n.resolve).fail(n.reject).progress(n.notify):n[a+"With"](this===r?n.promise():this,s?[e]:arguments)})}),e=null}).promise()},promise:function(e){return null!=e?x.extend(e,r):r}},i={};return r.pipe=r.then,x.each(t,function(e,o){var a=o[2],s=o[3];r[o[1]]=a.add,s&&a.add(function(){n=s},t[1^e][2].disable,t[2][2].lock),i[o[0]]=function(){return i[o[0]+"With"](this===i?r:this,arguments),this},i[o[0]+"With"]=a.fireWith}),r.promise(i),e&&e.call(i,i),i},when:function(e){var t=0,n=g.call(arguments),r=n.length,i=1!==r||e&&x.isFunction(e.promise)?r:0,o=1===i?e:x.Deferred(),a=function(e,t,n){return function(r){t[e]=this,n[e]=arguments.length>1?g.call(arguments):r,n===s?o.notifyWith(t,n):--i||o.resolveWith(t,n)}},s,l,u;if(r>1)for(s=Array(r),l=Array(r),u=Array(r);r>t;t++)n[t]&&x.isFunction(n[t].promise)?n[t].promise().done(a(t,u,n)).fail(o.reject).progress(a(t,l,s)):--i;return i||o.resolveWith(u,n),o.promise()}}),x.support=function(t){var n,r,o,s,l,u,c,p,f,d=a.createElement("div");if(d.setAttribute("className","t"),d.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",n=d.getElementsByTagName("*")||[],r=d.getElementsByTagName("a")[0],!r||!r.style||!n.length)return t;s=a.createElement("select"),u=s.appendChild(a.createElement("option")),o=d.getElementsByTagName("input")[0],r.style.cssText="top:1px;float:left;opacity:.5",t.getSetAttribute="t"!==d.className,t.leadingWhitespace=3===d.firstChild.nodeType,t.tbody=!d.getElementsByTagName("tbody").length,t.htmlSerialize=!!d.getElementsByTagName("link").length,t.style=/top/.test(r.getAttribute("style")),t.hrefNormalized="/a"===r.getAttribute("href"),t.opacity=/^0.5/.test(r.style.opacity),t.cssFloat=!!r.style.cssFloat,t.checkOn=!!o.value,t.optSelected=u.selected,t.enctype=!!a.createElement("form").enctype,t.html5Clone="<:nav></:nav>"!==a.createElement("nav").cloneNode(!0).outerHTML,t.inlineBlockNeedsLayout=!1,t.shrinkWrapBlocks=!1,t.pixelPosition=!1,t.deleteExpando=!0,t.noCloneEvent=!0,t.reliableMarginRight=!0,t.boxSizingReliable=!0,o.checked=!0,t.noCloneChecked=o.cloneNode(!0).checked,s.disabled=!0,t.optDisabled=!u.disabled;try{delete d.test}catch(h){t.deleteExpando=!1}o=a.createElement("input"),o.setAttribute("value",""),t.input=""===o.getAttribute("value"),o.value="t",o.setAttribute("type","radio"),t.radioValue="t"===o.value,o.setAttribute("checked","t"),o.setAttribute("name","t"),l=a.createDocumentFragment(),l.appendChild(o),t.appendChecked=o.checked,t.checkClone=l.cloneNode(!0).cloneNode(!0).lastChild.checked,d.attachEvent&&(d.attachEvent("onclick",function(){t.noCloneEvent=!1}),d.cloneNode(!0).click());for(f in{submit:!0,change:!0,focusin:!0})d.setAttribute(c="on"+f,"t"),t[f+"Bubbles"]=c in e||d.attributes[c].expando===!1;d.style.backgroundClip="content-box",d.cloneNode(!0).style.backgroundClip="",t.clearCloneStyle="content-box"===d.style.backgroundClip;for(f in x(t))break;return t.ownLast="0"!==f,x(function(){var n,r,o,s="padding:0;margin:0;border:0;display:block;box-sizing:content-box;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;",l=a.getElementsByTagName("body")[0];l&&(n=a.createElement("div"),n.style.cssText="border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px",l.appendChild(n).appendChild(d),d.innerHTML="<table><tr><td></td><td>t</td></tr></table>",o=d.getElementsByTagName("td"),o[0].style.cssText="padding:0;margin:0;border:0;display:none",p=0===o[0].offsetHeight,o[0].style.display="",o[1].style.display="none",t.reliableHiddenOffsets=p&&0===o[0].offsetHeight,d.innerHTML="",d.style.cssText="box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;",x.swap(l,null!=l.style.zoom?{zoom:1}:{},function(){t.boxSizing=4===d.offsetWidth}),e.getComputedStyle&&(t.pixelPosition="1%"!==(e.getComputedStyle(d,null)||{}).top,t.boxSizingReliable="4px"===(e.getComputedStyle(d,null)||{width:"4px"}).width,r=d.appendChild(a.createElement("div")),r.style.cssText=d.style.cssText=s,r.style.marginRight=r.style.width="0",d.style.width="1px",t.reliableMarginRight=!parseFloat((e.getComputedStyle(r,null)||{}).marginRight)),typeof d.style.zoom!==i&&(d.innerHTML="",d.style.cssText=s+"width:1px;padding:1px;display:inline;zoom:1",t.inlineBlockNeedsLayout=3===d.offsetWidth,d.style.display="block",d.innerHTML="<div></div>",d.firstChild.style.width="5px",t.shrinkWrapBlocks=3!==d.offsetWidth,t.inlineBlockNeedsLayout&&(l.style.zoom=1)),l.removeChild(n),n=d=o=r=null)
}),n=s=l=u=r=o=null,t}({});var B=/(?:\{[\s\S]*\}|\[[\s\S]*\])$/,P=/([A-Z])/g;function R(e,n,r,i){if(x.acceptData(e)){var o,a,s=x.expando,l=e.nodeType,u=l?x.cache:e,c=l?e[s]:e[s]&&s;if(c&&u[c]&&(i||u[c].data)||r!==t||"string"!=typeof n)return c||(c=l?e[s]=p.pop()||x.guid++:s),u[c]||(u[c]=l?{}:{toJSON:x.noop}),("object"==typeof n||"function"==typeof n)&&(i?u[c]=x.extend(u[c],n):u[c].data=x.extend(u[c].data,n)),a=u[c],i||(a.data||(a.data={}),a=a.data),r!==t&&(a[x.camelCase(n)]=r),"string"==typeof n?(o=a[n],null==o&&(o=a[x.camelCase(n)])):o=a,o}}function W(e,t,n){if(x.acceptData(e)){var r,i,o=e.nodeType,a=o?x.cache:e,s=o?e[x.expando]:x.expando;if(a[s]){if(t&&(r=n?a[s]:a[s].data)){x.isArray(t)?t=t.concat(x.map(t,x.camelCase)):t in r?t=[t]:(t=x.camelCase(t),t=t in r?[t]:t.split(" ")),i=t.length;while(i--)delete r[t[i]];if(n?!I(r):!x.isEmptyObject(r))return}(n||(delete a[s].data,I(a[s])))&&(o?x.cleanData([e],!0):x.support.deleteExpando||a!=a.window?delete a[s]:a[s]=null)}}}x.extend({cache:{},noData:{applet:!0,embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"},hasData:function(e){return e=e.nodeType?x.cache[e[x.expando]]:e[x.expando],!!e&&!I(e)},data:function(e,t,n){return R(e,t,n)},removeData:function(e,t){return W(e,t)},_data:function(e,t,n){return R(e,t,n,!0)},_removeData:function(e,t){return W(e,t,!0)},acceptData:function(e){if(e.nodeType&&1!==e.nodeType&&9!==e.nodeType)return!1;var t=e.nodeName&&x.noData[e.nodeName.toLowerCase()];return!t||t!==!0&&e.getAttribute("classid")===t}}),x.fn.extend({data:function(e,n){var r,i,o=null,a=0,s=this[0];if(e===t){if(this.length&&(o=x.data(s),1===s.nodeType&&!x._data(s,"parsedAttrs"))){for(r=s.attributes;r.length>a;a++)i=r[a].name,0===i.indexOf("data-")&&(i=x.camelCase(i.slice(5)),$(s,i,o[i]));x._data(s,"parsedAttrs",!0)}return o}return"object"==typeof e?this.each(function(){x.data(this,e)}):arguments.length>1?this.each(function(){x.data(this,e,n)}):s?$(s,e,x.data(s,e)):null},removeData:function(e){return this.each(function(){x.removeData(this,e)})}});function $(e,n,r){if(r===t&&1===e.nodeType){var i="data-"+n.replace(P,"-$1").toLowerCase();if(r=e.getAttribute(i),"string"==typeof r){try{r="true"===r?!0:"false"===r?!1:"null"===r?null:+r+""===r?+r:B.test(r)?x.parseJSON(r):r}catch(o){}x.data(e,n,r)}else r=t}return r}function I(e){var t;for(t in e)if(("data"!==t||!x.isEmptyObject(e[t]))&&"toJSON"!==t)return!1;return!0}x.extend({queue:function(e,n,r){var i;return e?(n=(n||"fx")+"queue",i=x._data(e,n),r&&(!i||x.isArray(r)?i=x._data(e,n,x.makeArray(r)):i.push(r)),i||[]):t},dequeue:function(e,t){t=t||"fx";var n=x.queue(e,t),r=n.length,i=n.shift(),o=x._queueHooks(e,t),a=function(){x.dequeue(e,t)};"inprogress"===i&&(i=n.shift(),r--),i&&("fx"===t&&n.unshift("inprogress"),delete o.stop,i.call(e,a,o)),!r&&o&&o.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return x._data(e,n)||x._data(e,n,{empty:x.Callbacks("once memory").add(function(){x._removeData(e,t+"queue"),x._removeData(e,n)})})}}),x.fn.extend({queue:function(e,n){var r=2;return"string"!=typeof e&&(n=e,e="fx",r--),r>arguments.length?x.queue(this[0],e):n===t?this:this.each(function(){var t=x.queue(this,e,n);x._queueHooks(this,e),"fx"===e&&"inprogress"!==t[0]&&x.dequeue(this,e)})},dequeue:function(e){return this.each(function(){x.dequeue(this,e)})},delay:function(e,t){return e=x.fx?x.fx.speeds[e]||e:e,t=t||"fx",this.queue(t,function(t,n){var r=setTimeout(t,e);n.stop=function(){clearTimeout(r)}})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,n){var r,i=1,o=x.Deferred(),a=this,s=this.length,l=function(){--i||o.resolveWith(a,[a])};"string"!=typeof e&&(n=e,e=t),e=e||"fx";while(s--)r=x._data(a[s],e+"queueHooks"),r&&r.empty&&(i++,r.empty.add(l));return l(),o.promise(n)}});var z,X,U=/[\t\r\n\f]/g,V=/\r/g,Y=/^(?:input|select|textarea|button|object)$/i,J=/^(?:a|area)$/i,G=/^(?:checked|selected)$/i,Q=x.support.getSetAttribute,K=x.support.input;x.fn.extend({attr:function(e,t){return x.access(this,x.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each(function(){x.removeAttr(this,e)})},prop:function(e,t){return x.access(this,x.prop,e,t,arguments.length>1)},removeProp:function(e){return e=x.propFix[e]||e,this.each(function(){try{this[e]=t,delete this[e]}catch(n){}})},addClass:function(e){var t,n,r,i,o,a=0,s=this.length,l="string"==typeof e&&e;if(x.isFunction(e))return this.each(function(t){x(this).addClass(e.call(this,t,this.className))});if(l)for(t=(e||"").match(T)||[];s>a;a++)if(n=this[a],r=1===n.nodeType&&(n.className?(" "+n.className+" ").replace(U," "):" ")){o=0;while(i=t[o++])0>r.indexOf(" "+i+" ")&&(r+=i+" ");n.className=x.trim(r)}return this},removeClass:function(e){var t,n,r,i,o,a=0,s=this.length,l=0===arguments.length||"string"==typeof e&&e;if(x.isFunction(e))return this.each(function(t){x(this).removeClass(e.call(this,t,this.className))});if(l)for(t=(e||"").match(T)||[];s>a;a++)if(n=this[a],r=1===n.nodeType&&(n.className?(" "+n.className+" ").replace(U," "):"")){o=0;while(i=t[o++])while(r.indexOf(" "+i+" ")>=0)r=r.replace(" "+i+" "," ");n.className=e?x.trim(r):""}return this},toggleClass:function(e,t){var n=typeof e,r="boolean"==typeof t;return x.isFunction(e)?this.each(function(n){x(this).toggleClass(e.call(this,n,this.className,t),t)}):this.each(function(){if("string"===n){var o,a=0,s=x(this),l=t,u=e.match(T)||[];while(o=u[a++])l=r?l:!s.hasClass(o),s[l?"addClass":"removeClass"](o)}else(n===i||"boolean"===n)&&(this.className&&x._data(this,"__className__",this.className),this.className=this.className||e===!1?"":x._data(this,"__className__")||"")})},hasClass:function(e){var t=" "+e+" ",n=0,r=this.length;for(;r>n;n++)if(1===this[n].nodeType&&(" "+this[n].className+" ").replace(U," ").indexOf(t)>=0)return!0;return!1},val:function(e){var n,r,i,o=this[0];{if(arguments.length)return i=x.isFunction(e),this.each(function(n){var o;1===this.nodeType&&(o=i?e.call(this,n,x(this).val()):e,null==o?o="":"number"==typeof o?o+="":x.isArray(o)&&(o=x.map(o,function(e){return null==e?"":e+""})),r=x.valHooks[this.type]||x.valHooks[this.nodeName.toLowerCase()],r&&"set"in r&&r.set(this,o,"value")!==t||(this.value=o))});if(o)return r=x.valHooks[o.type]||x.valHooks[o.nodeName.toLowerCase()],r&&"get"in r&&(n=r.get(o,"value"))!==t?n:(n=o.value,"string"==typeof n?n.replace(V,""):null==n?"":n)}}}),x.extend({valHooks:{option:{get:function(e){var t=x.find.attr(e,"value");return null!=t?t:e.text}},select:{get:function(e){var t,n,r=e.options,i=e.selectedIndex,o="select-one"===e.type||0>i,a=o?null:[],s=o?i+1:r.length,l=0>i?s:o?i:0;for(;s>l;l++)if(n=r[l],!(!n.selected&&l!==i||(x.support.optDisabled?n.disabled:null!==n.getAttribute("disabled"))||n.parentNode.disabled&&x.nodeName(n.parentNode,"optgroup"))){if(t=x(n).val(),o)return t;a.push(t)}return a},set:function(e,t){var n,r,i=e.options,o=x.makeArray(t),a=i.length;while(a--)r=i[a],(r.selected=x.inArray(x(r).val(),o)>=0)&&(n=!0);return n||(e.selectedIndex=-1),o}}},attr:function(e,n,r){var o,a,s=e.nodeType;if(e&&3!==s&&8!==s&&2!==s)return typeof e.getAttribute===i?x.prop(e,n,r):(1===s&&x.isXMLDoc(e)||(n=n.toLowerCase(),o=x.attrHooks[n]||(x.expr.match.bool.test(n)?X:z)),r===t?o&&"get"in o&&null!==(a=o.get(e,n))?a:(a=x.find.attr(e,n),null==a?t:a):null!==r?o&&"set"in o&&(a=o.set(e,r,n))!==t?a:(e.setAttribute(n,r+""),r):(x.removeAttr(e,n),t))},removeAttr:function(e,t){var n,r,i=0,o=t&&t.match(T);if(o&&1===e.nodeType)while(n=o[i++])r=x.propFix[n]||n,x.expr.match.bool.test(n)?K&&Q||!G.test(n)?e[r]=!1:e[x.camelCase("default-"+n)]=e[r]=!1:x.attr(e,n,""),e.removeAttribute(Q?n:r)},attrHooks:{type:{set:function(e,t){if(!x.support.radioValue&&"radio"===t&&x.nodeName(e,"input")){var n=e.value;return e.setAttribute("type",t),n&&(e.value=n),t}}}},propFix:{"for":"htmlFor","class":"className"},prop:function(e,n,r){var i,o,a,s=e.nodeType;if(e&&3!==s&&8!==s&&2!==s)return a=1!==s||!x.isXMLDoc(e),a&&(n=x.propFix[n]||n,o=x.propHooks[n]),r!==t?o&&"set"in o&&(i=o.set(e,r,n))!==t?i:e[n]=r:o&&"get"in o&&null!==(i=o.get(e,n))?i:e[n]},propHooks:{tabIndex:{get:function(e){var t=x.find.attr(e,"tabindex");return t?parseInt(t,10):Y.test(e.nodeName)||J.test(e.nodeName)&&e.href?0:-1}}}}),X={set:function(e,t,n){return t===!1?x.removeAttr(e,n):K&&Q||!G.test(n)?e.setAttribute(!Q&&x.propFix[n]||n,n):e[x.camelCase("default-"+n)]=e[n]=!0,n}},x.each(x.expr.match.bool.source.match(/\w+/g),function(e,n){var r=x.expr.attrHandle[n]||x.find.attr;x.expr.attrHandle[n]=K&&Q||!G.test(n)?function(e,n,i){var o=x.expr.attrHandle[n],a=i?t:(x.expr.attrHandle[n]=t)!=r(e,n,i)?n.toLowerCase():null;return x.expr.attrHandle[n]=o,a}:function(e,n,r){return r?t:e[x.camelCase("default-"+n)]?n.toLowerCase():null}}),K&&Q||(x.attrHooks.value={set:function(e,n,r){return x.nodeName(e,"input")?(e.defaultValue=n,t):z&&z.set(e,n,r)}}),Q||(z={set:function(e,n,r){var i=e.getAttributeNode(r);return i||e.setAttributeNode(i=e.ownerDocument.createAttribute(r)),i.value=n+="","value"===r||n===e.getAttribute(r)?n:t}},x.expr.attrHandle.id=x.expr.attrHandle.name=x.expr.attrHandle.coords=function(e,n,r){var i;return r?t:(i=e.getAttributeNode(n))&&""!==i.value?i.value:null},x.valHooks.button={get:function(e,n){var r=e.getAttributeNode(n);return r&&r.specified?r.value:t},set:z.set},x.attrHooks.contenteditable={set:function(e,t,n){z.set(e,""===t?!1:t,n)}},x.each(["width","height"],function(e,n){x.attrHooks[n]={set:function(e,r){return""===r?(e.setAttribute(n,"auto"),r):t}}})),x.support.hrefNormalized||x.each(["href","src"],function(e,t){x.propHooks[t]={get:function(e){return e.getAttribute(t,4)}}}),x.support.style||(x.attrHooks.style={get:function(e){return e.style.cssText||t},set:function(e,t){return e.style.cssText=t+""}}),x.support.optSelected||(x.propHooks.selected={get:function(e){var t=e.parentNode;return t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex),null}}),x.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){x.propFix[this.toLowerCase()]=this}),x.support.enctype||(x.propFix.enctype="encoding"),x.each(["radio","checkbox"],function(){x.valHooks[this]={set:function(e,n){return x.isArray(n)?e.checked=x.inArray(x(e).val(),n)>=0:t}},x.support.checkOn||(x.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})});var Z=/^(?:input|select|textarea)$/i,et=/^key/,tt=/^(?:mouse|contextmenu)|click/,nt=/^(?:focusinfocus|focusoutblur)$/,rt=/^([^.]*)(?:\.(.+)|)$/;function it(){return!0}function ot(){return!1}function at(){try{return a.activeElement}catch(e){}}x.event={global:{},add:function(e,n,r,o,a){var s,l,u,c,p,f,d,h,g,m,y,v=x._data(e);if(v){r.handler&&(c=r,r=c.handler,a=c.selector),r.guid||(r.guid=x.guid++),(l=v.events)||(l=v.events={}),(f=v.handle)||(f=v.handle=function(e){return typeof x===i||e&&x.event.triggered===e.type?t:x.event.dispatch.apply(f.elem,arguments)},f.elem=e),n=(n||"").match(T)||[""],u=n.length;while(u--)s=rt.exec(n[u])||[],g=y=s[1],m=(s[2]||"").split(".").sort(),g&&(p=x.event.special[g]||{},g=(a?p.delegateType:p.bindType)||g,p=x.event.special[g]||{},d=x.extend({type:g,origType:y,data:o,handler:r,guid:r.guid,selector:a,needsContext:a&&x.expr.match.needsContext.test(a),namespace:m.join(".")},c),(h=l[g])||(h=l[g]=[],h.delegateCount=0,p.setup&&p.setup.call(e,o,m,f)!==!1||(e.addEventListener?e.addEventListener(g,f,!1):e.attachEvent&&e.attachEvent("on"+g,f))),p.add&&(p.add.call(e,d),d.handler.guid||(d.handler.guid=r.guid)),a?h.splice(h.delegateCount++,0,d):h.push(d),x.event.global[g]=!0);e=null}},remove:function(e,t,n,r,i){var o,a,s,l,u,c,p,f,d,h,g,m=x.hasData(e)&&x._data(e);if(m&&(c=m.events)){t=(t||"").match(T)||[""],u=t.length;while(u--)if(s=rt.exec(t[u])||[],d=g=s[1],h=(s[2]||"").split(".").sort(),d){p=x.event.special[d]||{},d=(r?p.delegateType:p.bindType)||d,f=c[d]||[],s=s[2]&&RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"),l=o=f.length;while(o--)a=f[o],!i&&g!==a.origType||n&&n.guid!==a.guid||s&&!s.test(a.namespace)||r&&r!==a.selector&&("**"!==r||!a.selector)||(f.splice(o,1),a.selector&&f.delegateCount--,p.remove&&p.remove.call(e,a));l&&!f.length&&(p.teardown&&p.teardown.call(e,h,m.handle)!==!1||x.removeEvent(e,d,m.handle),delete c[d])}else for(d in c)x.event.remove(e,d+t[u],n,r,!0);x.isEmptyObject(c)&&(delete m.handle,x._removeData(e,"events"))}},trigger:function(n,r,i,o){var s,l,u,c,p,f,d,h=[i||a],g=v.call(n,"type")?n.type:n,m=v.call(n,"namespace")?n.namespace.split("."):[];if(u=f=i=i||a,3!==i.nodeType&&8!==i.nodeType&&!nt.test(g+x.event.triggered)&&(g.indexOf(".")>=0&&(m=g.split("."),g=m.shift(),m.sort()),l=0>g.indexOf(":")&&"on"+g,n=n[x.expando]?n:new x.Event(g,"object"==typeof n&&n),n.isTrigger=o?2:3,n.namespace=m.join("."),n.namespace_re=n.namespace?RegExp("(^|\\.)"+m.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,n.result=t,n.target||(n.target=i),r=null==r?[n]:x.makeArray(r,[n]),p=x.event.special[g]||{},o||!p.trigger||p.trigger.apply(i,r)!==!1)){if(!o&&!p.noBubble&&!x.isWindow(i)){for(c=p.delegateType||g,nt.test(c+g)||(u=u.parentNode);u;u=u.parentNode)h.push(u),f=u;f===(i.ownerDocument||a)&&h.push(f.defaultView||f.parentWindow||e)}d=0;while((u=h[d++])&&!n.isPropagationStopped())n.type=d>1?c:p.bindType||g,s=(x._data(u,"events")||{})[n.type]&&x._data(u,"handle"),s&&s.apply(u,r),s=l&&u[l],s&&x.acceptData(u)&&s.apply&&s.apply(u,r)===!1&&n.preventDefault();if(n.type=g,!o&&!n.isDefaultPrevented()&&(!p._default||p._default.apply(h.pop(),r)===!1)&&x.acceptData(i)&&l&&i[g]&&!x.isWindow(i)){f=i[l],f&&(i[l]=null),x.event.triggered=g;try{i[g]()}catch(y){}x.event.triggered=t,f&&(i[l]=f)}return n.result}},dispatch:function(e){e=x.event.fix(e);var n,r,i,o,a,s=[],l=g.call(arguments),u=(x._data(this,"events")||{})[e.type]||[],c=x.event.special[e.type]||{};if(l[0]=e,e.delegateTarget=this,!c.preDispatch||c.preDispatch.call(this,e)!==!1){s=x.event.handlers.call(this,e,u),n=0;while((o=s[n++])&&!e.isPropagationStopped()){e.currentTarget=o.elem,a=0;while((i=o.handlers[a++])&&!e.isImmediatePropagationStopped())(!e.namespace_re||e.namespace_re.test(i.namespace))&&(e.handleObj=i,e.data=i.data,r=((x.event.special[i.origType]||{}).handle||i.handler).apply(o.elem,l),r!==t&&(e.result=r)===!1&&(e.preventDefault(),e.stopPropagation()))}return c.postDispatch&&c.postDispatch.call(this,e),e.result}},handlers:function(e,n){var r,i,o,a,s=[],l=n.delegateCount,u=e.target;if(l&&u.nodeType&&(!e.button||"click"!==e.type))for(;u!=this;u=u.parentNode||this)if(1===u.nodeType&&(u.disabled!==!0||"click"!==e.type)){for(o=[],a=0;l>a;a++)i=n[a],r=i.selector+" ",o[r]===t&&(o[r]=i.needsContext?x(r,this).index(u)>=0:x.find(r,this,null,[u]).length),o[r]&&o.push(i);o.length&&s.push({elem:u,handlers:o})}return n.length>l&&s.push({elem:this,handlers:n.slice(l)}),s},fix:function(e){if(e[x.expando])return e;var t,n,r,i=e.type,o=e,s=this.fixHooks[i];s||(this.fixHooks[i]=s=tt.test(i)?this.mouseHooks:et.test(i)?this.keyHooks:{}),r=s.props?this.props.concat(s.props):this.props,e=new x.Event(o),t=r.length;while(t--)n=r[t],e[n]=o[n];return e.target||(e.target=o.srcElement||a),3===e.target.nodeType&&(e.target=e.target.parentNode),e.metaKey=!!e.metaKey,s.filter?s.filter(e,o):e},props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(e,t){return null==e.which&&(e.which=null!=t.charCode?t.charCode:t.keyCode),e}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(e,n){var r,i,o,s=n.button,l=n.fromElement;return null==e.pageX&&null!=n.clientX&&(i=e.target.ownerDocument||a,o=i.documentElement,r=i.body,e.pageX=n.clientX+(o&&o.scrollLeft||r&&r.scrollLeft||0)-(o&&o.clientLeft||r&&r.clientLeft||0),e.pageY=n.clientY+(o&&o.scrollTop||r&&r.scrollTop||0)-(o&&o.clientTop||r&&r.clientTop||0)),!e.relatedTarget&&l&&(e.relatedTarget=l===e.target?n.toElement:l),e.which||s===t||(e.which=1&s?1:2&s?3:4&s?2:0),e}},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==at()&&this.focus)try{return this.focus(),!1}catch(e){}},delegateType:"focusin"},blur:{trigger:function(){return this===at()&&this.blur?(this.blur(),!1):t},delegateType:"focusout"},click:{trigger:function(){return x.nodeName(this,"input")&&"checkbox"===this.type&&this.click?(this.click(),!1):t},_default:function(e){return x.nodeName(e.target,"a")}},beforeunload:{postDispatch:function(e){e.result!==t&&(e.originalEvent.returnValue=e.result)}}},simulate:function(e,t,n,r){var i=x.extend(new x.Event,n,{type:e,isSimulated:!0,originalEvent:{}});r?x.event.trigger(i,null,t):x.event.dispatch.call(t,i),i.isDefaultPrevented()&&n.preventDefault()}},x.removeEvent=a.removeEventListener?function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n,!1)}:function(e,t,n){var r="on"+t;e.detachEvent&&(typeof e[r]===i&&(e[r]=null),e.detachEvent(r,n))},x.Event=function(e,n){return this instanceof x.Event?(e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||e.returnValue===!1||e.getPreventDefault&&e.getPreventDefault()?it:ot):this.type=e,n&&x.extend(this,n),this.timeStamp=e&&e.timeStamp||x.now(),this[x.expando]=!0,t):new x.Event(e,n)},x.Event.prototype={isDefaultPrevented:ot,isPropagationStopped:ot,isImmediatePropagationStopped:ot,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=it,e&&(e.preventDefault?e.preventDefault():e.returnValue=!1)},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=it,e&&(e.stopPropagation&&e.stopPropagation(),e.cancelBubble=!0)},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=it,this.stopPropagation()}},x.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(e,t){x.event.special[e]={delegateType:t,bindType:t,handle:function(e){var n,r=this,i=e.relatedTarget,o=e.handleObj;return(!i||i!==r&&!x.contains(r,i))&&(e.type=o.origType,n=o.handler.apply(this,arguments),e.type=t),n}}}),x.support.submitBubbles||(x.event.special.submit={setup:function(){return x.nodeName(this,"form")?!1:(x.event.add(this,"click._submit keypress._submit",function(e){var n=e.target,r=x.nodeName(n,"input")||x.nodeName(n,"button")?n.form:t;r&&!x._data(r,"submitBubbles")&&(x.event.add(r,"submit._submit",function(e){e._submit_bubble=!0}),x._data(r,"submitBubbles",!0))}),t)},postDispatch:function(e){e._submit_bubble&&(delete e._submit_bubble,this.parentNode&&!e.isTrigger&&x.event.simulate("submit",this.parentNode,e,!0))},teardown:function(){return x.nodeName(this,"form")?!1:(x.event.remove(this,"._submit"),t)}}),x.support.changeBubbles||(x.event.special.change={setup:function(){return Z.test(this.nodeName)?(("checkbox"===this.type||"radio"===this.type)&&(x.event.add(this,"propertychange._change",function(e){"checked"===e.originalEvent.propertyName&&(this._just_changed=!0)}),x.event.add(this,"click._change",function(e){this._just_changed&&!e.isTrigger&&(this._just_changed=!1),x.event.simulate("change",this,e,!0)})),!1):(x.event.add(this,"beforeactivate._change",function(e){var t=e.target;Z.test(t.nodeName)&&!x._data(t,"changeBubbles")&&(x.event.add(t,"change._change",function(e){!this.parentNode||e.isSimulated||e.isTrigger||x.event.simulate("change",this.parentNode,e,!0)}),x._data(t,"changeBubbles",!0))}),t)},handle:function(e){var n=e.target;return this!==n||e.isSimulated||e.isTrigger||"radio"!==n.type&&"checkbox"!==n.type?e.handleObj.handler.apply(this,arguments):t},teardown:function(){return x.event.remove(this,"._change"),!Z.test(this.nodeName)}}),x.support.focusinBubbles||x.each({focus:"focusin",blur:"focusout"},function(e,t){var n=0,r=function(e){x.event.simulate(t,e.target,x.event.fix(e),!0)};x.event.special[t]={setup:function(){0===n++&&a.addEventListener(e,r,!0)},teardown:function(){0===--n&&a.removeEventListener(e,r,!0)}}}),x.fn.extend({on:function(e,n,r,i,o){var a,s;if("object"==typeof e){"string"!=typeof n&&(r=r||n,n=t);for(a in e)this.on(a,n,r,e[a],o);return this}if(null==r&&null==i?(i=n,r=n=t):null==i&&("string"==typeof n?(i=r,r=t):(i=r,r=n,n=t)),i===!1)i=ot;else if(!i)return this;return 1===o&&(s=i,i=function(e){return x().off(e),s.apply(this,arguments)},i.guid=s.guid||(s.guid=x.guid++)),this.each(function(){x.event.add(this,e,i,r,n)})},one:function(e,t,n,r){return this.on(e,t,n,r,1)},off:function(e,n,r){var i,o;if(e&&e.preventDefault&&e.handleObj)return i=e.handleObj,x(e.delegateTarget).off(i.namespace?i.origType+"."+i.namespace:i.origType,i.selector,i.handler),this;if("object"==typeof e){for(o in e)this.off(o,n,e[o]);return this}return(n===!1||"function"==typeof n)&&(r=n,n=t),r===!1&&(r=ot),this.each(function(){x.event.remove(this,e,r,n)})},trigger:function(e,t){return this.each(function(){x.event.trigger(e,t,this)})},triggerHandler:function(e,n){var r=this[0];return r?x.event.trigger(e,n,r,!0):t}});var st=/^.[^:#\[\.,]*$/,lt=/^(?:parents|prev(?:Until|All))/,ut=x.expr.match.needsContext,ct={children:!0,contents:!0,next:!0,prev:!0};x.fn.extend({find:function(e){var t,n=[],r=this,i=r.length;if("string"!=typeof e)return this.pushStack(x(e).filter(function(){for(t=0;i>t;t++)if(x.contains(r[t],this))return!0}));for(t=0;i>t;t++)x.find(e,r[t],n);return n=this.pushStack(i>1?x.unique(n):n),n.selector=this.selector?this.selector+" "+e:e,n},has:function(e){var t,n=x(e,this),r=n.length;return this.filter(function(){for(t=0;r>t;t++)if(x.contains(this,n[t]))return!0})},not:function(e){return this.pushStack(ft(this,e||[],!0))},filter:function(e){return this.pushStack(ft(this,e||[],!1))},is:function(e){return!!ft(this,"string"==typeof e&&ut.test(e)?x(e):e||[],!1).length},closest:function(e,t){var n,r=0,i=this.length,o=[],a=ut.test(e)||"string"!=typeof e?x(e,t||this.context):0;for(;i>r;r++)for(n=this[r];n&&n!==t;n=n.parentNode)if(11>n.nodeType&&(a?a.index(n)>-1:1===n.nodeType&&x.find.matchesSelector(n,e))){n=o.push(n);break}return this.pushStack(o.length>1?x.unique(o):o)},index:function(e){return e?"string"==typeof e?x.inArray(this[0],x(e)):x.inArray(e.jquery?e[0]:e,this):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){var n="string"==typeof e?x(e,t):x.makeArray(e&&e.nodeType?[e]:e),r=x.merge(this.get(),n);return this.pushStack(x.unique(r))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}});function pt(e,t){do e=e[t];while(e&&1!==e.nodeType);return e}x.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return x.dir(e,"parentNode")},parentsUntil:function(e,t,n){return x.dir(e,"parentNode",n)},next:function(e){return pt(e,"nextSibling")},prev:function(e){return pt(e,"previousSibling")},nextAll:function(e){return x.dir(e,"nextSibling")},prevAll:function(e){return x.dir(e,"previousSibling")},nextUntil:function(e,t,n){return x.dir(e,"nextSibling",n)},prevUntil:function(e,t,n){return x.dir(e,"previousSibling",n)},siblings:function(e){return x.sibling((e.parentNode||{}).firstChild,e)},children:function(e){return x.sibling(e.firstChild)},contents:function(e){return x.nodeName(e,"iframe")?e.contentDocument||e.contentWindow.document:x.merge([],e.childNodes)}},function(e,t){x.fn[e]=function(n,r){var i=x.map(this,t,n);return"Until"!==e.slice(-5)&&(r=n),r&&"string"==typeof r&&(i=x.filter(r,i)),this.length>1&&(ct[e]||(i=x.unique(i)),lt.test(e)&&(i=i.reverse())),this.pushStack(i)}}),x.extend({filter:function(e,t,n){var r=t[0];return n&&(e=":not("+e+")"),1===t.length&&1===r.nodeType?x.find.matchesSelector(r,e)?[r]:[]:x.find.matches(e,x.grep(t,function(e){return 1===e.nodeType}))},dir:function(e,n,r){var i=[],o=e[n];while(o&&9!==o.nodeType&&(r===t||1!==o.nodeType||!x(o).is(r)))1===o.nodeType&&i.push(o),o=o[n];return i},sibling:function(e,t){var n=[];for(;e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n}});function ft(e,t,n){if(x.isFunction(t))return x.grep(e,function(e,r){return!!t.call(e,r,e)!==n});if(t.nodeType)return x.grep(e,function(e){return e===t!==n});if("string"==typeof t){if(st.test(t))return x.filter(t,e,n);t=x.filter(t,e)}return x.grep(e,function(e){return x.inArray(e,t)>=0!==n})}function dt(e){var t=ht.split("|"),n=e.createDocumentFragment();if(n.createElement)while(t.length)n.createElement(t.pop());return n}var ht="abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",gt=/ jQuery\d+="(?:null|\d+)"/g,mt=RegExp("<(?:"+ht+")[\\s/>]","i"),yt=/^\s+/,vt=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,bt=/<([\w:]+)/,xt=/<tbody/i,wt=/<|&#?\w+;/,Tt=/<(?:script|style|link)/i,Ct=/^(?:checkbox|radio)$/i,Nt=/checked\s*(?:[^=]|=\s*.checked.)/i,kt=/^$|\/(?:java|ecma)script/i,Et=/^true\/(.*)/,St=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,At={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],area:[1,"<map>","</map>"],param:[1,"<object>","</object>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:x.support.htmlSerialize?[0,"",""]:[1,"X<div>","</div>"]},jt=dt(a),Dt=jt.appendChild(a.createElement("div"));At.optgroup=At.option,At.tbody=At.tfoot=At.colgroup=At.caption=At.thead,At.th=At.td,x.fn.extend({text:function(e){return x.access(this,function(e){return e===t?x.text(this):this.empty().append((this[0]&&this[0].ownerDocument||a).createTextNode(e))},null,e,arguments.length)},append:function(){return this.domManip(arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=Lt(this,e);t.appendChild(e)}})},prepend:function(){return this.domManip(arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=Lt(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return this.domManip(arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return this.domManip(arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},remove:function(e,t){var n,r=e?x.filter(e,this):this,i=0;for(;null!=(n=r[i]);i++)t||1!==n.nodeType||x.cleanData(Ft(n)),n.parentNode&&(t&&x.contains(n.ownerDocument,n)&&_t(Ft(n,"script")),n.parentNode.removeChild(n));return this},empty:function(){var e,t=0;for(;null!=(e=this[t]);t++){1===e.nodeType&&x.cleanData(Ft(e,!1));while(e.firstChild)e.removeChild(e.firstChild);e.options&&x.nodeName(e,"select")&&(e.options.length=0)}return this},clone:function(e,t){return e=null==e?!1:e,t=null==t?e:t,this.map(function(){return x.clone(this,e,t)})},html:function(e){return x.access(this,function(e){var n=this[0]||{},r=0,i=this.length;if(e===t)return 1===n.nodeType?n.innerHTML.replace(gt,""):t;if(!("string"!=typeof e||Tt.test(e)||!x.support.htmlSerialize&&mt.test(e)||!x.support.leadingWhitespace&&yt.test(e)||At[(bt.exec(e)||["",""])[1].toLowerCase()])){e=e.replace(vt,"<$1></$2>");try{for(;i>r;r++)n=this[r]||{},1===n.nodeType&&(x.cleanData(Ft(n,!1)),n.innerHTML=e);n=0}catch(o){}}n&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var e=x.map(this,function(e){return[e.nextSibling,e.parentNode]}),t=0;return this.domManip(arguments,function(n){var r=e[t++],i=e[t++];i&&(r&&r.parentNode!==i&&(r=this.nextSibling),x(this).remove(),i.insertBefore(n,r))},!0),t?this:this.remove()},detach:function(e){return this.remove(e,!0)},domManip:function(e,t,n){e=d.apply([],e);var r,i,o,a,s,l,u=0,c=this.length,p=this,f=c-1,h=e[0],g=x.isFunction(h);if(g||!(1>=c||"string"!=typeof h||x.support.checkClone)&&Nt.test(h))return this.each(function(r){var i=p.eq(r);g&&(e[0]=h.call(this,r,i.html())),i.domManip(e,t,n)});if(c&&(l=x.buildFragment(e,this[0].ownerDocument,!1,!n&&this),r=l.firstChild,1===l.childNodes.length&&(l=r),r)){for(a=x.map(Ft(l,"script"),Ht),o=a.length;c>u;u++)i=l,u!==f&&(i=x.clone(i,!0,!0),o&&x.merge(a,Ft(i,"script"))),t.call(this[u],i,u);if(o)for(s=a[a.length-1].ownerDocument,x.map(a,qt),u=0;o>u;u++)i=a[u],kt.test(i.type||"")&&!x._data(i,"globalEval")&&x.contains(s,i)&&(i.src?x._evalUrl(i.src):x.globalEval((i.text||i.textContent||i.innerHTML||"").replace(St,"")));l=r=null}return this}});function Lt(e,t){return x.nodeName(e,"table")&&x.nodeName(1===t.nodeType?t:t.firstChild,"tr")?e.getElementsByTagName("tbody")[0]||e.appendChild(e.ownerDocument.createElement("tbody")):e}function Ht(e){return e.type=(null!==x.find.attr(e,"type"))+"/"+e.type,e}function qt(e){var t=Et.exec(e.type);return t?e.type=t[1]:e.removeAttribute("type"),e}function _t(e,t){var n,r=0;for(;null!=(n=e[r]);r++)x._data(n,"globalEval",!t||x._data(t[r],"globalEval"))}function Mt(e,t){if(1===t.nodeType&&x.hasData(e)){var n,r,i,o=x._data(e),a=x._data(t,o),s=o.events;if(s){delete a.handle,a.events={};for(n in s)for(r=0,i=s[n].length;i>r;r++)x.event.add(t,n,s[n][r])}a.data&&(a.data=x.extend({},a.data))}}function Ot(e,t){var n,r,i;if(1===t.nodeType){if(n=t.nodeName.toLowerCase(),!x.support.noCloneEvent&&t[x.expando]){i=x._data(t);for(r in i.events)x.removeEvent(t,r,i.handle);t.removeAttribute(x.expando)}"script"===n&&t.text!==e.text?(Ht(t).text=e.text,qt(t)):"object"===n?(t.parentNode&&(t.outerHTML=e.outerHTML),x.support.html5Clone&&e.innerHTML&&!x.trim(t.innerHTML)&&(t.innerHTML=e.innerHTML)):"input"===n&&Ct.test(e.type)?(t.defaultChecked=t.checked=e.checked,t.value!==e.value&&(t.value=e.value)):"option"===n?t.defaultSelected=t.selected=e.defaultSelected:("input"===n||"textarea"===n)&&(t.defaultValue=e.defaultValue)}}x.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,t){x.fn[e]=function(e){var n,r=0,i=[],o=x(e),a=o.length-1;for(;a>=r;r++)n=r===a?this:this.clone(!0),x(o[r])[t](n),h.apply(i,n.get());return this.pushStack(i)}});function Ft(e,n){var r,o,a=0,s=typeof e.getElementsByTagName!==i?e.getElementsByTagName(n||"*"):typeof e.querySelectorAll!==i?e.querySelectorAll(n||"*"):t;if(!s)for(s=[],r=e.childNodes||e;null!=(o=r[a]);a++)!n||x.nodeName(o,n)?s.push(o):x.merge(s,Ft(o,n));return n===t||n&&x.nodeName(e,n)?x.merge([e],s):s}function Bt(e){Ct.test(e.type)&&(e.defaultChecked=e.checked)}x.extend({clone:function(e,t,n){var r,i,o,a,s,l=x.contains(e.ownerDocument,e);if(x.support.html5Clone||x.isXMLDoc(e)||!mt.test("<"+e.nodeName+">")?o=e.cloneNode(!0):(Dt.innerHTML=e.outerHTML,Dt.removeChild(o=Dt.firstChild)),!(x.support.noCloneEvent&&x.support.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||x.isXMLDoc(e)))for(r=Ft(o),s=Ft(e),a=0;null!=(i=s[a]);++a)r[a]&&Ot(i,r[a]);if(t)if(n)for(s=s||Ft(e),r=r||Ft(o),a=0;null!=(i=s[a]);a++)Mt(i,r[a]);else Mt(e,o);return r=Ft(o,"script"),r.length>0&&_t(r,!l&&Ft(e,"script")),r=s=i=null,o},buildFragment:function(e,t,n,r){var i,o,a,s,l,u,c,p=e.length,f=dt(t),d=[],h=0;for(;p>h;h++)if(o=e[h],o||0===o)if("object"===x.type(o))x.merge(d,o.nodeType?[o]:o);else if(wt.test(o)){s=s||f.appendChild(t.createElement("div")),l=(bt.exec(o)||["",""])[1].toLowerCase(),c=At[l]||At._default,s.innerHTML=c[1]+o.replace(vt,"<$1></$2>")+c[2],i=c[0];while(i--)s=s.lastChild;if(!x.support.leadingWhitespace&&yt.test(o)&&d.push(t.createTextNode(yt.exec(o)[0])),!x.support.tbody){o="table"!==l||xt.test(o)?"<table>"!==c[1]||xt.test(o)?0:s:s.firstChild,i=o&&o.childNodes.length;while(i--)x.nodeName(u=o.childNodes[i],"tbody")&&!u.childNodes.length&&o.removeChild(u)}x.merge(d,s.childNodes),s.textContent="";while(s.firstChild)s.removeChild(s.firstChild);s=f.lastChild}else d.push(t.createTextNode(o));s&&f.removeChild(s),x.support.appendChecked||x.grep(Ft(d,"input"),Bt),h=0;while(o=d[h++])if((!r||-1===x.inArray(o,r))&&(a=x.contains(o.ownerDocument,o),s=Ft(f.appendChild(o),"script"),a&&_t(s),n)){i=0;while(o=s[i++])kt.test(o.type||"")&&n.push(o)}return s=null,f},cleanData:function(e,t){var n,r,o,a,s=0,l=x.expando,u=x.cache,c=x.support.deleteExpando,f=x.event.special;for(;null!=(n=e[s]);s++)if((t||x.acceptData(n))&&(o=n[l],a=o&&u[o])){if(a.events)for(r in a.events)f[r]?x.event.remove(n,r):x.removeEvent(n,r,a.handle);
u[o]&&(delete u[o],c?delete n[l]:typeof n.removeAttribute!==i?n.removeAttribute(l):n[l]=null,p.push(o))}},_evalUrl:function(e){return x.ajax({url:e,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0})}}),x.fn.extend({wrapAll:function(e){if(x.isFunction(e))return this.each(function(t){x(this).wrapAll(e.call(this,t))});if(this[0]){var t=x(e,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){var e=this;while(e.firstChild&&1===e.firstChild.nodeType)e=e.firstChild;return e}).append(this)}return this},wrapInner:function(e){return x.isFunction(e)?this.each(function(t){x(this).wrapInner(e.call(this,t))}):this.each(function(){var t=x(this),n=t.contents();n.length?n.wrapAll(e):t.append(e)})},wrap:function(e){var t=x.isFunction(e);return this.each(function(n){x(this).wrapAll(t?e.call(this,n):e)})},unwrap:function(){return this.parent().each(function(){x.nodeName(this,"body")||x(this).replaceWith(this.childNodes)}).end()}});var Pt,Rt,Wt,$t=/alpha\([^)]*\)/i,It=/opacity\s*=\s*([^)]*)/,zt=/^(top|right|bottom|left)$/,Xt=/^(none|table(?!-c[ea]).+)/,Ut=/^margin/,Vt=RegExp("^("+w+")(.*)$","i"),Yt=RegExp("^("+w+")(?!px)[a-z%]+$","i"),Jt=RegExp("^([+-])=("+w+")","i"),Gt={BODY:"block"},Qt={position:"absolute",visibility:"hidden",display:"block"},Kt={letterSpacing:0,fontWeight:400},Zt=["Top","Right","Bottom","Left"],en=["Webkit","O","Moz","ms"];function tn(e,t){if(t in e)return t;var n=t.charAt(0).toUpperCase()+t.slice(1),r=t,i=en.length;while(i--)if(t=en[i]+n,t in e)return t;return r}function nn(e,t){return e=t||e,"none"===x.css(e,"display")||!x.contains(e.ownerDocument,e)}function rn(e,t){var n,r,i,o=[],a=0,s=e.length;for(;s>a;a++)r=e[a],r.style&&(o[a]=x._data(r,"olddisplay"),n=r.style.display,t?(o[a]||"none"!==n||(r.style.display=""),""===r.style.display&&nn(r)&&(o[a]=x._data(r,"olddisplay",ln(r.nodeName)))):o[a]||(i=nn(r),(n&&"none"!==n||!i)&&x._data(r,"olddisplay",i?n:x.css(r,"display"))));for(a=0;s>a;a++)r=e[a],r.style&&(t&&"none"!==r.style.display&&""!==r.style.display||(r.style.display=t?o[a]||"":"none"));return e}x.fn.extend({css:function(e,n){return x.access(this,function(e,n,r){var i,o,a={},s=0;if(x.isArray(n)){for(o=Rt(e),i=n.length;i>s;s++)a[n[s]]=x.css(e,n[s],!1,o);return a}return r!==t?x.style(e,n,r):x.css(e,n)},e,n,arguments.length>1)},show:function(){return rn(this,!0)},hide:function(){return rn(this)},toggle:function(e){var t="boolean"==typeof e;return this.each(function(){(t?e:nn(this))?x(this).show():x(this).hide()})}}),x.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=Wt(e,"opacity");return""===n?"1":n}}}},cssNumber:{columnCount:!0,fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":x.support.cssFloat?"cssFloat":"styleFloat"},style:function(e,n,r,i){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var o,a,s,l=x.camelCase(n),u=e.style;if(n=x.cssProps[l]||(x.cssProps[l]=tn(u,l)),s=x.cssHooks[n]||x.cssHooks[l],r===t)return s&&"get"in s&&(o=s.get(e,!1,i))!==t?o:u[n];if(a=typeof r,"string"===a&&(o=Jt.exec(r))&&(r=(o[1]+1)*o[2]+parseFloat(x.css(e,n)),a="number"),!(null==r||"number"===a&&isNaN(r)||("number"!==a||x.cssNumber[l]||(r+="px"),x.support.clearCloneStyle||""!==r||0!==n.indexOf("background")||(u[n]="inherit"),s&&"set"in s&&(r=s.set(e,r,i))===t)))try{u[n]=r}catch(c){}}},css:function(e,n,r,i){var o,a,s,l=x.camelCase(n);return n=x.cssProps[l]||(x.cssProps[l]=tn(e.style,l)),s=x.cssHooks[n]||x.cssHooks[l],s&&"get"in s&&(a=s.get(e,!0,r)),a===t&&(a=Wt(e,n,i)),"normal"===a&&n in Kt&&(a=Kt[n]),""===r||r?(o=parseFloat(a),r===!0||x.isNumeric(o)?o||0:a):a}}),e.getComputedStyle?(Rt=function(t){return e.getComputedStyle(t,null)},Wt=function(e,n,r){var i,o,a,s=r||Rt(e),l=s?s.getPropertyValue(n)||s[n]:t,u=e.style;return s&&(""!==l||x.contains(e.ownerDocument,e)||(l=x.style(e,n)),Yt.test(l)&&Ut.test(n)&&(i=u.width,o=u.minWidth,a=u.maxWidth,u.minWidth=u.maxWidth=u.width=l,l=s.width,u.width=i,u.minWidth=o,u.maxWidth=a)),l}):a.documentElement.currentStyle&&(Rt=function(e){return e.currentStyle},Wt=function(e,n,r){var i,o,a,s=r||Rt(e),l=s?s[n]:t,u=e.style;return null==l&&u&&u[n]&&(l=u[n]),Yt.test(l)&&!zt.test(n)&&(i=u.left,o=e.runtimeStyle,a=o&&o.left,a&&(o.left=e.currentStyle.left),u.left="fontSize"===n?"1em":l,l=u.pixelLeft+"px",u.left=i,a&&(o.left=a)),""===l?"auto":l});function on(e,t,n){var r=Vt.exec(t);return r?Math.max(0,r[1]-(n||0))+(r[2]||"px"):t}function an(e,t,n,r,i){var o=n===(r?"border":"content")?4:"width"===t?1:0,a=0;for(;4>o;o+=2)"margin"===n&&(a+=x.css(e,n+Zt[o],!0,i)),r?("content"===n&&(a-=x.css(e,"padding"+Zt[o],!0,i)),"margin"!==n&&(a-=x.css(e,"border"+Zt[o]+"Width",!0,i))):(a+=x.css(e,"padding"+Zt[o],!0,i),"padding"!==n&&(a+=x.css(e,"border"+Zt[o]+"Width",!0,i)));return a}function sn(e,t,n){var r=!0,i="width"===t?e.offsetWidth:e.offsetHeight,o=Rt(e),a=x.support.boxSizing&&"border-box"===x.css(e,"boxSizing",!1,o);if(0>=i||null==i){if(i=Wt(e,t,o),(0>i||null==i)&&(i=e.style[t]),Yt.test(i))return i;r=a&&(x.support.boxSizingReliable||i===e.style[t]),i=parseFloat(i)||0}return i+an(e,t,n||(a?"border":"content"),r,o)+"px"}function ln(e){var t=a,n=Gt[e];return n||(n=un(e,t),"none"!==n&&n||(Pt=(Pt||x("<iframe frameborder='0' width='0' height='0'/>").css("cssText","display:block !important")).appendTo(t.documentElement),t=(Pt[0].contentWindow||Pt[0].contentDocument).document,t.write("<!doctype html><html><body>"),t.close(),n=un(e,t),Pt.detach()),Gt[e]=n),n}function un(e,t){var n=x(t.createElement(e)).appendTo(t.body),r=x.css(n[0],"display");return n.remove(),r}x.each(["height","width"],function(e,n){x.cssHooks[n]={get:function(e,r,i){return r?0===e.offsetWidth&&Xt.test(x.css(e,"display"))?x.swap(e,Qt,function(){return sn(e,n,i)}):sn(e,n,i):t},set:function(e,t,r){var i=r&&Rt(e);return on(e,t,r?an(e,n,r,x.support.boxSizing&&"border-box"===x.css(e,"boxSizing",!1,i),i):0)}}}),x.support.opacity||(x.cssHooks.opacity={get:function(e,t){return It.test((t&&e.currentStyle?e.currentStyle.filter:e.style.filter)||"")?.01*parseFloat(RegExp.$1)+"":t?"1":""},set:function(e,t){var n=e.style,r=e.currentStyle,i=x.isNumeric(t)?"alpha(opacity="+100*t+")":"",o=r&&r.filter||n.filter||"";n.zoom=1,(t>=1||""===t)&&""===x.trim(o.replace($t,""))&&n.removeAttribute&&(n.removeAttribute("filter"),""===t||r&&!r.filter)||(n.filter=$t.test(o)?o.replace($t,i):o+" "+i)}}),x(function(){x.support.reliableMarginRight||(x.cssHooks.marginRight={get:function(e,n){return n?x.swap(e,{display:"inline-block"},Wt,[e,"marginRight"]):t}}),!x.support.pixelPosition&&x.fn.position&&x.each(["top","left"],function(e,n){x.cssHooks[n]={get:function(e,r){return r?(r=Wt(e,n),Yt.test(r)?x(e).position()[n]+"px":r):t}}})}),x.expr&&x.expr.filters&&(x.expr.filters.hidden=function(e){return 0>=e.offsetWidth&&0>=e.offsetHeight||!x.support.reliableHiddenOffsets&&"none"===(e.style&&e.style.display||x.css(e,"display"))},x.expr.filters.visible=function(e){return!x.expr.filters.hidden(e)}),x.each({margin:"",padding:"",border:"Width"},function(e,t){x.cssHooks[e+t]={expand:function(n){var r=0,i={},o="string"==typeof n?n.split(" "):[n];for(;4>r;r++)i[e+Zt[r]+t]=o[r]||o[r-2]||o[0];return i}},Ut.test(e)||(x.cssHooks[e+t].set=on)});var cn=/%20/g,pn=/\[\]$/,fn=/\r?\n/g,dn=/^(?:submit|button|image|reset|file)$/i,hn=/^(?:input|select|textarea|keygen)/i;x.fn.extend({serialize:function(){return x.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=x.prop(this,"elements");return e?x.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!x(this).is(":disabled")&&hn.test(this.nodeName)&&!dn.test(e)&&(this.checked||!Ct.test(e))}).map(function(e,t){var n=x(this).val();return null==n?null:x.isArray(n)?x.map(n,function(e){return{name:t.name,value:e.replace(fn,"\r\n")}}):{name:t.name,value:n.replace(fn,"\r\n")}}).get()}}),x.param=function(e,n){var r,i=[],o=function(e,t){t=x.isFunction(t)?t():null==t?"":t,i[i.length]=encodeURIComponent(e)+"="+encodeURIComponent(t)};if(n===t&&(n=x.ajaxSettings&&x.ajaxSettings.traditional),x.isArray(e)||e.jquery&&!x.isPlainObject(e))x.each(e,function(){o(this.name,this.value)});else for(r in e)gn(r,e[r],n,o);return i.join("&").replace(cn,"+")};function gn(e,t,n,r){var i;if(x.isArray(t))x.each(t,function(t,i){n||pn.test(e)?r(e,i):gn(e+"["+("object"==typeof i?t:"")+"]",i,n,r)});else if(n||"object"!==x.type(t))r(e,t);else for(i in t)gn(e+"["+i+"]",t[i],n,r)}x.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(e,t){x.fn[t]=function(e,n){return arguments.length>0?this.on(t,null,e,n):this.trigger(t)}}),x.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)},bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,r){return this.on(t,e,n,r)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",n)}});var mn,yn,vn=x.now(),bn=/\?/,xn=/#.*$/,wn=/([?&])_=[^&]*/,Tn=/^(.*?):[ \t]*([^\r\n]*)\r?$/gm,Cn=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Nn=/^(?:GET|HEAD)$/,kn=/^\/\//,En=/^([\w.+-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/,Sn=x.fn.load,An={},jn={},Dn="*/".concat("*");try{yn=o.href}catch(Ln){yn=a.createElement("a"),yn.href="",yn=yn.href}mn=En.exec(yn.toLowerCase())||[];function Hn(e){return function(t,n){"string"!=typeof t&&(n=t,t="*");var r,i=0,o=t.toLowerCase().match(T)||[];if(x.isFunction(n))while(r=o[i++])"+"===r[0]?(r=r.slice(1)||"*",(e[r]=e[r]||[]).unshift(n)):(e[r]=e[r]||[]).push(n)}}function qn(e,n,r,i){var o={},a=e===jn;function s(l){var u;return o[l]=!0,x.each(e[l]||[],function(e,l){var c=l(n,r,i);return"string"!=typeof c||a||o[c]?a?!(u=c):t:(n.dataTypes.unshift(c),s(c),!1)}),u}return s(n.dataTypes[0])||!o["*"]&&s("*")}function _n(e,n){var r,i,o=x.ajaxSettings.flatOptions||{};for(i in n)n[i]!==t&&((o[i]?e:r||(r={}))[i]=n[i]);return r&&x.extend(!0,e,r),e}x.fn.load=function(e,n,r){if("string"!=typeof e&&Sn)return Sn.apply(this,arguments);var i,o,a,s=this,l=e.indexOf(" ");return l>=0&&(i=e.slice(l,e.length),e=e.slice(0,l)),x.isFunction(n)?(r=n,n=t):n&&"object"==typeof n&&(a="POST"),s.length>0&&x.ajax({url:e,type:a,dataType:"html",data:n}).done(function(e){o=arguments,s.html(i?x("<div>").append(x.parseHTML(e)).find(i):e)}).complete(r&&function(e,t){s.each(r,o||[e.responseText,t,e])}),this},x.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){x.fn[t]=function(e){return this.on(t,e)}}),x.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:yn,type:"GET",isLocal:Cn.test(mn[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Dn,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":x.parseJSON,"text xml":x.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?_n(_n(e,x.ajaxSettings),t):_n(x.ajaxSettings,e)},ajaxPrefilter:Hn(An),ajaxTransport:Hn(jn),ajax:function(e,n){"object"==typeof e&&(n=e,e=t),n=n||{};var r,i,o,a,s,l,u,c,p=x.ajaxSetup({},n),f=p.context||p,d=p.context&&(f.nodeType||f.jquery)?x(f):x.event,h=x.Deferred(),g=x.Callbacks("once memory"),m=p.statusCode||{},y={},v={},b=0,w="canceled",C={readyState:0,getResponseHeader:function(e){var t;if(2===b){if(!c){c={};while(t=Tn.exec(a))c[t[1].toLowerCase()]=t[2]}t=c[e.toLowerCase()]}return null==t?null:t},getAllResponseHeaders:function(){return 2===b?a:null},setRequestHeader:function(e,t){var n=e.toLowerCase();return b||(e=v[n]=v[n]||e,y[e]=t),this},overrideMimeType:function(e){return b||(p.mimeType=e),this},statusCode:function(e){var t;if(e)if(2>b)for(t in e)m[t]=[m[t],e[t]];else C.always(e[C.status]);return this},abort:function(e){var t=e||w;return u&&u.abort(t),k(0,t),this}};if(h.promise(C).complete=g.add,C.success=C.done,C.error=C.fail,p.url=((e||p.url||yn)+"").replace(xn,"").replace(kn,mn[1]+"//"),p.type=n.method||n.type||p.method||p.type,p.dataTypes=x.trim(p.dataType||"*").toLowerCase().match(T)||[""],null==p.crossDomain&&(r=En.exec(p.url.toLowerCase()),p.crossDomain=!(!r||r[1]===mn[1]&&r[2]===mn[2]&&(r[3]||("http:"===r[1]?"80":"443"))===(mn[3]||("http:"===mn[1]?"80":"443")))),p.data&&p.processData&&"string"!=typeof p.data&&(p.data=x.param(p.data,p.traditional)),qn(An,p,n,C),2===b)return C;l=p.global,l&&0===x.active++&&x.event.trigger("ajaxStart"),p.type=p.type.toUpperCase(),p.hasContent=!Nn.test(p.type),o=p.url,p.hasContent||(p.data&&(o=p.url+=(bn.test(o)?"&":"?")+p.data,delete p.data),p.cache===!1&&(p.url=wn.test(o)?o.replace(wn,"$1_="+vn++):o+(bn.test(o)?"&":"?")+"_="+vn++)),p.ifModified&&(x.lastModified[o]&&C.setRequestHeader("If-Modified-Since",x.lastModified[o]),x.etag[o]&&C.setRequestHeader("If-None-Match",x.etag[o])),(p.data&&p.hasContent&&p.contentType!==!1||n.contentType)&&C.setRequestHeader("Content-Type",p.contentType),C.setRequestHeader("Accept",p.dataTypes[0]&&p.accepts[p.dataTypes[0]]?p.accepts[p.dataTypes[0]]+("*"!==p.dataTypes[0]?", "+Dn+"; q=0.01":""):p.accepts["*"]);for(i in p.headers)C.setRequestHeader(i,p.headers[i]);if(p.beforeSend&&(p.beforeSend.call(f,C,p)===!1||2===b))return C.abort();w="abort";for(i in{success:1,error:1,complete:1})C[i](p[i]);if(u=qn(jn,p,n,C)){C.readyState=1,l&&d.trigger("ajaxSend",[C,p]),p.async&&p.timeout>0&&(s=setTimeout(function(){C.abort("timeout")},p.timeout));try{b=1,u.send(y,k)}catch(N){if(!(2>b))throw N;k(-1,N)}}else k(-1,"No Transport");function k(e,n,r,i){var c,y,v,w,T,N=n;2!==b&&(b=2,s&&clearTimeout(s),u=t,a=i||"",C.readyState=e>0?4:0,c=e>=200&&300>e||304===e,r&&(w=Mn(p,C,r)),w=On(p,w,C,c),c?(p.ifModified&&(T=C.getResponseHeader("Last-Modified"),T&&(x.lastModified[o]=T),T=C.getResponseHeader("etag"),T&&(x.etag[o]=T)),204===e||"HEAD"===p.type?N="nocontent":304===e?N="notmodified":(N=w.state,y=w.data,v=w.error,c=!v)):(v=N,(e||!N)&&(N="error",0>e&&(e=0))),C.status=e,C.statusText=(n||N)+"",c?h.resolveWith(f,[y,N,C]):h.rejectWith(f,[C,N,v]),C.statusCode(m),m=t,l&&d.trigger(c?"ajaxSuccess":"ajaxError",[C,p,c?y:v]),g.fireWith(f,[C,N]),l&&(d.trigger("ajaxComplete",[C,p]),--x.active||x.event.trigger("ajaxStop")))}return C},getJSON:function(e,t,n){return x.get(e,t,n,"json")},getScript:function(e,n){return x.get(e,t,n,"script")}}),x.each(["get","post"],function(e,n){x[n]=function(e,r,i,o){return x.isFunction(r)&&(o=o||i,i=r,r=t),x.ajax({url:e,type:n,dataType:o,data:r,success:i})}});function Mn(e,n,r){var i,o,a,s,l=e.contents,u=e.dataTypes;while("*"===u[0])u.shift(),o===t&&(o=e.mimeType||n.getResponseHeader("Content-Type"));if(o)for(s in l)if(l[s]&&l[s].test(o)){u.unshift(s);break}if(u[0]in r)a=u[0];else{for(s in r){if(!u[0]||e.converters[s+" "+u[0]]){a=s;break}i||(i=s)}a=a||i}return a?(a!==u[0]&&u.unshift(a),r[a]):t}function On(e,t,n,r){var i,o,a,s,l,u={},c=e.dataTypes.slice();if(c[1])for(a in e.converters)u[a.toLowerCase()]=e.converters[a];o=c.shift();while(o)if(e.responseFields[o]&&(n[e.responseFields[o]]=t),!l&&r&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),l=o,o=c.shift())if("*"===o)o=l;else if("*"!==l&&l!==o){if(a=u[l+" "+o]||u["* "+o],!a)for(i in u)if(s=i.split(" "),s[1]===o&&(a=u[l+" "+s[0]]||u["* "+s[0]])){a===!0?a=u[i]:u[i]!==!0&&(o=s[0],c.unshift(s[1]));break}if(a!==!0)if(a&&e["throws"])t=a(t);else try{t=a(t)}catch(p){return{state:"parsererror",error:a?p:"No conversion from "+l+" to "+o}}}return{state:"success",data:t}}x.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/(?:java|ecma)script/},converters:{"text script":function(e){return x.globalEval(e),e}}}),x.ajaxPrefilter("script",function(e){e.cache===t&&(e.cache=!1),e.crossDomain&&(e.type="GET",e.global=!1)}),x.ajaxTransport("script",function(e){if(e.crossDomain){var n,r=a.head||x("head")[0]||a.documentElement;return{send:function(t,i){n=a.createElement("script"),n.async=!0,e.scriptCharset&&(n.charset=e.scriptCharset),n.src=e.url,n.onload=n.onreadystatechange=function(e,t){(t||!n.readyState||/loaded|complete/.test(n.readyState))&&(n.onload=n.onreadystatechange=null,n.parentNode&&n.parentNode.removeChild(n),n=null,t||i(200,"success"))},r.insertBefore(n,r.firstChild)},abort:function(){n&&n.onload(t,!0)}}}});var Fn=[],Bn=/(=)\?(?=&|$)|\?\?/;x.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=Fn.pop()||x.expando+"_"+vn++;return this[e]=!0,e}}),x.ajaxPrefilter("json jsonp",function(n,r,i){var o,a,s,l=n.jsonp!==!1&&(Bn.test(n.url)?"url":"string"==typeof n.data&&!(n.contentType||"").indexOf("application/x-www-form-urlencoded")&&Bn.test(n.data)&&"data");return l||"jsonp"===n.dataTypes[0]?(o=n.jsonpCallback=x.isFunction(n.jsonpCallback)?n.jsonpCallback():n.jsonpCallback,l?n[l]=n[l].replace(Bn,"$1"+o):n.jsonp!==!1&&(n.url+=(bn.test(n.url)?"&":"?")+n.jsonp+"="+o),n.converters["script json"]=function(){return s||x.error(o+" was not called"),s[0]},n.dataTypes[0]="json",a=e[o],e[o]=function(){s=arguments},i.always(function(){e[o]=a,n[o]&&(n.jsonpCallback=r.jsonpCallback,Fn.push(o)),s&&x.isFunction(a)&&a(s[0]),s=a=t}),"script"):t});var Pn,Rn,Wn=0,$n=e.ActiveXObject&&function(){var e;for(e in Pn)Pn[e](t,!0)};function In(){try{return new e.XMLHttpRequest}catch(t){}}function zn(){try{return new e.ActiveXObject("Microsoft.XMLHTTP")}catch(t){}}x.ajaxSettings.xhr=e.ActiveXObject?function(){return!this.isLocal&&In()||zn()}:In,Rn=x.ajaxSettings.xhr(),x.support.cors=!!Rn&&"withCredentials"in Rn,Rn=x.support.ajax=!!Rn,Rn&&x.ajaxTransport(function(n){if(!n.crossDomain||x.support.cors){var r;return{send:function(i,o){var a,s,l=n.xhr();if(n.username?l.open(n.type,n.url,n.async,n.username,n.password):l.open(n.type,n.url,n.async),n.xhrFields)for(s in n.xhrFields)l[s]=n.xhrFields[s];n.mimeType&&l.overrideMimeType&&l.overrideMimeType(n.mimeType),n.crossDomain||i["X-Requested-With"]||(i["X-Requested-With"]="XMLHttpRequest");try{for(s in i)l.setRequestHeader(s,i[s])}catch(u){}l.send(n.hasContent&&n.data||null),r=function(e,i){var s,u,c,p;try{if(r&&(i||4===l.readyState))if(r=t,a&&(l.onreadystatechange=x.noop,$n&&delete Pn[a]),i)4!==l.readyState&&l.abort();else{p={},s=l.status,u=l.getAllResponseHeaders(),"string"==typeof l.responseText&&(p.text=l.responseText);try{c=l.statusText}catch(f){c=""}s||!n.isLocal||n.crossDomain?1223===s&&(s=204):s=p.text?200:404}}catch(d){i||o(-1,d)}p&&o(s,c,p,u)},n.async?4===l.readyState?setTimeout(r):(a=++Wn,$n&&(Pn||(Pn={},x(e).unload($n)),Pn[a]=r),l.onreadystatechange=r):r()},abort:function(){r&&r(t,!0)}}}});var Xn,Un,Vn=/^(?:toggle|show|hide)$/,Yn=RegExp("^(?:([+-])=|)("+w+")([a-z%]*)$","i"),Jn=/queueHooks$/,Gn=[nr],Qn={"*":[function(e,t){var n=this.createTween(e,t),r=n.cur(),i=Yn.exec(t),o=i&&i[3]||(x.cssNumber[e]?"":"px"),a=(x.cssNumber[e]||"px"!==o&&+r)&&Yn.exec(x.css(n.elem,e)),s=1,l=20;if(a&&a[3]!==o){o=o||a[3],i=i||[],a=+r||1;do s=s||".5",a/=s,x.style(n.elem,e,a+o);while(s!==(s=n.cur()/r)&&1!==s&&--l)}return i&&(a=n.start=+a||+r||0,n.unit=o,n.end=i[1]?a+(i[1]+1)*i[2]:+i[2]),n}]};function Kn(){return setTimeout(function(){Xn=t}),Xn=x.now()}function Zn(e,t,n){var r,i=(Qn[t]||[]).concat(Qn["*"]),o=0,a=i.length;for(;a>o;o++)if(r=i[o].call(n,t,e))return r}function er(e,t,n){var r,i,o=0,a=Gn.length,s=x.Deferred().always(function(){delete l.elem}),l=function(){if(i)return!1;var t=Xn||Kn(),n=Math.max(0,u.startTime+u.duration-t),r=n/u.duration||0,o=1-r,a=0,l=u.tweens.length;for(;l>a;a++)u.tweens[a].run(o);return s.notifyWith(e,[u,o,n]),1>o&&l?n:(s.resolveWith(e,[u]),!1)},u=s.promise({elem:e,props:x.extend({},t),opts:x.extend(!0,{specialEasing:{}},n),originalProperties:t,originalOptions:n,startTime:Xn||Kn(),duration:n.duration,tweens:[],createTween:function(t,n){var r=x.Tween(e,u.opts,t,n,u.opts.specialEasing[t]||u.opts.easing);return u.tweens.push(r),r},stop:function(t){var n=0,r=t?u.tweens.length:0;if(i)return this;for(i=!0;r>n;n++)u.tweens[n].run(1);return t?s.resolveWith(e,[u,t]):s.rejectWith(e,[u,t]),this}}),c=u.props;for(tr(c,u.opts.specialEasing);a>o;o++)if(r=Gn[o].call(u,e,c,u.opts))return r;return x.map(c,Zn,u),x.isFunction(u.opts.start)&&u.opts.start.call(e,u),x.fx.timer(x.extend(l,{elem:e,anim:u,queue:u.opts.queue})),u.progress(u.opts.progress).done(u.opts.done,u.opts.complete).fail(u.opts.fail).always(u.opts.always)}function tr(e,t){var n,r,i,o,a;for(n in e)if(r=x.camelCase(n),i=t[r],o=e[n],x.isArray(o)&&(i=o[1],o=e[n]=o[0]),n!==r&&(e[r]=o,delete e[n]),a=x.cssHooks[r],a&&"expand"in a){o=a.expand(o),delete e[r];for(n in o)n in e||(e[n]=o[n],t[n]=i)}else t[r]=i}x.Animation=x.extend(er,{tweener:function(e,t){x.isFunction(e)?(t=e,e=["*"]):e=e.split(" ");var n,r=0,i=e.length;for(;i>r;r++)n=e[r],Qn[n]=Qn[n]||[],Qn[n].unshift(t)},prefilter:function(e,t){t?Gn.unshift(e):Gn.push(e)}});function nr(e,t,n){var r,i,o,a,s,l,u=this,c={},p=e.style,f=e.nodeType&&nn(e),d=x._data(e,"fxshow");n.queue||(s=x._queueHooks(e,"fx"),null==s.unqueued&&(s.unqueued=0,l=s.empty.fire,s.empty.fire=function(){s.unqueued||l()}),s.unqueued++,u.always(function(){u.always(function(){s.unqueued--,x.queue(e,"fx").length||s.empty.fire()})})),1===e.nodeType&&("height"in t||"width"in t)&&(n.overflow=[p.overflow,p.overflowX,p.overflowY],"inline"===x.css(e,"display")&&"none"===x.css(e,"float")&&(x.support.inlineBlockNeedsLayout&&"inline"!==ln(e.nodeName)?p.zoom=1:p.display="inline-block")),n.overflow&&(p.overflow="hidden",x.support.shrinkWrapBlocks||u.always(function(){p.overflow=n.overflow[0],p.overflowX=n.overflow[1],p.overflowY=n.overflow[2]}));for(r in t)if(i=t[r],Vn.exec(i)){if(delete t[r],o=o||"toggle"===i,i===(f?"hide":"show"))continue;c[r]=d&&d[r]||x.style(e,r)}if(!x.isEmptyObject(c)){d?"hidden"in d&&(f=d.hidden):d=x._data(e,"fxshow",{}),o&&(d.hidden=!f),f?x(e).show():u.done(function(){x(e).hide()}),u.done(function(){var t;x._removeData(e,"fxshow");for(t in c)x.style(e,t,c[t])});for(r in c)a=Zn(f?d[r]:0,r,u),r in d||(d[r]=a.start,f&&(a.end=a.start,a.start="width"===r||"height"===r?1:0))}}function rr(e,t,n,r,i){return new rr.prototype.init(e,t,n,r,i)}x.Tween=rr,rr.prototype={constructor:rr,init:function(e,t,n,r,i,o){this.elem=e,this.prop=n,this.easing=i||"swing",this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=o||(x.cssNumber[n]?"":"px")},cur:function(){var e=rr.propHooks[this.prop];return e&&e.get?e.get(this):rr.propHooks._default.get(this)},run:function(e){var t,n=rr.propHooks[this.prop];return this.pos=t=this.options.duration?x.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):rr.propHooks._default.set(this),this}},rr.prototype.init.prototype=rr.prototype,rr.propHooks={_default:{get:function(e){var t;return null==e.elem[e.prop]||e.elem.style&&null!=e.elem.style[e.prop]?(t=x.css(e.elem,e.prop,""),t&&"auto"!==t?t:0):e.elem[e.prop]},set:function(e){x.fx.step[e.prop]?x.fx.step[e.prop](e):e.elem.style&&(null!=e.elem.style[x.cssProps[e.prop]]||x.cssHooks[e.prop])?x.style(e.elem,e.prop,e.now+e.unit):e.elem[e.prop]=e.now}}},rr.propHooks.scrollTop=rr.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},x.each(["toggle","show","hide"],function(e,t){var n=x.fn[t];x.fn[t]=function(e,r,i){return null==e||"boolean"==typeof e?n.apply(this,arguments):this.animate(ir(t,!0),e,r,i)}}),x.fn.extend({fadeTo:function(e,t,n,r){return this.filter(nn).css("opacity",0).show().end().animate({opacity:t},e,n,r)},animate:function(e,t,n,r){var i=x.isEmptyObject(e),o=x.speed(t,n,r),a=function(){var t=er(this,x.extend({},e),o);(i||x._data(this,"finish"))&&t.stop(!0)};return a.finish=a,i||o.queue===!1?this.each(a):this.queue(o.queue,a)},stop:function(e,n,r){var i=function(e){var t=e.stop;delete e.stop,t(r)};return"string"!=typeof e&&(r=n,n=e,e=t),n&&e!==!1&&this.queue(e||"fx",[]),this.each(function(){var t=!0,n=null!=e&&e+"queueHooks",o=x.timers,a=x._data(this);if(n)a[n]&&a[n].stop&&i(a[n]);else for(n in a)a[n]&&a[n].stop&&Jn.test(n)&&i(a[n]);for(n=o.length;n--;)o[n].elem!==this||null!=e&&o[n].queue!==e||(o[n].anim.stop(r),t=!1,o.splice(n,1));(t||!r)&&x.dequeue(this,e)})},finish:function(e){return e!==!1&&(e=e||"fx"),this.each(function(){var t,n=x._data(this),r=n[e+"queue"],i=n[e+"queueHooks"],o=x.timers,a=r?r.length:0;for(n.finish=!0,x.queue(this,e,[]),i&&i.stop&&i.stop.call(this,!0),t=o.length;t--;)o[t].elem===this&&o[t].queue===e&&(o[t].anim.stop(!0),o.splice(t,1));for(t=0;a>t;t++)r[t]&&r[t].finish&&r[t].finish.call(this);delete n.finish})}});function ir(e,t){var n,r={height:e},i=0;for(t=t?1:0;4>i;i+=2-t)n=Zt[i],r["margin"+n]=r["padding"+n]=e;return t&&(r.opacity=r.width=e),r}x.each({slideDown:ir("show"),slideUp:ir("hide"),slideToggle:ir("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,t){x.fn[e]=function(e,n,r){return this.animate(t,e,n,r)}}),x.speed=function(e,t,n){var r=e&&"object"==typeof e?x.extend({},e):{complete:n||!n&&t||x.isFunction(e)&&e,duration:e,easing:n&&t||t&&!x.isFunction(t)&&t};return r.duration=x.fx.off?0:"number"==typeof r.duration?r.duration:r.duration in x.fx.speeds?x.fx.speeds[r.duration]:x.fx.speeds._default,(null==r.queue||r.queue===!0)&&(r.queue="fx"),r.old=r.complete,r.complete=function(){x.isFunction(r.old)&&r.old.call(this),r.queue&&x.dequeue(this,r.queue)},r},x.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2}},x.timers=[],x.fx=rr.prototype.init,x.fx.tick=function(){var e,n=x.timers,r=0;for(Xn=x.now();n.length>r;r++)e=n[r],e()||n[r]!==e||n.splice(r--,1);n.length||x.fx.stop(),Xn=t},x.fx.timer=function(e){e()&&x.timers.push(e)&&x.fx.start()},x.fx.interval=13,x.fx.start=function(){Un||(Un=setInterval(x.fx.tick,x.fx.interval))},x.fx.stop=function(){clearInterval(Un),Un=null},x.fx.speeds={slow:600,fast:200,_default:400},x.fx.step={},x.expr&&x.expr.filters&&(x.expr.filters.animated=function(e){return x.grep(x.timers,function(t){return e===t.elem}).length}),x.fn.offset=function(e){if(arguments.length)return e===t?this:this.each(function(t){x.offset.setOffset(this,e,t)});var n,r,o={top:0,left:0},a=this[0],s=a&&a.ownerDocument;if(s)return n=s.documentElement,x.contains(n,a)?(typeof a.getBoundingClientRect!==i&&(o=a.getBoundingClientRect()),r=or(s),{top:o.top+(r.pageYOffset||n.scrollTop)-(n.clientTop||0),left:o.left+(r.pageXOffset||n.scrollLeft)-(n.clientLeft||0)}):o},x.offset={setOffset:function(e,t,n){var r=x.css(e,"position");"static"===r&&(e.style.position="relative");var i=x(e),o=i.offset(),a=x.css(e,"top"),s=x.css(e,"left"),l=("absolute"===r||"fixed"===r)&&x.inArray("auto",[a,s])>-1,u={},c={},p,f;l?(c=i.position(),p=c.top,f=c.left):(p=parseFloat(a)||0,f=parseFloat(s)||0),x.isFunction(t)&&(t=t.call(e,n,o)),null!=t.top&&(u.top=t.top-o.top+p),null!=t.left&&(u.left=t.left-o.left+f),"using"in t?t.using.call(e,u):i.css(u)}},x.fn.extend({position:function(){if(this[0]){var e,t,n={top:0,left:0},r=this[0];return"fixed"===x.css(r,"position")?t=r.getBoundingClientRect():(e=this.offsetParent(),t=this.offset(),x.nodeName(e[0],"html")||(n=e.offset()),n.top+=x.css(e[0],"borderTopWidth",!0),n.left+=x.css(e[0],"borderLeftWidth",!0)),{top:t.top-n.top-x.css(r,"marginTop",!0),left:t.left-n.left-x.css(r,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){var e=this.offsetParent||s;while(e&&!x.nodeName(e,"html")&&"static"===x.css(e,"position"))e=e.offsetParent;return e||s})}}),x.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(e,n){var r=/Y/.test(n);x.fn[e]=function(i){return x.access(this,function(e,i,o){var a=or(e);return o===t?a?n in a?a[n]:a.document.documentElement[i]:e[i]:(a?a.scrollTo(r?x(a).scrollLeft():o,r?o:x(a).scrollTop()):e[i]=o,t)},e,i,arguments.length,null)}});function or(e){return x.isWindow(e)?e:9===e.nodeType?e.defaultView||e.parentWindow:!1}x.each({Height:"height",Width:"width"},function(e,n){x.each({padding:"inner"+e,content:n,"":"outer"+e},function(r,i){x.fn[i]=function(i,o){var a=arguments.length&&(r||"boolean"!=typeof i),s=r||(i===!0||o===!0?"margin":"border");return x.access(this,function(n,r,i){var o;return x.isWindow(n)?n.document.documentElement["client"+e]:9===n.nodeType?(o=n.documentElement,Math.max(n.body["scroll"+e],o["scroll"+e],n.body["offset"+e],o["offset"+e],o["client"+e])):i===t?x.css(n,r,s):x.style(n,r,i,s)},n,a?i:t,a,null)}})}),x.fn.size=function(){return this.length},x.fn.andSelf=x.fn.addBack,"object"==typeof module&&module&&"object"==typeof module.exports?module.exports=x:(e.jQuery=e.$=x,"function"==typeof define&&define.amd&&define("jquery",[],function(){return x}))})(window);

/*! jQuery UI - v1.10.3 - 2013-06-24
* http://jqueryui.com
* Includes: jquery.ui.core.js, jquery.ui.widget.js, jquery.ui.mouse.js, jquery.ui.position.js, jquery.ui.draggable.js, jquery.ui.droppable.js, jquery.ui.resizable.js, jquery.ui.selectable.js, jquery.ui.sortable.js, jquery.ui.effect.js
* Copyright 2013 jQuery Foundation and other contributors Licensed MIT */

(function(e,t){function i(t,i){var a,n,r,o=t.nodeName.toLowerCase();return"area"===o?(a=t.parentNode,n=a.name,t.href&&n&&"map"===a.nodeName.toLowerCase()?(r=e("img[usemap=#"+n+"]")[0],!!r&&s(r)):!1):(/input|select|textarea|button|object/.test(o)?!t.disabled:"a"===o?t.href||i:i)&&s(t)}function s(t){return e.expr.filters.visible(t)&&!e(t).parents().addBack().filter(function(){return"hidden"===e.css(this,"visibility")}).length}var a=0,n=/^ui-id-\d+$/;e.ui=e.ui||{},e.extend(e.ui,{version:"1.10.3",keyCode:{BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38}}),e.fn.extend({focus:function(t){return function(i,s){return"number"==typeof i?this.each(function(){var t=this;setTimeout(function(){e(t).focus(),s&&s.call(t)},i)}):t.apply(this,arguments)}}(e.fn.focus),scrollParent:function(){var t;return t=e.ui.ie&&/(static|relative)/.test(this.css("position"))||/absolute/.test(this.css("position"))?this.parents().filter(function(){return/(relative|absolute|fixed)/.test(e.css(this,"position"))&&/(auto|scroll)/.test(e.css(this,"overflow")+e.css(this,"overflow-y")+e.css(this,"overflow-x"))}).eq(0):this.parents().filter(function(){return/(auto|scroll)/.test(e.css(this,"overflow")+e.css(this,"overflow-y")+e.css(this,"overflow-x"))}).eq(0),/fixed/.test(this.css("position"))||!t.length?e(document):t},zIndex:function(i){if(i!==t)return this.css("zIndex",i);if(this.length)for(var s,a,n=e(this[0]);n.length&&n[0]!==document;){if(s=n.css("position"),("absolute"===s||"relative"===s||"fixed"===s)&&(a=parseInt(n.css("zIndex"),10),!isNaN(a)&&0!==a))return a;n=n.parent()}return 0},uniqueId:function(){return this.each(function(){this.id||(this.id="ui-id-"+ ++a)})},removeUniqueId:function(){return this.each(function(){n.test(this.id)&&e(this).removeAttr("id")})}}),e.extend(e.expr[":"],{data:e.expr.createPseudo?e.expr.createPseudo(function(t){return function(i){return!!e.data(i,t)}}):function(t,i,s){return!!e.data(t,s[3])},focusable:function(t){return i(t,!isNaN(e.attr(t,"tabindex")))},tabbable:function(t){var s=e.attr(t,"tabindex"),a=isNaN(s);return(a||s>=0)&&i(t,!a)}}),e("<a>").outerWidth(1).jquery||e.each(["Width","Height"],function(i,s){function a(t,i,s,a){return e.each(n,function(){i-=parseFloat(e.css(t,"padding"+this))||0,s&&(i-=parseFloat(e.css(t,"border"+this+"Width"))||0),a&&(i-=parseFloat(e.css(t,"margin"+this))||0)}),i}var n="Width"===s?["Left","Right"]:["Top","Bottom"],r=s.toLowerCase(),o={innerWidth:e.fn.innerWidth,innerHeight:e.fn.innerHeight,outerWidth:e.fn.outerWidth,outerHeight:e.fn.outerHeight};e.fn["inner"+s]=function(i){return i===t?o["inner"+s].call(this):this.each(function(){e(this).css(r,a(this,i)+"px")})},e.fn["outer"+s]=function(t,i){return"number"!=typeof t?o["outer"+s].call(this,t):this.each(function(){e(this).css(r,a(this,t,!0,i)+"px")})}}),e.fn.addBack||(e.fn.addBack=function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}),e("<a>").data("a-b","a").removeData("a-b").data("a-b")&&(e.fn.removeData=function(t){return function(i){return arguments.length?t.call(this,e.camelCase(i)):t.call(this)}}(e.fn.removeData)),e.ui.ie=!!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase()),e.support.selectstart="onselectstart"in document.createElement("div"),e.fn.extend({disableSelection:function(){return this.bind((e.support.selectstart?"selectstart":"mousedown")+".ui-disableSelection",function(e){e.preventDefault()})},enableSelection:function(){return this.unbind(".ui-disableSelection")}}),e.extend(e.ui,{plugin:{add:function(t,i,s){var a,n=e.ui[t].prototype;for(a in s)n.plugins[a]=n.plugins[a]||[],n.plugins[a].push([i,s[a]])},call:function(e,t,i){var s,a=e.plugins[t];if(a&&e.element[0].parentNode&&11!==e.element[0].parentNode.nodeType)for(s=0;a.length>s;s++)e.options[a[s][0]]&&a[s][1].apply(e.element,i)}},hasScroll:function(t,i){if("hidden"===e(t).css("overflow"))return!1;var s=i&&"left"===i?"scrollLeft":"scrollTop",a=!1;return t[s]>0?!0:(t[s]=1,a=t[s]>0,t[s]=0,a)}})})(jQuery);(function(e,t){var i=0,s=Array.prototype.slice,n=e.cleanData;e.cleanData=function(t){for(var i,s=0;null!=(i=t[s]);s++)try{e(i).triggerHandler("remove")}catch(a){}n(t)},e.widget=function(i,s,n){var a,r,o,h,l={},u=i.split(".")[0];i=i.split(".")[1],a=u+"-"+i,n||(n=s,s=e.Widget),e.expr[":"][a.toLowerCase()]=function(t){return!!e.data(t,a)},e[u]=e[u]||{},r=e[u][i],o=e[u][i]=function(e,i){return this._createWidget?(arguments.length&&this._createWidget(e,i),t):new o(e,i)},e.extend(o,r,{version:n.version,_proto:e.extend({},n),_childConstructors:[]}),h=new s,h.options=e.widget.extend({},h.options),e.each(n,function(i,n){return e.isFunction(n)?(l[i]=function(){var e=function(){return s.prototype[i].apply(this,arguments)},t=function(e){return s.prototype[i].apply(this,e)};return function(){var i,s=this._super,a=this._superApply;return this._super=e,this._superApply=t,i=n.apply(this,arguments),this._super=s,this._superApply=a,i}}(),t):(l[i]=n,t)}),o.prototype=e.widget.extend(h,{widgetEventPrefix:r?h.widgetEventPrefix:i},l,{constructor:o,namespace:u,widgetName:i,widgetFullName:a}),r?(e.each(r._childConstructors,function(t,i){var s=i.prototype;e.widget(s.namespace+"."+s.widgetName,o,i._proto)}),delete r._childConstructors):s._childConstructors.push(o),e.widget.bridge(i,o)},e.widget.extend=function(i){for(var n,a,r=s.call(arguments,1),o=0,h=r.length;h>o;o++)for(n in r[o])a=r[o][n],r[o].hasOwnProperty(n)&&a!==t&&(i[n]=e.isPlainObject(a)?e.isPlainObject(i[n])?e.widget.extend({},i[n],a):e.widget.extend({},a):a);return i},e.widget.bridge=function(i,n){var a=n.prototype.widgetFullName||i;e.fn[i]=function(r){var o="string"==typeof r,h=s.call(arguments,1),l=this;return r=!o&&h.length?e.widget.extend.apply(null,[r].concat(h)):r,o?this.each(function(){var s,n=e.data(this,a);return n?e.isFunction(n[r])&&"_"!==r.charAt(0)?(s=n[r].apply(n,h),s!==n&&s!==t?(l=s&&s.jquery?l.pushStack(s.get()):s,!1):t):e.error("no such method '"+r+"' for "+i+" widget instance"):e.error("cannot call methods on "+i+" prior to initialization; "+"attempted to call method '"+r+"'")}):this.each(function(){var t=e.data(this,a);t?t.option(r||{})._init():e.data(this,a,new n(r,this))}),l}},e.Widget=function(){},e.Widget._childConstructors=[],e.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",defaultElement:"<div>",options:{disabled:!1,create:null},_createWidget:function(t,s){s=e(s||this.defaultElement||this)[0],this.element=e(s),this.uuid=i++,this.eventNamespace="."+this.widgetName+this.uuid,this.options=e.widget.extend({},this.options,this._getCreateOptions(),t),this.bindings=e(),this.hoverable=e(),this.focusable=e(),s!==this&&(e.data(s,this.widgetFullName,this),this._on(!0,this.element,{remove:function(e){e.target===s&&this.destroy()}}),this.document=e(s.style?s.ownerDocument:s.document||s),this.window=e(this.document[0].defaultView||this.document[0].parentWindow)),this._create(),this._trigger("create",null,this._getCreateEventData()),this._init()},_getCreateOptions:e.noop,_getCreateEventData:e.noop,_create:e.noop,_init:e.noop,destroy:function(){this._destroy(),this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(e.camelCase(this.widgetFullName)),this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName+"-disabled "+"ui-state-disabled"),this.bindings.unbind(this.eventNamespace),this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus")},_destroy:e.noop,widget:function(){return this.element},option:function(i,s){var n,a,r,o=i;if(0===arguments.length)return e.widget.extend({},this.options);if("string"==typeof i)if(o={},n=i.split("."),i=n.shift(),n.length){for(a=o[i]=e.widget.extend({},this.options[i]),r=0;n.length-1>r;r++)a[n[r]]=a[n[r]]||{},a=a[n[r]];if(i=n.pop(),s===t)return a[i]===t?null:a[i];a[i]=s}else{if(s===t)return this.options[i]===t?null:this.options[i];o[i]=s}return this._setOptions(o),this},_setOptions:function(e){var t;for(t in e)this._setOption(t,e[t]);return this},_setOption:function(e,t){return this.options[e]=t,"disabled"===e&&(this.widget().toggleClass(this.widgetFullName+"-disabled ui-state-disabled",!!t).attr("aria-disabled",t),this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus")),this},enable:function(){return this._setOption("disabled",!1)},disable:function(){return this._setOption("disabled",!0)},_on:function(i,s,n){var a,r=this;"boolean"!=typeof i&&(n=s,s=i,i=!1),n?(s=a=e(s),this.bindings=this.bindings.add(s)):(n=s,s=this.element,a=this.widget()),e.each(n,function(n,o){function h(){return i||r.options.disabled!==!0&&!e(this).hasClass("ui-state-disabled")?("string"==typeof o?r[o]:o).apply(r,arguments):t}"string"!=typeof o&&(h.guid=o.guid=o.guid||h.guid||e.guid++);var l=n.match(/^(\w+)\s*(.*)$/),u=l[1]+r.eventNamespace,c=l[2];c?a.delegate(c,u,h):s.bind(u,h)})},_off:function(e,t){t=(t||"").split(" ").join(this.eventNamespace+" ")+this.eventNamespace,e.unbind(t).undelegate(t)},_delay:function(e,t){function i(){return("string"==typeof e?s[e]:e).apply(s,arguments)}var s=this;return setTimeout(i,t||0)},_hoverable:function(t){this.hoverable=this.hoverable.add(t),this._on(t,{mouseenter:function(t){e(t.currentTarget).addClass("ui-state-hover")},mouseleave:function(t){e(t.currentTarget).removeClass("ui-state-hover")}})},_focusable:function(t){this.focusable=this.focusable.add(t),this._on(t,{focusin:function(t){e(t.currentTarget).addClass("ui-state-focus")},focusout:function(t){e(t.currentTarget).removeClass("ui-state-focus")}})},_trigger:function(t,i,s){var n,a,r=this.options[t];if(s=s||{},i=e.Event(i),i.type=(t===this.widgetEventPrefix?t:this.widgetEventPrefix+t).toLowerCase(),i.target=this.element[0],a=i.originalEvent)for(n in a)n in i||(i[n]=a[n]);return this.element.trigger(i,s),!(e.isFunction(r)&&r.apply(this.element[0],[i].concat(s))===!1||i.isDefaultPrevented())}},e.each({show:"fadeIn",hide:"fadeOut"},function(t,i){e.Widget.prototype["_"+t]=function(s,n,a){"string"==typeof n&&(n={effect:n});var r,o=n?n===!0||"number"==typeof n?i:n.effect||i:t;n=n||{},"number"==typeof n&&(n={duration:n}),r=!e.isEmptyObject(n),n.complete=a,n.delay&&s.delay(n.delay),r&&e.effects&&e.effects.effect[o]?s[t](n):o!==t&&s[o]?s[o](n.duration,n.easing,a):s.queue(function(i){e(this)[t](),a&&a.call(s[0]),i()})}})})(jQuery);(function(e){var t=!1;e(document).mouseup(function(){t=!1}),e.widget("ui.mouse",{version:"1.10.3",options:{cancel:"input,textarea,button,select,option",distance:1,delay:0},_mouseInit:function(){var t=this;this.element.bind("mousedown."+this.widgetName,function(e){return t._mouseDown(e)}).bind("click."+this.widgetName,function(i){return!0===e.data(i.target,t.widgetName+".preventClickEvent")?(e.removeData(i.target,t.widgetName+".preventClickEvent"),i.stopImmediatePropagation(),!1):undefined}),this.started=!1},_mouseDestroy:function(){this.element.unbind("."+this.widgetName),this._mouseMoveDelegate&&e(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(i){if(!t){this._mouseStarted&&this._mouseUp(i),this._mouseDownEvent=i;var s=this,n=1===i.which,a="string"==typeof this.options.cancel&&i.target.nodeName?e(i.target).closest(this.options.cancel).length:!1;return n&&!a&&this._mouseCapture(i)?(this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout(function(){s.mouseDelayMet=!0},this.options.delay)),this._mouseDistanceMet(i)&&this._mouseDelayMet(i)&&(this._mouseStarted=this._mouseStart(i)!==!1,!this._mouseStarted)?(i.preventDefault(),!0):(!0===e.data(i.target,this.widgetName+".preventClickEvent")&&e.removeData(i.target,this.widgetName+".preventClickEvent"),this._mouseMoveDelegate=function(e){return s._mouseMove(e)},this._mouseUpDelegate=function(e){return s._mouseUp(e)},e(document).bind("mousemove."+this.widgetName,this._mouseMoveDelegate).bind("mouseup."+this.widgetName,this._mouseUpDelegate),i.preventDefault(),t=!0,!0)):!0}},_mouseMove:function(t){return e.ui.ie&&(!document.documentMode||9>document.documentMode)&&!t.button?this._mouseUp(t):this._mouseStarted?(this._mouseDrag(t),t.preventDefault()):(this._mouseDistanceMet(t)&&this._mouseDelayMet(t)&&(this._mouseStarted=this._mouseStart(this._mouseDownEvent,t)!==!1,this._mouseStarted?this._mouseDrag(t):this._mouseUp(t)),!this._mouseStarted)},_mouseUp:function(t){return e(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate),this._mouseStarted&&(this._mouseStarted=!1,t.target===this._mouseDownEvent.target&&e.data(t.target,this.widgetName+".preventClickEvent",!0),this._mouseStop(t)),!1},_mouseDistanceMet:function(e){return Math.max(Math.abs(this._mouseDownEvent.pageX-e.pageX),Math.abs(this._mouseDownEvent.pageY-e.pageY))>=this.options.distance},_mouseDelayMet:function(){return this.mouseDelayMet},_mouseStart:function(){},_mouseDrag:function(){},_mouseStop:function(){},_mouseCapture:function(){return!0}})})(jQuery);(function(t,e){function i(t,e,i){return[parseFloat(t[0])*(p.test(t[0])?e/100:1),parseFloat(t[1])*(p.test(t[1])?i/100:1)]}function s(e,i){return parseInt(t.css(e,i),10)||0}function n(e){var i=e[0];return 9===i.nodeType?{width:e.width(),height:e.height(),offset:{top:0,left:0}}:t.isWindow(i)?{width:e.width(),height:e.height(),offset:{top:e.scrollTop(),left:e.scrollLeft()}}:i.preventDefault?{width:0,height:0,offset:{top:i.pageY,left:i.pageX}}:{width:e.outerWidth(),height:e.outerHeight(),offset:e.offset()}}t.ui=t.ui||{};var a,o=Math.max,r=Math.abs,h=Math.round,l=/left|center|right/,c=/top|center|bottom/,u=/[\+\-]\d+(\.[\d]+)?%?/,d=/^\w+/,p=/%$/,f=t.fn.position;t.position={scrollbarWidth:function(){if(a!==e)return a;var i,s,n=t("<div style='display:block;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),o=n.children()[0];return t("body").append(n),i=o.offsetWidth,n.css("overflow","scroll"),s=o.offsetWidth,i===s&&(s=n[0].clientWidth),n.remove(),a=i-s},getScrollInfo:function(e){var i=e.isWindow?"":e.element.css("overflow-x"),s=e.isWindow?"":e.element.css("overflow-y"),n="scroll"===i||"auto"===i&&e.width<e.element[0].scrollWidth,a="scroll"===s||"auto"===s&&e.height<e.element[0].scrollHeight;return{width:a?t.position.scrollbarWidth():0,height:n?t.position.scrollbarWidth():0}},getWithinInfo:function(e){var i=t(e||window),s=t.isWindow(i[0]);return{element:i,isWindow:s,offset:i.offset()||{left:0,top:0},scrollLeft:i.scrollLeft(),scrollTop:i.scrollTop(),width:s?i.width():i.outerWidth(),height:s?i.height():i.outerHeight()}}},t.fn.position=function(e){if(!e||!e.of)return f.apply(this,arguments);e=t.extend({},e);var a,p,m,g,v,b,_=t(e.of),y=t.position.getWithinInfo(e.within),w=t.position.getScrollInfo(y),x=(e.collision||"flip").split(" "),k={};return b=n(_),_[0].preventDefault&&(e.at="left top"),p=b.width,m=b.height,g=b.offset,v=t.extend({},g),t.each(["my","at"],function(){var t,i,s=(e[this]||"").split(" ");1===s.length&&(s=l.test(s[0])?s.concat(["center"]):c.test(s[0])?["center"].concat(s):["center","center"]),s[0]=l.test(s[0])?s[0]:"center",s[1]=c.test(s[1])?s[1]:"center",t=u.exec(s[0]),i=u.exec(s[1]),k[this]=[t?t[0]:0,i?i[0]:0],e[this]=[d.exec(s[0])[0],d.exec(s[1])[0]]}),1===x.length&&(x[1]=x[0]),"right"===e.at[0]?v.left+=p:"center"===e.at[0]&&(v.left+=p/2),"bottom"===e.at[1]?v.top+=m:"center"===e.at[1]&&(v.top+=m/2),a=i(k.at,p,m),v.left+=a[0],v.top+=a[1],this.each(function(){var n,l,c=t(this),u=c.outerWidth(),d=c.outerHeight(),f=s(this,"marginLeft"),b=s(this,"marginTop"),D=u+f+s(this,"marginRight")+w.width,T=d+b+s(this,"marginBottom")+w.height,C=t.extend({},v),M=i(k.my,c.outerWidth(),c.outerHeight());"right"===e.my[0]?C.left-=u:"center"===e.my[0]&&(C.left-=u/2),"bottom"===e.my[1]?C.top-=d:"center"===e.my[1]&&(C.top-=d/2),C.left+=M[0],C.top+=M[1],t.support.offsetFractions||(C.left=h(C.left),C.top=h(C.top)),n={marginLeft:f,marginTop:b},t.each(["left","top"],function(i,s){t.ui.position[x[i]]&&t.ui.position[x[i]][s](C,{targetWidth:p,targetHeight:m,elemWidth:u,elemHeight:d,collisionPosition:n,collisionWidth:D,collisionHeight:T,offset:[a[0]+M[0],a[1]+M[1]],my:e.my,at:e.at,within:y,elem:c})}),e.using&&(l=function(t){var i=g.left-C.left,s=i+p-u,n=g.top-C.top,a=n+m-d,h={target:{element:_,left:g.left,top:g.top,width:p,height:m},element:{element:c,left:C.left,top:C.top,width:u,height:d},horizontal:0>s?"left":i>0?"right":"center",vertical:0>a?"top":n>0?"bottom":"middle"};u>p&&p>r(i+s)&&(h.horizontal="center"),d>m&&m>r(n+a)&&(h.vertical="middle"),h.important=o(r(i),r(s))>o(r(n),r(a))?"horizontal":"vertical",e.using.call(this,t,h)}),c.offset(t.extend(C,{using:l}))})},t.ui.position={fit:{left:function(t,e){var i,s=e.within,n=s.isWindow?s.scrollLeft:s.offset.left,a=s.width,r=t.left-e.collisionPosition.marginLeft,h=n-r,l=r+e.collisionWidth-a-n;e.collisionWidth>a?h>0&&0>=l?(i=t.left+h+e.collisionWidth-a-n,t.left+=h-i):t.left=l>0&&0>=h?n:h>l?n+a-e.collisionWidth:n:h>0?t.left+=h:l>0?t.left-=l:t.left=o(t.left-r,t.left)},top:function(t,e){var i,s=e.within,n=s.isWindow?s.scrollTop:s.offset.top,a=e.within.height,r=t.top-e.collisionPosition.marginTop,h=n-r,l=r+e.collisionHeight-a-n;e.collisionHeight>a?h>0&&0>=l?(i=t.top+h+e.collisionHeight-a-n,t.top+=h-i):t.top=l>0&&0>=h?n:h>l?n+a-e.collisionHeight:n:h>0?t.top+=h:l>0?t.top-=l:t.top=o(t.top-r,t.top)}},flip:{left:function(t,e){var i,s,n=e.within,a=n.offset.left+n.scrollLeft,o=n.width,h=n.isWindow?n.scrollLeft:n.offset.left,l=t.left-e.collisionPosition.marginLeft,c=l-h,u=l+e.collisionWidth-o-h,d="left"===e.my[0]?-e.elemWidth:"right"===e.my[0]?e.elemWidth:0,p="left"===e.at[0]?e.targetWidth:"right"===e.at[0]?-e.targetWidth:0,f=-2*e.offset[0];0>c?(i=t.left+d+p+f+e.collisionWidth-o-a,(0>i||r(c)>i)&&(t.left+=d+p+f)):u>0&&(s=t.left-e.collisionPosition.marginLeft+d+p+f-h,(s>0||u>r(s))&&(t.left+=d+p+f))},top:function(t,e){var i,s,n=e.within,a=n.offset.top+n.scrollTop,o=n.height,h=n.isWindow?n.scrollTop:n.offset.top,l=t.top-e.collisionPosition.marginTop,c=l-h,u=l+e.collisionHeight-o-h,d="top"===e.my[1],p=d?-e.elemHeight:"bottom"===e.my[1]?e.elemHeight:0,f="top"===e.at[1]?e.targetHeight:"bottom"===e.at[1]?-e.targetHeight:0,m=-2*e.offset[1];0>c?(s=t.top+p+f+m+e.collisionHeight-o-a,t.top+p+f+m>c&&(0>s||r(c)>s)&&(t.top+=p+f+m)):u>0&&(i=t.top-e.collisionPosition.marginTop+p+f+m-h,t.top+p+f+m>u&&(i>0||u>r(i))&&(t.top+=p+f+m))}},flipfit:{left:function(){t.ui.position.flip.left.apply(this,arguments),t.ui.position.fit.left.apply(this,arguments)},top:function(){t.ui.position.flip.top.apply(this,arguments),t.ui.position.fit.top.apply(this,arguments)}}},function(){var e,i,s,n,a,o=document.getElementsByTagName("body")[0],r=document.createElement("div");e=document.createElement(o?"div":"body"),s={visibility:"hidden",width:0,height:0,border:0,margin:0,background:"none"},o&&t.extend(s,{position:"absolute",left:"-1000px",top:"-1000px"});for(a in s)e.style[a]=s[a];e.appendChild(r),i=o||document.documentElement,i.insertBefore(e,i.firstChild),r.style.cssText="position: absolute; left: 10.7432222px;",n=t(r).offset().left,t.support.offsetFractions=n>10&&11>n,e.innerHTML="",i.removeChild(e)}()})(jQuery);(function(e){e.widget("ui.draggable",e.ui.mouse,{version:"1.10.3",widgetEventPrefix:"drag",options:{addClasses:!0,appendTo:"parent",axis:!1,connectToSortable:!1,containment:!1,cursor:"auto",cursorAt:!1,grid:!1,handle:!1,helper:"original",iframeFix:!1,opacity:!1,refreshPositions:!1,revert:!1,revertDuration:500,scope:"default",scroll:!0,scrollSensitivity:20,scrollSpeed:20,snap:!1,snapMode:"both",snapTolerance:20,stack:!1,zIndex:!1,drag:null,start:null,stop:null},_create:function(){"original"!==this.options.helper||/^(?:r|a|f)/.test(this.element.css("position"))||(this.element[0].style.position="relative"),this.options.addClasses&&this.element.addClass("ui-draggable"),this.options.disabled&&this.element.addClass("ui-draggable-disabled"),this._mouseInit()},_destroy:function(){this.element.removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled"),this._mouseDestroy()},_mouseCapture:function(t){var i=this.options;return this.helper||i.disabled||e(t.target).closest(".ui-resizable-handle").length>0?!1:(this.handle=this._getHandle(t),this.handle?(e(i.iframeFix===!0?"iframe":i.iframeFix).each(function(){e("<div class='ui-draggable-iframeFix' style='background: #fff;'></div>").css({width:this.offsetWidth+"px",height:this.offsetHeight+"px",position:"absolute",opacity:"0.001",zIndex:1e3}).css(e(this).offset()).appendTo("body")}),!0):!1)},_mouseStart:function(t){var i=this.options;return this.helper=this._createHelper(t),this.helper.addClass("ui-draggable-dragging"),this._cacheHelperProportions(),e.ui.ddmanager&&(e.ui.ddmanager.current=this),this._cacheMargins(),this.cssPosition=this.helper.css("position"),this.scrollParent=this.helper.scrollParent(),this.offsetParent=this.helper.offsetParent(),this.offsetParentCssPosition=this.offsetParent.css("position"),this.offset=this.positionAbs=this.element.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},this.offset.scroll=!1,e.extend(this.offset,{click:{left:t.pageX-this.offset.left,top:t.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.originalPosition=this.position=this._generatePosition(t),this.originalPageX=t.pageX,this.originalPageY=t.pageY,i.cursorAt&&this._adjustOffsetFromHelper(i.cursorAt),this._setContainment(),this._trigger("start",t)===!1?(this._clear(),!1):(this._cacheHelperProportions(),e.ui.ddmanager&&!i.dropBehaviour&&e.ui.ddmanager.prepareOffsets(this,t),this._mouseDrag(t,!0),e.ui.ddmanager&&e.ui.ddmanager.dragStart(this,t),!0)},_mouseDrag:function(t,i){if("fixed"===this.offsetParentCssPosition&&(this.offset.parent=this._getParentOffset()),this.position=this._generatePosition(t),this.positionAbs=this._convertPositionTo("absolute"),!i){var s=this._uiHash();if(this._trigger("drag",t,s)===!1)return this._mouseUp({}),!1;this.position=s.position}return this.options.axis&&"y"===this.options.axis||(this.helper[0].style.left=this.position.left+"px"),this.options.axis&&"x"===this.options.axis||(this.helper[0].style.top=this.position.top+"px"),e.ui.ddmanager&&e.ui.ddmanager.drag(this,t),!1},_mouseStop:function(t){var i=this,s=!1;return e.ui.ddmanager&&!this.options.dropBehaviour&&(s=e.ui.ddmanager.drop(this,t)),this.dropped&&(s=this.dropped,this.dropped=!1),"original"!==this.options.helper||e.contains(this.element[0].ownerDocument,this.element[0])?("invalid"===this.options.revert&&!s||"valid"===this.options.revert&&s||this.options.revert===!0||e.isFunction(this.options.revert)&&this.options.revert.call(this.element,s)?e(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,10),function(){i._trigger("stop",t)!==!1&&i._clear()}):this._trigger("stop",t)!==!1&&this._clear(),!1):!1},_mouseUp:function(t){return e("div.ui-draggable-iframeFix").each(function(){this.parentNode.removeChild(this)}),e.ui.ddmanager&&e.ui.ddmanager.dragStop(this,t),e.ui.mouse.prototype._mouseUp.call(this,t)},cancel:function(){return this.helper.is(".ui-draggable-dragging")?this._mouseUp({}):this._clear(),this},_getHandle:function(t){return this.options.handle?!!e(t.target).closest(this.element.find(this.options.handle)).length:!0},_createHelper:function(t){var i=this.options,s=e.isFunction(i.helper)?e(i.helper.apply(this.element[0],[t])):"clone"===i.helper?this.element.clone().removeAttr("id"):this.element;return s.parents("body").length||s.appendTo("parent"===i.appendTo?this.element[0].parentNode:i.appendTo),s[0]===this.element[0]||/(fixed|absolute)/.test(s.css("position"))||s.css("position","absolute"),s},_adjustOffsetFromHelper:function(t){"string"==typeof t&&(t=t.split(" ")),e.isArray(t)&&(t={left:+t[0],top:+t[1]||0}),"left"in t&&(this.offset.click.left=t.left+this.margins.left),"right"in t&&(this.offset.click.left=this.helperProportions.width-t.right+this.margins.left),"top"in t&&(this.offset.click.top=t.top+this.margins.top),"bottom"in t&&(this.offset.click.top=this.helperProportions.height-t.bottom+this.margins.top)},_getParentOffset:function(){var t=this.offsetParent.offset();return"absolute"===this.cssPosition&&this.scrollParent[0]!==document&&e.contains(this.scrollParent[0],this.offsetParent[0])&&(t.left+=this.scrollParent.scrollLeft(),t.top+=this.scrollParent.scrollTop()),(this.offsetParent[0]===document.body||this.offsetParent[0].tagName&&"html"===this.offsetParent[0].tagName.toLowerCase()&&e.ui.ie)&&(t={top:0,left:0}),{top:t.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:t.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if("relative"===this.cssPosition){var e=this.element.position();return{top:e.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:e.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.element.css("marginLeft"),10)||0,top:parseInt(this.element.css("marginTop"),10)||0,right:parseInt(this.element.css("marginRight"),10)||0,bottom:parseInt(this.element.css("marginBottom"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var t,i,s,n=this.options;return n.containment?"window"===n.containment?(this.containment=[e(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,e(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,e(window).scrollLeft()+e(window).width()-this.helperProportions.width-this.margins.left,e(window).scrollTop()+(e(window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top],undefined):"document"===n.containment?(this.containment=[0,0,e(document).width()-this.helperProportions.width-this.margins.left,(e(document).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top],undefined):n.containment.constructor===Array?(this.containment=n.containment,undefined):("parent"===n.containment&&(n.containment=this.helper[0].parentNode),i=e(n.containment),s=i[0],s&&(t="hidden"!==i.css("overflow"),this.containment=[(parseInt(i.css("borderLeftWidth"),10)||0)+(parseInt(i.css("paddingLeft"),10)||0),(parseInt(i.css("borderTopWidth"),10)||0)+(parseInt(i.css("paddingTop"),10)||0),(t?Math.max(s.scrollWidth,s.offsetWidth):s.offsetWidth)-(parseInt(i.css("borderRightWidth"),10)||0)-(parseInt(i.css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(t?Math.max(s.scrollHeight,s.offsetHeight):s.offsetHeight)-(parseInt(i.css("borderBottomWidth"),10)||0)-(parseInt(i.css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom],this.relative_container=i),undefined):(this.containment=null,undefined)},_convertPositionTo:function(t,i){i||(i=this.position);var s="absolute"===t?1:-1,n="absolute"!==this.cssPosition||this.scrollParent[0]!==document&&e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent;return this.offset.scroll||(this.offset.scroll={top:n.scrollTop(),left:n.scrollLeft()}),{top:i.top+this.offset.relative.top*s+this.offset.parent.top*s-("fixed"===this.cssPosition?-this.scrollParent.scrollTop():this.offset.scroll.top)*s,left:i.left+this.offset.relative.left*s+this.offset.parent.left*s-("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():this.offset.scroll.left)*s}},_generatePosition:function(t){var i,s,n,a,o=this.options,r="absolute"!==this.cssPosition||this.scrollParent[0]!==document&&e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,h=t.pageX,l=t.pageY;return this.offset.scroll||(this.offset.scroll={top:r.scrollTop(),left:r.scrollLeft()}),this.originalPosition&&(this.containment&&(this.relative_container?(s=this.relative_container.offset(),i=[this.containment[0]+s.left,this.containment[1]+s.top,this.containment[2]+s.left,this.containment[3]+s.top]):i=this.containment,t.pageX-this.offset.click.left<i[0]&&(h=i[0]+this.offset.click.left),t.pageY-this.offset.click.top<i[1]&&(l=i[1]+this.offset.click.top),t.pageX-this.offset.click.left>i[2]&&(h=i[2]+this.offset.click.left),t.pageY-this.offset.click.top>i[3]&&(l=i[3]+this.offset.click.top)),o.grid&&(n=o.grid[1]?this.originalPageY+Math.round((l-this.originalPageY)/o.grid[1])*o.grid[1]:this.originalPageY,l=i?n-this.offset.click.top>=i[1]||n-this.offset.click.top>i[3]?n:n-this.offset.click.top>=i[1]?n-o.grid[1]:n+o.grid[1]:n,a=o.grid[0]?this.originalPageX+Math.round((h-this.originalPageX)/o.grid[0])*o.grid[0]:this.originalPageX,h=i?a-this.offset.click.left>=i[0]||a-this.offset.click.left>i[2]?a:a-this.offset.click.left>=i[0]?a-o.grid[0]:a+o.grid[0]:a)),{top:l-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+("fixed"===this.cssPosition?-this.scrollParent.scrollTop():this.offset.scroll.top),left:h-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():this.offset.scroll.left)}},_clear:function(){this.helper.removeClass("ui-draggable-dragging"),this.helper[0]===this.element[0]||this.cancelHelperRemoval||this.helper.remove(),this.helper=null,this.cancelHelperRemoval=!1},_trigger:function(t,i,s){return s=s||this._uiHash(),e.ui.plugin.call(this,t,[i,s]),"drag"===t&&(this.positionAbs=this._convertPositionTo("absolute")),e.Widget.prototype._trigger.call(this,t,i,s)},plugins:{},_uiHash:function(){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}}),e.ui.plugin.add("draggable","connectToSortable",{start:function(t,i){var s=e(this).data("ui-draggable"),n=s.options,a=e.extend({},i,{item:s.element});s.sortables=[],e(n.connectToSortable).each(function(){var i=e.data(this,"ui-sortable");i&&!i.options.disabled&&(s.sortables.push({instance:i,shouldRevert:i.options.revert}),i.refreshPositions(),i._trigger("activate",t,a))})},stop:function(t,i){var s=e(this).data("ui-draggable"),n=e.extend({},i,{item:s.element});e.each(s.sortables,function(){this.instance.isOver?(this.instance.isOver=0,s.cancelHelperRemoval=!0,this.instance.cancelHelperRemoval=!1,this.shouldRevert&&(this.instance.options.revert=this.shouldRevert),this.instance._mouseStop(t),this.instance.options.helper=this.instance.options._helper,"original"===s.options.helper&&this.instance.currentItem.css({top:"auto",left:"auto"})):(this.instance.cancelHelperRemoval=!1,this.instance._trigger("deactivate",t,n))})},drag:function(t,i){var s=e(this).data("ui-draggable"),n=this;e.each(s.sortables,function(){var a=!1,o=this;this.instance.positionAbs=s.positionAbs,this.instance.helperProportions=s.helperProportions,this.instance.offset.click=s.offset.click,this.instance._intersectsWith(this.instance.containerCache)&&(a=!0,e.each(s.sortables,function(){return this.instance.positionAbs=s.positionAbs,this.instance.helperProportions=s.helperProportions,this.instance.offset.click=s.offset.click,this!==o&&this.instance._intersectsWith(this.instance.containerCache)&&e.contains(o.instance.element[0],this.instance.element[0])&&(a=!1),a})),a?(this.instance.isOver||(this.instance.isOver=1,this.instance.currentItem=e(n).clone().removeAttr("id").appendTo(this.instance.element).data("ui-sortable-item",!0),this.instance.options._helper=this.instance.options.helper,this.instance.options.helper=function(){return i.helper[0]},t.target=this.instance.currentItem[0],this.instance._mouseCapture(t,!0),this.instance._mouseStart(t,!0,!0),this.instance.offset.click.top=s.offset.click.top,this.instance.offset.click.left=s.offset.click.left,this.instance.offset.parent.left-=s.offset.parent.left-this.instance.offset.parent.left,this.instance.offset.parent.top-=s.offset.parent.top-this.instance.offset.parent.top,s._trigger("toSortable",t),s.dropped=this.instance.element,s.currentItem=s.element,this.instance.fromOutside=s),this.instance.currentItem&&this.instance._mouseDrag(t)):this.instance.isOver&&(this.instance.isOver=0,this.instance.cancelHelperRemoval=!0,this.instance.options.revert=!1,this.instance._trigger("out",t,this.instance._uiHash(this.instance)),this.instance._mouseStop(t,!0),this.instance.options.helper=this.instance.options._helper,this.instance.currentItem.remove(),this.instance.placeholder&&this.instance.placeholder.remove(),s._trigger("fromSortable",t),s.dropped=!1)})}}),e.ui.plugin.add("draggable","cursor",{start:function(){var t=e("body"),i=e(this).data("ui-draggable").options;t.css("cursor")&&(i._cursor=t.css("cursor")),t.css("cursor",i.cursor)},stop:function(){var t=e(this).data("ui-draggable").options;t._cursor&&e("body").css("cursor",t._cursor)}}),e.ui.plugin.add("draggable","opacity",{start:function(t,i){var s=e(i.helper),n=e(this).data("ui-draggable").options;s.css("opacity")&&(n._opacity=s.css("opacity")),s.css("opacity",n.opacity)},stop:function(t,i){var s=e(this).data("ui-draggable").options;s._opacity&&e(i.helper).css("opacity",s._opacity)}}),e.ui.plugin.add("draggable","scroll",{start:function(){var t=e(this).data("ui-draggable");t.scrollParent[0]!==document&&"HTML"!==t.scrollParent[0].tagName&&(t.overflowOffset=t.scrollParent.offset())},drag:function(t){var i=e(this).data("ui-draggable"),s=i.options,n=!1;i.scrollParent[0]!==document&&"HTML"!==i.scrollParent[0].tagName?(s.axis&&"x"===s.axis||(i.overflowOffset.top+i.scrollParent[0].offsetHeight-t.pageY<s.scrollSensitivity?i.scrollParent[0].scrollTop=n=i.scrollParent[0].scrollTop+s.scrollSpeed:t.pageY-i.overflowOffset.top<s.scrollSensitivity&&(i.scrollParent[0].scrollTop=n=i.scrollParent[0].scrollTop-s.scrollSpeed)),s.axis&&"y"===s.axis||(i.overflowOffset.left+i.scrollParent[0].offsetWidth-t.pageX<s.scrollSensitivity?i.scrollParent[0].scrollLeft=n=i.scrollParent[0].scrollLeft+s.scrollSpeed:t.pageX-i.overflowOffset.left<s.scrollSensitivity&&(i.scrollParent[0].scrollLeft=n=i.scrollParent[0].scrollLeft-s.scrollSpeed))):(s.axis&&"x"===s.axis||(t.pageY-e(document).scrollTop()<s.scrollSensitivity?n=e(document).scrollTop(e(document).scrollTop()-s.scrollSpeed):e(window).height()-(t.pageY-e(document).scrollTop())<s.scrollSensitivity&&(n=e(document).scrollTop(e(document).scrollTop()+s.scrollSpeed))),s.axis&&"y"===s.axis||(t.pageX-e(document).scrollLeft()<s.scrollSensitivity?n=e(document).scrollLeft(e(document).scrollLeft()-s.scrollSpeed):e(window).width()-(t.pageX-e(document).scrollLeft())<s.scrollSensitivity&&(n=e(document).scrollLeft(e(document).scrollLeft()+s.scrollSpeed)))),n!==!1&&e.ui.ddmanager&&!s.dropBehaviour&&e.ui.ddmanager.prepareOffsets(i,t)}}),e.ui.plugin.add("draggable","snap",{start:function(){var t=e(this).data("ui-draggable"),i=t.options;t.snapElements=[],e(i.snap.constructor!==String?i.snap.items||":data(ui-draggable)":i.snap).each(function(){var i=e(this),s=i.offset();this!==t.element[0]&&t.snapElements.push({item:this,width:i.outerWidth(),height:i.outerHeight(),top:s.top,left:s.left})})},drag:function(t,i){var s,n,a,o,r,h,l,u,c,d,p=e(this).data("ui-draggable"),f=p.options,m=f.snapTolerance,g=i.offset.left,v=g+p.helperProportions.width,b=i.offset.top,y=b+p.helperProportions.height;for(c=p.snapElements.length-1;c>=0;c--)r=p.snapElements[c].left,h=r+p.snapElements[c].width,l=p.snapElements[c].top,u=l+p.snapElements[c].height,r-m>v||g>h+m||l-m>y||b>u+m||!e.contains(p.snapElements[c].item.ownerDocument,p.snapElements[c].item)?(p.snapElements[c].snapping&&p.options.snap.release&&p.options.snap.release.call(p.element,t,e.extend(p._uiHash(),{snapItem:p.snapElements[c].item})),p.snapElements[c].snapping=!1):("inner"!==f.snapMode&&(s=m>=Math.abs(l-y),n=m>=Math.abs(u-b),a=m>=Math.abs(r-v),o=m>=Math.abs(h-g),s&&(i.position.top=p._convertPositionTo("relative",{top:l-p.helperProportions.height,left:0}).top-p.margins.top),n&&(i.position.top=p._convertPositionTo("relative",{top:u,left:0}).top-p.margins.top),a&&(i.position.left=p._convertPositionTo("relative",{top:0,left:r-p.helperProportions.width}).left-p.margins.left),o&&(i.position.left=p._convertPositionTo("relative",{top:0,left:h}).left-p.margins.left)),d=s||n||a||o,"outer"!==f.snapMode&&(s=m>=Math.abs(l-b),n=m>=Math.abs(u-y),a=m>=Math.abs(r-g),o=m>=Math.abs(h-v),s&&(i.position.top=p._convertPositionTo("relative",{top:l,left:0}).top-p.margins.top),n&&(i.position.top=p._convertPositionTo("relative",{top:u-p.helperProportions.height,left:0}).top-p.margins.top),a&&(i.position.left=p._convertPositionTo("relative",{top:0,left:r}).left-p.margins.left),o&&(i.position.left=p._convertPositionTo("relative",{top:0,left:h-p.helperProportions.width}).left-p.margins.left)),!p.snapElements[c].snapping&&(s||n||a||o||d)&&p.options.snap.snap&&p.options.snap.snap.call(p.element,t,e.extend(p._uiHash(),{snapItem:p.snapElements[c].item})),p.snapElements[c].snapping=s||n||a||o||d)}}),e.ui.plugin.add("draggable","stack",{start:function(){var t,i=this.data("ui-draggable").options,s=e.makeArray(e(i.stack)).sort(function(t,i){return(parseInt(e(t).css("zIndex"),10)||0)-(parseInt(e(i).css("zIndex"),10)||0)});s.length&&(t=parseInt(e(s[0]).css("zIndex"),10)||0,e(s).each(function(i){e(this).css("zIndex",t+i)}),this.css("zIndex",t+s.length))}}),e.ui.plugin.add("draggable","zIndex",{start:function(t,i){var s=e(i.helper),n=e(this).data("ui-draggable").options;s.css("zIndex")&&(n._zIndex=s.css("zIndex")),s.css("zIndex",n.zIndex)},stop:function(t,i){var s=e(this).data("ui-draggable").options;s._zIndex&&e(i.helper).css("zIndex",s._zIndex)}})})(jQuery);(function(e){function t(e,t,i){return e>t&&t+i>e}e.widget("ui.droppable",{version:"1.10.3",widgetEventPrefix:"drop",options:{accept:"*",activeClass:!1,addClasses:!0,greedy:!1,hoverClass:!1,scope:"default",tolerance:"intersect",activate:null,deactivate:null,drop:null,out:null,over:null},_create:function(){var t=this.options,i=t.accept;this.isover=!1,this.isout=!0,this.accept=e.isFunction(i)?i:function(e){return e.is(i)},this.proportions={width:this.element[0].offsetWidth,height:this.element[0].offsetHeight},e.ui.ddmanager.droppables[t.scope]=e.ui.ddmanager.droppables[t.scope]||[],e.ui.ddmanager.droppables[t.scope].push(this),t.addClasses&&this.element.addClass("ui-droppable")},_destroy:function(){for(var t=0,i=e.ui.ddmanager.droppables[this.options.scope];i.length>t;t++)i[t]===this&&i.splice(t,1);this.element.removeClass("ui-droppable ui-droppable-disabled")},_setOption:function(t,i){"accept"===t&&(this.accept=e.isFunction(i)?i:function(e){return e.is(i)}),e.Widget.prototype._setOption.apply(this,arguments)},_activate:function(t){var i=e.ui.ddmanager.current;this.options.activeClass&&this.element.addClass(this.options.activeClass),i&&this._trigger("activate",t,this.ui(i))},_deactivate:function(t){var i=e.ui.ddmanager.current;this.options.activeClass&&this.element.removeClass(this.options.activeClass),i&&this._trigger("deactivate",t,this.ui(i))},_over:function(t){var i=e.ui.ddmanager.current;i&&(i.currentItem||i.element)[0]!==this.element[0]&&this.accept.call(this.element[0],i.currentItem||i.element)&&(this.options.hoverClass&&this.element.addClass(this.options.hoverClass),this._trigger("over",t,this.ui(i)))},_out:function(t){var i=e.ui.ddmanager.current;i&&(i.currentItem||i.element)[0]!==this.element[0]&&this.accept.call(this.element[0],i.currentItem||i.element)&&(this.options.hoverClass&&this.element.removeClass(this.options.hoverClass),this._trigger("out",t,this.ui(i)))},_drop:function(t,i){var s=i||e.ui.ddmanager.current,n=!1;return s&&(s.currentItem||s.element)[0]!==this.element[0]?(this.element.find(":data(ui-droppable)").not(".ui-draggable-dragging").each(function(){var t=e.data(this,"ui-droppable");return t.options.greedy&&!t.options.disabled&&t.options.scope===s.options.scope&&t.accept.call(t.element[0],s.currentItem||s.element)&&e.ui.intersect(s,e.extend(t,{offset:t.element.offset()}),t.options.tolerance)?(n=!0,!1):undefined}),n?!1:this.accept.call(this.element[0],s.currentItem||s.element)?(this.options.activeClass&&this.element.removeClass(this.options.activeClass),this.options.hoverClass&&this.element.removeClass(this.options.hoverClass),this._trigger("drop",t,this.ui(s)),this.element):!1):!1},ui:function(e){return{draggable:e.currentItem||e.element,helper:e.helper,position:e.position,offset:e.positionAbs}}}),e.ui.intersect=function(e,i,s){if(!i.offset)return!1;var n,a,o=(e.positionAbs||e.position.absolute).left,r=o+e.helperProportions.width,h=(e.positionAbs||e.position.absolute).top,l=h+e.helperProportions.height,u=i.offset.left,c=u+i.proportions.width,d=i.offset.top,p=d+i.proportions.height;switch(s){case"fit":return o>=u&&c>=r&&h>=d&&p>=l;case"intersect":return o+e.helperProportions.width/2>u&&c>r-e.helperProportions.width/2&&h+e.helperProportions.height/2>d&&p>l-e.helperProportions.height/2;case"pointer":return n=(e.positionAbs||e.position.absolute).left+(e.clickOffset||e.offset.click).left,a=(e.positionAbs||e.position.absolute).top+(e.clickOffset||e.offset.click).top,t(a,d,i.proportions.height)&&t(n,u,i.proportions.width);case"touch":return(h>=d&&p>=h||l>=d&&p>=l||d>h&&l>p)&&(o>=u&&c>=o||r>=u&&c>=r||u>o&&r>c);default:return!1}},e.ui.ddmanager={current:null,droppables:{"default":[]},prepareOffsets:function(t,i){var s,n,a=e.ui.ddmanager.droppables[t.options.scope]||[],o=i?i.type:null,r=(t.currentItem||t.element).find(":data(ui-droppable)").addBack();e:for(s=0;a.length>s;s++)if(!(a[s].options.disabled||t&&!a[s].accept.call(a[s].element[0],t.currentItem||t.element))){for(n=0;r.length>n;n++)if(r[n]===a[s].element[0]){a[s].proportions.height=0;continue e}a[s].visible="none"!==a[s].element.css("display"),a[s].visible&&("mousedown"===o&&a[s]._activate.call(a[s],i),a[s].offset=a[s].element.offset(),a[s].proportions={width:a[s].element[0].offsetWidth,height:a[s].element[0].offsetHeight})}},drop:function(t,i){var s=!1;return e.each((e.ui.ddmanager.droppables[t.options.scope]||[]).slice(),function(){this.options&&(!this.options.disabled&&this.visible&&e.ui.intersect(t,this,this.options.tolerance)&&(s=this._drop.call(this,i)||s),!this.options.disabled&&this.visible&&this.accept.call(this.element[0],t.currentItem||t.element)&&(this.isout=!0,this.isover=!1,this._deactivate.call(this,i)))}),s},dragStart:function(t,i){t.element.parentsUntil("body").bind("scroll.droppable",function(){t.options.refreshPositions||e.ui.ddmanager.prepareOffsets(t,i)})},drag:function(t,i){t.options.refreshPositions&&e.ui.ddmanager.prepareOffsets(t,i),e.each(e.ui.ddmanager.droppables[t.options.scope]||[],function(){if(!this.options.disabled&&!this.greedyChild&&this.visible){var s,n,a,o=e.ui.intersect(t,this,this.options.tolerance),r=!o&&this.isover?"isout":o&&!this.isover?"isover":null;r&&(this.options.greedy&&(n=this.options.scope,a=this.element.parents(":data(ui-droppable)").filter(function(){return e.data(this,"ui-droppable").options.scope===n}),a.length&&(s=e.data(a[0],"ui-droppable"),s.greedyChild="isover"===r)),s&&"isover"===r&&(s.isover=!1,s.isout=!0,s._out.call(s,i)),this[r]=!0,this["isout"===r?"isover":"isout"]=!1,this["isover"===r?"_over":"_out"].call(this,i),s&&"isout"===r&&(s.isout=!1,s.isover=!0,s._over.call(s,i)))}})},dragStop:function(t,i){t.element.parentsUntil("body").unbind("scroll.droppable"),t.options.refreshPositions||e.ui.ddmanager.prepareOffsets(t,i)}}})(jQuery);(function(e){function t(e){return parseInt(e,10)||0}function i(e){return!isNaN(parseInt(e,10))}e.widget("ui.resizable",e.ui.mouse,{version:"1.10.3",widgetEventPrefix:"resize",options:{alsoResize:!1,animate:!1,animateDuration:"slow",animateEasing:"swing",aspectRatio:!1,autoHide:!1,containment:!1,ghost:!1,grid:!1,handles:"e,s,se",helper:!1,maxHeight:null,maxWidth:null,minHeight:10,minWidth:10,zIndex:90,resize:null,start:null,stop:null},_create:function(){var t,i,s,n,a,o=this,r=this.options;if(this.element.addClass("ui-resizable"),e.extend(this,{_aspectRatio:!!r.aspectRatio,aspectRatio:r.aspectRatio,originalElement:this.element,_proportionallyResizeElements:[],_helper:r.helper||r.ghost||r.animate?r.helper||"ui-resizable-helper":null}),this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)&&(this.element.wrap(e("<div class='ui-wrapper' style='overflow: hidden;'></div>").css({position:this.element.css("position"),width:this.element.outerWidth(),height:this.element.outerHeight(),top:this.element.css("top"),left:this.element.css("left")})),this.element=this.element.parent().data("ui-resizable",this.element.data("ui-resizable")),this.elementIsWrapper=!0,this.element.css({marginLeft:this.originalElement.css("marginLeft"),marginTop:this.originalElement.css("marginTop"),marginRight:this.originalElement.css("marginRight"),marginBottom:this.originalElement.css("marginBottom")}),this.originalElement.css({marginLeft:0,marginTop:0,marginRight:0,marginBottom:0}),this.originalResizeStyle=this.originalElement.css("resize"),this.originalElement.css("resize","none"),this._proportionallyResizeElements.push(this.originalElement.css({position:"static",zoom:1,display:"block"})),this.originalElement.css({margin:this.originalElement.css("margin")}),this._proportionallyResize()),this.handles=r.handles||(e(".ui-resizable-handle",this.element).length?{n:".ui-resizable-n",e:".ui-resizable-e",s:".ui-resizable-s",w:".ui-resizable-w",se:".ui-resizable-se",sw:".ui-resizable-sw",ne:".ui-resizable-ne",nw:".ui-resizable-nw"}:"e,s,se"),this.handles.constructor===String)for("all"===this.handles&&(this.handles="n,e,s,w,se,sw,ne,nw"),t=this.handles.split(","),this.handles={},i=0;t.length>i;i++)s=e.trim(t[i]),a="ui-resizable-"+s,n=e("<div class='ui-resizable-handle "+a+"'></div>"),n.css({zIndex:r.zIndex}),"se"===s&&n.addClass("ui-icon ui-icon-gripsmall-diagonal-se"),this.handles[s]=".ui-resizable-"+s,this.element.append(n);this._renderAxis=function(t){var i,s,n,a;t=t||this.element;for(i in this.handles)this.handles[i].constructor===String&&(this.handles[i]=e(this.handles[i],this.element).show()),this.elementIsWrapper&&this.originalElement[0].nodeName.match(/textarea|input|select|button/i)&&(s=e(this.handles[i],this.element),a=/sw|ne|nw|se|n|s/.test(i)?s.outerHeight():s.outerWidth(),n=["padding",/ne|nw|n/.test(i)?"Top":/se|sw|s/.test(i)?"Bottom":/^e$/.test(i)?"Right":"Left"].join(""),t.css(n,a),this._proportionallyResize()),e(this.handles[i]).length},this._renderAxis(this.element),this._handles=e(".ui-resizable-handle",this.element).disableSelection(),this._handles.mouseover(function(){o.resizing||(this.className&&(n=this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)),o.axis=n&&n[1]?n[1]:"se")}),r.autoHide&&(this._handles.hide(),e(this.element).addClass("ui-resizable-autohide").mouseenter(function(){r.disabled||(e(this).removeClass("ui-resizable-autohide"),o._handles.show())}).mouseleave(function(){r.disabled||o.resizing||(e(this).addClass("ui-resizable-autohide"),o._handles.hide())})),this._mouseInit()},_destroy:function(){this._mouseDestroy();var t,i=function(t){e(t).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").removeData("ui-resizable").unbind(".resizable").find(".ui-resizable-handle").remove()};return this.elementIsWrapper&&(i(this.element),t=this.element,this.originalElement.css({position:t.css("position"),width:t.outerWidth(),height:t.outerHeight(),top:t.css("top"),left:t.css("left")}).insertAfter(t),t.remove()),this.originalElement.css("resize",this.originalResizeStyle),i(this.originalElement),this},_mouseCapture:function(t){var i,s,n=!1;for(i in this.handles)s=e(this.handles[i])[0],(s===t.target||e.contains(s,t.target))&&(n=!0);return!this.options.disabled&&n},_mouseStart:function(i){var s,n,a,o=this.options,r=this.element.position(),h=this.element;return this.resizing=!0,/absolute/.test(h.css("position"))?h.css({position:"absolute",top:h.css("top"),left:h.css("left")}):h.is(".ui-draggable")&&h.css({position:"absolute",top:r.top,left:r.left}),this._renderProxy(),s=t(this.helper.css("left")),n=t(this.helper.css("top")),o.containment&&(s+=e(o.containment).scrollLeft()||0,n+=e(o.containment).scrollTop()||0),this.offset=this.helper.offset(),this.position={left:s,top:n},this.size=this._helper?{width:h.outerWidth(),height:h.outerHeight()}:{width:h.width(),height:h.height()},this.originalSize=this._helper?{width:h.outerWidth(),height:h.outerHeight()}:{width:h.width(),height:h.height()},this.originalPosition={left:s,top:n},this.sizeDiff={width:h.outerWidth()-h.width(),height:h.outerHeight()-h.height()},this.originalMousePosition={left:i.pageX,top:i.pageY},this.aspectRatio="number"==typeof o.aspectRatio?o.aspectRatio:this.originalSize.width/this.originalSize.height||1,a=e(".ui-resizable-"+this.axis).css("cursor"),e("body").css("cursor","auto"===a?this.axis+"-resize":a),h.addClass("ui-resizable-resizing"),this._propagate("start",i),!0},_mouseDrag:function(t){var i,s=this.helper,n={},a=this.originalMousePosition,o=this.axis,r=this.position.top,h=this.position.left,l=this.size.width,u=this.size.height,c=t.pageX-a.left||0,d=t.pageY-a.top||0,p=this._change[o];return p?(i=p.apply(this,[t,c,d]),this._updateVirtualBoundaries(t.shiftKey),(this._aspectRatio||t.shiftKey)&&(i=this._updateRatio(i,t)),i=this._respectSize(i,t),this._updateCache(i),this._propagate("resize",t),this.position.top!==r&&(n.top=this.position.top+"px"),this.position.left!==h&&(n.left=this.position.left+"px"),this.size.width!==l&&(n.width=this.size.width+"px"),this.size.height!==u&&(n.height=this.size.height+"px"),s.css(n),!this._helper&&this._proportionallyResizeElements.length&&this._proportionallyResize(),e.isEmptyObject(n)||this._trigger("resize",t,this.ui()),!1):!1},_mouseStop:function(t){this.resizing=!1;var i,s,n,a,o,r,h,l=this.options,u=this;return this._helper&&(i=this._proportionallyResizeElements,s=i.length&&/textarea/i.test(i[0].nodeName),n=s&&e.ui.hasScroll(i[0],"left")?0:u.sizeDiff.height,a=s?0:u.sizeDiff.width,o={width:u.helper.width()-a,height:u.helper.height()-n},r=parseInt(u.element.css("left"),10)+(u.position.left-u.originalPosition.left)||null,h=parseInt(u.element.css("top"),10)+(u.position.top-u.originalPosition.top)||null,l.animate||this.element.css(e.extend(o,{top:h,left:r})),u.helper.height(u.size.height),u.helper.width(u.size.width),this._helper&&!l.animate&&this._proportionallyResize()),e("body").css("cursor","auto"),this.element.removeClass("ui-resizable-resizing"),this._propagate("stop",t),this._helper&&this.helper.remove(),!1},_updateVirtualBoundaries:function(e){var t,s,n,a,o,r=this.options;o={minWidth:i(r.minWidth)?r.minWidth:0,maxWidth:i(r.maxWidth)?r.maxWidth:1/0,minHeight:i(r.minHeight)?r.minHeight:0,maxHeight:i(r.maxHeight)?r.maxHeight:1/0},(this._aspectRatio||e)&&(t=o.minHeight*this.aspectRatio,n=o.minWidth/this.aspectRatio,s=o.maxHeight*this.aspectRatio,a=o.maxWidth/this.aspectRatio,t>o.minWidth&&(o.minWidth=t),n>o.minHeight&&(o.minHeight=n),o.maxWidth>s&&(o.maxWidth=s),o.maxHeight>a&&(o.maxHeight=a)),this._vBoundaries=o},_updateCache:function(e){this.offset=this.helper.offset(),i(e.left)&&(this.position.left=e.left),i(e.top)&&(this.position.top=e.top),i(e.height)&&(this.size.height=e.height),i(e.width)&&(this.size.width=e.width)},_updateRatio:function(e){var t=this.position,s=this.size,n=this.axis;return i(e.height)?e.width=e.height*this.aspectRatio:i(e.width)&&(e.height=e.width/this.aspectRatio),"sw"===n&&(e.left=t.left+(s.width-e.width),e.top=null),"nw"===n&&(e.top=t.top+(s.height-e.height),e.left=t.left+(s.width-e.width)),e},_respectSize:function(e){var t=this._vBoundaries,s=this.axis,n=i(e.width)&&t.maxWidth&&t.maxWidth<e.width,a=i(e.height)&&t.maxHeight&&t.maxHeight<e.height,o=i(e.width)&&t.minWidth&&t.minWidth>e.width,r=i(e.height)&&t.minHeight&&t.minHeight>e.height,h=this.originalPosition.left+this.originalSize.width,l=this.position.top+this.size.height,u=/sw|nw|w/.test(s),c=/nw|ne|n/.test(s);return o&&(e.width=t.minWidth),r&&(e.height=t.minHeight),n&&(e.width=t.maxWidth),a&&(e.height=t.maxHeight),o&&u&&(e.left=h-t.minWidth),n&&u&&(e.left=h-t.maxWidth),r&&c&&(e.top=l-t.minHeight),a&&c&&(e.top=l-t.maxHeight),e.width||e.height||e.left||!e.top?e.width||e.height||e.top||!e.left||(e.left=null):e.top=null,e},_proportionallyResize:function(){if(this._proportionallyResizeElements.length){var e,t,i,s,n,a=this.helper||this.element;for(e=0;this._proportionallyResizeElements.length>e;e++){if(n=this._proportionallyResizeElements[e],!this.borderDif)for(this.borderDif=[],i=[n.css("borderTopWidth"),n.css("borderRightWidth"),n.css("borderBottomWidth"),n.css("borderLeftWidth")],s=[n.css("paddingTop"),n.css("paddingRight"),n.css("paddingBottom"),n.css("paddingLeft")],t=0;i.length>t;t++)this.borderDif[t]=(parseInt(i[t],10)||0)+(parseInt(s[t],10)||0);n.css({height:a.height()-this.borderDif[0]-this.borderDif[2]||0,width:a.width()-this.borderDif[1]-this.borderDif[3]||0})}}},_renderProxy:function(){var t=this.element,i=this.options;this.elementOffset=t.offset(),this._helper?(this.helper=this.helper||e("<div style='overflow:hidden;'></div>"),this.helper.addClass(this._helper).css({width:this.element.outerWidth()-1,height:this.element.outerHeight()-1,position:"absolute",left:this.elementOffset.left+"px",top:this.elementOffset.top+"px",zIndex:++i.zIndex}),this.helper.appendTo("body").disableSelection()):this.helper=this.element},_change:{e:function(e,t){return{width:this.originalSize.width+t}},w:function(e,t){var i=this.originalSize,s=this.originalPosition;return{left:s.left+t,width:i.width-t}},n:function(e,t,i){var s=this.originalSize,n=this.originalPosition;return{top:n.top+i,height:s.height-i}},s:function(e,t,i){return{height:this.originalSize.height+i}},se:function(t,i,s){return e.extend(this._change.s.apply(this,arguments),this._change.e.apply(this,[t,i,s]))},sw:function(t,i,s){return e.extend(this._change.s.apply(this,arguments),this._change.w.apply(this,[t,i,s]))},ne:function(t,i,s){return e.extend(this._change.n.apply(this,arguments),this._change.e.apply(this,[t,i,s]))},nw:function(t,i,s){return e.extend(this._change.n.apply(this,arguments),this._change.w.apply(this,[t,i,s]))}},_propagate:function(t,i){e.ui.plugin.call(this,t,[i,this.ui()]),"resize"!==t&&this._trigger(t,i,this.ui())},plugins:{},ui:function(){return{originalElement:this.originalElement,element:this.element,helper:this.helper,position:this.position,size:this.size,originalSize:this.originalSize,originalPosition:this.originalPosition}}}),e.ui.plugin.add("resizable","animate",{stop:function(t){var i=e(this).data("ui-resizable"),s=i.options,n=i._proportionallyResizeElements,a=n.length&&/textarea/i.test(n[0].nodeName),o=a&&e.ui.hasScroll(n[0],"left")?0:i.sizeDiff.height,r=a?0:i.sizeDiff.width,h={width:i.size.width-r,height:i.size.height-o},l=parseInt(i.element.css("left"),10)+(i.position.left-i.originalPosition.left)||null,u=parseInt(i.element.css("top"),10)+(i.position.top-i.originalPosition.top)||null;i.element.animate(e.extend(h,u&&l?{top:u,left:l}:{}),{duration:s.animateDuration,easing:s.animateEasing,step:function(){var s={width:parseInt(i.element.css("width"),10),height:parseInt(i.element.css("height"),10),top:parseInt(i.element.css("top"),10),left:parseInt(i.element.css("left"),10)};n&&n.length&&e(n[0]).css({width:s.width,height:s.height}),i._updateCache(s),i._propagate("resize",t)}})}}),e.ui.plugin.add("resizable","containment",{start:function(){var i,s,n,a,o,r,h,l=e(this).data("ui-resizable"),u=l.options,c=l.element,d=u.containment,p=d instanceof e?d.get(0):/parent/.test(d)?c.parent().get(0):d;p&&(l.containerElement=e(p),/document/.test(d)||d===document?(l.containerOffset={left:0,top:0},l.containerPosition={left:0,top:0},l.parentData={element:e(document),left:0,top:0,width:e(document).width(),height:e(document).height()||document.body.parentNode.scrollHeight}):(i=e(p),s=[],e(["Top","Right","Left","Bottom"]).each(function(e,n){s[e]=t(i.css("padding"+n))}),l.containerOffset=i.offset(),l.containerPosition=i.position(),l.containerSize={height:i.innerHeight()-s[3],width:i.innerWidth()-s[1]},n=l.containerOffset,a=l.containerSize.height,o=l.containerSize.width,r=e.ui.hasScroll(p,"left")?p.scrollWidth:o,h=e.ui.hasScroll(p)?p.scrollHeight:a,l.parentData={element:p,left:n.left,top:n.top,width:r,height:h}))},resize:function(t){var i,s,n,a,o=e(this).data("ui-resizable"),r=o.options,h=o.containerOffset,l=o.position,u=o._aspectRatio||t.shiftKey,c={top:0,left:0},d=o.containerElement;d[0]!==document&&/static/.test(d.css("position"))&&(c=h),l.left<(o._helper?h.left:0)&&(o.size.width=o.size.width+(o._helper?o.position.left-h.left:o.position.left-c.left),u&&(o.size.height=o.size.width/o.aspectRatio),o.position.left=r.helper?h.left:0),l.top<(o._helper?h.top:0)&&(o.size.height=o.size.height+(o._helper?o.position.top-h.top:o.position.top),u&&(o.size.width=o.size.height*o.aspectRatio),o.position.top=o._helper?h.top:0),o.offset.left=o.parentData.left+o.position.left,o.offset.top=o.parentData.top+o.position.top,i=Math.abs((o._helper?o.offset.left-c.left:o.offset.left-c.left)+o.sizeDiff.width),s=Math.abs((o._helper?o.offset.top-c.top:o.offset.top-h.top)+o.sizeDiff.height),n=o.containerElement.get(0)===o.element.parent().get(0),a=/relative|absolute/.test(o.containerElement.css("position")),n&&a&&(i-=o.parentData.left),i+o.size.width>=o.parentData.width&&(o.size.width=o.parentData.width-i,u&&(o.size.height=o.size.width/o.aspectRatio)),s+o.size.height>=o.parentData.height&&(o.size.height=o.parentData.height-s,u&&(o.size.width=o.size.height*o.aspectRatio))},stop:function(){var t=e(this).data("ui-resizable"),i=t.options,s=t.containerOffset,n=t.containerPosition,a=t.containerElement,o=e(t.helper),r=o.offset(),h=o.outerWidth()-t.sizeDiff.width,l=o.outerHeight()-t.sizeDiff.height;t._helper&&!i.animate&&/relative/.test(a.css("position"))&&e(this).css({left:r.left-n.left-s.left,width:h,height:l}),t._helper&&!i.animate&&/static/.test(a.css("position"))&&e(this).css({left:r.left-n.left-s.left,width:h,height:l})}}),e.ui.plugin.add("resizable","alsoResize",{start:function(){var t=e(this).data("ui-resizable"),i=t.options,s=function(t){e(t).each(function(){var t=e(this);t.data("ui-resizable-alsoresize",{width:parseInt(t.width(),10),height:parseInt(t.height(),10),left:parseInt(t.css("left"),10),top:parseInt(t.css("top"),10)})})};"object"!=typeof i.alsoResize||i.alsoResize.parentNode?s(i.alsoResize):i.alsoResize.length?(i.alsoResize=i.alsoResize[0],s(i.alsoResize)):e.each(i.alsoResize,function(e){s(e)})},resize:function(t,i){var s=e(this).data("ui-resizable"),n=s.options,a=s.originalSize,o=s.originalPosition,r={height:s.size.height-a.height||0,width:s.size.width-a.width||0,top:s.position.top-o.top||0,left:s.position.left-o.left||0},h=function(t,s){e(t).each(function(){var t=e(this),n=e(this).data("ui-resizable-alsoresize"),a={},o=s&&s.length?s:t.parents(i.originalElement[0]).length?["width","height"]:["width","height","top","left"];e.each(o,function(e,t){var i=(n[t]||0)+(r[t]||0);i&&i>=0&&(a[t]=i||null)}),t.css(a)})};"object"!=typeof n.alsoResize||n.alsoResize.nodeType?h(n.alsoResize):e.each(n.alsoResize,function(e,t){h(e,t)})},stop:function(){e(this).removeData("resizable-alsoresize")}}),e.ui.plugin.add("resizable","ghost",{start:function(){var t=e(this).data("ui-resizable"),i=t.options,s=t.size;t.ghost=t.originalElement.clone(),t.ghost.css({opacity:.25,display:"block",position:"relative",height:s.height,width:s.width,margin:0,left:0,top:0}).addClass("ui-resizable-ghost").addClass("string"==typeof i.ghost?i.ghost:""),t.ghost.appendTo(t.helper)},resize:function(){var t=e(this).data("ui-resizable");t.ghost&&t.ghost.css({position:"relative",height:t.size.height,width:t.size.width})},stop:function(){var t=e(this).data("ui-resizable");t.ghost&&t.helper&&t.helper.get(0).removeChild(t.ghost.get(0))}}),e.ui.plugin.add("resizable","grid",{resize:function(){var t=e(this).data("ui-resizable"),i=t.options,s=t.size,n=t.originalSize,a=t.originalPosition,o=t.axis,r="number"==typeof i.grid?[i.grid,i.grid]:i.grid,h=r[0]||1,l=r[1]||1,u=Math.round((s.width-n.width)/h)*h,c=Math.round((s.height-n.height)/l)*l,d=n.width+u,p=n.height+c,f=i.maxWidth&&d>i.maxWidth,m=i.maxHeight&&p>i.maxHeight,g=i.minWidth&&i.minWidth>d,v=i.minHeight&&i.minHeight>p;i.grid=r,g&&(d+=h),v&&(p+=l),f&&(d-=h),m&&(p-=l),/^(se|s|e)$/.test(o)?(t.size.width=d,t.size.height=p):/^(ne)$/.test(o)?(t.size.width=d,t.size.height=p,t.position.top=a.top-c):/^(sw)$/.test(o)?(t.size.width=d,t.size.height=p,t.position.left=a.left-u):(t.size.width=d,t.size.height=p,t.position.top=a.top-c,t.position.left=a.left-u)}})})(jQuery);(function(e){e.widget("ui.selectable",e.ui.mouse,{version:"1.10.3",options:{appendTo:"body",autoRefresh:!0,distance:0,filter:"*",tolerance:"touch",selected:null,selecting:null,start:null,stop:null,unselected:null,unselecting:null},_create:function(){var t,i=this;this.element.addClass("ui-selectable"),this.dragged=!1,this.refresh=function(){t=e(i.options.filter,i.element[0]),t.addClass("ui-selectee"),t.each(function(){var t=e(this),i=t.offset();e.data(this,"selectable-item",{element:this,$element:t,left:i.left,top:i.top,right:i.left+t.outerWidth(),bottom:i.top+t.outerHeight(),startselected:!1,selected:t.hasClass("ui-selected"),selecting:t.hasClass("ui-selecting"),unselecting:t.hasClass("ui-unselecting")})})},this.refresh(),this.selectees=t.addClass("ui-selectee"),this._mouseInit(),this.helper=e("<div class='ui-selectable-helper'></div>")},_destroy:function(){this.selectees.removeClass("ui-selectee").removeData("selectable-item"),this.element.removeClass("ui-selectable ui-selectable-disabled"),this._mouseDestroy()},_mouseStart:function(t){var i=this,s=this.options;this.opos=[t.pageX,t.pageY],this.options.disabled||(this.selectees=e(s.filter,this.element[0]),this._trigger("start",t),e(s.appendTo).append(this.helper),this.helper.css({left:t.pageX,top:t.pageY,width:0,height:0}),s.autoRefresh&&this.refresh(),this.selectees.filter(".ui-selected").each(function(){var s=e.data(this,"selectable-item");s.startselected=!0,t.metaKey||t.ctrlKey||(s.$element.removeClass("ui-selected"),s.selected=!1,s.$element.addClass("ui-unselecting"),s.unselecting=!0,i._trigger("unselecting",t,{unselecting:s.element}))}),e(t.target).parents().addBack().each(function(){var s,n=e.data(this,"selectable-item");return n?(s=!t.metaKey&&!t.ctrlKey||!n.$element.hasClass("ui-selected"),n.$element.removeClass(s?"ui-unselecting":"ui-selected").addClass(s?"ui-selecting":"ui-unselecting"),n.unselecting=!s,n.selecting=s,n.selected=s,s?i._trigger("selecting",t,{selecting:n.element}):i._trigger("unselecting",t,{unselecting:n.element}),!1):undefined}))},_mouseDrag:function(t){if(this.dragged=!0,!this.options.disabled){var i,s=this,n=this.options,a=this.opos[0],o=this.opos[1],r=t.pageX,h=t.pageY;return a>r&&(i=r,r=a,a=i),o>h&&(i=h,h=o,o=i),this.helper.css({left:a,top:o,width:r-a,height:h-o}),this.selectees.each(function(){var i=e.data(this,"selectable-item"),l=!1;i&&i.element!==s.element[0]&&("touch"===n.tolerance?l=!(i.left>r||a>i.right||i.top>h||o>i.bottom):"fit"===n.tolerance&&(l=i.left>a&&r>i.right&&i.top>o&&h>i.bottom),l?(i.selected&&(i.$element.removeClass("ui-selected"),i.selected=!1),i.unselecting&&(i.$element.removeClass("ui-unselecting"),i.unselecting=!1),i.selecting||(i.$element.addClass("ui-selecting"),i.selecting=!0,s._trigger("selecting",t,{selecting:i.element}))):(i.selecting&&((t.metaKey||t.ctrlKey)&&i.startselected?(i.$element.removeClass("ui-selecting"),i.selecting=!1,i.$element.addClass("ui-selected"),i.selected=!0):(i.$element.removeClass("ui-selecting"),i.selecting=!1,i.startselected&&(i.$element.addClass("ui-unselecting"),i.unselecting=!0),s._trigger("unselecting",t,{unselecting:i.element}))),i.selected&&(t.metaKey||t.ctrlKey||i.startselected||(i.$element.removeClass("ui-selected"),i.selected=!1,i.$element.addClass("ui-unselecting"),i.unselecting=!0,s._trigger("unselecting",t,{unselecting:i.element})))))}),!1}},_mouseStop:function(t){var i=this;return this.dragged=!1,e(".ui-unselecting",this.element[0]).each(function(){var s=e.data(this,"selectable-item");s.$element.removeClass("ui-unselecting"),s.unselecting=!1,s.startselected=!1,i._trigger("unselected",t,{unselected:s.element})}),e(".ui-selecting",this.element[0]).each(function(){var s=e.data(this,"selectable-item");s.$element.removeClass("ui-selecting").addClass("ui-selected"),s.selecting=!1,s.selected=!0,s.startselected=!0,i._trigger("selected",t,{selected:s.element})}),this._trigger("stop",t),this.helper.remove(),!1}})})(jQuery);(function(t){function e(t,e,i){return t>e&&e+i>t}function i(t){return/left|right/.test(t.css("float"))||/inline|table-cell/.test(t.css("display"))}t.widget("ui.sortable",t.ui.mouse,{version:"1.10.3",widgetEventPrefix:"sort",ready:!1,options:{appendTo:"parent",axis:!1,connectWith:!1,containment:!1,cursor:"auto",cursorAt:!1,dropOnEmpty:!0,forcePlaceholderSize:!1,forceHelperSize:!1,grid:!1,handle:!1,helper:"original",items:"> *",opacity:!1,placeholder:!1,revert:!1,scroll:!0,scrollSensitivity:20,scrollSpeed:20,scope:"default",tolerance:"intersect",zIndex:1e3,activate:null,beforeStop:null,change:null,deactivate:null,out:null,over:null,receive:null,remove:null,sort:null,start:null,stop:null,update:null},_create:function(){var t=this.options;this.containerCache={},this.element.addClass("ui-sortable"),this.refresh(),this.floating=this.items.length?"x"===t.axis||i(this.items[0].item):!1,this.offset=this.element.offset(),this._mouseInit(),this.ready=!0},_destroy:function(){this.element.removeClass("ui-sortable ui-sortable-disabled"),this._mouseDestroy();for(var t=this.items.length-1;t>=0;t--)this.items[t].item.removeData(this.widgetName+"-item");return this},_setOption:function(e,i){"disabled"===e?(this.options[e]=i,this.widget().toggleClass("ui-sortable-disabled",!!i)):t.Widget.prototype._setOption.apply(this,arguments)},_mouseCapture:function(e,i){var s=null,n=!1,a=this;return this.reverting?!1:this.options.disabled||"static"===this.options.type?!1:(this._refreshItems(e),t(e.target).parents().each(function(){return t.data(this,a.widgetName+"-item")===a?(s=t(this),!1):undefined}),t.data(e.target,a.widgetName+"-item")===a&&(s=t(e.target)),s?!this.options.handle||i||(t(this.options.handle,s).find("*").addBack().each(function(){this===e.target&&(n=!0)}),n)?(this.currentItem=s,this._removeCurrentsFromItems(),!0):!1:!1)},_mouseStart:function(e,i,s){var n,a,o=this.options;if(this.currentContainer=this,this.refreshPositions(),this.helper=this._createHelper(e),this._cacheHelperProportions(),this._cacheMargins(),this.scrollParent=this.helper.scrollParent(),this.offset=this.currentItem.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},t.extend(this.offset,{click:{left:e.pageX-this.offset.left,top:e.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.helper.css("position","absolute"),this.cssPosition=this.helper.css("position"),this.originalPosition=this._generatePosition(e),this.originalPageX=e.pageX,this.originalPageY=e.pageY,o.cursorAt&&this._adjustOffsetFromHelper(o.cursorAt),this.domPosition={prev:this.currentItem.prev()[0],parent:this.currentItem.parent()[0]},this.helper[0]!==this.currentItem[0]&&this.currentItem.hide(),this._createPlaceholder(),o.containment&&this._setContainment(),o.cursor&&"auto"!==o.cursor&&(a=this.document.find("body"),this.storedCursor=a.css("cursor"),a.css("cursor",o.cursor),this.storedStylesheet=t("<style>*{ cursor: "+o.cursor+" !important; }</style>").appendTo(a)),o.opacity&&(this.helper.css("opacity")&&(this._storedOpacity=this.helper.css("opacity")),this.helper.css("opacity",o.opacity)),o.zIndex&&(this.helper.css("zIndex")&&(this._storedZIndex=this.helper.css("zIndex")),this.helper.css("zIndex",o.zIndex)),this.scrollParent[0]!==document&&"HTML"!==this.scrollParent[0].tagName&&(this.overflowOffset=this.scrollParent.offset()),this._trigger("start",e,this._uiHash()),this._preserveHelperProportions||this._cacheHelperProportions(),!s)for(n=this.containers.length-1;n>=0;n--)this.containers[n]._trigger("activate",e,this._uiHash(this));return t.ui.ddmanager&&(t.ui.ddmanager.current=this),t.ui.ddmanager&&!o.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e),this.dragging=!0,this.helper.addClass("ui-sortable-helper"),this._mouseDrag(e),!0},_mouseDrag:function(e){var i,s,n,a,o=this.options,r=!1;for(this.position=this._generatePosition(e),this.positionAbs=this._convertPositionTo("absolute"),this.lastPositionAbs||(this.lastPositionAbs=this.positionAbs),this.options.scroll&&(this.scrollParent[0]!==document&&"HTML"!==this.scrollParent[0].tagName?(this.overflowOffset.top+this.scrollParent[0].offsetHeight-e.pageY<o.scrollSensitivity?this.scrollParent[0].scrollTop=r=this.scrollParent[0].scrollTop+o.scrollSpeed:e.pageY-this.overflowOffset.top<o.scrollSensitivity&&(this.scrollParent[0].scrollTop=r=this.scrollParent[0].scrollTop-o.scrollSpeed),this.overflowOffset.left+this.scrollParent[0].offsetWidth-e.pageX<o.scrollSensitivity?this.scrollParent[0].scrollLeft=r=this.scrollParent[0].scrollLeft+o.scrollSpeed:e.pageX-this.overflowOffset.left<o.scrollSensitivity&&(this.scrollParent[0].scrollLeft=r=this.scrollParent[0].scrollLeft-o.scrollSpeed)):(e.pageY-t(document).scrollTop()<o.scrollSensitivity?r=t(document).scrollTop(t(document).scrollTop()-o.scrollSpeed):t(window).height()-(e.pageY-t(document).scrollTop())<o.scrollSensitivity&&(r=t(document).scrollTop(t(document).scrollTop()+o.scrollSpeed)),e.pageX-t(document).scrollLeft()<o.scrollSensitivity?r=t(document).scrollLeft(t(document).scrollLeft()-o.scrollSpeed):t(window).width()-(e.pageX-t(document).scrollLeft())<o.scrollSensitivity&&(r=t(document).scrollLeft(t(document).scrollLeft()+o.scrollSpeed))),r!==!1&&t.ui.ddmanager&&!o.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e)),this.positionAbs=this._convertPositionTo("absolute"),this.options.axis&&"y"===this.options.axis||(this.helper[0].style.left=this.position.left+"px"),this.options.axis&&"x"===this.options.axis||(this.helper[0].style.top=this.position.top+"px"),i=this.items.length-1;i>=0;i--)if(s=this.items[i],n=s.item[0],a=this._intersectsWithPointer(s),a&&s.instance===this.currentContainer&&n!==this.currentItem[0]&&this.placeholder[1===a?"next":"prev"]()[0]!==n&&!t.contains(this.placeholder[0],n)&&("semi-dynamic"===this.options.type?!t.contains(this.element[0],n):!0)){if(this.direction=1===a?"down":"up","pointer"!==this.options.tolerance&&!this._intersectsWithSides(s))break;this._rearrange(e,s),this._trigger("change",e,this._uiHash());break}return this._contactContainers(e),t.ui.ddmanager&&t.ui.ddmanager.drag(this,e),this._trigger("sort",e,this._uiHash()),this.lastPositionAbs=this.positionAbs,!1},_mouseStop:function(e,i){if(e){if(t.ui.ddmanager&&!this.options.dropBehaviour&&t.ui.ddmanager.drop(this,e),this.options.revert){var s=this,n=this.placeholder.offset(),a=this.options.axis,o={};a&&"x"!==a||(o.left=n.left-this.offset.parent.left-this.margins.left+(this.offsetParent[0]===document.body?0:this.offsetParent[0].scrollLeft)),a&&"y"!==a||(o.top=n.top-this.offset.parent.top-this.margins.top+(this.offsetParent[0]===document.body?0:this.offsetParent[0].scrollTop)),this.reverting=!0,t(this.helper).animate(o,parseInt(this.options.revert,10)||500,function(){s._clear(e)})}else this._clear(e,i);return!1}},cancel:function(){if(this.dragging){this._mouseUp({target:null}),"original"===this.options.helper?this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper"):this.currentItem.show();for(var e=this.containers.length-1;e>=0;e--)this.containers[e]._trigger("deactivate",null,this._uiHash(this)),this.containers[e].containerCache.over&&(this.containers[e]._trigger("out",null,this._uiHash(this)),this.containers[e].containerCache.over=0)}return this.placeholder&&(this.placeholder[0].parentNode&&this.placeholder[0].parentNode.removeChild(this.placeholder[0]),"original"!==this.options.helper&&this.helper&&this.helper[0].parentNode&&this.helper.remove(),t.extend(this,{helper:null,dragging:!1,reverting:!1,_noFinalSort:null}),this.domPosition.prev?t(this.domPosition.prev).after(this.currentItem):t(this.domPosition.parent).prepend(this.currentItem)),this},serialize:function(e){var i=this._getItemsAsjQuery(e&&e.connected),s=[];return e=e||{},t(i).each(function(){var i=(t(e.item||this).attr(e.attribute||"id")||"").match(e.expression||/(.+)[\-=_](.+)/);i&&s.push((e.key||i[1]+"[]")+"="+(e.key&&e.expression?i[1]:i[2]))}),!s.length&&e.key&&s.push(e.key+"="),s.join("&")},toArray:function(e){var i=this._getItemsAsjQuery(e&&e.connected),s=[];return e=e||{},i.each(function(){s.push(t(e.item||this).attr(e.attribute||"id")||"")}),s},_intersectsWith:function(t){var e=this.positionAbs.left,i=e+this.helperProportions.width,s=this.positionAbs.top,n=s+this.helperProportions.height,a=t.left,o=a+t.width,r=t.top,h=r+t.height,l=this.offset.click.top,c=this.offset.click.left,u="x"===this.options.axis||s+l>r&&h>s+l,d="y"===this.options.axis||e+c>a&&o>e+c,p=u&&d;return"pointer"===this.options.tolerance||this.options.forcePointerForContainers||"pointer"!==this.options.tolerance&&this.helperProportions[this.floating?"width":"height"]>t[this.floating?"width":"height"]?p:e+this.helperProportions.width/2>a&&o>i-this.helperProportions.width/2&&s+this.helperProportions.height/2>r&&h>n-this.helperProportions.height/2},_intersectsWithPointer:function(t){var i="x"===this.options.axis||e(this.positionAbs.top+this.offset.click.top,t.top,t.height),s="y"===this.options.axis||e(this.positionAbs.left+this.offset.click.left,t.left,t.width),n=i&&s,a=this._getDragVerticalDirection(),o=this._getDragHorizontalDirection();return n?this.floating?o&&"right"===o||"down"===a?2:1:a&&("down"===a?2:1):!1},_intersectsWithSides:function(t){var i=e(this.positionAbs.top+this.offset.click.top,t.top+t.height/2,t.height),s=e(this.positionAbs.left+this.offset.click.left,t.left+t.width/2,t.width),n=this._getDragVerticalDirection(),a=this._getDragHorizontalDirection();return this.floating&&a?"right"===a&&s||"left"===a&&!s:n&&("down"===n&&i||"up"===n&&!i)},_getDragVerticalDirection:function(){var t=this.positionAbs.top-this.lastPositionAbs.top;return 0!==t&&(t>0?"down":"up")},_getDragHorizontalDirection:function(){var t=this.positionAbs.left-this.lastPositionAbs.left;return 0!==t&&(t>0?"right":"left")},refresh:function(t){return this._refreshItems(t),this.refreshPositions(),this},_connectWith:function(){var t=this.options;return t.connectWith.constructor===String?[t.connectWith]:t.connectWith},_getItemsAsjQuery:function(e){var i,s,n,a,o=[],r=[],h=this._connectWith();if(h&&e)for(i=h.length-1;i>=0;i--)for(n=t(h[i]),s=n.length-1;s>=0;s--)a=t.data(n[s],this.widgetFullName),a&&a!==this&&!a.options.disabled&&r.push([t.isFunction(a.options.items)?a.options.items.call(a.element):t(a.options.items,a.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),a]);for(r.push([t.isFunction(this.options.items)?this.options.items.call(this.element,null,{options:this.options,item:this.currentItem}):t(this.options.items,this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),this]),i=r.length-1;i>=0;i--)r[i][0].each(function(){o.push(this)});return t(o)},_removeCurrentsFromItems:function(){var e=this.currentItem.find(":data("+this.widgetName+"-item)");this.items=t.grep(this.items,function(t){for(var i=0;e.length>i;i++)if(e[i]===t.item[0])return!1;return!0})},_refreshItems:function(e){this.items=[],this.containers=[this];var i,s,n,a,o,r,h,l,c=this.items,u=[[t.isFunction(this.options.items)?this.options.items.call(this.element[0],e,{item:this.currentItem}):t(this.options.items,this.element),this]],d=this._connectWith();if(d&&this.ready)for(i=d.length-1;i>=0;i--)for(n=t(d[i]),s=n.length-1;s>=0;s--)a=t.data(n[s],this.widgetFullName),a&&a!==this&&!a.options.disabled&&(u.push([t.isFunction(a.options.items)?a.options.items.call(a.element[0],e,{item:this.currentItem}):t(a.options.items,a.element),a]),this.containers.push(a));for(i=u.length-1;i>=0;i--)for(o=u[i][1],r=u[i][0],s=0,l=r.length;l>s;s++)h=t(r[s]),h.data(this.widgetName+"-item",o),c.push({item:h,instance:o,width:0,height:0,left:0,top:0})},refreshPositions:function(e){this.offsetParent&&this.helper&&(this.offset.parent=this._getParentOffset());var i,s,n,a;for(i=this.items.length-1;i>=0;i--)s=this.items[i],s.instance!==this.currentContainer&&this.currentContainer&&s.item[0]!==this.currentItem[0]||(n=this.options.toleranceElement?t(this.options.toleranceElement,s.item):s.item,e||(s.width=n.outerWidth(),s.height=n.outerHeight()),a=n.offset(),s.left=a.left,s.top=a.top);if(this.options.custom&&this.options.custom.refreshContainers)this.options.custom.refreshContainers.call(this);else for(i=this.containers.length-1;i>=0;i--)a=this.containers[i].element.offset(),this.containers[i].containerCache.left=a.left,this.containers[i].containerCache.top=a.top,this.containers[i].containerCache.width=this.containers[i].element.outerWidth(),this.containers[i].containerCache.height=this.containers[i].element.outerHeight();return this},_createPlaceholder:function(e){e=e||this;var i,s=e.options;s.placeholder&&s.placeholder.constructor!==String||(i=s.placeholder,s.placeholder={element:function(){var s=e.currentItem[0].nodeName.toLowerCase(),n=t("<"+s+">",e.document[0]).addClass(i||e.currentItem[0].className+" ui-sortable-placeholder").removeClass("ui-sortable-helper");return"tr"===s?e.currentItem.children().each(function(){t("<td>&#160;</td>",e.document[0]).attr("colspan",t(this).attr("colspan")||1).appendTo(n)}):"img"===s&&n.attr("src",e.currentItem.attr("src")),i||n.css("visibility","hidden"),n},update:function(t,n){(!i||s.forcePlaceholderSize)&&(n.height()||n.height(e.currentItem.innerHeight()-parseInt(e.currentItem.css("paddingTop")||0,10)-parseInt(e.currentItem.css("paddingBottom")||0,10)),n.width()||n.width(e.currentItem.innerWidth()-parseInt(e.currentItem.css("paddingLeft")||0,10)-parseInt(e.currentItem.css("paddingRight")||0,10)))}}),e.placeholder=t(s.placeholder.element.call(e.element,e.currentItem)),e.currentItem.after(e.placeholder),s.placeholder.update(e,e.placeholder)},_contactContainers:function(s){var n,a,o,r,h,l,c,u,d,p,f=null,m=null;for(n=this.containers.length-1;n>=0;n--)if(!t.contains(this.currentItem[0],this.containers[n].element[0]))if(this._intersectsWith(this.containers[n].containerCache)){if(f&&t.contains(this.containers[n].element[0],f.element[0]))continue;f=this.containers[n],m=n}else this.containers[n].containerCache.over&&(this.containers[n]._trigger("out",s,this._uiHash(this)),this.containers[n].containerCache.over=0);if(f)if(1===this.containers.length)this.containers[m].containerCache.over||(this.containers[m]._trigger("over",s,this._uiHash(this)),this.containers[m].containerCache.over=1);else{for(o=1e4,r=null,p=f.floating||i(this.currentItem),h=p?"left":"top",l=p?"width":"height",c=this.positionAbs[h]+this.offset.click[h],a=this.items.length-1;a>=0;a--)t.contains(this.containers[m].element[0],this.items[a].item[0])&&this.items[a].item[0]!==this.currentItem[0]&&(!p||e(this.positionAbs.top+this.offset.click.top,this.items[a].top,this.items[a].height))&&(u=this.items[a].item.offset()[h],d=!1,Math.abs(u-c)>Math.abs(u+this.items[a][l]-c)&&(d=!0,u+=this.items[a][l]),o>Math.abs(u-c)&&(o=Math.abs(u-c),r=this.items[a],this.direction=d?"up":"down"));if(!r&&!this.options.dropOnEmpty)return;if(this.currentContainer===this.containers[m])return;r?this._rearrange(s,r,null,!0):this._rearrange(s,null,this.containers[m].element,!0),this._trigger("change",s,this._uiHash()),this.containers[m]._trigger("change",s,this._uiHash(this)),this.currentContainer=this.containers[m],this.options.placeholder.update(this.currentContainer,this.placeholder),this.containers[m]._trigger("over",s,this._uiHash(this)),this.containers[m].containerCache.over=1}},_createHelper:function(e){var i=this.options,s=t.isFunction(i.helper)?t(i.helper.apply(this.element[0],[e,this.currentItem])):"clone"===i.helper?this.currentItem.clone():this.currentItem;return s.parents("body").length||t("parent"!==i.appendTo?i.appendTo:this.currentItem[0].parentNode)[0].appendChild(s[0]),s[0]===this.currentItem[0]&&(this._storedCSS={width:this.currentItem[0].style.width,height:this.currentItem[0].style.height,position:this.currentItem.css("position"),top:this.currentItem.css("top"),left:this.currentItem.css("left")}),(!s[0].style.width||i.forceHelperSize)&&s.width(this.currentItem.width()),(!s[0].style.height||i.forceHelperSize)&&s.height(this.currentItem.height()),s},_adjustOffsetFromHelper:function(e){"string"==typeof e&&(e=e.split(" ")),t.isArray(e)&&(e={left:+e[0],top:+e[1]||0}),"left"in e&&(this.offset.click.left=e.left+this.margins.left),"right"in e&&(this.offset.click.left=this.helperProportions.width-e.right+this.margins.left),"top"in e&&(this.offset.click.top=e.top+this.margins.top),"bottom"in e&&(this.offset.click.top=this.helperProportions.height-e.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var e=this.offsetParent.offset();return"absolute"===this.cssPosition&&this.scrollParent[0]!==document&&t.contains(this.scrollParent[0],this.offsetParent[0])&&(e.left+=this.scrollParent.scrollLeft(),e.top+=this.scrollParent.scrollTop()),(this.offsetParent[0]===document.body||this.offsetParent[0].tagName&&"html"===this.offsetParent[0].tagName.toLowerCase()&&t.ui.ie)&&(e={top:0,left:0}),{top:e.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:e.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if("relative"===this.cssPosition){var t=this.currentItem.position();return{top:t.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:t.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.currentItem.css("marginLeft"),10)||0,top:parseInt(this.currentItem.css("marginTop"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var e,i,s,n=this.options;"parent"===n.containment&&(n.containment=this.helper[0].parentNode),("document"===n.containment||"window"===n.containment)&&(this.containment=[0-this.offset.relative.left-this.offset.parent.left,0-this.offset.relative.top-this.offset.parent.top,t("document"===n.containment?document:window).width()-this.helperProportions.width-this.margins.left,(t("document"===n.containment?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]),/^(document|window|parent)$/.test(n.containment)||(e=t(n.containment)[0],i=t(n.containment).offset(),s="hidden"!==t(e).css("overflow"),this.containment=[i.left+(parseInt(t(e).css("borderLeftWidth"),10)||0)+(parseInt(t(e).css("paddingLeft"),10)||0)-this.margins.left,i.top+(parseInt(t(e).css("borderTopWidth"),10)||0)+(parseInt(t(e).css("paddingTop"),10)||0)-this.margins.top,i.left+(s?Math.max(e.scrollWidth,e.offsetWidth):e.offsetWidth)-(parseInt(t(e).css("borderLeftWidth"),10)||0)-(parseInt(t(e).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left,i.top+(s?Math.max(e.scrollHeight,e.offsetHeight):e.offsetHeight)-(parseInt(t(e).css("borderTopWidth"),10)||0)-(parseInt(t(e).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top])},_convertPositionTo:function(e,i){i||(i=this.position);var s="absolute"===e?1:-1,n="absolute"!==this.cssPosition||this.scrollParent[0]!==document&&t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,a=/(html|body)/i.test(n[0].tagName);return{top:i.top+this.offset.relative.top*s+this.offset.parent.top*s-("fixed"===this.cssPosition?-this.scrollParent.scrollTop():a?0:n.scrollTop())*s,left:i.left+this.offset.relative.left*s+this.offset.parent.left*s-("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():a?0:n.scrollLeft())*s}},_generatePosition:function(e){var i,s,n=this.options,a=e.pageX,o=e.pageY,r="absolute"!==this.cssPosition||this.scrollParent[0]!==document&&t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,h=/(html|body)/i.test(r[0].tagName);return"relative"!==this.cssPosition||this.scrollParent[0]!==document&&this.scrollParent[0]!==this.offsetParent[0]||(this.offset.relative=this._getRelativeOffset()),this.originalPosition&&(this.containment&&(e.pageX-this.offset.click.left<this.containment[0]&&(a=this.containment[0]+this.offset.click.left),e.pageY-this.offset.click.top<this.containment[1]&&(o=this.containment[1]+this.offset.click.top),e.pageX-this.offset.click.left>this.containment[2]&&(a=this.containment[2]+this.offset.click.left),e.pageY-this.offset.click.top>this.containment[3]&&(o=this.containment[3]+this.offset.click.top)),n.grid&&(i=this.originalPageY+Math.round((o-this.originalPageY)/n.grid[1])*n.grid[1],o=this.containment?i-this.offset.click.top>=this.containment[1]&&i-this.offset.click.top<=this.containment[3]?i:i-this.offset.click.top>=this.containment[1]?i-n.grid[1]:i+n.grid[1]:i,s=this.originalPageX+Math.round((a-this.originalPageX)/n.grid[0])*n.grid[0],a=this.containment?s-this.offset.click.left>=this.containment[0]&&s-this.offset.click.left<=this.containment[2]?s:s-this.offset.click.left>=this.containment[0]?s-n.grid[0]:s+n.grid[0]:s)),{top:o-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+("fixed"===this.cssPosition?-this.scrollParent.scrollTop():h?0:r.scrollTop()),left:a-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():h?0:r.scrollLeft())}},_rearrange:function(t,e,i,s){i?i[0].appendChild(this.placeholder[0]):e.item[0].parentNode.insertBefore(this.placeholder[0],"down"===this.direction?e.item[0]:e.item[0].nextSibling),this.counter=this.counter?++this.counter:1;var n=this.counter;this._delay(function(){n===this.counter&&this.refreshPositions(!s)})},_clear:function(t,e){this.reverting=!1;var i,s=[];if(!this._noFinalSort&&this.currentItem.parent().length&&this.placeholder.before(this.currentItem),this._noFinalSort=null,this.helper[0]===this.currentItem[0]){for(i in this._storedCSS)("auto"===this._storedCSS[i]||"static"===this._storedCSS[i])&&(this._storedCSS[i]="");this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")}else this.currentItem.show();for(this.fromOutside&&!e&&s.push(function(t){this._trigger("receive",t,this._uiHash(this.fromOutside))}),!this.fromOutside&&this.domPosition.prev===this.currentItem.prev().not(".ui-sortable-helper")[0]&&this.domPosition.parent===this.currentItem.parent()[0]||e||s.push(function(t){this._trigger("update",t,this._uiHash())}),this!==this.currentContainer&&(e||(s.push(function(t){this._trigger("remove",t,this._uiHash())}),s.push(function(t){return function(e){t._trigger("receive",e,this._uiHash(this))}}.call(this,this.currentContainer)),s.push(function(t){return function(e){t._trigger("update",e,this._uiHash(this))}}.call(this,this.currentContainer)))),i=this.containers.length-1;i>=0;i--)e||s.push(function(t){return function(e){t._trigger("deactivate",e,this._uiHash(this))}}.call(this,this.containers[i])),this.containers[i].containerCache.over&&(s.push(function(t){return function(e){t._trigger("out",e,this._uiHash(this))}}.call(this,this.containers[i])),this.containers[i].containerCache.over=0);if(this.storedCursor&&(this.document.find("body").css("cursor",this.storedCursor),this.storedStylesheet.remove()),this._storedOpacity&&this.helper.css("opacity",this._storedOpacity),this._storedZIndex&&this.helper.css("zIndex","auto"===this._storedZIndex?"":this._storedZIndex),this.dragging=!1,this.cancelHelperRemoval){if(!e){for(this._trigger("beforeStop",t,this._uiHash()),i=0;s.length>i;i++)s[i].call(this,t);this._trigger("stop",t,this._uiHash())}return this.fromOutside=!1,!1}if(e||this._trigger("beforeStop",t,this._uiHash()),this.placeholder[0].parentNode.removeChild(this.placeholder[0]),this.helper[0]!==this.currentItem[0]&&this.helper.remove(),this.helper=null,!e){for(i=0;s.length>i;i++)s[i].call(this,t);this._trigger("stop",t,this._uiHash())}return this.fromOutside=!1,!0},_trigger:function(){t.Widget.prototype._trigger.apply(this,arguments)===!1&&this.cancel()},_uiHash:function(e){var i=e||this;return{helper:i.helper,placeholder:i.placeholder||t([]),position:i.position,originalPosition:i.originalPosition,offset:i.positionAbs,item:i.currentItem,sender:e?e.element:null}}})})(jQuery);(function(t,e){var i="ui-effects-";t.effects={effect:{}},function(t,e){function i(t,e,i){var s=u[e.type]||{};return null==t?i||!e.def?null:e.def:(t=s.floor?~~t:parseFloat(t),isNaN(t)?e.def:s.mod?(t+s.mod)%s.mod:0>t?0:t>s.max?s.max:t)}function s(i){var s=l(),n=s._rgba=[];return i=i.toLowerCase(),f(h,function(t,a){var o,r=a.re.exec(i),h=r&&a.parse(r),l=a.space||"rgba";return h?(o=s[l](h),s[c[l].cache]=o[c[l].cache],n=s._rgba=o._rgba,!1):e}),n.length?("0,0,0,0"===n.join()&&t.extend(n,a.transparent),s):a[i]}function n(t,e,i){return i=(i+1)%1,1>6*i?t+6*(e-t)*i:1>2*i?e:2>3*i?t+6*(e-t)*(2/3-i):t}var a,o="backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor",r=/^([\-+])=\s*(\d+\.?\d*)/,h=[{re:/rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,parse:function(t){return[t[1],t[2],t[3],t[4]]}},{re:/rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,parse:function(t){return[2.55*t[1],2.55*t[2],2.55*t[3],t[4]]}},{re:/#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,parse:function(t){return[parseInt(t[1],16),parseInt(t[2],16),parseInt(t[3],16)]}},{re:/#([a-f0-9])([a-f0-9])([a-f0-9])/,parse:function(t){return[parseInt(t[1]+t[1],16),parseInt(t[2]+t[2],16),parseInt(t[3]+t[3],16)]}},{re:/hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,space:"hsla",parse:function(t){return[t[1],t[2]/100,t[3]/100,t[4]]}}],l=t.Color=function(e,i,s,n){return new t.Color.fn.parse(e,i,s,n)},c={rgba:{props:{red:{idx:0,type:"byte"},green:{idx:1,type:"byte"},blue:{idx:2,type:"byte"}}},hsla:{props:{hue:{idx:0,type:"degrees"},saturation:{idx:1,type:"percent"},lightness:{idx:2,type:"percent"}}}},u={"byte":{floor:!0,max:255},percent:{max:1},degrees:{mod:360,floor:!0}},d=l.support={},p=t("<p>")[0],f=t.each;p.style.cssText="background-color:rgba(1,1,1,.5)",d.rgba=p.style.backgroundColor.indexOf("rgba")>-1,f(c,function(t,e){e.cache="_"+t,e.props.alpha={idx:3,type:"percent",def:1}}),l.fn=t.extend(l.prototype,{parse:function(n,o,r,h){if(n===e)return this._rgba=[null,null,null,null],this;(n.jquery||n.nodeType)&&(n=t(n).css(o),o=e);var u=this,d=t.type(n),p=this._rgba=[];return o!==e&&(n=[n,o,r,h],d="array"),"string"===d?this.parse(s(n)||a._default):"array"===d?(f(c.rgba.props,function(t,e){p[e.idx]=i(n[e.idx],e)}),this):"object"===d?(n instanceof l?f(c,function(t,e){n[e.cache]&&(u[e.cache]=n[e.cache].slice())}):f(c,function(e,s){var a=s.cache;f(s.props,function(t,e){if(!u[a]&&s.to){if("alpha"===t||null==n[t])return;u[a]=s.to(u._rgba)}u[a][e.idx]=i(n[t],e,!0)}),u[a]&&0>t.inArray(null,u[a].slice(0,3))&&(u[a][3]=1,s.from&&(u._rgba=s.from(u[a])))}),this):e},is:function(t){var i=l(t),s=!0,n=this;return f(c,function(t,a){var o,r=i[a.cache];return r&&(o=n[a.cache]||a.to&&a.to(n._rgba)||[],f(a.props,function(t,i){return null!=r[i.idx]?s=r[i.idx]===o[i.idx]:e})),s}),s},_space:function(){var t=[],e=this;return f(c,function(i,s){e[s.cache]&&t.push(i)}),t.pop()},transition:function(t,e){var s=l(t),n=s._space(),a=c[n],o=0===this.alpha()?l("transparent"):this,r=o[a.cache]||a.to(o._rgba),h=r.slice();return s=s[a.cache],f(a.props,function(t,n){var a=n.idx,o=r[a],l=s[a],c=u[n.type]||{};null!==l&&(null===o?h[a]=l:(c.mod&&(l-o>c.mod/2?o+=c.mod:o-l>c.mod/2&&(o-=c.mod)),h[a]=i((l-o)*e+o,n)))}),this[n](h)},blend:function(e){if(1===this._rgba[3])return this;var i=this._rgba.slice(),s=i.pop(),n=l(e)._rgba;return l(t.map(i,function(t,e){return(1-s)*n[e]+s*t}))},toRgbaString:function(){var e="rgba(",i=t.map(this._rgba,function(t,e){return null==t?e>2?1:0:t});return 1===i[3]&&(i.pop(),e="rgb("),e+i.join()+")"},toHslaString:function(){var e="hsla(",i=t.map(this.hsla(),function(t,e){return null==t&&(t=e>2?1:0),e&&3>e&&(t=Math.round(100*t)+"%"),t});return 1===i[3]&&(i.pop(),e="hsl("),e+i.join()+")"},toHexString:function(e){var i=this._rgba.slice(),s=i.pop();return e&&i.push(~~(255*s)),"#"+t.map(i,function(t){return t=(t||0).toString(16),1===t.length?"0"+t:t}).join("")},toString:function(){return 0===this._rgba[3]?"transparent":this.toRgbaString()}}),l.fn.parse.prototype=l.fn,c.hsla.to=function(t){if(null==t[0]||null==t[1]||null==t[2])return[null,null,null,t[3]];var e,i,s=t[0]/255,n=t[1]/255,a=t[2]/255,o=t[3],r=Math.max(s,n,a),h=Math.min(s,n,a),l=r-h,c=r+h,u=.5*c;return e=h===r?0:s===r?60*(n-a)/l+360:n===r?60*(a-s)/l+120:60*(s-n)/l+240,i=0===l?0:.5>=u?l/c:l/(2-c),[Math.round(e)%360,i,u,null==o?1:o]},c.hsla.from=function(t){if(null==t[0]||null==t[1]||null==t[2])return[null,null,null,t[3]];var e=t[0]/360,i=t[1],s=t[2],a=t[3],o=.5>=s?s*(1+i):s+i-s*i,r=2*s-o;return[Math.round(255*n(r,o,e+1/3)),Math.round(255*n(r,o,e)),Math.round(255*n(r,o,e-1/3)),a]},f(c,function(s,n){var a=n.props,o=n.cache,h=n.to,c=n.from;l.fn[s]=function(s){if(h&&!this[o]&&(this[o]=h(this._rgba)),s===e)return this[o].slice();var n,r=t.type(s),u="array"===r||"object"===r?s:arguments,d=this[o].slice();return f(a,function(t,e){var s=u["object"===r?t:e.idx];null==s&&(s=d[e.idx]),d[e.idx]=i(s,e)}),c?(n=l(c(d)),n[o]=d,n):l(d)},f(a,function(e,i){l.fn[e]||(l.fn[e]=function(n){var a,o=t.type(n),h="alpha"===e?this._hsla?"hsla":"rgba":s,l=this[h](),c=l[i.idx];return"undefined"===o?c:("function"===o&&(n=n.call(this,c),o=t.type(n)),null==n&&i.empty?this:("string"===o&&(a=r.exec(n),a&&(n=c+parseFloat(a[2])*("+"===a[1]?1:-1))),l[i.idx]=n,this[h](l)))})})}),l.hook=function(e){var i=e.split(" ");f(i,function(e,i){t.cssHooks[i]={set:function(e,n){var a,o,r="";if("transparent"!==n&&("string"!==t.type(n)||(a=s(n)))){if(n=l(a||n),!d.rgba&&1!==n._rgba[3]){for(o="backgroundColor"===i?e.parentNode:e;(""===r||"transparent"===r)&&o&&o.style;)try{r=t.css(o,"backgroundColor"),o=o.parentNode}catch(h){}n=n.blend(r&&"transparent"!==r?r:"_default")}n=n.toRgbaString()}try{e.style[i]=n}catch(h){}}},t.fx.step[i]=function(e){e.colorInit||(e.start=l(e.elem,i),e.end=l(e.end),e.colorInit=!0),t.cssHooks[i].set(e.elem,e.start.transition(e.end,e.pos))}})},l.hook(o),t.cssHooks.borderColor={expand:function(t){var e={};return f(["Top","Right","Bottom","Left"],function(i,s){e["border"+s+"Color"]=t}),e}},a=t.Color.names={aqua:"#00ffff",black:"#000000",blue:"#0000ff",fuchsia:"#ff00ff",gray:"#808080",green:"#008000",lime:"#00ff00",maroon:"#800000",navy:"#000080",olive:"#808000",purple:"#800080",red:"#ff0000",silver:"#c0c0c0",teal:"#008080",white:"#ffffff",yellow:"#ffff00",transparent:[null,null,null,0],_default:"#ffffff"}}(jQuery),function(){function i(e){var i,s,n=e.ownerDocument.defaultView?e.ownerDocument.defaultView.getComputedStyle(e,null):e.currentStyle,a={};if(n&&n.length&&n[0]&&n[n[0]])for(s=n.length;s--;)i=n[s],"string"==typeof n[i]&&(a[t.camelCase(i)]=n[i]);else for(i in n)"string"==typeof n[i]&&(a[i]=n[i]);return a}function s(e,i){var s,n,o={};for(s in i)n=i[s],e[s]!==n&&(a[s]||(t.fx.step[s]||!isNaN(parseFloat(n)))&&(o[s]=n));return o}var n=["add","remove","toggle"],a={border:1,borderBottom:1,borderColor:1,borderLeft:1,borderRight:1,borderTop:1,borderWidth:1,margin:1,padding:1};t.each(["borderLeftStyle","borderRightStyle","borderBottomStyle","borderTopStyle"],function(e,i){t.fx.step[i]=function(t){("none"!==t.end&&!t.setAttr||1===t.pos&&!t.setAttr)&&(jQuery.style(t.elem,i,t.end),t.setAttr=!0)}}),t.fn.addBack||(t.fn.addBack=function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}),t.effects.animateClass=function(e,a,o,r){var h=t.speed(a,o,r);return this.queue(function(){var a,o=t(this),r=o.attr("class")||"",l=h.children?o.find("*").addBack():o;l=l.map(function(){var e=t(this);return{el:e,start:i(this)}}),a=function(){t.each(n,function(t,i){e[i]&&o[i+"Class"](e[i])})},a(),l=l.map(function(){return this.end=i(this.el[0]),this.diff=s(this.start,this.end),this}),o.attr("class",r),l=l.map(function(){var e=this,i=t.Deferred(),s=t.extend({},h,{queue:!1,complete:function(){i.resolve(e)}});return this.el.animate(this.diff,s),i.promise()}),t.when.apply(t,l.get()).done(function(){a(),t.each(arguments,function(){var e=this.el;t.each(this.diff,function(t){e.css(t,"")})}),h.complete.call(o[0])})})},t.fn.extend({addClass:function(e){return function(i,s,n,a){return s?t.effects.animateClass.call(this,{add:i},s,n,a):e.apply(this,arguments)}}(t.fn.addClass),removeClass:function(e){return function(i,s,n,a){return arguments.length>1?t.effects.animateClass.call(this,{remove:i},s,n,a):e.apply(this,arguments)}}(t.fn.removeClass),toggleClass:function(i){return function(s,n,a,o,r){return"boolean"==typeof n||n===e?a?t.effects.animateClass.call(this,n?{add:s}:{remove:s},a,o,r):i.apply(this,arguments):t.effects.animateClass.call(this,{toggle:s},n,a,o)}}(t.fn.toggleClass),switchClass:function(e,i,s,n,a){return t.effects.animateClass.call(this,{add:i,remove:e},s,n,a)}})}(),function(){function s(e,i,s,n){return t.isPlainObject(e)&&(i=e,e=e.effect),e={effect:e},null==i&&(i={}),t.isFunction(i)&&(n=i,s=null,i={}),("number"==typeof i||t.fx.speeds[i])&&(n=s,s=i,i={}),t.isFunction(s)&&(n=s,s=null),i&&t.extend(e,i),s=s||i.duration,e.duration=t.fx.off?0:"number"==typeof s?s:s in t.fx.speeds?t.fx.speeds[s]:t.fx.speeds._default,e.complete=n||i.complete,e}function n(e){return!e||"number"==typeof e||t.fx.speeds[e]?!0:"string"!=typeof e||t.effects.effect[e]?t.isFunction(e)?!0:"object"!=typeof e||e.effect?!1:!0:!0}t.extend(t.effects,{version:"1.10.3",save:function(t,e){for(var s=0;e.length>s;s++)null!==e[s]&&t.data(i+e[s],t[0].style[e[s]])},restore:function(t,s){var n,a;for(a=0;s.length>a;a++)null!==s[a]&&(n=t.data(i+s[a]),n===e&&(n=""),t.css(s[a],n))},setMode:function(t,e){return"toggle"===e&&(e=t.is(":hidden")?"show":"hide"),e},getBaseline:function(t,e){var i,s;switch(t[0]){case"top":i=0;break;case"middle":i=.5;break;case"bottom":i=1;break;default:i=t[0]/e.height}switch(t[1]){case"left":s=0;break;case"center":s=.5;break;case"right":s=1;break;default:s=t[1]/e.width}return{x:s,y:i}},createWrapper:function(e){if(e.parent().is(".ui-effects-wrapper"))return e.parent();var i={width:e.outerWidth(!0),height:e.outerHeight(!0),"float":e.css("float")},s=t("<div></div>").addClass("ui-effects-wrapper").css({fontSize:"100%",background:"transparent",border:"none",margin:0,padding:0}),n={width:e.width(),height:e.height()},a=document.activeElement;try{a.id}catch(o){a=document.body}return e.wrap(s),(e[0]===a||t.contains(e[0],a))&&t(a).focus(),s=e.parent(),"static"===e.css("position")?(s.css({position:"relative"}),e.css({position:"relative"})):(t.extend(i,{position:e.css("position"),zIndex:e.css("z-index")}),t.each(["top","left","bottom","right"],function(t,s){i[s]=e.css(s),isNaN(parseInt(i[s],10))&&(i[s]="auto")}),e.css({position:"relative",top:0,left:0,right:"auto",bottom:"auto"})),e.css(n),s.css(i).show()},removeWrapper:function(e){var i=document.activeElement;return e.parent().is(".ui-effects-wrapper")&&(e.parent().replaceWith(e),(e[0]===i||t.contains(e[0],i))&&t(i).focus()),e},setTransition:function(e,i,s,n){return n=n||{},t.each(i,function(t,i){var a=e.cssUnit(i);a[0]>0&&(n[i]=a[0]*s+a[1])}),n}}),t.fn.extend({effect:function(){function e(e){function s(){t.isFunction(a)&&a.call(n[0]),t.isFunction(e)&&e()}var n=t(this),a=i.complete,r=i.mode;(n.is(":hidden")?"hide"===r:"show"===r)?(n[r](),s()):o.call(n[0],i,s)}var i=s.apply(this,arguments),n=i.mode,a=i.queue,o=t.effects.effect[i.effect];return t.fx.off||!o?n?this[n](i.duration,i.complete):this.each(function(){i.complete&&i.complete.call(this)}):a===!1?this.each(e):this.queue(a||"fx",e)},show:function(t){return function(e){if(n(e))return t.apply(this,arguments);var i=s.apply(this,arguments);return i.mode="show",this.effect.call(this,i)}}(t.fn.show),hide:function(t){return function(e){if(n(e))return t.apply(this,arguments);var i=s.apply(this,arguments);return i.mode="hide",this.effect.call(this,i)}}(t.fn.hide),toggle:function(t){return function(e){if(n(e)||"boolean"==typeof e)return t.apply(this,arguments);var i=s.apply(this,arguments);return i.mode="toggle",this.effect.call(this,i)}}(t.fn.toggle),cssUnit:function(e){var i=this.css(e),s=[];return t.each(["em","px","%","pt"],function(t,e){i.indexOf(e)>0&&(s=[parseFloat(i),e])}),s}})}(),function(){var e={};t.each(["Quad","Cubic","Quart","Quint","Expo"],function(t,i){e[i]=function(e){return Math.pow(e,t+2)}}),t.extend(e,{Sine:function(t){return 1-Math.cos(t*Math.PI/2)},Circ:function(t){return 1-Math.sqrt(1-t*t)},Elastic:function(t){return 0===t||1===t?t:-Math.pow(2,8*(t-1))*Math.sin((80*(t-1)-7.5)*Math.PI/15)},Back:function(t){return t*t*(3*t-2)},Bounce:function(t){for(var e,i=4;((e=Math.pow(2,--i))-1)/11>t;);return 1/Math.pow(4,3-i)-7.5625*Math.pow((3*e-2)/22-t,2)}}),t.each(e,function(e,i){t.easing["easeIn"+e]=i,t.easing["easeOut"+e]=function(t){return 1-i(1-t)},t.easing["easeInOut"+e]=function(t){return.5>t?i(2*t)/2:1-i(-2*t+2)/2}})}()})(jQuery);

/*! jPlayer 2.9.2 for jQuery ~ (c) 2009-2014 Happyworm Ltd ~ MIT License */
!function(a,b){"function"==typeof define&&define.amd?define(["jquery"],b):b("object"==typeof exports?require("jquery"):a.jQuery?a.jQuery:a.Zepto)}(this,function(a,b){a.fn.jPlayer=function(c){var d="jPlayer",e="string"==typeof c,f=Array.prototype.slice.call(arguments,1),g=this;return c=!e&&f.length?a.extend.apply(null,[!0,c].concat(f)):c,e&&"_"===c.charAt(0)?g:(this.each(e?function(){var e=a(this).data(d),h=e&&a.isFunction(e[c])?e[c].apply(e,f):e;return h!==e&&h!==b?(g=h,!1):void 0}:function(){var b=a(this).data(d);b?b.option(c||{}):a(this).data(d,new a.jPlayer(c,this))}),g)},a.jPlayer=function(b,c){if(arguments.length){this.element=a(c),this.options=a.extend(!0,{},this.options,b);var d=this;this.element.bind("remove.jPlayer",function(){d.destroy()}),this._init()}},"function"!=typeof a.fn.stop&&(a.fn.stop=function(){}),a.jPlayer.emulateMethods="load play pause",a.jPlayer.emulateStatus="src readyState networkState currentTime duration paused ended playbackRate",a.jPlayer.emulateOptions="muted volume",a.jPlayer.reservedEvent="ready flashreset resize repeat error warning",a.jPlayer.event={},a.each(["ready","setmedia","flashreset","resize","repeat","click","error","warning","loadstart","progress","suspend","abort","emptied","stalled","play","pause","loadedmetadata","loadeddata","waiting","playing","canplay","canplaythrough","seeking","seeked","timeupdate","ended","ratechange","durationchange","volumechange"],function(){a.jPlayer.event[this]="jPlayer_"+this}),a.jPlayer.htmlEvent=["loadstart","abort","emptied","stalled","loadedmetadata","canplay","canplaythrough"],a.jPlayer.pause=function(){a.jPlayer.prototype.destroyRemoved(),a.each(a.jPlayer.prototype.instances,function(a,b){b.data("jPlayer").status.srcSet&&b.jPlayer("pause")})},a.jPlayer.timeFormat={showHour:!1,showMin:!0,showSec:!0,padHour:!1,padMin:!0,padSec:!0,sepHour:":",sepMin:":",sepSec:""};var c=function(){this.init()};c.prototype={init:function(){this.options={timeFormat:a.jPlayer.timeFormat}},time:function(a){a=a&&"number"==typeof a?a:0;var b=new Date(1e3*a),c=b.getUTCHours(),d=this.options.timeFormat.showHour?b.getUTCMinutes():b.getUTCMinutes()+60*c,e=this.options.timeFormat.showMin?b.getUTCSeconds():b.getUTCSeconds()+60*d,f=this.options.timeFormat.padHour&&10>c?"0"+c:c,g=this.options.timeFormat.padMin&&10>d?"0"+d:d,h=this.options.timeFormat.padSec&&10>e?"0"+e:e,i="";return i+=this.options.timeFormat.showHour?f+this.options.timeFormat.sepHour:"",i+=this.options.timeFormat.showMin?g+this.options.timeFormat.sepMin:"",i+=this.options.timeFormat.showSec?h+this.options.timeFormat.sepSec:""}};var d=new c;a.jPlayer.convertTime=function(a){return d.time(a)},a.jPlayer.uaBrowser=function(a){var b=a.toLowerCase(),c=/(webkit)[ \/]([\w.]+)/,d=/(opera)(?:.*version)?[ \/]([\w.]+)/,e=/(msie) ([\w.]+)/,f=/(mozilla)(?:.*? rv:([\w.]+))?/,g=c.exec(b)||d.exec(b)||e.exec(b)||b.indexOf("compatible")<0&&f.exec(b)||[];return{browser:g[1]||"",version:g[2]||"0"}},a.jPlayer.uaPlatform=function(a){var b=a.toLowerCase(),c=/(ipad|iphone|ipod|android|blackberry|playbook|windows ce|webos)/,d=/(ipad|playbook)/,e=/(android)/,f=/(mobile)/,g=c.exec(b)||[],h=d.exec(b)||!f.exec(b)&&e.exec(b)||[];return g[1]&&(g[1]=g[1].replace(/\s/g,"_")),{platform:g[1]||"",tablet:h[1]||""}},a.jPlayer.browser={},a.jPlayer.platform={};var e=a.jPlayer.uaBrowser(navigator.userAgent);e.browser&&(a.jPlayer.browser[e.browser]=!0,a.jPlayer.browser.version=e.version);var f=a.jPlayer.uaPlatform(navigator.userAgent);f.platform&&(a.jPlayer.platform[f.platform]=!0,a.jPlayer.platform.mobile=!f.tablet,a.jPlayer.platform.tablet=!!f.tablet),a.jPlayer.getDocMode=function(){var b;return a.jPlayer.browser.msie&&(document.documentMode?b=document.documentMode:(b=5,document.compatMode&&"CSS1Compat"===document.compatMode&&(b=7))),b},a.jPlayer.browser.documentMode=a.jPlayer.getDocMode(),a.jPlayer.nativeFeatures={init:function(){var a,b,c,d=document,e=d.createElement("video"),f={w3c:["fullscreenEnabled","fullscreenElement","requestFullscreen","exitFullscreen","fullscreenchange","fullscreenerror"],moz:["mozFullScreenEnabled","mozFullScreenElement","mozRequestFullScreen","mozCancelFullScreen","mozfullscreenchange","mozfullscreenerror"],webkit:["","webkitCurrentFullScreenElement","webkitRequestFullScreen","webkitCancelFullScreen","webkitfullscreenchange",""],webkitVideo:["webkitSupportsFullscreen","webkitDisplayingFullscreen","webkitEnterFullscreen","webkitExitFullscreen","",""],ms:["","msFullscreenElement","msRequestFullscreen","msExitFullscreen","MSFullscreenChange","MSFullscreenError"]},g=["w3c","moz","webkit","webkitVideo","ms"];for(this.fullscreen=a={support:{w3c:!!d[f.w3c[0]],moz:!!d[f.moz[0]],webkit:"function"==typeof d[f.webkit[3]],webkitVideo:"function"==typeof e[f.webkitVideo[2]],ms:"function"==typeof e[f.ms[2]]},used:{}},b=0,c=g.length;c>b;b++){var h=g[b];if(a.support[h]){a.spec=h,a.used[h]=!0;break}}if(a.spec){var i=f[a.spec];a.api={fullscreenEnabled:!0,fullscreenElement:function(a){return a=a?a:d,a[i[1]]},requestFullscreen:function(a){return a[i[2]]()},exitFullscreen:function(a){return a=a?a:d,a[i[3]]()}},a.event={fullscreenchange:i[4],fullscreenerror:i[5]}}else a.api={fullscreenEnabled:!1,fullscreenElement:function(){return null},requestFullscreen:function(){},exitFullscreen:function(){}},a.event={}}},a.jPlayer.nativeFeatures.init(),a.jPlayer.focus=null,a.jPlayer.keyIgnoreElementNames="A INPUT TEXTAREA SELECT BUTTON";var g=function(b){var c,d=a.jPlayer.focus;d&&(a.each(a.jPlayer.keyIgnoreElementNames.split(/\s+/g),function(a,d){return b.target.nodeName.toUpperCase()===d.toUpperCase()?(c=!0,!1):void 0}),c||a.each(d.options.keyBindings,function(c,e){return e&&a.isFunction(e.fn)&&("number"==typeof e.key&&b.which===e.key||"string"==typeof e.key&&b.key===e.key)?(b.preventDefault(),e.fn(d),!1):void 0}))};a.jPlayer.keys=function(b){var c="keydown.jPlayer";a(document.documentElement).unbind(c),b&&a(document.documentElement).bind(c,g)},a.jPlayer.keys(!0),a.jPlayer.prototype={count:0,version:{script:"2.9.2",needFlash:"2.9.0",flash:"unknown"},options:{swfPath:"js",solution:"html, flash",supplied:"mp3",auroraFormats:"wav",preload:"metadata",volume:.8,muted:!1,remainingDuration:!1,toggleDuration:!1,captureDuration:!0,playbackRate:1,defaultPlaybackRate:1,minPlaybackRate:.5,maxPlaybackRate:4,wmode:"opaque",backgroundColor:"#000000",cssSelectorAncestor:"#jp_container_1",cssSelector:{videoPlay:".jp-video-play",play:".jp-play",pause:".jp-pause",stop:".jp-stop",seekBar:".jp-seek-bar",playBar:".jp-play-bar",mute:".jp-mute",unmute:".jp-unmute",volumeBar:".jp-volume-bar",volumeBarValue:".jp-volume-bar-value",volumeMax:".jp-volume-max",playbackRateBar:".jp-playback-rate-bar",playbackRateBarValue:".jp-playback-rate-bar-value",currentTime:".jp-current-time",duration:".jp-duration",title:".jp-title",fullScreen:".jp-full-screen",restoreScreen:".jp-restore-screen",repeat:".jp-repeat",repeatOff:".jp-repeat-off",gui:".jp-gui",noSolution:".jp-no-solution"},stateClass:{playing:"jp-state-playing",seeking:"jp-state-seeking",muted:"jp-state-muted",looped:"jp-state-looped",fullScreen:"jp-state-full-screen",noVolume:"jp-state-no-volume"},useStateClassSkin:!1,autoBlur:!0,smoothPlayBar:!1,fullScreen:!1,fullWindow:!1,autohide:{restored:!1,full:!0,fadeIn:200,fadeOut:600,hold:1e3},loop:!1,repeat:function(b){b.jPlayer.options.loop?a(this).unbind(".jPlayerRepeat").bind(a.jPlayer.event.ended+".jPlayer.jPlayerRepeat",function(){a(this).jPlayer("play")}):a(this).unbind(".jPlayerRepeat")},nativeVideoControls:{},noFullWindow:{msie:/msie [0-6]\./,ipad:/ipad.*?os [0-4]\./,iphone:/iphone/,ipod:/ipod/,android_pad:/android [0-3]\.(?!.*?mobile)/,android_phone:/(?=.*android)(?!.*chrome)(?=.*mobile)/,blackberry:/blackberry/,windows_ce:/windows ce/,iemobile:/iemobile/,webos:/webos/},noVolume:{ipad:/ipad/,iphone:/iphone/,ipod:/ipod/,android_pad:/android(?!.*?mobile)/,android_phone:/android.*?mobile/,blackberry:/blackberry/,windows_ce:/windows ce/,iemobile:/iemobile/,webos:/webos/,playbook:/playbook/},timeFormat:{},keyEnabled:!1,audioFullScreen:!1,keyBindings:{play:{key:80,fn:function(a){a.status.paused?a.play():a.pause()}},fullScreen:{key:70,fn:function(a){(a.status.video||a.options.audioFullScreen)&&a._setOption("fullScreen",!a.options.fullScreen)}},muted:{key:77,fn:function(a){a._muted(!a.options.muted)}},volumeUp:{key:190,fn:function(a){a.volume(a.options.volume+.1)}},volumeDown:{key:188,fn:function(a){a.volume(a.options.volume-.1)}},loop:{key:76,fn:function(a){a._loop(!a.options.loop)}}},verticalVolume:!1,verticalPlaybackRate:!1,globalVolume:!1,idPrefix:"jp",noConflict:"jQuery",emulateHtml:!1,consoleAlerts:!0,errorAlerts:!1,warningAlerts:!1},optionsAudio:{size:{width:"0px",height:"0px",cssClass:""},sizeFull:{width:"0px",height:"0px",cssClass:""}},optionsVideo:{size:{width:"480px",height:"270px",cssClass:"jp-video-270p"},sizeFull:{width:"100%",height:"100%",cssClass:"jp-video-full"}},instances:{},status:{src:"",media:{},paused:!0,format:{},formatType:"",waitForPlay:!0,waitForLoad:!0,srcSet:!1,video:!1,seekPercent:0,currentPercentRelative:0,currentPercentAbsolute:0,currentTime:0,duration:0,remaining:0,videoWidth:0,videoHeight:0,readyState:0,networkState:0,playbackRate:1,ended:0},internal:{ready:!1},solution:{html:!0,aurora:!0,flash:!0},format:{mp3:{codec:"audio/mpeg",flashCanPlay:!0,media:"audio"},m4a:{codec:'audio/mp4; codecs="mp4a.40.2"',flashCanPlay:!0,media:"audio"},m3u8a:{codec:'application/vnd.apple.mpegurl; codecs="mp4a.40.2"',flashCanPlay:!1,media:"audio"},m3ua:{codec:"audio/mpegurl",flashCanPlay:!1,media:"audio"},oga:{codec:'audio/ogg; codecs="vorbis, opus"',flashCanPlay:!1,media:"audio"},flac:{codec:"audio/x-flac",flashCanPlay:!1,media:"audio"},wav:{codec:'audio/wav; codecs="1"',flashCanPlay:!1,media:"audio"},webma:{codec:'audio/webm; codecs="vorbis"',flashCanPlay:!1,media:"audio"},fla:{codec:"audio/x-flv",flashCanPlay:!0,media:"audio"},rtmpa:{codec:'audio/rtmp; codecs="rtmp"',flashCanPlay:!0,media:"audio"},m4v:{codec:'video/mp4; codecs="avc1.42E01E, mp4a.40.2"',flashCanPlay:!0,media:"video"},m3u8v:{codec:'application/vnd.apple.mpegurl; codecs="avc1.42E01E, mp4a.40.2"',flashCanPlay:!1,media:"video"},m3uv:{codec:"audio/mpegurl",flashCanPlay:!1,media:"video"},ogv:{codec:'video/ogg; codecs="theora, vorbis"',flashCanPlay:!1,media:"video"},webmv:{codec:'video/webm; codecs="vorbis, vp8"',flashCanPlay:!1,media:"video"},flv:{codec:"video/x-flv",flashCanPlay:!0,media:"video"},rtmpv:{codec:'video/rtmp; codecs="rtmp"',flashCanPlay:!0,media:"video"}},_init:function(){var c=this;if(this.element.empty(),this.status=a.extend({},this.status),this.internal=a.extend({},this.internal),this.options.timeFormat=a.extend({},a.jPlayer.timeFormat,this.options.timeFormat),this.internal.cmdsIgnored=a.jPlayer.platform.ipad||a.jPlayer.platform.iphone||a.jPlayer.platform.ipod,this.internal.domNode=this.element.get(0),this.options.keyEnabled&&!a.jPlayer.focus&&(a.jPlayer.focus=this),this.androidFix={setMedia:!1,play:!1,pause:!1,time:0/0},a.jPlayer.platform.android&&(this.options.preload="auto"!==this.options.preload?"metadata":"auto"),this.formats=[],this.solutions=[],this.require={},this.htmlElement={},this.html={},this.html.audio={},this.html.video={},this.aurora={},this.aurora.formats=[],this.aurora.properties=[],this.flash={},this.css={},this.css.cs={},this.css.jq={},this.ancestorJq=[],this.options.volume=this._limitValue(this.options.volume,0,1),a.each(this.options.supplied.toLowerCase().split(","),function(b,d){var e=d.replace(/^\s+|\s+$/g,"");if(c.format[e]){var f=!1;a.each(c.formats,function(a,b){return e===b?(f=!0,!1):void 0}),f||c.formats.push(e)}}),a.each(this.options.solution.toLowerCase().split(","),function(b,d){var e=d.replace(/^\s+|\s+$/g,"");if(c.solution[e]){var f=!1;a.each(c.solutions,function(a,b){return e===b?(f=!0,!1):void 0}),f||c.solutions.push(e)}}),a.each(this.options.auroraFormats.toLowerCase().split(","),function(b,d){var e=d.replace(/^\s+|\s+$/g,"");if(c.format[e]){var f=!1;a.each(c.aurora.formats,function(a,b){return e===b?(f=!0,!1):void 0}),f||c.aurora.formats.push(e)}}),this.internal.instance="jp_"+this.count,this.instances[this.internal.instance]=this.element,this.element.attr("id")||this.element.attr("id",this.options.idPrefix+"_jplayer_"+this.count),this.internal.self=a.extend({},{id:this.element.attr("id"),jq:this.element}),this.internal.audio=a.extend({},{id:this.options.idPrefix+"_audio_"+this.count,jq:b}),this.internal.video=a.extend({},{id:this.options.idPrefix+"_video_"+this.count,jq:b}),this.internal.flash=a.extend({},{id:this.options.idPrefix+"_flash_"+this.count,jq:b,swf:this.options.swfPath+(".swf"!==this.options.swfPath.toLowerCase().slice(-4)?(this.options.swfPath&&"/"!==this.options.swfPath.slice(-1)?"/":"")+"jquery.jplayer.swf":"")}),this.internal.poster=a.extend({},{id:this.options.idPrefix+"_poster_"+this.count,jq:b}),a.each(a.jPlayer.event,function(a,d){c.options[a]!==b&&(c.element.bind(d+".jPlayer",c.options[a]),c.options[a]=b)}),this.require.audio=!1,this.require.video=!1,a.each(this.formats,function(a,b){c.require[c.format[b].media]=!0}),this.options=this.require.video?a.extend(!0,{},this.optionsVideo,this.options):a.extend(!0,{},this.optionsAudio,this.options),this._setSize(),this.status.nativeVideoControls=this._uaBlocklist(this.options.nativeVideoControls),this.status.noFullWindow=this._uaBlocklist(this.options.noFullWindow),this.status.noVolume=this._uaBlocklist(this.options.noVolume),a.jPlayer.nativeFeatures.fullscreen.api.fullscreenEnabled&&this._fullscreenAddEventListeners(),this._restrictNativeVideoControls(),this.htmlElement.poster=document.createElement("img"),this.htmlElement.poster.id=this.internal.poster.id,this.htmlElement.poster.onload=function(){(!c.status.video||c.status.waitForPlay)&&c.internal.poster.jq.show()},this.element.append(this.htmlElement.poster),this.internal.poster.jq=a("#"+this.internal.poster.id),this.internal.poster.jq.css({width:this.status.width,height:this.status.height}),this.internal.poster.jq.hide(),this.internal.poster.jq.bind("click.jPlayer",function(){c._trigger(a.jPlayer.event.click)}),this.html.audio.available=!1,this.require.audio&&(this.htmlElement.audio=document.createElement("audio"),this.htmlElement.audio.id=this.internal.audio.id,this.html.audio.available=!!this.htmlElement.audio.canPlayType&&this._testCanPlayType(this.htmlElement.audio)),this.html.video.available=!1,this.require.video&&(this.htmlElement.video=document.createElement("video"),this.htmlElement.video.id=this.internal.video.id,this.html.video.available=!!this.htmlElement.video.canPlayType&&this._testCanPlayType(this.htmlElement.video)),this.flash.available=this._checkForFlash(10.1),this.html.canPlay={},this.aurora.canPlay={},this.flash.canPlay={},a.each(this.formats,function(b,d){c.html.canPlay[d]=c.html[c.format[d].media].available&&""!==c.htmlElement[c.format[d].media].canPlayType(c.format[d].codec),c.aurora.canPlay[d]=a.inArray(d,c.aurora.formats)>-1,c.flash.canPlay[d]=c.format[d].flashCanPlay&&c.flash.available}),this.html.desired=!1,this.aurora.desired=!1,this.flash.desired=!1,a.each(this.solutions,function(b,d){if(0===b)c[d].desired=!0;else{var e=!1,f=!1;a.each(c.formats,function(a,b){c[c.solutions[0]].canPlay[b]&&("video"===c.format[b].media?f=!0:e=!0)}),c[d].desired=c.require.audio&&!e||c.require.video&&!f}}),this.html.support={},this.aurora.support={},this.flash.support={},a.each(this.formats,function(a,b){c.html.support[b]=c.html.canPlay[b]&&c.html.desired,c.aurora.support[b]=c.aurora.canPlay[b]&&c.aurora.desired,c.flash.support[b]=c.flash.canPlay[b]&&c.flash.desired}),this.html.used=!1,this.aurora.used=!1,this.flash.used=!1,a.each(this.solutions,function(b,d){a.each(c.formats,function(a,b){return c[d].support[b]?(c[d].used=!0,!1):void 0})}),this._resetActive(),this._resetGate(),this._cssSelectorAncestor(this.options.cssSelectorAncestor),this.html.used||this.aurora.used||this.flash.used?this.css.jq.noSolution.length&&this.css.jq.noSolution.hide():(this._error({type:a.jPlayer.error.NO_SOLUTION,context:"{solution:'"+this.options.solution+"', supplied:'"+this.options.supplied+"'}",message:a.jPlayer.errorMsg.NO_SOLUTION,hint:a.jPlayer.errorHint.NO_SOLUTION}),this.css.jq.noSolution.length&&this.css.jq.noSolution.show()),this.flash.used){var d,e="jQuery="+encodeURI(this.options.noConflict)+"&id="+encodeURI(this.internal.self.id)+"&vol="+this.options.volume+"&muted="+this.options.muted;if(a.jPlayer.browser.msie&&(Number(a.jPlayer.browser.version)<9||a.jPlayer.browser.documentMode<9)){var f='<object id="'+this.internal.flash.id+'" classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="0" height="0" tabindex="-1"></object>',g=['<param name="movie" value="'+this.internal.flash.swf+'" />','<param name="FlashVars" value="'+e+'" />','<param name="allowScriptAccess" value="always" />','<param name="bgcolor" value="'+this.options.backgroundColor+'" />','<param name="wmode" value="'+this.options.wmode+'" />'];d=document.createElement(f);for(var h=0;h<g.length;h++)d.appendChild(document.createElement(g[h]))}else{var i=function(a,b,c){var d=document.createElement("param");d.setAttribute("name",b),d.setAttribute("value",c),a.appendChild(d)};d=document.createElement("object"),d.setAttribute("id",this.internal.flash.id),d.setAttribute("name",this.internal.flash.id),d.setAttribute("data",this.internal.flash.swf),d.setAttribute("type","application/x-shockwave-flash"),d.setAttribute("width","1"),d.setAttribute("height","1"),d.setAttribute("tabindex","-1"),i(d,"flashvars",e),i(d,"allowscriptaccess","always"),i(d,"bgcolor",this.options.backgroundColor),i(d,"wmode",this.options.wmode)}this.element.append(d),this.internal.flash.jq=a(d)}this.status.playbackRateEnabled=this.html.used&&!this.flash.used?this._testPlaybackRate("audio"):!1,this._updatePlaybackRate(),this.html.used&&(this.html.audio.available&&(this._addHtmlEventListeners(this.htmlElement.audio,this.html.audio),this.element.append(this.htmlElement.audio),this.internal.audio.jq=a("#"+this.internal.audio.id)),this.html.video.available&&(this._addHtmlEventListeners(this.htmlElement.video,this.html.video),this.element.append(this.htmlElement.video),this.internal.video.jq=a("#"+this.internal.video.id),this.internal.video.jq.css(this.status.nativeVideoControls?{width:this.status.width,height:this.status.height}:{width:"0px",height:"0px"}),this.internal.video.jq.bind("click.jPlayer",function(){c._trigger(a.jPlayer.event.click)}))),this.aurora.used,this.options.emulateHtml&&this._emulateHtmlBridge(),!this.html.used&&!this.aurora.used||this.flash.used||setTimeout(function(){c.internal.ready=!0,c.version.flash="n/a",c._trigger(a.jPlayer.event.repeat),c._trigger(a.jPlayer.event.ready)},100),this._updateNativeVideoControls(),this.css.jq.videoPlay.length&&this.css.jq.videoPlay.hide(),a.jPlayer.prototype.count++},destroy:function(){this.clearMedia(),this._removeUiClass(),this.css.jq.currentTime.length&&this.css.jq.currentTime.text(""),this.css.jq.duration.length&&this.css.jq.duration.text(""),a.each(this.css.jq,function(a,b){b.length&&b.unbind(".jPlayer")}),this.internal.poster.jq.unbind(".jPlayer"),this.internal.video.jq&&this.internal.video.jq.unbind(".jPlayer"),this._fullscreenRemoveEventListeners(),this===a.jPlayer.focus&&(a.jPlayer.focus=null),this.options.emulateHtml&&this._destroyHtmlBridge(),this.element.removeData("jPlayer"),this.element.unbind(".jPlayer"),this.element.empty(),delete this.instances[this.internal.instance]},destroyRemoved:function(){var b=this;a.each(this.instances,function(a,c){b.element!==c&&(c.data("jPlayer")||(c.jPlayer("destroy"),delete b.instances[a]))})},enable:function(){},disable:function(){},_testCanPlayType:function(a){try{return a.canPlayType(this.format.mp3.codec),!0}catch(b){return!1}},_testPlaybackRate:function(a){var b,c=.5;a="string"==typeof a?a:"audio",b=document.createElement(a);try{return"playbackRate"in b?(b.playbackRate=c,b.playbackRate===c):!1}catch(d){return!1}},_uaBlocklist:function(b){var c=navigator.userAgent.toLowerCase(),d=!1;return a.each(b,function(a,b){return b&&b.test(c)?(d=!0,!1):void 0}),d},_restrictNativeVideoControls:function(){this.require.audio&&this.status.nativeVideoControls&&(this.status.nativeVideoControls=!1,this.status.noFullWindow=!0)},_updateNativeVideoControls:function(){this.html.video.available&&this.html.used&&(this.htmlElement.video.controls=this.status.nativeVideoControls,this._updateAutohide(),this.status.nativeVideoControls&&this.require.video?(this.internal.poster.jq.hide(),this.internal.video.jq.css({width:this.status.width,height:this.status.height})):this.status.waitForPlay&&this.status.video&&(this.internal.poster.jq.show(),this.internal.video.jq.css({width:"0px",height:"0px"})))},_addHtmlEventListeners:function(b,c){var d=this;b.preload=this.options.preload,b.muted=this.options.muted,b.volume=this.options.volume,this.status.playbackRateEnabled&&(b.defaultPlaybackRate=this.options.defaultPlaybackRate,b.playbackRate=this.options.playbackRate),b.addEventListener("progress",function(){c.gate&&(d.internal.cmdsIgnored&&this.readyState>0&&(d.internal.cmdsIgnored=!1),d._getHtmlStatus(b),d._updateInterface(),d._trigger(a.jPlayer.event.progress))},!1),b.addEventListener("loadeddata",function(){c.gate&&(d.androidFix.setMedia=!1,d.androidFix.play&&(d.androidFix.play=!1,d.play(d.androidFix.time)),d.androidFix.pause&&(d.androidFix.pause=!1,d.pause(d.androidFix.time)),d._trigger(a.jPlayer.event.loadeddata))},!1),b.addEventListener("timeupdate",function(){c.gate&&(d._getHtmlStatus(b),d._updateInterface(),d._trigger(a.jPlayer.event.timeupdate))},!1),b.addEventListener("durationchange",function(){c.gate&&(d._getHtmlStatus(b),d._updateInterface(),d._trigger(a.jPlayer.event.durationchange))},!1),b.addEventListener("play",function(){c.gate&&(d._updateButtons(!0),d._html_checkWaitForPlay(),d._trigger(a.jPlayer.event.play))},!1),b.addEventListener("playing",function(){c.gate&&(d._updateButtons(!0),d._seeked(),d._trigger(a.jPlayer.event.playing))},!1),b.addEventListener("pause",function(){c.gate&&(d._updateButtons(!1),d._trigger(a.jPlayer.event.pause))},!1),b.addEventListener("waiting",function(){c.gate&&(d._seeking(),d._trigger(a.jPlayer.event.waiting))},!1),b.addEventListener("seeking",function(){c.gate&&(d._seeking(),d._trigger(a.jPlayer.event.seeking))},!1),b.addEventListener("seeked",function(){c.gate&&(d._seeked(),d._trigger(a.jPlayer.event.seeked))},!1),b.addEventListener("volumechange",function(){c.gate&&(d.options.volume=b.volume,d.options.muted=b.muted,d._updateMute(),d._updateVolume(),d._trigger(a.jPlayer.event.volumechange))},!1),b.addEventListener("ratechange",function(){c.gate&&(d.options.defaultPlaybackRate=b.defaultPlaybackRate,d.options.playbackRate=b.playbackRate,d._updatePlaybackRate(),d._trigger(a.jPlayer.event.ratechange))},!1),b.addEventListener("suspend",function(){c.gate&&(d._seeked(),d._trigger(a.jPlayer.event.suspend))},!1),b.addEventListener("ended",function(){c.gate&&(a.jPlayer.browser.webkit||(d.htmlElement.media.currentTime=0),d.htmlElement.media.pause(),d._updateButtons(!1),d._getHtmlStatus(b,!0),d._updateInterface(),d._trigger(a.jPlayer.event.ended))},!1),b.addEventListener("error",function(){c.gate&&(d._updateButtons(!1),d._seeked(),d.status.srcSet&&(clearTimeout(d.internal.htmlDlyCmdId),d.status.waitForLoad=!0,d.status.waitForPlay=!0,d.status.video&&!d.status.nativeVideoControls&&d.internal.video.jq.css({width:"0px",height:"0px"}),d._validString(d.status.media.poster)&&!d.status.nativeVideoControls&&d.internal.poster.jq.show(),d.css.jq.videoPlay.length&&d.css.jq.videoPlay.show(),d._error({type:a.jPlayer.error.URL,context:d.status.src,message:a.jPlayer.errorMsg.URL,hint:a.jPlayer.errorHint.URL})))},!1),a.each(a.jPlayer.htmlEvent,function(e,f){b.addEventListener(this,function(){c.gate&&d._trigger(a.jPlayer.event[f])},!1)})},_addAuroraEventListeners:function(b,c){var d=this;b.volume=100*this.options.volume,b.on("progress",function(){c.gate&&(d.internal.cmdsIgnored&&this.readyState>0&&(d.internal.cmdsIgnored=!1),d._getAuroraStatus(b),d._updateInterface(),d._trigger(a.jPlayer.event.progress),b.duration>0&&d._trigger(a.jPlayer.event.timeupdate))},!1),b.on("ready",function(){c.gate&&d._trigger(a.jPlayer.event.loadeddata)},!1),b.on("duration",function(){c.gate&&(d._getAuroraStatus(b),d._updateInterface(),d._trigger(a.jPlayer.event.durationchange))},!1),b.on("end",function(){c.gate&&(d._updateButtons(!1),d._getAuroraStatus(b,!0),d._updateInterface(),d._trigger(a.jPlayer.event.ended))},!1),b.on("error",function(){c.gate&&(d._updateButtons(!1),d._seeked(),d.status.srcSet&&(d.status.waitForLoad=!0,d.status.waitForPlay=!0,d.status.video&&!d.status.nativeVideoControls&&d.internal.video.jq.css({width:"0px",height:"0px"}),d._validString(d.status.media.poster)&&!d.status.nativeVideoControls&&d.internal.poster.jq.show(),d.css.jq.videoPlay.length&&d.css.jq.videoPlay.show(),d._error({type:a.jPlayer.error.URL,context:d.status.src,message:a.jPlayer.errorMsg.URL,hint:a.jPlayer.errorHint.URL})))},!1)},_getHtmlStatus:function(a,b){var c=0,d=0,e=0,f=0;isFinite(a.duration)&&(this.status.duration=a.duration),c=a.currentTime,d=this.status.duration>0?100*c/this.status.duration:0,"object"==typeof a.seekable&&a.seekable.length>0?(e=this.status.duration>0?100*a.seekable.end(a.seekable.length-1)/this.status.duration:100,f=this.status.duration>0?100*a.currentTime/a.seekable.end(a.seekable.length-1):0):(e=100,f=d),b&&(c=0,f=0,d=0),this.status.seekPercent=e,this.status.currentPercentRelative=f,this.status.currentPercentAbsolute=d,this.status.currentTime=c,this.status.remaining=this.status.duration-this.status.currentTime,this.status.videoWidth=a.videoWidth,this.status.videoHeight=a.videoHeight,this.status.readyState=a.readyState,this.status.networkState=a.networkState,this.status.playbackRate=a.playbackRate,this.status.ended=a.ended},_getAuroraStatus:function(a,b){var c=0,d=0,e=0,f=0;this.status.duration=a.duration/1e3,c=a.currentTime/1e3,d=this.status.duration>0?100*c/this.status.duration:0,a.buffered>0?(e=this.status.duration>0?a.buffered*this.status.duration/this.status.duration:100,f=this.status.duration>0?c/(a.buffered*this.status.duration):0):(e=100,f=d),b&&(c=0,f=0,d=0),this.status.seekPercent=e,this.status.currentPercentRelative=f,this.status.currentPercentAbsolute=d,this.status.currentTime=c,this.status.remaining=this.status.duration-this.status.currentTime,this.status.readyState=4,this.status.networkState=0,this.status.playbackRate=1,this.status.ended=!1},_resetStatus:function(){this.status=a.extend({},this.status,a.jPlayer.prototype.status)},_trigger:function(b,c,d){var e=a.Event(b);e.jPlayer={},e.jPlayer.version=a.extend({},this.version),e.jPlayer.options=a.extend(!0,{},this.options),e.jPlayer.status=a.extend(!0,{},this.status),e.jPlayer.html=a.extend(!0,{},this.html),e.jPlayer.aurora=a.extend(!0,{},this.aurora),e.jPlayer.flash=a.extend(!0,{},this.flash),c&&(e.jPlayer.error=a.extend({},c)),d&&(e.jPlayer.warning=a.extend({},d)),this.element.trigger(e)},jPlayerFlashEvent:function(b,c){if(b===a.jPlayer.event.ready)if(this.internal.ready){if(this.flash.gate){if(this.status.srcSet){var d=this.status.currentTime,e=this.status.paused;this.setMedia(this.status.media),this.volumeWorker(this.options.volume),d>0&&(e?this.pause(d):this.play(d))}this._trigger(a.jPlayer.event.flashreset)}}else this.internal.ready=!0,this.internal.flash.jq.css({width:"0px",height:"0px"}),this.version.flash=c.version,this.version.needFlash!==this.version.flash&&this._error({type:a.jPlayer.error.VERSION,context:this.version.flash,message:a.jPlayer.errorMsg.VERSION+this.version.flash,hint:a.jPlayer.errorHint.VERSION}),this._trigger(a.jPlayer.event.repeat),this._trigger(b);if(this.flash.gate)switch(b){case a.jPlayer.event.progress:this._getFlashStatus(c),this._updateInterface(),this._trigger(b);break;case a.jPlayer.event.timeupdate:this._getFlashStatus(c),this._updateInterface(),this._trigger(b);break;case a.jPlayer.event.play:this._seeked(),this._updateButtons(!0),this._trigger(b);break;case a.jPlayer.event.pause:this._updateButtons(!1),this._trigger(b);break;case a.jPlayer.event.ended:this._updateButtons(!1),this._trigger(b);break;case a.jPlayer.event.click:this._trigger(b);break;case a.jPlayer.event.error:this.status.waitForLoad=!0,this.status.waitForPlay=!0,this.status.video&&this.internal.flash.jq.css({width:"0px",height:"0px"}),this._validString(this.status.media.poster)&&this.internal.poster.jq.show(),this.css.jq.videoPlay.length&&this.status.video&&this.css.jq.videoPlay.show(),this.status.video?this._flash_setVideo(this.status.media):this._flash_setAudio(this.status.media),this._updateButtons(!1),this._error({type:a.jPlayer.error.URL,context:c.src,message:a.jPlayer.errorMsg.URL,hint:a.jPlayer.errorHint.URL});break;case a.jPlayer.event.seeking:this._seeking(),this._trigger(b);break;case a.jPlayer.event.seeked:this._seeked(),this._trigger(b);break;case a.jPlayer.event.ready:break;default:this._trigger(b)}return!1},_getFlashStatus:function(a){this.status.seekPercent=a.seekPercent,this.status.currentPercentRelative=a.currentPercentRelative,this.status.currentPercentAbsolute=a.currentPercentAbsolute,this.status.currentTime=a.currentTime,this.status.duration=a.duration,this.status.remaining=a.duration-a.currentTime,this.status.videoWidth=a.videoWidth,this.status.videoHeight=a.videoHeight,this.status.readyState=4,this.status.networkState=0,this.status.playbackRate=1,this.status.ended=!1},_updateButtons:function(a){a===b?a=!this.status.paused:this.status.paused=!a,a?this.addStateClass("playing"):this.removeStateClass("playing"),!this.status.noFullWindow&&this.options.fullWindow?this.addStateClass("fullScreen"):this.removeStateClass("fullScreen"),this.options.loop?this.addStateClass("looped"):this.removeStateClass("looped"),this.css.jq.play.length&&this.css.jq.pause.length&&(a?(this.css.jq.play.hide(),this.css.jq.pause.show()):(this.css.jq.play.show(),this.css.jq.pause.hide())),this.css.jq.restoreScreen.length&&this.css.jq.fullScreen.length&&(this.status.noFullWindow?(this.css.jq.fullScreen.hide(),this.css.jq.restoreScreen.hide()):this.options.fullWindow?(this.css.jq.fullScreen.hide(),this.css.jq.restoreScreen.show()):(this.css.jq.fullScreen.show(),this.css.jq.restoreScreen.hide())),this.css.jq.repeat.length&&this.css.jq.repeatOff.length&&(this.options.loop?(this.css.jq.repeat.hide(),this.css.jq.repeatOff.show()):(this.css.jq.repeat.show(),this.css.jq.repeatOff.hide()))},_updateInterface:function(){this.css.jq.seekBar.length&&this.css.jq.seekBar.width(this.status.seekPercent+"%"),this.css.jq.playBar.length&&(this.options.smoothPlayBar?this.css.jq.playBar.stop().animate({width:this.status.currentPercentAbsolute+"%"},250,"linear"):this.css.jq.playBar.width(this.status.currentPercentRelative+"%"));var a="";this.css.jq.currentTime.length&&(a=this._convertTime(this.status.currentTime),a!==this.css.jq.currentTime.text()&&this.css.jq.currentTime.text(this._convertTime(this.status.currentTime)));var b="",c=this.status.duration,d=this.status.remaining;this.css.jq.duration.length&&("string"==typeof this.status.media.duration?b=this.status.media.duration:("number"==typeof this.status.media.duration&&(c=this.status.media.duration,d=c-this.status.currentTime),b=this.options.remainingDuration?(d>0?"-":"")+this._convertTime(d):this._convertTime(c)),b!==this.css.jq.duration.text()&&this.css.jq.duration.text(b))},_convertTime:c.prototype.time,_seeking:function(){this.css.jq.seekBar.length&&this.css.jq.seekBar.addClass("jp-seeking-bg"),this.addStateClass("seeking")},_seeked:function(){this.css.jq.seekBar.length&&this.css.jq.seekBar.removeClass("jp-seeking-bg"),this.removeStateClass("seeking")},_resetGate:function(){this.html.audio.gate=!1,this.html.video.gate=!1,this.aurora.gate=!1,this.flash.gate=!1},_resetActive:function(){this.html.active=!1,this.aurora.active=!1,this.flash.active=!1},_escapeHtml:function(a){return a.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;").split('"').join("&quot;")},_qualifyURL:function(a){var b=document.createElement("div");
return b.innerHTML='<a href="'+this._escapeHtml(a)+'">x</a>',b.firstChild.href},_absoluteMediaUrls:function(b){var c=this;return a.each(b,function(a,d){d&&c.format[a]&&"data:"!==d.substr(0,5)&&(b[a]=c._qualifyURL(d))}),b},addStateClass:function(a){this.ancestorJq.length&&this.ancestorJq.addClass(this.options.stateClass[a])},removeStateClass:function(a){this.ancestorJq.length&&this.ancestorJq.removeClass(this.options.stateClass[a])},setMedia:function(b){var c=this,d=!1,e=this.status.media.poster!==b.poster;this._resetMedia(),this._resetGate(),this._resetActive(),this.androidFix.setMedia=!1,this.androidFix.play=!1,this.androidFix.pause=!1,b=this._absoluteMediaUrls(b),a.each(this.formats,function(e,f){var g="video"===c.format[f].media;return a.each(c.solutions,function(e,h){if(c[h].support[f]&&c._validString(b[f])){var i="html"===h,j="aurora"===h;return g?(i?(c.html.video.gate=!0,c._html_setVideo(b),c.html.active=!0):(c.flash.gate=!0,c._flash_setVideo(b),c.flash.active=!0),c.css.jq.videoPlay.length&&c.css.jq.videoPlay.show(),c.status.video=!0):(i?(c.html.audio.gate=!0,c._html_setAudio(b),c.html.active=!0,a.jPlayer.platform.android&&(c.androidFix.setMedia=!0)):j?(c.aurora.gate=!0,c._aurora_setAudio(b),c.aurora.active=!0):(c.flash.gate=!0,c._flash_setAudio(b),c.flash.active=!0),c.css.jq.videoPlay.length&&c.css.jq.videoPlay.hide(),c.status.video=!1),d=!0,!1}}),d?!1:void 0}),d?(this.status.nativeVideoControls&&this.html.video.gate||this._validString(b.poster)&&(e?this.htmlElement.poster.src=b.poster:this.internal.poster.jq.show()),"string"==typeof b.title&&(this.css.jq.title.length&&this.css.jq.title.html(b.title),this.htmlElement.audio&&this.htmlElement.audio.setAttribute("title",b.title),this.htmlElement.video&&this.htmlElement.video.setAttribute("title",b.title)),this.status.srcSet=!0,this.status.media=a.extend({},b),this._updateButtons(!1),this._updateInterface(),this._trigger(a.jPlayer.event.setmedia)):this._error({type:a.jPlayer.error.NO_SUPPORT,context:"{supplied:'"+this.options.supplied+"'}",message:a.jPlayer.errorMsg.NO_SUPPORT,hint:a.jPlayer.errorHint.NO_SUPPORT})},_resetMedia:function(){this._resetStatus(),this._updateButtons(!1),this._updateInterface(),this._seeked(),this.internal.poster.jq.hide(),clearTimeout(this.internal.htmlDlyCmdId),this.html.active?this._html_resetMedia():this.aurora.active?this._aurora_resetMedia():this.flash.active&&this._flash_resetMedia()},clearMedia:function(){this._resetMedia(),this.html.active?this._html_clearMedia():this.aurora.active?this._aurora_clearMedia():this.flash.active&&this._flash_clearMedia(),this._resetGate(),this._resetActive()},load:function(){this.status.srcSet?this.html.active?this._html_load():this.aurora.active?this._aurora_load():this.flash.active&&this._flash_load():this._urlNotSetError("load")},focus:function(){this.options.keyEnabled&&(a.jPlayer.focus=this)},play:function(a){var b="object"==typeof a;b&&this.options.useStateClassSkin&&!this.status.paused?this.pause(a):(a="number"==typeof a?a:0/0,this.status.srcSet?(this.focus(),this.html.active?this._html_play(a):this.aurora.active?this._aurora_play(a):this.flash.active&&this._flash_play(a)):this._urlNotSetError("play"))},videoPlay:function(){this.play()},pause:function(a){a="number"==typeof a?a:0/0,this.status.srcSet?this.html.active?this._html_pause(a):this.aurora.active?this._aurora_pause(a):this.flash.active&&this._flash_pause(a):this._urlNotSetError("pause")},tellOthers:function(b,c){var d=this,e="function"==typeof c,f=Array.prototype.slice.call(arguments);"string"==typeof b&&(e&&f.splice(1,1),a.jPlayer.prototype.destroyRemoved(),a.each(this.instances,function(){d.element!==this&&(!e||c.call(this.data("jPlayer"),d))&&this.jPlayer.apply(this,f)}))},pauseOthers:function(a){this.tellOthers("pause",function(){return this.status.srcSet},a)},stop:function(){this.status.srcSet?this.html.active?this._html_pause(0):this.aurora.active?this._aurora_pause(0):this.flash.active&&this._flash_pause(0):this._urlNotSetError("stop")},playHead:function(a){a=this._limitValue(a,0,100),this.status.srcSet?this.html.active?this._html_playHead(a):this.aurora.active?this._aurora_playHead(a):this.flash.active&&this._flash_playHead(a):this._urlNotSetError("playHead")},_muted:function(a){this.mutedWorker(a),this.options.globalVolume&&this.tellOthers("mutedWorker",function(){return this.options.globalVolume},a)},mutedWorker:function(b){this.options.muted=b,this.html.used&&this._html_setProperty("muted",b),this.aurora.used&&this._aurora_mute(b),this.flash.used&&this._flash_mute(b),this.html.video.gate||this.html.audio.gate||(this._updateMute(b),this._updateVolume(this.options.volume),this._trigger(a.jPlayer.event.volumechange))},mute:function(a){var c="object"==typeof a;c&&this.options.useStateClassSkin&&this.options.muted?this._muted(!1):(a=a===b?!0:!!a,this._muted(a))},unmute:function(a){a=a===b?!0:!!a,this._muted(!a)},_updateMute:function(a){a===b&&(a=this.options.muted),a?this.addStateClass("muted"):this.removeStateClass("muted"),this.css.jq.mute.length&&this.css.jq.unmute.length&&(this.status.noVolume?(this.css.jq.mute.hide(),this.css.jq.unmute.hide()):a?(this.css.jq.mute.hide(),this.css.jq.unmute.show()):(this.css.jq.mute.show(),this.css.jq.unmute.hide()))},volume:function(a){this.volumeWorker(a),this.options.globalVolume&&this.tellOthers("volumeWorker",function(){return this.options.globalVolume},a)},volumeWorker:function(b){b=this._limitValue(b,0,1),this.options.volume=b,this.html.used&&this._html_setProperty("volume",b),this.aurora.used&&this._aurora_volume(b),this.flash.used&&this._flash_volume(b),this.html.video.gate||this.html.audio.gate||(this._updateVolume(b),this._trigger(a.jPlayer.event.volumechange))},volumeBar:function(b){if(this.css.jq.volumeBar.length){var c=a(b.currentTarget),d=c.offset(),e=b.pageX-d.left,f=c.width(),g=c.height()-b.pageY+d.top,h=c.height();this.volume(this.options.verticalVolume?g/h:e/f)}this.options.muted&&this._muted(!1)},_updateVolume:function(a){a===b&&(a=this.options.volume),a=this.options.muted?0:a,this.status.noVolume?(this.addStateClass("noVolume"),this.css.jq.volumeBar.length&&this.css.jq.volumeBar.hide(),this.css.jq.volumeBarValue.length&&this.css.jq.volumeBarValue.hide(),this.css.jq.volumeMax.length&&this.css.jq.volumeMax.hide()):(this.removeStateClass("noVolume"),this.css.jq.volumeBar.length&&this.css.jq.volumeBar.show(),this.css.jq.volumeBarValue.length&&(this.css.jq.volumeBarValue.show(),this.css.jq.volumeBarValue[this.options.verticalVolume?"height":"width"](100*a+"%")),this.css.jq.volumeMax.length&&this.css.jq.volumeMax.show())},volumeMax:function(){this.volume(1),this.options.muted&&this._muted(!1)},_cssSelectorAncestor:function(b){var c=this;this.options.cssSelectorAncestor=b,this._removeUiClass(),this.ancestorJq=b?a(b):[],b&&1!==this.ancestorJq.length&&this._warning({type:a.jPlayer.warning.CSS_SELECTOR_COUNT,context:b,message:a.jPlayer.warningMsg.CSS_SELECTOR_COUNT+this.ancestorJq.length+" found for cssSelectorAncestor.",hint:a.jPlayer.warningHint.CSS_SELECTOR_COUNT}),this._addUiClass(),a.each(this.options.cssSelector,function(a,b){c._cssSelector(a,b)}),this._updateInterface(),this._updateButtons(),this._updateAutohide(),this._updateVolume(),this._updateMute()},_cssSelector:function(b,c){var d=this;if("string"==typeof c)if(a.jPlayer.prototype.options.cssSelector[b]){if(this.css.jq[b]&&this.css.jq[b].length&&this.css.jq[b].unbind(".jPlayer"),this.options.cssSelector[b]=c,this.css.cs[b]=this.options.cssSelectorAncestor+" "+c,this.css.jq[b]=c?a(this.css.cs[b]):[],this.css.jq[b].length&&this[b]){var e=function(c){c.preventDefault(),d[b](c),d.options.autoBlur?a(this).blur():a(this).focus()};this.css.jq[b].bind("click.jPlayer",e)}c&&1!==this.css.jq[b].length&&this._warning({type:a.jPlayer.warning.CSS_SELECTOR_COUNT,context:this.css.cs[b],message:a.jPlayer.warningMsg.CSS_SELECTOR_COUNT+this.css.jq[b].length+" found for "+b+" method.",hint:a.jPlayer.warningHint.CSS_SELECTOR_COUNT})}else this._warning({type:a.jPlayer.warning.CSS_SELECTOR_METHOD,context:b,message:a.jPlayer.warningMsg.CSS_SELECTOR_METHOD,hint:a.jPlayer.warningHint.CSS_SELECTOR_METHOD});else this._warning({type:a.jPlayer.warning.CSS_SELECTOR_STRING,context:c,message:a.jPlayer.warningMsg.CSS_SELECTOR_STRING,hint:a.jPlayer.warningHint.CSS_SELECTOR_STRING})},duration:function(a){this.options.toggleDuration&&(this.options.captureDuration&&a.stopPropagation(),this._setOption("remainingDuration",!this.options.remainingDuration))},seekBar:function(b){if(this.css.jq.seekBar.length){var c=a(b.currentTarget),d=c.offset(),e=b.pageX-d.left,f=c.width(),g=100*e/f;this.playHead(g)}},playbackRate:function(a){this._setOption("playbackRate",a)},playbackRateBar:function(b){if(this.css.jq.playbackRateBar.length){var c,d,e=a(b.currentTarget),f=e.offset(),g=b.pageX-f.left,h=e.width(),i=e.height()-b.pageY+f.top,j=e.height();c=this.options.verticalPlaybackRate?i/j:g/h,d=c*(this.options.maxPlaybackRate-this.options.minPlaybackRate)+this.options.minPlaybackRate,this.playbackRate(d)}},_updatePlaybackRate:function(){var a=this.options.playbackRate,b=(a-this.options.minPlaybackRate)/(this.options.maxPlaybackRate-this.options.minPlaybackRate);this.status.playbackRateEnabled?(this.css.jq.playbackRateBar.length&&this.css.jq.playbackRateBar.show(),this.css.jq.playbackRateBarValue.length&&(this.css.jq.playbackRateBarValue.show(),this.css.jq.playbackRateBarValue[this.options.verticalPlaybackRate?"height":"width"](100*b+"%"))):(this.css.jq.playbackRateBar.length&&this.css.jq.playbackRateBar.hide(),this.css.jq.playbackRateBarValue.length&&this.css.jq.playbackRateBarValue.hide())},repeat:function(a){var b="object"==typeof a;this._loop(b&&this.options.useStateClassSkin&&this.options.loop?!1:!0)},repeatOff:function(){this._loop(!1)},_loop:function(b){this.options.loop!==b&&(this.options.loop=b,this._updateButtons(),this._trigger(a.jPlayer.event.repeat))},option:function(c,d){var e=c;if(0===arguments.length)return a.extend(!0,{},this.options);if("string"==typeof c){var f=c.split(".");if(d===b){for(var g=a.extend(!0,{},this.options),h=0;h<f.length;h++){if(g[f[h]]===b)return this._warning({type:a.jPlayer.warning.OPTION_KEY,context:c,message:a.jPlayer.warningMsg.OPTION_KEY,hint:a.jPlayer.warningHint.OPTION_KEY}),b;g=g[f[h]]}return g}e={};for(var i=e,j=0;j<f.length;j++)j<f.length-1?(i[f[j]]={},i=i[f[j]]):i[f[j]]=d}return this._setOptions(e),this},_setOptions:function(b){var c=this;return a.each(b,function(a,b){c._setOption(a,b)}),this},_setOption:function(b,c){var d=this;switch(b){case"volume":this.volume(c);break;case"muted":this._muted(c);break;case"globalVolume":this.options[b]=c;break;case"cssSelectorAncestor":this._cssSelectorAncestor(c);break;case"cssSelector":a.each(c,function(a,b){d._cssSelector(a,b)});break;case"playbackRate":this.options[b]=c=this._limitValue(c,this.options.minPlaybackRate,this.options.maxPlaybackRate),this.html.used&&this._html_setProperty("playbackRate",c),this._updatePlaybackRate();break;case"defaultPlaybackRate":this.options[b]=c=this._limitValue(c,this.options.minPlaybackRate,this.options.maxPlaybackRate),this.html.used&&this._html_setProperty("defaultPlaybackRate",c),this._updatePlaybackRate();break;case"minPlaybackRate":this.options[b]=c=this._limitValue(c,.1,this.options.maxPlaybackRate-.1),this._updatePlaybackRate();break;case"maxPlaybackRate":this.options[b]=c=this._limitValue(c,this.options.minPlaybackRate+.1,16),this._updatePlaybackRate();break;case"fullScreen":if(this.options[b]!==c){var e=a.jPlayer.nativeFeatures.fullscreen.used.webkitVideo;(!e||e&&!this.status.waitForPlay)&&(e||(this.options[b]=c),c?this._requestFullscreen():this._exitFullscreen(),e||this._setOption("fullWindow",c))}break;case"fullWindow":this.options[b]!==c&&(this._removeUiClass(),this.options[b]=c,this._refreshSize());break;case"size":this.options.fullWindow||this.options[b].cssClass===c.cssClass||this._removeUiClass(),this.options[b]=a.extend({},this.options[b],c),this._refreshSize();break;case"sizeFull":this.options.fullWindow&&this.options[b].cssClass!==c.cssClass&&this._removeUiClass(),this.options[b]=a.extend({},this.options[b],c),this._refreshSize();break;case"autohide":this.options[b]=a.extend({},this.options[b],c),this._updateAutohide();break;case"loop":this._loop(c);break;case"remainingDuration":this.options[b]=c,this._updateInterface();break;case"toggleDuration":this.options[b]=c;break;case"nativeVideoControls":this.options[b]=a.extend({},this.options[b],c),this.status.nativeVideoControls=this._uaBlocklist(this.options.nativeVideoControls),this._restrictNativeVideoControls(),this._updateNativeVideoControls();break;case"noFullWindow":this.options[b]=a.extend({},this.options[b],c),this.status.nativeVideoControls=this._uaBlocklist(this.options.nativeVideoControls),this.status.noFullWindow=this._uaBlocklist(this.options.noFullWindow),this._restrictNativeVideoControls(),this._updateButtons();break;case"noVolume":this.options[b]=a.extend({},this.options[b],c),this.status.noVolume=this._uaBlocklist(this.options.noVolume),this._updateVolume(),this._updateMute();break;case"emulateHtml":this.options[b]!==c&&(this.options[b]=c,c?this._emulateHtmlBridge():this._destroyHtmlBridge());break;case"timeFormat":this.options[b]=a.extend({},this.options[b],c);break;case"keyEnabled":this.options[b]=c,c||this!==a.jPlayer.focus||(a.jPlayer.focus=null);break;case"keyBindings":this.options[b]=a.extend(!0,{},this.options[b],c);break;case"audioFullScreen":this.options[b]=c;break;case"autoBlur":this.options[b]=c}return this},_refreshSize:function(){this._setSize(),this._addUiClass(),this._updateSize(),this._updateButtons(),this._updateAutohide(),this._trigger(a.jPlayer.event.resize)},_setSize:function(){this.options.fullWindow?(this.status.width=this.options.sizeFull.width,this.status.height=this.options.sizeFull.height,this.status.cssClass=this.options.sizeFull.cssClass):(this.status.width=this.options.size.width,this.status.height=this.options.size.height,this.status.cssClass=this.options.size.cssClass),this.element.css({width:this.status.width,height:this.status.height})},_addUiClass:function(){this.ancestorJq.length&&this.ancestorJq.addClass(this.status.cssClass)},_removeUiClass:function(){this.ancestorJq.length&&this.ancestorJq.removeClass(this.status.cssClass)},_updateSize:function(){this.internal.poster.jq.css({width:this.status.width,height:this.status.height}),!this.status.waitForPlay&&this.html.active&&this.status.video||this.html.video.available&&this.html.used&&this.status.nativeVideoControls?this.internal.video.jq.css({width:this.status.width,height:this.status.height}):!this.status.waitForPlay&&this.flash.active&&this.status.video&&this.internal.flash.jq.css({width:this.status.width,height:this.status.height})},_updateAutohide:function(){var a=this,b="mousemove.jPlayer",c=".jPlayerAutohide",d=b+c,e=function(b){var c,d,e=!1;"undefined"!=typeof a.internal.mouse?(c=a.internal.mouse.x-b.pageX,d=a.internal.mouse.y-b.pageY,e=Math.floor(c)>0||Math.floor(d)>0):e=!0,a.internal.mouse={x:b.pageX,y:b.pageY},e&&a.css.jq.gui.fadeIn(a.options.autohide.fadeIn,function(){clearTimeout(a.internal.autohideId),a.internal.autohideId=setTimeout(function(){a.css.jq.gui.fadeOut(a.options.autohide.fadeOut)},a.options.autohide.hold)})};this.css.jq.gui.length&&(this.css.jq.gui.stop(!0,!0),clearTimeout(this.internal.autohideId),delete this.internal.mouse,this.element.unbind(c),this.css.jq.gui.unbind(c),this.status.nativeVideoControls?this.css.jq.gui.hide():this.options.fullWindow&&this.options.autohide.full||!this.options.fullWindow&&this.options.autohide.restored?(this.element.bind(d,e),this.css.jq.gui.bind(d,e),this.css.jq.gui.hide()):this.css.jq.gui.show())},fullScreen:function(a){var b="object"==typeof a;b&&this.options.useStateClassSkin&&this.options.fullScreen?this._setOption("fullScreen",!1):this._setOption("fullScreen",!0)},restoreScreen:function(){this._setOption("fullScreen",!1)},_fullscreenAddEventListeners:function(){var b=this,c=a.jPlayer.nativeFeatures.fullscreen;c.api.fullscreenEnabled&&c.event.fullscreenchange&&("function"!=typeof this.internal.fullscreenchangeHandler&&(this.internal.fullscreenchangeHandler=function(){b._fullscreenchange()}),document.addEventListener(c.event.fullscreenchange,this.internal.fullscreenchangeHandler,!1))},_fullscreenRemoveEventListeners:function(){var b=a.jPlayer.nativeFeatures.fullscreen;this.internal.fullscreenchangeHandler&&document.removeEventListener(b.event.fullscreenchange,this.internal.fullscreenchangeHandler,!1)},_fullscreenchange:function(){this.options.fullScreen&&!a.jPlayer.nativeFeatures.fullscreen.api.fullscreenElement()&&this._setOption("fullScreen",!1)},_requestFullscreen:function(){var b=this.ancestorJq.length?this.ancestorJq[0]:this.element[0],c=a.jPlayer.nativeFeatures.fullscreen;c.used.webkitVideo&&(b=this.htmlElement.video),c.api.fullscreenEnabled&&c.api.requestFullscreen(b)},_exitFullscreen:function(){var b,c=a.jPlayer.nativeFeatures.fullscreen;c.used.webkitVideo&&(b=this.htmlElement.video),c.api.fullscreenEnabled&&c.api.exitFullscreen(b)},_html_initMedia:function(b){var c=a(this.htmlElement.media).empty();a.each(b.track||[],function(a,b){var d=document.createElement("track");d.setAttribute("kind",b.kind?b.kind:""),d.setAttribute("src",b.src?b.src:""),d.setAttribute("srclang",b.srclang?b.srclang:""),d.setAttribute("label",b.label?b.label:""),b.def&&d.setAttribute("default",b.def),c.append(d)}),this.htmlElement.media.src=this.status.src,"none"!==this.options.preload&&this._html_load(),this._trigger(a.jPlayer.event.timeupdate)},_html_setFormat:function(b){var c=this;a.each(this.formats,function(a,d){return c.html.support[d]&&b[d]?(c.status.src=b[d],c.status.format[d]=!0,c.status.formatType=d,!1):void 0})},_html_setAudio:function(a){this._html_setFormat(a),this.htmlElement.media=this.htmlElement.audio,this._html_initMedia(a)},_html_setVideo:function(a){this._html_setFormat(a),this.status.nativeVideoControls&&(this.htmlElement.video.poster=this._validString(a.poster)?a.poster:""),this.htmlElement.media=this.htmlElement.video,this._html_initMedia(a)},_html_resetMedia:function(){this.htmlElement.media&&(this.htmlElement.media.id!==this.internal.video.id||this.status.nativeVideoControls||this.internal.video.jq.css({width:"0px",height:"0px"}),this.htmlElement.media.pause())},_html_clearMedia:function(){this.htmlElement.media&&(this.htmlElement.media.src="about:blank",this.htmlElement.media.load())},_html_load:function(){this.status.waitForLoad&&(this.status.waitForLoad=!1,this.htmlElement.media.load()),clearTimeout(this.internal.htmlDlyCmdId)},_html_play:function(a){var b=this,c=this.htmlElement.media;if(this.androidFix.pause=!1,this._html_load(),this.androidFix.setMedia)this.androidFix.play=!0,this.androidFix.time=a;else if(isNaN(a))c.play();else{this.internal.cmdsIgnored&&c.play();try{if(c.seekable&&!("object"==typeof c.seekable&&c.seekable.length>0))throw 1;c.currentTime=a,c.play()}catch(d){return void(this.internal.htmlDlyCmdId=setTimeout(function(){b.play(a)},250))}}this._html_checkWaitForPlay()},_html_pause:function(a){var b=this,c=this.htmlElement.media;if(this.androidFix.play=!1,a>0?this._html_load():clearTimeout(this.internal.htmlDlyCmdId),c.pause(),this.androidFix.setMedia)this.androidFix.pause=!0,this.androidFix.time=a;else if(!isNaN(a))try{if(c.seekable&&!("object"==typeof c.seekable&&c.seekable.length>0))throw 1;c.currentTime=a}catch(d){return void(this.internal.htmlDlyCmdId=setTimeout(function(){b.pause(a)},250))}a>0&&this._html_checkWaitForPlay()},_html_playHead:function(a){var b=this,c=this.htmlElement.media;this._html_load();try{if("object"==typeof c.seekable&&c.seekable.length>0)c.currentTime=a*c.seekable.end(c.seekable.length-1)/100;else{if(!(c.duration>0)||isNaN(c.duration))throw"e";c.currentTime=a*c.duration/100}}catch(d){return void(this.internal.htmlDlyCmdId=setTimeout(function(){b.playHead(a)},250))}this.status.waitForLoad||this._html_checkWaitForPlay()},_html_checkWaitForPlay:function(){this.status.waitForPlay&&(this.status.waitForPlay=!1,this.css.jq.videoPlay.length&&this.css.jq.videoPlay.hide(),this.status.video&&(this.internal.poster.jq.hide(),this.internal.video.jq.css({width:this.status.width,height:this.status.height})))},_html_setProperty:function(a,b){this.html.audio.available&&(this.htmlElement.audio[a]=b),this.html.video.available&&(this.htmlElement.video[a]=b)},_aurora_setAudio:function(b){var c=this;a.each(this.formats,function(a,d){return c.aurora.support[d]&&b[d]?(c.status.src=b[d],c.status.format[d]=!0,c.status.formatType=d,!1):void 0}),this.aurora.player=new AV.Player.fromURL(this.status.src),this._addAuroraEventListeners(this.aurora.player,this.aurora),"auto"===this.options.preload&&(this._aurora_load(),this.status.waitForLoad=!1)},_aurora_resetMedia:function(){this.aurora.player&&this.aurora.player.stop()},_aurora_clearMedia:function(){},_aurora_load:function(){this.status.waitForLoad&&(this.status.waitForLoad=!1,this.aurora.player.preload())},_aurora_play:function(b){this.status.waitForLoad||isNaN(b)||this.aurora.player.seek(b),this.aurora.player.playing||this.aurora.player.play(),this.status.waitForLoad=!1,this._aurora_checkWaitForPlay(),this._updateButtons(!0),this._trigger(a.jPlayer.event.play)},_aurora_pause:function(b){isNaN(b)||this.aurora.player.seek(1e3*b),this.aurora.player.pause(),b>0&&this._aurora_checkWaitForPlay(),this._updateButtons(!1),this._trigger(a.jPlayer.event.pause)},_aurora_playHead:function(a){this.aurora.player.duration>0&&this.aurora.player.seek(a*this.aurora.player.duration/100),this.status.waitForLoad||this._aurora_checkWaitForPlay()},_aurora_checkWaitForPlay:function(){this.status.waitForPlay&&(this.status.waitForPlay=!1)},_aurora_volume:function(a){this.aurora.player.volume=100*a},_aurora_mute:function(a){a?(this.aurora.properties.lastvolume=this.aurora.player.volume,this.aurora.player.volume=0):this.aurora.player.volume=this.aurora.properties.lastvolume,this.aurora.properties.muted=a},_flash_setAudio:function(b){var c=this;try{a.each(this.formats,function(a,d){if(c.flash.support[d]&&b[d]){switch(d){case"m4a":case"fla":c._getMovie().fl_setAudio_m4a(b[d]);break;case"mp3":c._getMovie().fl_setAudio_mp3(b[d]);break;case"rtmpa":c._getMovie().fl_setAudio_rtmp(b[d])}return c.status.src=b[d],c.status.format[d]=!0,c.status.formatType=d,!1}}),"auto"===this.options.preload&&(this._flash_load(),this.status.waitForLoad=!1)}catch(d){this._flashError(d)}},_flash_setVideo:function(b){var c=this;try{a.each(this.formats,function(a,d){if(c.flash.support[d]&&b[d]){switch(d){case"m4v":case"flv":c._getMovie().fl_setVideo_m4v(b[d]);break;case"rtmpv":c._getMovie().fl_setVideo_rtmp(b[d])}return c.status.src=b[d],c.status.format[d]=!0,c.status.formatType=d,!1}}),"auto"===this.options.preload&&(this._flash_load(),this.status.waitForLoad=!1)}catch(d){this._flashError(d)}},_flash_resetMedia:function(){this.internal.flash.jq.css({width:"0px",height:"0px"}),this._flash_pause(0/0)},_flash_clearMedia:function(){try{this._getMovie().fl_clearMedia()}catch(a){this._flashError(a)}},_flash_load:function(){try{this._getMovie().fl_load()}catch(a){this._flashError(a)}this.status.waitForLoad=!1},_flash_play:function(a){try{this._getMovie().fl_play(a)}catch(b){this._flashError(b)}this.status.waitForLoad=!1,this._flash_checkWaitForPlay()},_flash_pause:function(a){try{this._getMovie().fl_pause(a)}catch(b){this._flashError(b)}a>0&&(this.status.waitForLoad=!1,this._flash_checkWaitForPlay())},_flash_playHead:function(a){try{this._getMovie().fl_play_head(a)}catch(b){this._flashError(b)}this.status.waitForLoad||this._flash_checkWaitForPlay()},_flash_checkWaitForPlay:function(){this.status.waitForPlay&&(this.status.waitForPlay=!1,this.css.jq.videoPlay.length&&this.css.jq.videoPlay.hide(),this.status.video&&(this.internal.poster.jq.hide(),this.internal.flash.jq.css({width:this.status.width,height:this.status.height})))},_flash_volume:function(a){try{this._getMovie().fl_volume(a)}catch(b){this._flashError(b)}},_flash_mute:function(a){try{this._getMovie().fl_mute(a)}catch(b){this._flashError(b)}},_getMovie:function(){return document[this.internal.flash.id]},_getFlashPluginVersion:function(){var a,b=0;if(window.ActiveXObject)try{if(a=new ActiveXObject("ShockwaveFlash.ShockwaveFlash")){var c=a.GetVariable("$version");c&&(c=c.split(" ")[1].split(","),b=parseInt(c[0],10)+"."+parseInt(c[1],10))}}catch(d){}else navigator.plugins&&navigator.mimeTypes.length>0&&(a=navigator.plugins["Shockwave Flash"],a&&(b=navigator.plugins["Shockwave Flash"].description.replace(/.*\s(\d+\.\d+).*/,"$1")));return 1*b},_checkForFlash:function(a){var b=!1;return this._getFlashPluginVersion()>=a&&(b=!0),b},_validString:function(a){return a&&"string"==typeof a},_limitValue:function(a,b,c){return b>a?b:a>c?c:a},_urlNotSetError:function(b){this._error({type:a.jPlayer.error.URL_NOT_SET,context:b,message:a.jPlayer.errorMsg.URL_NOT_SET,hint:a.jPlayer.errorHint.URL_NOT_SET})},_flashError:function(b){var c;c=this.internal.ready?"FLASH_DISABLED":"FLASH",this._error({type:a.jPlayer.error[c],context:this.internal.flash.swf,message:a.jPlayer.errorMsg[c]+b.message,hint:a.jPlayer.errorHint[c]}),this.internal.flash.jq.css({width:"1px",height:"1px"})},_error:function(b){this._trigger(a.jPlayer.event.error,b),this.options.errorAlerts&&this._alert("Error!"+(b.message?"\n"+b.message:"")+(b.hint?"\n"+b.hint:"")+"\nContext: "+b.context)},_warning:function(c){this._trigger(a.jPlayer.event.warning,b,c),this.options.warningAlerts&&this._alert("Warning!"+(c.message?"\n"+c.message:"")+(c.hint?"\n"+c.hint:"")+"\nContext: "+c.context)},_alert:function(a){var b="jPlayer "+this.version.script+" : id='"+this.internal.self.id+"' : "+a;this.options.consoleAlerts?window.console&&window.console.log&&window.console.log(b):alert(b)},_emulateHtmlBridge:function(){var b=this;a.each(a.jPlayer.emulateMethods.split(/\s+/g),function(a,c){b.internal.domNode[c]=function(a){b[c](a)}}),a.each(a.jPlayer.event,function(c,d){var e=!0;a.each(a.jPlayer.reservedEvent.split(/\s+/g),function(a,b){return b===c?(e=!1,!1):void 0}),e&&b.element.bind(d+".jPlayer.jPlayerHtml",function(){b._emulateHtmlUpdate();var a=document.createEvent("Event");a.initEvent(c,!1,!0),b.internal.domNode.dispatchEvent(a)})})},_emulateHtmlUpdate:function(){var b=this;a.each(a.jPlayer.emulateStatus.split(/\s+/g),function(a,c){b.internal.domNode[c]=b.status[c]}),a.each(a.jPlayer.emulateOptions.split(/\s+/g),function(a,c){b.internal.domNode[c]=b.options[c]})},_destroyHtmlBridge:function(){var b=this;this.element.unbind(".jPlayerHtml");var c=a.jPlayer.emulateMethods+" "+a.jPlayer.emulateStatus+" "+a.jPlayer.emulateOptions;a.each(c.split(/\s+/g),function(a,c){delete b.internal.domNode[c]})}},a.jPlayer.error={FLASH:"e_flash",FLASH_DISABLED:"e_flash_disabled",NO_SOLUTION:"e_no_solution",NO_SUPPORT:"e_no_support",URL:"e_url",URL_NOT_SET:"e_url_not_set",VERSION:"e_version"},a.jPlayer.errorMsg={FLASH:"jPlayer's Flash fallback is not configured correctly, or a command was issued before the jPlayer Ready event. Details: ",FLASH_DISABLED:"jPlayer's Flash fallback has been disabled by the browser due to the CSS rules you have used. Details: ",NO_SOLUTION:"No solution can be found by jPlayer in this browser. Neither HTML nor Flash can be used.",NO_SUPPORT:"It is not possible to play any media format provided in setMedia() on this browser using your current options.",URL:"Media URL could not be loaded.",URL_NOT_SET:"Attempt to issue media playback commands, while no media url is set.",VERSION:"jPlayer "+a.jPlayer.prototype.version.script+" needs Jplayer.swf version "+a.jPlayer.prototype.version.needFlash+" but found "},a.jPlayer.errorHint={FLASH:"Check your swfPath option and that Jplayer.swf is there.",FLASH_DISABLED:"Check that you have not display:none; the jPlayer entity or any ancestor.",NO_SOLUTION:"Review the jPlayer options: support and supplied.",NO_SUPPORT:"Video or audio formats defined in the supplied option are missing.",URL:"Check media URL is valid.",URL_NOT_SET:"Use setMedia() to set the media URL.",VERSION:"Update jPlayer files."},a.jPlayer.warning={CSS_SELECTOR_COUNT:"e_css_selector_count",CSS_SELECTOR_METHOD:"e_css_selector_method",CSS_SELECTOR_STRING:"e_css_selector_string",OPTION_KEY:"e_option_key"},a.jPlayer.warningMsg={CSS_SELECTOR_COUNT:"The number of css selectors found did not equal one: ",CSS_SELECTOR_METHOD:"The methodName given in jPlayer('cssSelector') is not a valid jPlayer method.",CSS_SELECTOR_STRING:"The methodCssSelector given in jPlayer('cssSelector') is not a String or is empty.",OPTION_KEY:"The option requested in jPlayer('option') is undefined."},a.jPlayer.warningHint={CSS_SELECTOR_COUNT:"Check your css selector and the ancestor.",CSS_SELECTOR_METHOD:"Check your method name.",CSS_SELECTOR_STRING:"Check your css selector is a string.",OPTION_KEY:"Check your option name."}});


var playerHTML = "<div class='videoPlayerWrapper jplayerThemePlayer'><div class=\"jplayer jp-jplayer\"></div><div class=\"videoloading\"></div><div class=\"jp-play-btn large\"></div><div id=\"closeVideoPlayer\"></div><div class=\"videoplayer\"><div class=\"videoplayer_inner\"><div class=\"times\"><span class=\"jp-current-time\"></span><span class=\"time-sep\">/</span><span class=\"jp-duration\"></span></div><div class=\"jp-play\"></div><div class=\"jp-pause\"></div><div class=\"jp-progress\"><div class=\"jp-seek-bar\"><div class=\"jp-play-bar\"></div><span class=\"handle\"></span></div></div><div class='volume med'></div><div class=\"jp-full-screen\"></div><div class=\"jp-restore-screen\"></div></div></div></div>";
if(document.createStyleSheet) {
  document.createStyleSheet('/admin/javascripts/jplayertheme/jplayer.css?v=4');
}
else {
  
  $("head").append("<link rel='stylesheet' href='/admin/javascripts/jplayertheme/jplayer.css?v=4' />");
}
var jplayerdragging=false;
var playerid = "helpVideoPlayer";


function makeVideo (obj,width,height,image,video,autostart,fullscreen) {
	$("#"+obj).html(playerHTML);
	var ext = video.split('.').pop();

	if (fullscreen) { 
		$("#"+obj+" .videoPlayerWrapper").css("width","100%").css("height","100%");
	} else {
		$("#"+obj+" .videoPlayerWrapper").css("width",width+"px").css("height",height+"px");	
	}
	$("#"+obj+" .videoPlayerWrapper").hover(function(){
		$(".videoplayer,#closeVideoPlayer",$(this)).removeClass("hidden");
	},function(){
		if ($(".jplayer",$(this)).hasClass("playing")) {
			$(".videoplayer,#closeVideoPlayer",$(this)).addClass("hidden");		
		}
	});
	$(".jp-play-btn",$("#"+obj)).click(function(){
				if ($("#"+playerid+" .jplayer").hasClass("playing")) {
					$("#"+playerid+" .jplayer").jPlayer("pause");
				} else {
					$("#"+playerid+" .jplayer").jPlayer("play");					
				}

	});
	$(".volume",$("#"+obj)).click(function(){

		if ($(this).hasClass("low")) {
			$("#"+playerid+" .jplayer").jPlayer("option","volume",0.5);
			$(this).removeClass("low").addClass("med");
			jplayervolume = 0.5;
		} else if ($(this).hasClass("med")) {
			$("#"+playerid+" .jplayer").jPlayer("option","volume",1);
			$(this).removeClass("med").addClass("high");
			jplayervolume = 1;
		} else if ($(this).hasClass("high")) {
			$("#"+playerid+" .jplayer").jPlayer("option","volume",0.1);
			$(this).removeClass("high").addClass("low");
			jplayervolume = 0.1;
		}
		createCookie("volume",jplayervolume);
	});
	$("#closeVideoPlayer",$("#"+obj)).click(function(){
		if ($(".jp-restore-screen:visible").length) {
			$(".jp-restore-screen:visible").trigger("click");
		} else {
			$("body").removeClass("playingHelp");
			setTimeout(function () {
				$("body").removeClass("brand-bg");				
			}, 1000);
			$("#helpVideoPlayer .jplayer").jPlayer("pause");
			
		}

		return false;
	});
	$(".handle",$("#"+obj)).draggable({
		containment:"parent"
		,drag: function(event, ui) { 
	        var pos = $(this).position().left;	
			var pwidth = $(this).parent().width();
			var percent = pos / pwidth;
			if (percent!=0) {
				percent = percent*100;				
			}
			$(".jp-play-bar",$(this).parent()).css("width",percent+"%");
			if ($(this).parents(".videoPlayerWrapper").length) {
				var playerid = $(".jplayer",$(this).parents(".videoPlayerWrapper")).attr("id");
			}
			if ($(this).parents(".videoPlayerWrapper").length) {
				var playerid = $(".jplayer",$(this).parents(".videoPlayerWrapper")).attr("id");
			} else {
				var playerid = $(this).parents(".audioplayer").prev().attr("id");
			}
			$("#"+playerid).jPlayer("playHead",percent);
		 }
		,start: function(event,ui) {
			jplayerdragging=true;
		}
		,stop:function(event,ui) {
			jplayerdragging=false;
		}
		,axis:"x"
	});
	
	if (ext=="mp4") {
		var supplied="m4v";
	}
	
	$("#"+obj+" .jplayer").jPlayer({
		ready: function () {
		
			if (ext=="mp4") {
				$(this).jPlayer("setMedia", {
	        		m4v: video
	        		,poster: image
	        	}).jPlayer("play");
			}
			
    	},
    	supplied: supplied,
		swfPath: "/javascripts", 
		size: {
			width: width,
			height: height
		},
		volume: jplayervolume,
		fullScreen:fullscreen,
		cssSelectorAncestor: "#"+obj+" .videoPlayerWrapper"
		,play: function(event) {
			setTimeout(function() {
				$(".videoplayer,#closeVideoPlayer",$(event.jPlayer.options['cssSelectorAncestor'])).addClass("hidden");
			}, 1000);
			$(this).addClass("playing");
			$(".videoloading,.jp-play-btn.large",$(event.jPlayer.options['cssSelectorAncestor'])).addClass("hidden");
		},
		pause: function(event) {
			$(".videoloading,.jp-play-btn.large",$(event.jPlayer.options['cssSelectorAncestor'])).removeClass("hidden");
			$(".videoplayer,#closeVideoPlayer",$(event.jPlayer.options['cssSelectorAncestor'])).removeClass("hidden");		
			
			$(this).removeClass("playing");
		},
		ended: function(event) {
			$("body").removeClass("playingHelp");
		},
		timeupdate: function(event) {
			if (!jplayerdragging) {
				$(".handle",$(event.jPlayer.options['cssSelectorAncestor'])).css("left",$(".jp-play-bar",$(event.jPlayer.options['cssSelectorAncestor'])).width());			
			}
		}
	}); 
	
	
}
var jplayervolume = 0.5;


/*
 * jQuery Color Animations
 * Copyright 2007 John Resig
 * Released under the MIT and GPL licenses.
 */

(function(jQuery){

	// We override the animation for all of these color styles
	jQuery.each(['backgroundColor', 'borderBottomColor', 'borderLeftColor', 'borderRightColor', 'borderTopColor', 'color', 'outlineColor'], function(i,attr){
		jQuery.fx.step[attr] = function(fx){
			if ( fx.state == 0 ) {
				fx.start = getColor( fx.elem, attr );
				fx.end = getRGB( fx.end );
			}

			fx.elem.style[attr] = "rgb(" + [
				Math.max(Math.min( parseInt((fx.pos * (fx.end[0] - fx.start[0])) + fx.start[0]), 255), 0),
				Math.max(Math.min( parseInt((fx.pos * (fx.end[1] - fx.start[1])) + fx.start[1]), 255), 0),
				Math.max(Math.min( parseInt((fx.pos * (fx.end[2] - fx.start[2])) + fx.start[2]), 255), 0)
			].join(",") + ")";
		}
	});

	// Color Conversion functions from highlightFade
	// By Blair Mitchelmore
	// http://jquery.offput.ca/highlightFade/

	// Parse strings looking for color tuples [255,255,255]
	function getRGB(color) {
		var result;

		// Check if we're already dealing with an array of colors
		if ( color && color.constructor == Array && color.length == 3 )
			return color;

		// Look for rgb(num,num,num)
		if (result = /rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(color))
			return [parseInt(result[1]), parseInt(result[2]), parseInt(result[3])];

		// Look for rgb(num%,num%,num%)
		if (result = /rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(color))
			return [parseFloat(result[1])*2.55, parseFloat(result[2])*2.55, parseFloat(result[3])*2.55];

		// Look for #a0b1c2
		if (result = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(color))
			return [parseInt(result[1],16), parseInt(result[2],16), parseInt(result[3],16)];

		// Look for #fff
		if (result = /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(color))
			return [parseInt(result[1]+result[1],16), parseInt(result[2]+result[2],16), parseInt(result[3]+result[3],16)];

		// Otherwise, we're most likely dealing with a named color
		return colors[jQuery.trim(color).toLowerCase()];
	}
	
	function getColor(elem, attr) {
		var color;

		do {
			color = jQuery.curCSS(elem, attr);

			// Keep going until we find an element that has color, or we hit the body
			if ( color != '' && color != 'transparent' || jQuery.nodeName(elem, "body") )
				break; 

			attr = "backgroundColor";
		} while ( elem = elem.parentNode );

		return getRGB(color);
	};
	
	// Some named colors to work with
	// From Interface by Stefan Petre
	// http://interface.eyecon.ro/

	var colors = {
		aqua:[0,255,255],
		azure:[240,255,255],
		beige:[245,245,220],
		black:[0,0,0],
		blue:[0,0,255],
		brown:[165,42,42],
		cyan:[0,255,255],
		darkblue:[0,0,139],
		darkcyan:[0,139,139],
		darkgrey:[169,169,169],
		darkgreen:[0,100,0],
		darkkhaki:[189,183,107],
		darkmagenta:[139,0,139],
		darkolivegreen:[85,107,47],
		darkorange:[255,140,0],
		darkorchid:[153,50,204],
		darkred:[139,0,0],
		darksalmon:[233,150,122],
		darkviolet:[148,0,211],
		fuchsia:[255,0,255],
		gold:[255,215,0],
		green:[0,128,0],
		indigo:[75,0,130],
		khaki:[240,230,140],
		lightblue:[173,216,230],
		lightcyan:[224,255,255],
		lightgreen:[144,238,144],
		lightgrey:[211,211,211],
		lightpink:[255,182,193],
		lightyellow:[255,255,224],
		lime:[0,255,0],
		magenta:[255,0,255],
		maroon:[128,0,0],
		navy:[0,0,128],
		olive:[128,128,0],
		orange:[255,165,0],
		pink:[255,192,203],
		purple:[128,0,128],
		violet:[128,0,128],
		red:[255,0,0],
		silver:[192,192,192],
		white:[255,255,255],
		yellow:[255,255,0]
	};
	
})(jQuery);

/*
 * jQuery Form Plugin
 * version: 2.18 (06-JAN-2009)
 * @requires jQuery v1.2.2 or later
 *
 * Examples and documentation at: http://malsup.com/jquery/form/
 * Dual licensed under the MIT and GPL licenses:
 *   http://www.opensource.org/licenses/mit-license.php
 *   http://www.gnu.org/licenses/gpl.html
 *
 * Revision: $Id$
 */
;(function($) {

/*
    Usage Note:  
    -----------
    Do not use both ajaxSubmit and ajaxForm on the same form.  These
    functions are intended to be exclusive.  Use ajaxSubmit if you want
    to bind your own submit handler to the form.  For example,

    $(document).ready(function() {
        $('#myForm').bind('submit', function() {
            $(this).ajaxSubmit({
                target: '#output'
            });
            return false; // <-- important!
        });
    });

    Use ajaxForm when you want the plugin to manage all the event binding
    for you.  For example,

    $(document).ready(function() {
        $('#myForm').ajaxForm({
            target: '#output'
        });
    });
        
    When using ajaxForm, the ajaxSubmit function will be invoked for you
    at the appropriate time.  
*/

/**
 * ajaxSubmit() provides a mechanism for immediately submitting 
 * an HTML form using AJAX.
 */
$.fn.ajaxSubmit = function(options) {
    // fast fail if nothing selected (http://dev.jquery.com/ticket/2752)
    if (!this.length) {
        log('ajaxSubmit: skipping submit process - no element selected');
        return this;
    }

    if (typeof options == 'function')
        options = { success: options };

    options = $.extend({
        url:  this.attr('action') || window.location.toString(),
        type: this.attr('method') || 'GET'
    }, options || {});

    // hook for manipulating the form data before it is extracted;
    // convenient for use with rich editors like tinyMCE or FCKEditor
    var veto = {};
    this.trigger('form-pre-serialize', [this, options, veto]);
    if (veto.veto) {
        log('ajaxSubmit: submit vetoed via form-pre-serialize trigger');
        return this;
    }

    // provide opportunity to alter form data before it is serialized
    if (options.beforeSerialize && options.beforeSerialize(this, options) === false) {
        log('ajaxSubmit: submit aborted via beforeSerialize callback');
        return this;
    }    
   
    var a = this.formToArray(options.semantic);
    if (options.data) {
        options.extraData = options.data;
        for (var n in options.data) {
          if(options.data[n] instanceof Array) {
            for (var k in options.data[n])
              a.push( { name: n, value: options.data[n][k] } )
          }  
          else
             a.push( { name: n, value: options.data[n] } );
        }
    }

    // give pre-submit callback an opportunity to abort the submit
    if (options.beforeSubmit && options.beforeSubmit(a, this, options) === false) {
        log('ajaxSubmit: submit aborted via beforeSubmit callback');
        return this;
    }    

    // fire vetoable 'validate' event
    this.trigger('form-submit-validate', [a, this, options, veto]);
    if (veto.veto) {
        log('ajaxSubmit: submit vetoed via form-submit-validate trigger');
        return this;
    }    

    var q = $.param(a);

    if (options.type.toUpperCase() == 'GET') {
        options.url += (options.url.indexOf('?') >= 0 ? '&' : '?') + q;
        options.data = null;  // data is null for 'get'
    }
    else
        options.data = q; // data is the query string for 'post'

    var $form = this, callbacks = [];
    if (options.resetForm) callbacks.push(function() { $form.resetForm(); });
    if (options.clearForm) callbacks.push(function() { $form.clearForm(); });

    // perform a load on the target only if dataType is not provided
    if (!options.dataType && options.target) {
        var oldSuccess = options.success || function(){};
        callbacks.push(function(data) {
            $(options.target).html(data).each(oldSuccess, arguments);
        });
    }
    else if (options.success)
        callbacks.push(options.success);

    options.success = function(data, status) {
        for (var i=0, max=callbacks.length; i < max; i++)
            callbacks[i].apply(options, [data, status, $form]);
    };

    // are there files to upload?
    var files = $('input:file', this).fieldValue();
    var found = false;
    for (var j=0; j < files.length; j++)
        if (files[j])
            found = true;

    // options.iframe allows user to force iframe mode
   if (options.iframe || found) { 
       // hack to fix Safari hang (thanks to Tim Molendijk for this)
       // see:  http://groups.google.com/group/jquery-dev/browse_thread/thread/36395b7ab510dd5d
       if ($.browser.safari && options.closeKeepAlive)
           $.get(options.closeKeepAlive, fileUpload);
       else
           fileUpload();
       }
   else
       $.ajax(options);

    // fire 'notify' event
    this.trigger('form-submit-notify', [this, options]);
    return this;


    // private function for handling file uploads (hat tip to YAHOO!)
    function fileUpload() {
        var form = $form[0];
        
        if ($(':input[name=submit]', form).length) {
            alert('Error: Form elements must not be named "submit".');
            return;
        }
        
        var opts = $.extend({}, $.ajaxSettings, options);
		var s = jQuery.extend(true, {}, $.extend(true, {}, $.ajaxSettings), opts);

        var id = 'jqFormIO' + (new Date().getTime());
        var $io = $('<iframe id="' + id + '" name="' + id + '" />');
        var io = $io[0];

        if ($.browser.msie || $.browser.opera) 
            io.src = 'javascript:false;document.write("");';
        $io.css({ position: 'absolute', top: '-1000px', left: '-1000px' });

        var xhr = { // mock object
            aborted: 0,
            responseText: null,
            responseXML: null,
            status: 0,
            statusText: 'n/a',
            getAllResponseHeaders: function() {},
            getResponseHeader: function() {},
            setRequestHeader: function() {},
            abort: function() { 
                this.aborted = 1; 
                $io.attr('src','about:blank'); // abort op in progress
            }
        };

        var g = opts.global;
        // trigger ajax global events so that activity/block indicators work like normal
        if (g && ! $.active++) $.event.trigger("ajaxStart");
        if (g) $.event.trigger("ajaxSend", [xhr, opts]);

		if (s.beforeSend && s.beforeSend(xhr, s) === false) {
			s.global && jQuery.active--;
			return;
        }
        if (xhr.aborted)
            return;
        
        var cbInvoked = 0;
        var timedOut = 0;

        // add submitting element to data if we know it
        var sub = form.clk;
        if (sub) {
            var n = sub.name;
            if (n && !sub.disabled) {
                options.extraData = options.extraData || {};
                options.extraData[n] = sub.value;
                if (sub.type == "image") {
                    options.extraData[name+'.x'] = form.clk_x;
                    options.extraData[name+'.y'] = form.clk_y;
                }
            }
        }

        // take a breath so that pending repaints get some cpu time before the upload starts
        setTimeout(function() {
            // make sure form attrs are set
            var t = $form.attr('target'), a = $form.attr('action');
            $form.attr({
                target:   id,
                method:   'POST',
                action:   opts.url
            });
            
            // ie borks in some cases when setting encoding
            if (! options.skipEncodingOverride) {
                $form.attr({
                    encoding: 'multipart/form-data',
                    enctype:  'multipart/form-data'
                });
            }

            // support timout
            if (opts.timeout)
                setTimeout(function() { timedOut = true; cb(); }, opts.timeout);

            // add "extra" data to form if provided in options
            var extraInputs = [];
            try {
                if (options.extraData)
                    for (var n in options.extraData)
                        extraInputs.push(
                            $('<input type="hidden" name="'+n+'" value="'+options.extraData[n]+'" />')
                                .appendTo(form)[0]);
            
                // add iframe to doc and submit the form
                $io.appendTo('body');
                io.attachEvent ? io.attachEvent('onload', cb) : io.addEventListener('load', cb, false);
                form.submit();
            }
            finally {
                // reset attrs and remove "extra" input elements
                $form.attr('action', a);
                t ? $form.attr('target', t) : $form.removeAttr('target');
                $(extraInputs).remove();
            }
        }, 10);

        function cb() {
            if (cbInvoked++) return;
            
            io.detachEvent ? io.detachEvent('onload', cb) : io.removeEventListener('load', cb, false);

            var operaHack = 0;
            var ok = true;
            try {
                if (timedOut) throw 'timeout';
                // extract the server response from the iframe
                var data, doc;

                doc = io.contentWindow ? io.contentWindow.document : io.contentDocument ? io.contentDocument : io.document;
                
                if (doc.body == null && !operaHack && $.browser.opera) {
                    // In Opera 9.2.x the iframe DOM is not always traversable when
                    // the onload callback fires so we give Opera 100ms to right itself
                    operaHack = 1;
                    cbInvoked--;
                    setTimeout(cb, 100);
                    return;
                }
                
                xhr.responseText = doc.body ? doc.body.innerHTML : null;
                xhr.responseXML = doc.XMLDocument ? doc.XMLDocument : doc;
                xhr.getResponseHeader = function(header){
                    var headers = {'content-type': opts.dataType};
                    return headers[header];
                };

                if (opts.dataType == 'json' || opts.dataType == 'script') {
                    var ta = doc.getElementsByTagName('textarea')[0];
                    xhr.responseText = ta ? ta.value : xhr.responseText;
                }
                else if (opts.dataType == 'xml' && !xhr.responseXML && xhr.responseText != null) {
                    xhr.responseXML = toXml(xhr.responseText);
                }
                data = $.httpData(xhr, opts.dataType);
            }
            catch(e){
                ok = false;
                $.handleError(opts, xhr, 'error', e);
            }

            // ordering of these callbacks/triggers is odd, but that's how $.ajax does it
            if (ok) {
                opts.success(data, 'success');
                if (g) $.event.trigger("ajaxSuccess", [xhr, opts]);
            }
            if (g) $.event.trigger("ajaxComplete", [xhr, opts]);
            if (g && ! --$.active) $.event.trigger("ajaxStop");
            if (opts.complete) opts.complete(xhr, ok ? 'success' : 'error');

            // clean up
            setTimeout(function() {
                $io.remove();
                xhr.responseXML = null;
            }, 100);
        };

        function toXml(s, doc) {
            if (window.ActiveXObject) {
                doc = new ActiveXObject('Microsoft.XMLDOM');
                doc.async = 'false';
                doc.loadXML(s);
            }
            else
                doc = (new DOMParser()).parseFromString(s, 'text/xml');
            return (doc && doc.documentElement && doc.documentElement.tagName != 'parsererror') ? doc : null;
        };
    };
};

/**
 * ajaxForm() provides a mechanism for fully automating form submission.
 *
 * The advantages of using this method instead of ajaxSubmit() are:
 *
 * 1: This method will include coordinates for <input type="image" /> elements (if the element
 *    is used to submit the form).
 * 2. This method will include the submit element's name/value data (for the element that was
 *    used to submit the form).
 * 3. This method binds the submit() method to the form for you.
 *
 * The options argument for ajaxForm works exactly as it does for ajaxSubmit.  ajaxForm merely
 * passes the options argument along after properly binding events for submit elements and
 * the form itself.
 */ 
$.fn.ajaxForm = function(options) {
    return this.ajaxFormUnbind().bind('submit.form-plugin',function() {
        $(this).ajaxSubmit(options);
        return false;
    }).each(function() {
        // store options in hash
        $(":submit,input:image", this).bind('click.form-plugin',function(e) {
            var form = this.form;
            form.clk = this;
            if (this.type == 'image') {
                if (e.offsetX != undefined) {
                    form.clk_x = e.offsetX;
                    form.clk_y = e.offsetY;
                } else if (typeof $.fn.offset == 'function') { // try to use dimensions plugin
                    var offset = $(this).offset();
                    form.clk_x = e.pageX - offset.left;
                    form.clk_y = e.pageY - offset.top;
                } else {
                    form.clk_x = e.pageX - this.offsetLeft;
                    form.clk_y = e.pageY - this.offsetTop;
                }
            }
            // clear form vars
            setTimeout(function() { form.clk = form.clk_x = form.clk_y = null; }, 10);
        });
    });
};

// ajaxFormUnbind unbinds the event handlers that were bound by ajaxForm
$.fn.ajaxFormUnbind = function() {
    this.unbind('submit.form-plugin');
    return this.each(function() {
        $(":submit,input:image", this).unbind('click.form-plugin');
    });

};

/**
 * formToArray() gathers form element data into an array of objects that can
 * be passed to any of the following ajax functions: $.get, $.post, or load.
 * Each object in the array has both a 'name' and 'value' property.  An example of
 * an array for a simple login form might be:
 *
 * [ { name: 'username', value: 'jresig' }, { name: 'password', value: 'secret' } ]
 *
 * It is this array that is passed to pre-submit callback functions provided to the
 * ajaxSubmit() and ajaxForm() methods.
 */
$.fn.formToArray = function(semantic) {
    var a = [];
    if (this.length == 0) return a;

    var form = this[0];
    var els = semantic ? form.getElementsByTagName('*') : form.elements;
    if (!els) return a;
    for(var i=0, max=els.length; i < max; i++) {
        var el = els[i];
        var n = el.name;
        if (!n) continue;

        if (semantic && form.clk && el.type == "image") {
            // handle image inputs on the fly when semantic == true
            if(!el.disabled && form.clk == el)
                a.push({name: n+'.x', value: form.clk_x}, {name: n+'.y', value: form.clk_y});
            continue;
        }

        var v = $.fieldValue(el, true);
        if (v && v.constructor == Array) {
            for(var j=0, jmax=v.length; j < jmax; j++)
                a.push({name: n, value: v[j]});
        }
        else if (v !== null && typeof v != 'undefined')
            a.push({name: n, value: v});
    }

    if (!semantic && form.clk) {
        // input type=='image' are not found in elements array! handle them here
        var inputs = form.getElementsByTagName("input");
        for(var i=0, max=inputs.length; i < max; i++) {
            var input = inputs[i];
            var n = input.name;
            if(n && !input.disabled && input.type == "image" && form.clk == input)
                a.push({name: n+'.x', value: form.clk_x}, {name: n+'.y', value: form.clk_y});
        }
    }
    return a;
};

/**
 * Serializes form data into a 'submittable' string. This method will return a string
 * in the format: name1=value1&amp;name2=value2
 */
$.fn.formSerialize = function(semantic) {
    //hand off to jQuery.param for proper encoding
    return $.param(this.formToArray(semantic));
};

/**
 * Serializes all field elements in the jQuery object into a query string.
 * This method will return a string in the format: name1=value1&amp;name2=value2
 */
$.fn.fieldSerialize = function(successful) {
    var a = [];
    this.each(function() {
        var n = this.name;
        if (!n) return;
        var v = $.fieldValue(this, successful);
        if (v && v.constructor == Array) {
            for (var i=0,max=v.length; i < max; i++)
                a.push({name: n, value: v[i]});
        }
        else if (v !== null && typeof v != 'undefined')
            a.push({name: this.name, value: v});
    });
    //hand off to jQuery.param for proper encoding
    return $.param(a);
};

/**
 * Returns the value(s) of the element in the matched set.  For example, consider the following form:
 *
 *  <form><fieldset>
 *      <input name="A" type="text" />
 *      <input name="A" type="text" />
 *      <input name="B" type="checkbox" value="B1" />
 *      <input name="B" type="checkbox" value="B2"/>
 *      <input name="C" type="radio" value="C1" />
 *      <input name="C" type="radio" value="C2" />
 *  </fieldset></form>
 *
 *  var v = $(':text').fieldValue();
 *  // if no values are entered into the text inputs
 *  v == ['','']
 *  // if values entered into the text inputs are 'foo' and 'bar'
 *  v == ['foo','bar']
 *
 *  var v = $(':checkbox').fieldValue();
 *  // if neither checkbox is checked
 *  v === undefined
 *  // if both checkboxes are checked
 *  v == ['B1', 'B2']
 *
 *  var v = $(':radio').fieldValue();
 *  // if neither radio is checked
 *  v === undefined
 *  // if first radio is checked
 *  v == ['C1']
 *
 * The successful argument controls whether or not the field element must be 'successful'
 * (per http://www.w3.org/TR/html4/interact/forms.html#successful-controls).
 * The default value of the successful argument is true.  If this value is false the value(s)
 * for each element is returned.
 *
 * Note: This method *always* returns an array.  If no valid value can be determined the
 *       array will be empty, otherwise it will contain one or more values.
 */
$.fn.fieldValue = function(successful) {
    for (var val=[], i=0, max=this.length; i < max; i++) {
        var el = this[i];
        var v = $.fieldValue(el, successful);
        if (v === null || typeof v == 'undefined' || (v.constructor == Array && !v.length))
            continue;
        v.constructor == Array ? $.merge(val, v) : val.push(v);
    }
    return val;
};

/**
 * Returns the value of the field element.
 */
$.fieldValue = function(el, successful) {
    var n = el.name, t = el.type, tag = el.tagName.toLowerCase();
    if (typeof successful == 'undefined') successful = true;

    if (successful && (!n || el.disabled || t == 'reset' || t == 'button' ||
        (t == 'checkbox' || t == 'radio') && !el.checked ||
        (t == 'submit' || t == 'image') && el.form && el.form.clk != el ||
        tag == 'select' && el.selectedIndex == -1))
            return null;

    if (tag == 'select') {
        var index = el.selectedIndex;
        if (index < 0) return null;
        var a = [], ops = el.options;
        var one = (t == 'select-one');
        var max = (one ? index+1 : ops.length);
        for(var i=(one ? index : 0); i < max; i++) {
            var op = ops[i];
            if (op.selected) {
                // extra pain for IE...
                var v = $.browser.msie && !(op.attributes['value'].specified) ? op.text : op.value;
                if (one) return v;
                a.push(v);
            }
        }
        return a;
    }
    return el.value;
};

/**
 * Clears the form data.  Takes the following actions on the form's input fields:
 *  - input text fields will have their 'value' property set to the empty string
 *  - select elements will have their 'selectedIndex' property set to -1
 *  - checkbox and radio inputs will have their 'checked' property set to false
 *  - inputs of type submit, button, reset, and hidden will *not* be effected
 *  - button elements will *not* be effected
 */
$.fn.clearForm = function() {
    return this.each(function() {
        $('input,select,textarea', this).clearFields();
    });
};

/**
 * Clears the selected form elements.
 */
$.fn.clearFields = $.fn.clearInputs = function() {
    return this.each(function() {
        var t = this.type, tag = this.tagName.toLowerCase();
        if (t == 'text' || t == 'password' || tag == 'textarea')
            this.value = '';
        else if (t == 'checkbox' || t == 'radio')
            this.checked = false;
        else if (tag == 'select')
            this.selectedIndex = -1;
    });
};

/**
 * Resets the form data.  Causes all form elements to be reset to their original value.
 */
$.fn.resetForm = function() {
    return this.each(function() {
        // guard against an input with the name of 'reset'
        // note that IE reports the reset function as an 'object'
        if (typeof this.reset == 'function' || (typeof this.reset == 'object' && !this.reset.nodeType))
            this.reset();
    });
};

/**
 * Enables or disables any matching elements.
 */
$.fn.enable = function(b) { 
    if (b == undefined) b = true;
    return this.each(function() { 
        this.disabled = !b 
    });
};

/**
 * Checks/unchecks any matching checkboxes or radio buttons and
 * selects/deselects and matching option elements.
 */
$.fn.selected = function(select) {
    if (select == undefined) select = true;
    return this.each(function() { 
        var t = this.type;
        if (t == 'checkbox' || t == 'radio')
            this.checked = select;
        else if (this.tagName.toLowerCase() == 'option') {
            var $sel = $(this).parent('select');
            if (select && $sel[0] && $sel[0].type == 'select-one') {
                // deselect all other options
                $sel.find('option').selected(false);
            }
            this.selected = select;
        }
    });
};

// helper fn for console logging
// set $.fn.ajaxSubmit.debug to true to enable debug logging
function log() {
    if ($.fn.ajaxSubmit.debug && window.console && window.console.log)
        window.console.log('[jquery.form] ' + Array.prototype.join.call(arguments,''));
};

})(jQuery);

/**
* hoverIntent r6 // 2011.02.26 // jQuery 1.5.1+
* <http://cherne.net/brian/resources/jquery.hoverIntent.html>
* 
* @param  f  onMouseOver function || An object with configuration options
* @param  g  onMouseOut function  || Nothing (use configuration options object)
* @author    Brian Cherne brian(at)cherne(dot)net
*/
(function($){$.fn.hoverIntent=function(f,g){var cfg={sensitivity:7,interval:100,timeout:0};cfg=$.extend(cfg,g?{over:f,out:g}:f);var cX,cY,pX,pY;var track=function(ev){cX=ev.pageX;cY=ev.pageY};var compare=function(ev,ob){ob.hoverIntent_t=clearTimeout(ob.hoverIntent_t);if((Math.abs(pX-cX)+Math.abs(pY-cY))<cfg.sensitivity){$(ob).unbind("mousemove",track);ob.hoverIntent_s=1;return cfg.over.apply(ob,[ev])}else{pX=cX;pY=cY;ob.hoverIntent_t=setTimeout(function(){compare(ev,ob)},cfg.interval)}};var delay=function(ev,ob){ob.hoverIntent_t=clearTimeout(ob.hoverIntent_t);ob.hoverIntent_s=0;return cfg.out.apply(ob,[ev])};var handleHover=function(e){var ev=jQuery.extend({},e);var ob=this;if(ob.hoverIntent_t){ob.hoverIntent_t=clearTimeout(ob.hoverIntent_t)}if(e.type=="mouseenter"){pX=ev.pageX;pY=ev.pageY;$(ob).bind("mousemove",track);if(ob.hoverIntent_s!=1){ob.hoverIntent_t=setTimeout(function(){compare(ev,ob)},cfg.interval)}}else{$(ob).unbind("mousemove",track);if(ob.hoverIntent_s==1){ob.hoverIntent_t=setTimeout(function(){delay(ev,ob)},cfg.timeout)}}};return this.bind('mouseenter',handleHover).bind('mouseleave',handleHover)}})(jQuery);

/*
 * jQuery plugin: fieldSelection - v0.1.0 - last change: 2006-12-16
 * (c) 2006 Alex Brem <alex@0xab.cd> - http://blog.0xab.cd
 */
/* */
(function() {

	var fieldSelection = {

		getSelection: function() {

			var e = this.jquery ? this[0] : this;

			return (

				/* mozilla / dom 3.0 */
				('selectionStart' in e && function() {
					var l = e.selectionEnd - e.selectionStart;
					return { start: e.selectionStart, end: e.selectionEnd, length: l, text: e.value.substr(e.selectionStart, l) };
				}) ||

				/* exploder */
				(document.selection && function() {

					e.focus();

					var r = document.selection.createRange();
					if (r == null) {
						return { start: 0, end: e.value.length, length: 0 }
					}

					var re = e.createTextRange();
					var rc = re.duplicate();
					re.moveToBookmark(r.getBookmark());
					rc.setEndPoint('EndToStart', re);

					return { start: rc.text.length, end: rc.text.length + r.text.length, length: r.text.length, text: r.text };
				}) ||

				/* browser not supported */
				function() {
					return { start: 0, end: e.value.length, length: 0 };
				}

			)();

		},

		replaceSelection: function() {

			var e = this.jquery ? this[0] : this;
			var text = arguments[0] || '';
			var part1 = arguments[1] || e.selectionStart;
			var plus1 = arguments[2] || 0;
			return (

				/* mozilla / dom 3.0 */
				('selectionStart' in e && function() {

					start = e.value.substr(0, e.selectionStart).length;
					var end = text.length + start;					
					e.value = e.value.substr(0, e.selectionStart) + text + e.value.substr(e.selectionEnd, e.value.length);
					e.setSelectionRange(start,end);
					e.focus();
					return this;
				}) ||

				/* exploder */
				(document.selection && function() {
					e.focus();
					document.selection.createRange().text = text;
					return this;
				}) ||

				/* browser not supported */
				function() {
					e.value += text;
					return this;
				}

			)();

		}

	};

	jQuery.each(fieldSelection, function(i) { jQuery.fn[i] = this; });

})();

/*!
	Autosize v1.18.6 - 2014-03-13
	Automatically adjust textarea height based on user input.
	(c) 2014 Jack Moore - http://www.jacklmoore.com/autosize
	license: http://www.opensource.org/licenses/mit-license.php
*/
(function(e){var t,o={className:"autosizejs",id:"autosizejs",append:"",callback:!1,resizeDelay:10,placeholder:!0},i='<textarea tabindex="-1" style="position:absolute; top:-999px; left:0; right:auto; bottom:auto; border:0; padding: 0; -moz-box-sizing:content-box; -webkit-box-sizing:content-box; box-sizing:content-box; word-wrap:break-word; height:0 !important; min-height:0 !important; overflow:hidden; transition:none; -webkit-transition:none; -moz-transition:none;"/>',n=["fontFamily","fontSize","fontWeight","fontStyle","letterSpacing","textTransform","wordSpacing","textIndent"],a=e(i).data("autosize",!0)[0];a.style.lineHeight="99px","99px"===e(a).css("lineHeight")&&n.push("lineHeight"),a.style.lineHeight="",e.fn.autosize=function(i){return this.length?(i=e.extend({},o,i||{}),a.parentNode!==document.body&&e(document.body).append(a),this.each(function(){function o(){var t,o=window.getComputedStyle?window.getComputedStyle(u,null):!1;o?(t=u.getBoundingClientRect().width,0===t&&(t=parseInt(o.width,10)),e.each(["paddingLeft","paddingRight","borderLeftWidth","borderRightWidth"],function(e,i){t-=parseInt(o[i],10)})):t=Math.max(p.width(),0),a.style.width=t+"px"}function s(){var s={};if(t=u,a.className=i.className,a.id=i.id,d=parseInt(p.css("maxHeight"),10),e.each(n,function(e,t){s[t]=p.css(t)}),e(a).css(s).attr("wrap",p.attr("wrap")),o(),window.chrome){var r=u.style.width;u.style.width="0px",u.offsetWidth,u.style.width=r}}function r(){var e,n;t!==u?s():o(),a.value=!u.value&&i.placeholder?(p.attr("placeholder")||"")+i.append:u.value+i.append,a.style.overflowY=u.style.overflowY,n=parseInt(u.style.height,10),a.scrollTop=0,a.scrollTop=9e4,e=a.scrollTop,d&&e>d?(u.style.overflowY="scroll",e=d):(u.style.overflowY="hidden",c>e&&(e=c)),e+=w,n!==e&&(u.style.height=e+"px",f&&i.callback.call(u,u))}function l(){clearTimeout(h),h=setTimeout(function(){var e=p.width();e!==g&&(g=e,r())},parseInt(i.resizeDelay,10))}var d,c,h,u=this,p=e(u),w=0,f=e.isFunction(i.callback),z={height:u.style.height,overflow:u.style.overflow,overflowY:u.style.overflowY,wordWrap:u.style.wordWrap,resize:u.style.resize},g=p.width();p.data("autosize")||(p.data("autosize",!0),("border-box"===p.css("box-sizing")||"border-box"===p.css("-moz-box-sizing")||"border-box"===p.css("-webkit-box-sizing"))&&(w=p.outerHeight()-p.height()),c=Math.max(parseInt(p.css("minHeight"),10)-w||0,p.height()),p.css({overflow:"hidden",overflowY:"hidden",wordWrap:"break-word",resize:"none"===p.css("resize")||"vertical"===p.css("resize")?"none":"horizontal"}),"onpropertychange"in u?"oninput"in u?p.on("input.autosize keyup.autosize",r):p.on("propertychange.autosize",function(){"value"===event.propertyName&&r()}):p.on("input.autosize",r),i.resizeDelay!==!1&&e(window).on("resize.autosize",l),p.on("autosize.resize",r),p.on("autosize.resizeIncludeStyle",function(){t=null,r()}),p.on("autosize.destroy",function(){t=null,clearTimeout(h),e(window).off("resize",l),p.off("autosize").off(".autosize").css(z).removeData("autosize")}),r())})):this}})(window.jQuery||window.$);

/*! Copyright (c) 2013 Brandon Aaron (http://brandon.aaron.sh)
 * Licensed under the MIT License (LICENSE.txt).
 *
 * Version: 3.1.9
 *
 * Requires: jQuery 1.2.2+
 */

(function (factory) {
    if ( typeof define === 'function' && define.amd ) {
        // AMD. Register as an anonymous module.
        define(['jquery'], factory);
    } else if (typeof exports === 'object') {
        // Node/CommonJS style for Browserify
        module.exports = factory;
    } else {
        // Browser globals
        factory(jQuery);
    }
}(function ($) {

    var toFix  = ['wheel', 'mousewheel', 'DOMMouseScroll', 'MozMousePixelScroll'],
        toBind = ( 'onwheel' in document || document.documentMode >= 9 ) ?
                    ['wheel'] : ['mousewheel', 'DomMouseScroll', 'MozMousePixelScroll'],
        slice  = Array.prototype.slice,
        nullLowestDeltaTimeout, lowestDelta;

    if ( $.event.fixHooks ) {
        for ( var i = toFix.length; i; ) {
            $.event.fixHooks[ toFix[--i] ] = $.event.mouseHooks;
        }
    }

    var special = $.event.special.mousewheel = {
        version: '3.1.9',

        setup: function() {
            if ( this.addEventListener ) {
                for ( var i = toBind.length; i; ) {
                    this.addEventListener( toBind[--i], handler, false );
                }
            } else {
                this.onmousewheel = handler;
            }
            // Store the line height and page height for this particular element
            $.data(this, 'mousewheel-line-height', special.getLineHeight(this));
            $.data(this, 'mousewheel-page-height', special.getPageHeight(this));
        },

        teardown: function() {
            if ( this.removeEventListener ) {
                for ( var i = toBind.length; i; ) {
                    this.removeEventListener( toBind[--i], handler, false );
                }
            } else {
                this.onmousewheel = null;
            }
        },

        getLineHeight: function(elem) {
            return parseInt($(elem)['offsetParent' in $.fn ? 'offsetParent' : 'parent']().css('fontSize'), 10);
        },

        getPageHeight: function(elem) {
            return $(elem).height();
        },

        settings: {
            adjustOldDeltas: true
        }
    };

    $.fn.extend({
        mousewheel: function(fn) {
            return fn ? this.bind('mousewheel', fn) : this.trigger('mousewheel');
        },

        unmousewheel: function(fn) {
            return this.unbind('mousewheel', fn);
        }
    });


    function handler(event) {
        var orgEvent   = event || window.event,
            args       = slice.call(arguments, 1),
            delta      = 0,
            deltaX     = 0,
            deltaY     = 0,
            absDelta   = 0;
        event = $.event.fix(orgEvent);
        event.type = 'mousewheel';

        // Old school scrollwheel delta
        if ( 'detail'      in orgEvent ) { deltaY = orgEvent.detail * -1;      }
        if ( 'wheelDelta'  in orgEvent ) { deltaY = orgEvent.wheelDelta;       }
        if ( 'wheelDeltaY' in orgEvent ) { deltaY = orgEvent.wheelDeltaY;      }
        if ( 'wheelDeltaX' in orgEvent ) { deltaX = orgEvent.wheelDeltaX * -1; }

        // Firefox < 17 horizontal scrolling related to DOMMouseScroll event
        if ( 'axis' in orgEvent && orgEvent.axis === orgEvent.HORIZONTAL_AXIS ) {
            deltaX = deltaY * -1;
            deltaY = 0;
        }

        // Set delta to be deltaY or deltaX if deltaY is 0 for backwards compatabilitiy
        delta = deltaY === 0 ? deltaX : deltaY;

        // New school wheel delta (wheel event)
        if ( 'deltaY' in orgEvent ) {
            deltaY = orgEvent.deltaY * -1;
            delta  = deltaY;
        }
        if ( 'deltaX' in orgEvent ) {
            deltaX = orgEvent.deltaX;
            if ( deltaY === 0 ) { delta  = deltaX * -1; }
        }

        // No change actually happened, no reason to go any further
        if ( deltaY === 0 && deltaX === 0 ) { return; }

        // Need to convert lines and pages to pixels if we aren't already in pixels
        // There are three delta modes:
        //   * deltaMode 0 is by pixels, nothing to do
        //   * deltaMode 1 is by lines
        //   * deltaMode 2 is by pages
        if ( orgEvent.deltaMode === 1 ) {
            var lineHeight = $.data(this, 'mousewheel-line-height');
            delta  *= lineHeight;
            deltaY *= lineHeight;
            deltaX *= lineHeight;
        } else if ( orgEvent.deltaMode === 2 ) {
            var pageHeight = $.data(this, 'mousewheel-page-height');
            delta  *= pageHeight;
            deltaY *= pageHeight;
            deltaX *= pageHeight;
        }

        // Store lowest absolute delta to normalize the delta values
        absDelta = Math.max( Math.abs(deltaY), Math.abs(deltaX) );

        if ( !lowestDelta || absDelta < lowestDelta ) {
            lowestDelta = absDelta;

            // Adjust older deltas if necessary
            if ( shouldAdjustOldDeltas(orgEvent, absDelta) ) {
                lowestDelta /= 40;
            }
        }

        // Adjust older deltas if necessary
        if ( shouldAdjustOldDeltas(orgEvent, absDelta) ) {
            // Divide all the things by 40!
            delta  /= 40;
            deltaX /= 40;
            deltaY /= 40;
        }

        // Get a whole, normalized value for the deltas
        delta  = Math[ delta  >= 1 ? 'floor' : 'ceil' ](delta  / lowestDelta);
        deltaX = Math[ deltaX >= 1 ? 'floor' : 'ceil' ](deltaX / lowestDelta);
        deltaY = Math[ deltaY >= 1 ? 'floor' : 'ceil' ](deltaY / lowestDelta);

        // Add information to the event object
        event.deltaX = deltaX;
        event.deltaY = deltaY;
        event.deltaFactor = lowestDelta;
        // Go ahead and set deltaMode to 0 since we converted to pixels
        // Although this is a little odd since we overwrite the deltaX/Y
        // properties with normalized deltas.
        event.deltaMode = 0;

        // Add event and delta to the front of the arguments
        args.unshift(event, delta, deltaX, deltaY);

        // Clearout lowestDelta after sometime to better
        // handle multiple device types that give different
        // a different lowestDelta
        // Ex: trackpad = 3 and mouse wheel = 120
        if (nullLowestDeltaTimeout) { clearTimeout(nullLowestDeltaTimeout); }
        nullLowestDeltaTimeout = setTimeout(nullLowestDelta, 200);

        return ($.event.dispatch || $.event.handle).apply(this, args);
    }

    function nullLowestDelta() {
        lowestDelta = null;
    }

    function shouldAdjustOldDeltas(orgEvent, absDelta) {
        // If this is an older event and the delta is divisable by 120,
        // then we are assuming that the browser is treating this as an
        // older mouse wheel event and that we should divide the deltas
        // by 40 to try and get a more usable deltaFactor.
        // Side note, this actually impacts the reported scroll distance
        // in older browsers and can cause scrolling to be slower than native.
        // Turn this off by setting $.event.special.mousewheel.settings.adjustOldDeltas to false.
        return special.settings.adjustOldDeltas && orgEvent.type === 'mousewheel' && absDelta % 120 === 0;
    }

}));

/*! Javascript plotting library for jQuery, v. 0.7.
 *
 * Released under the MIT license by IOLA, December 2007.
 * http://opensource.org/licenses/mit-license.php
 *
 */

// first an inline dependency, jquery.colorhelpers.js, we inline it here
// for convenience

/* Plugin for jQuery for working with colors.
 * 
 * Version 1.1.
 * 
 * Inspiration from jQuery color animation plugin by John Resig.
 *
 * Released under the MIT license by Ole Laursen, October 2009.
 * http://opensource.org/licenses/mit-license.php
 *
 * Examples:
 *
 *   $.color.parse("#fff").scale('rgb', 0.25).add('a', -0.5).toString()
 *   var c = $.color.extract($("#mydiv"), 'background-color');
 *   console.log(c.r, c.g, c.b, c.a);
 *   $.color.make(100, 50, 25, 0.4).toString() // returns "rgba(100,50,25,0.4)"
 *
 * Note that .scale() and .add() return the same modified object
 * instead of making a new one.
 *
 * V. 1.1: Fix error handling so e.g. parsing an empty string does
 * produce a color rather than just crashing.
 */ 
(function(B){B.color={};B.color.make=function(F,E,C,D){var G={};G.r=F||0;G.g=E||0;G.b=C||0;G.a=D!=null?D:1;G.add=function(J,I){for(var H=0;H<J.length;++H){G[J.charAt(H)]+=I}return G.normalize()};G.scale=function(J,I){for(var H=0;H<J.length;++H){G[J.charAt(H)]*=I}return G.normalize()};G.toString=function(){if(G.a>=1){return"rgb("+[G.r,G.g,G.b].join(",")+")"}else{return"rgba("+[G.r,G.g,G.b,G.a].join(",")+")"}};G.normalize=function(){function H(J,K,I){return K<J?J:(K>I?I:K)}G.r=H(0,parseInt(G.r),255);G.g=H(0,parseInt(G.g),255);G.b=H(0,parseInt(G.b),255);G.a=H(0,G.a,1);return G};G.clone=function(){return B.color.make(G.r,G.b,G.g,G.a)};return G.normalize()};B.color.extract=function(D,C){var E;do{E=D.css(C).toLowerCase();if(E!=""&&E!="transparent"){break}D=D.parent()}while(!B.nodeName(D.get(0),"body"));if(E=="rgba(0, 0, 0, 0)"){E="transparent"}return B.color.parse(E)};B.color.parse=function(F){var E,C=B.color.make;if(E=/rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(F)){return C(parseInt(E[1],10),parseInt(E[2],10),parseInt(E[3],10))}if(E=/rgba\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(F)){return C(parseInt(E[1],10),parseInt(E[2],10),parseInt(E[3],10),parseFloat(E[4]))}if(E=/rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(F)){return C(parseFloat(E[1])*2.55,parseFloat(E[2])*2.55,parseFloat(E[3])*2.55)}if(E=/rgba\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(F)){return C(parseFloat(E[1])*2.55,parseFloat(E[2])*2.55,parseFloat(E[3])*2.55,parseFloat(E[4]))}if(E=/#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(F)){return C(parseInt(E[1],16),parseInt(E[2],16),parseInt(E[3],16))}if(E=/#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(F)){return C(parseInt(E[1]+E[1],16),parseInt(E[2]+E[2],16),parseInt(E[3]+E[3],16))}var D=B.trim(F).toLowerCase();if(D=="transparent"){return C(255,255,255,0)}else{E=A[D]||[0,0,0];return C(E[0],E[1],E[2])}};var A={aqua:[0,255,255],azure:[240,255,255],beige:[245,245,220],black:[0,0,0],blue:[0,0,255],brown:[165,42,42],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgrey:[169,169,169],darkgreen:[0,100,0],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkviolet:[148,0,211],fuchsia:[255,0,255],gold:[255,215,0],green:[0,128,0],indigo:[75,0,130],khaki:[240,230,140],lightblue:[173,216,230],lightcyan:[224,255,255],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightyellow:[255,255,224],lime:[0,255,0],magenta:[255,0,255],maroon:[128,0,0],navy:[0,0,128],olive:[128,128,0],orange:[255,165,0],pink:[255,192,203],purple:[128,0,128],violet:[128,0,128],red:[255,0,0],silver:[192,192,192],white:[255,255,255],yellow:[255,255,0]}})(jQuery);

// the actual Flot code
(function($) {
    function Plot(placeholder, data_, options_, plugins) {
        // data is on the form:
        //   [ series1, series2 ... ]
        // where series is either just the data as [ [x1, y1], [x2, y2], ... ]
        // or { data: [ [x1, y1], [x2, y2], ... ], label: "some label", ... }
        
        var series = [],
            options = {
                // the color theme used for graphs
                colors: ["#edc240", "#afd8f8", "#cb4b4b", "#4da74d", "#9440ed"],
                legend: {
                    show: true,
                    noColumns: 1, // number of colums in legend table
                    labelFormatter: null, // fn: string -> string
                    labelBoxBorderColor: "#ccc", // border color for the little label boxes
                    container: null, // container (as jQuery object) to put legend in, null means default on top of graph
                    position: "ne", // position of default legend container within plot
                    margin: 5, // distance from grid edge to default legend container within plot
                    backgroundColor: null, // null means auto-detect
                    backgroundOpacity: 0.85 // set to 0 to avoid background
                },
                xaxis: {
                    show: null, // null = auto-detect, true = always, false = never
                    position: "bottom", // or "top"
                    mode: null, // null or "time"
                    color: null, // base color, labels, ticks
                    tickColor: null, // possibly different color of ticks, e.g. "rgba(0,0,0,0.15)"
                    transform: null, // null or f: number -> number to transform axis
                    inverseTransform: null, // if transform is set, this should be the inverse function
                    min: null, // min. value to show, null means set automatically
                    max: null, // max. value to show, null means set automatically
                    autoscaleMargin: null, // margin in % to add if auto-setting min/max
                    ticks: null, // either [1, 3] or [[1, "a"], 3] or (fn: axis info -> ticks) or app. number of ticks for auto-ticks
                    tickFormatter: null, // fn: number -> string
                    labelWidth: null, // size of tick labels in pixels
                    labelHeight: null,
                    reserveSpace: null, // whether to reserve space even if axis isn't shown
                    tickLength: null, // size in pixels of ticks, or "full" for whole line
                    alignTicksWithAxis: null, // axis number or null for no sync
                    
                    // mode specific options
                    tickDecimals: null, // no. of decimals, null means auto
                    tickSize: null, // number or [number, "unit"]
                    minTickSize: null, // number or [number, "unit"]
                    monthNames: null, // list of names of months
                    timeformat: null, // format string to use
                    twelveHourClock: false // 12 or 24 time in time mode
                },
                yaxis: {
                    autoscaleMargin: 0.02,
                    position: "left" // or "right"
                },
                xaxes: [],
                yaxes: [],
                series: {
                    points: {
                        show: false,
                        radius: 3,
                        lineWidth: 2, // in pixels
                        fill: true,
                        fillColor: "#ffffff",
                        symbol: "circle" // or callback
                    },
                    lines: {
                        // we don't put in show: false so we can see
                        // whether lines were actively disabled 
                        lineWidth: 2, // in pixels
                        fill: false,
                        fillColor: null,
                        steps: false
                    },
                    bars: {
                        show: false,
                        lineWidth: 2, // in pixels
                        barWidth: 1, // in units of the x axis
                        fill: true,
                        fillColor: null,
                        align: "left", // or "center" 
                        horizontal: false
                    },
                    shadowSize: 3
                },
                grid: {
                    show: true,
                    aboveData: false,
                    color: "#545454", // primary color used for outline and labels
                    backgroundColor: null, // null for transparent, else color
                    borderColor: null, // set if different from the grid color
                    tickColor: null, // color for the ticks, e.g. "rgba(0,0,0,0.15)"
                    labelMargin: 5, // in pixels
                    axisMargin: 8, // in pixels
                    borderWidth: 2, // in pixels
                    minBorderMargin: null, // in pixels, null means taken from points radius
                    markings: null, // array of ranges or fn: axes -> array of ranges
                    markingsColor: "#f4f4f4",
                    markingsLineWidth: 2,
                    // interactive stuff
                    clickable: false,
                    hoverable: false,
                    autoHighlight: true, // highlight in case mouse is near
                    mouseActiveRadius: 10 // how far the mouse can be away to activate an item
                },
                hooks: {}
            },
        canvas = null,      // the canvas for the plot itself
        overlay = null,     // canvas for interactive stuff on top of plot
        eventHolder = null, // jQuery object that events should be bound to
        ctx = null, octx = null,
        xaxes = [], yaxes = [],
        plotOffset = { left: 0, right: 0, top: 0, bottom: 0},
        canvasWidth = 0, canvasHeight = 0,
        plotWidth = 0, plotHeight = 0,
        hooks = {
            processOptions: [],
            processRawData: [],
            processDatapoints: [],
            drawSeries: [],
            draw: [],
            bindEvents: [],
            drawOverlay: [],
            shutdown: []
        },
        plot = this;

        // public functions
        plot.setData = setData;
        plot.setupGrid = setupGrid;
        plot.draw = draw;
        plot.getPlaceholder = function() { return placeholder; };
        plot.getCanvas = function() { return canvas; };
        plot.getPlotOffset = function() { return plotOffset; };
        plot.width = function () { return plotWidth; };
        plot.height = function () { return plotHeight; };
        plot.offset = function () {
            var o = eventHolder.offset();
            o.left += plotOffset.left;
            o.top += plotOffset.top;
            return o;
        };
        plot.getData = function () { return series; };
        plot.getAxes = function () {
            var res = {}, i;
            $.each(xaxes.concat(yaxes), function (_, axis) {
                if (axis)
                    res[axis.direction + (axis.n != 1 ? axis.n : "") + "axis"] = axis;
            });
            return res;
        };
        plot.getXAxes = function () { return xaxes; };
        plot.getYAxes = function () { return yaxes; };
        plot.c2p = canvasToAxisCoords;
        plot.p2c = axisToCanvasCoords;
        plot.getOptions = function () { return options; };
        plot.highlight = highlight;
        plot.unhighlight = unhighlight;
        plot.triggerRedrawOverlay = triggerRedrawOverlay;
        plot.pointOffset = function(point) {
            return {
                left: parseInt(xaxes[axisNumber(point, "x") - 1].p2c(+point.x) + plotOffset.left),
                top: parseInt(yaxes[axisNumber(point, "y") - 1].p2c(+point.y) + plotOffset.top)
            };
        };
        plot.shutdown = shutdown;
        plot.resize = function () {
            getCanvasDimensions();
            resizeCanvas(canvas);
            resizeCanvas(overlay);
        };

        // public attributes
        plot.hooks = hooks;
        
        // initialize
        initPlugins(plot);
        parseOptions(options_);
        setupCanvases();
        setData(data_);
        setupGrid();
        draw();
        bindEvents();


        function executeHooks(hook, args) {
            args = [plot].concat(args);
            for (var i = 0; i < hook.length; ++i)
                hook[i].apply(this, args);
        }

        function initPlugins() {
            for (var i = 0; i < plugins.length; ++i) {
                var p = plugins[i];
                p.init(plot);
                if (p.options)
                    $.extend(true, options, p.options);
            }
        }
        
        function parseOptions(opts) {
            var i;
            
            $.extend(true, options, opts);
            
            if (options.xaxis.color == null)
                options.xaxis.color = options.grid.color;
            if (options.yaxis.color == null)
                options.yaxis.color = options.grid.color;
            
            if (options.xaxis.tickColor == null) // backwards-compatibility
                options.xaxis.tickColor = options.grid.tickColor;
            if (options.yaxis.tickColor == null) // backwards-compatibility
                options.yaxis.tickColor = options.grid.tickColor;

            if (options.grid.borderColor == null)
                options.grid.borderColor = options.grid.color;
            if (options.grid.tickColor == null)
                options.grid.tickColor = $.color.parse(options.grid.color).scale('a', 0.22).toString();
            
            // fill in defaults in axes, copy at least always the
            // first as the rest of the code assumes it'll be there
            for (i = 0; i < Math.max(1, options.xaxes.length); ++i)
                options.xaxes[i] = $.extend(true, {}, options.xaxis, options.xaxes[i]);
            for (i = 0; i < Math.max(1, options.yaxes.length); ++i)
                options.yaxes[i] = $.extend(true, {}, options.yaxis, options.yaxes[i]);

            // backwards compatibility, to be removed in future
            if (options.xaxis.noTicks && options.xaxis.ticks == null)
                options.xaxis.ticks = options.xaxis.noTicks;
            if (options.yaxis.noTicks && options.yaxis.ticks == null)
                options.yaxis.ticks = options.yaxis.noTicks;
            if (options.x2axis) {
                options.xaxes[1] = $.extend(true, {}, options.xaxis, options.x2axis);
                options.xaxes[1].position = "top";
            }
            if (options.y2axis) {
                options.yaxes[1] = $.extend(true, {}, options.yaxis, options.y2axis);
                options.yaxes[1].position = "right";
            }
            if (options.grid.coloredAreas)
                options.grid.markings = options.grid.coloredAreas;
            if (options.grid.coloredAreasColor)
                options.grid.markingsColor = options.grid.coloredAreasColor;
            if (options.lines)
                $.extend(true, options.series.lines, options.lines);
            if (options.points)
                $.extend(true, options.series.points, options.points);
            if (options.bars)
                $.extend(true, options.series.bars, options.bars);
            if (options.shadowSize != null)
                options.series.shadowSize = options.shadowSize;

            // save options on axes for future reference
            for (i = 0; i < options.xaxes.length; ++i)
                getOrCreateAxis(xaxes, i + 1).options = options.xaxes[i];
            for (i = 0; i < options.yaxes.length; ++i)
                getOrCreateAxis(yaxes, i + 1).options = options.yaxes[i];

            // add hooks from options
            for (var n in hooks)
                if (options.hooks[n] && options.hooks[n].length)
                    hooks[n] = hooks[n].concat(options.hooks[n]);

            executeHooks(hooks.processOptions, [options]);
        }

        function setData(d) {
            series = parseData(d);
            fillInSeriesOptions();
            processData();
        }
        
        function parseData(d) {
            var res = [];
            for (var i = 0; i < d.length; ++i) {
                var s = $.extend(true, {}, options.series);

                if (d[i].data != null) {
                    s.data = d[i].data; // move the data instead of deep-copy
                    delete d[i].data;

                    $.extend(true, s, d[i]);

                    d[i].data = s.data;
                }
                else
                    s.data = d[i];
                res.push(s);
            }

            return res;
        }
        
        function axisNumber(obj, coord) {
            var a = obj[coord + "axis"];
            if (typeof a == "object") // if we got a real axis, extract number
                a = a.n;
            if (typeof a != "number")
                a = 1; // default to first axis
            return a;
        }

        function allAxes() {
            // return flat array without annoying null entries
            return $.grep(xaxes.concat(yaxes), function (a) { return a; });
        }
        
        function canvasToAxisCoords(pos) {
            // return an object with x/y corresponding to all used axes 
            var res = {}, i, axis;
            for (i = 0; i < xaxes.length; ++i) {
                axis = xaxes[i];
                if (axis && axis.used)
                    res["x" + axis.n] = axis.c2p(pos.left);
            }

            for (i = 0; i < yaxes.length; ++i) {
                axis = yaxes[i];
                if (axis && axis.used)
                    res["y" + axis.n] = axis.c2p(pos.top);
            }
            
            if (res.x1 !== undefined)
                res.x = res.x1;
            if (res.y1 !== undefined)
                res.y = res.y1;

            return res;
        }
        
        function axisToCanvasCoords(pos) {
            // get canvas coords from the first pair of x/y found in pos
            var res = {}, i, axis, key;

            for (i = 0; i < xaxes.length; ++i) {
                axis = xaxes[i];
                if (axis && axis.used) {
                    key = "x" + axis.n;
                    if (pos[key] == null && axis.n == 1)
                        key = "x";

                    if (pos[key] != null) {
                        res.left = axis.p2c(pos[key]);
                        break;
                    }
                }
            }
            
            for (i = 0; i < yaxes.length; ++i) {
                axis = yaxes[i];
                if (axis && axis.used) {
                    key = "y" + axis.n;
                    if (pos[key] == null && axis.n == 1)
                        key = "y";

                    if (pos[key] != null) {
                        res.top = axis.p2c(pos[key]);
                        break;
                    }
                }
            }
            
            return res;
        }
        
        function getOrCreateAxis(axes, number) {
            if (!axes[number - 1])
                axes[number - 1] = {
                    n: number, // save the number for future reference
                    direction: axes == xaxes ? "x" : "y",
                    options: $.extend(true, {}, axes == xaxes ? options.xaxis : options.yaxis)
                };
                
            return axes[number - 1];
        }

        function fillInSeriesOptions() {
            var i;
            
            // collect what we already got of colors
            var neededColors = series.length,
                usedColors = [],
                assignedColors = [];
            for (i = 0; i < series.length; ++i) {
                var sc = series[i].color;
                if (sc != null) {
                    --neededColors;
                    if (typeof sc == "number")
                        assignedColors.push(sc);
                    else
                        usedColors.push($.color.parse(series[i].color));
                }
            }
            
            // we might need to generate more colors if higher indices
            // are assigned
            for (i = 0; i < assignedColors.length; ++i) {
                neededColors = Math.max(neededColors, assignedColors[i] + 1);
            }

            // produce colors as needed
            var colors = [], variation = 0;
            i = 0;
            while (colors.length < neededColors) {
                var c;
                if (options.colors.length == i) // check degenerate case
                    c = $.color.make(100, 100, 100);
                else
                    c = $.color.parse(options.colors[i]);

                // vary color if needed
                var sign = variation % 2 == 1 ? -1 : 1;
                c.scale('rgb', 1 + sign * Math.ceil(variation / 2) * 0.2)

                // FIXME: if we're getting to close to something else,
                // we should probably skip this one
                colors.push(c);
                
                ++i;
                if (i >= options.colors.length) {
                    i = 0;
                    ++variation;
                }
            }

            // fill in the options
            var colori = 0, s;
            for (i = 0; i < series.length; ++i) {
                s = series[i];
                
                // assign colors
                if (s.color == null) {
                    s.color = colors[colori].toString();
                    ++colori;
                }
                else if (typeof s.color == "number")
                    s.color = colors[s.color].toString();

                // turn on lines automatically in case nothing is set
                if (s.lines.show == null) {
                    var v, show = true;
                    for (v in s)
                        if (s[v] && s[v].show) {
                            show = false;
                            break;
                        }
                    if (show)
                        s.lines.show = true;
                }

                // setup axes
                s.xaxis = getOrCreateAxis(xaxes, axisNumber(s, "x"));
                s.yaxis = getOrCreateAxis(yaxes, axisNumber(s, "y"));
            }
        }
        
        function processData() {
            var topSentry = Number.POSITIVE_INFINITY,
                bottomSentry = Number.NEGATIVE_INFINITY,
                fakeInfinity = Number.MAX_VALUE,
                i, j, k, m, length,
                s, points, ps, x, y, axis, val, f, p;

            function updateAxis(axis, min, max) {
                if (min < axis.datamin && min != -fakeInfinity)
                    axis.datamin = min;
                if (max > axis.datamax && max != fakeInfinity)
                    axis.datamax = max;
            }

            $.each(allAxes(), function (_, axis) {
                // init axis
                axis.datamin = topSentry;
                axis.datamax = bottomSentry;
                axis.used = false;
            });
            
            for (i = 0; i < series.length; ++i) {
                s = series[i];
                s.datapoints = { points: [] };
                
                executeHooks(hooks.processRawData, [ s, s.data, s.datapoints ]);
            }
            
            // first pass: clean and copy data
            for (i = 0; i < series.length; ++i) {
                s = series[i];

                var data = s.data, format = s.datapoints.format;

                if (!format) {
                    format = [];
                    // find out how to copy
                    format.push({ x: true, number: true, required: true });
                    format.push({ y: true, number: true, required: true });

                    if (s.bars.show || (s.lines.show && s.lines.fill)) {
                        format.push({ y: true, number: true, required: false, defaultValue: 0 });
                        if (s.bars.horizontal) {
                            delete format[format.length - 1].y;
                            format[format.length - 1].x = true;
                        }
                    }
                    
                    s.datapoints.format = format;
                }

                if (s.datapoints.pointsize != null)
                    continue; // already filled in

                s.datapoints.pointsize = format.length;
                
                ps = s.datapoints.pointsize;
                points = s.datapoints.points;

                insertSteps = s.lines.show && s.lines.steps;
                s.xaxis.used = s.yaxis.used = true;
                
                for (j = k = 0; j < data.length; ++j, k += ps) {
                    p = data[j];

                    var nullify = p == null;
                    if (!nullify) {
                        for (m = 0; m < ps; ++m) {
                            val = p[m];
                            f = format[m];

                            if (f) {
                                if (f.number && val != null) {
                                    val = +val; // convert to number
                                    if (isNaN(val))
                                        val = null;
                                    else if (val == Infinity)
                                        val = fakeInfinity;
                                    else if (val == -Infinity)
                                        val = -fakeInfinity;
                                }

                                if (val == null) {
                                    if (f.required)
                                        nullify = true;
                                    
                                    if (f.defaultValue != null)
                                        val = f.defaultValue;
                                }
                            }
                            
                            points[k + m] = val;
                        }
                    }
                    
                    if (nullify) {
                        for (m = 0; m < ps; ++m) {
                            val = points[k + m];
                            if (val != null) {
                                f = format[m];
                                // extract min/max info
                                if (f.x)
                                    updateAxis(s.xaxis, val, val);
                                if (f.y)
                                    updateAxis(s.yaxis, val, val);
                            }
                            points[k + m] = null;
                        }
                    }
                    else {
                        // a little bit of line specific stuff that
                        // perhaps shouldn't be here, but lacking
                        // better means...
                        if (insertSteps && k > 0
                            && points[k - ps] != null
                            && points[k - ps] != points[k]
                            && points[k - ps + 1] != points[k + 1]) {
                            // copy the point to make room for a middle point
                            for (m = 0; m < ps; ++m)
                                points[k + ps + m] = points[k + m];

                            // middle point has same y
                            points[k + 1] = points[k - ps + 1];

                            // we've added a point, better reflect that
                            k += ps;
                        }
                    }
                }
            }

            // give the hooks a chance to run
            for (i = 0; i < series.length; ++i) {
                s = series[i];
                
                executeHooks(hooks.processDatapoints, [ s, s.datapoints]);
            }

            // second pass: find datamax/datamin for auto-scaling
            for (i = 0; i < series.length; ++i) {
                s = series[i];
                points = s.datapoints.points,
                ps = s.datapoints.pointsize;

                var xmin = topSentry, ymin = topSentry,
                    xmax = bottomSentry, ymax = bottomSentry;
                
                for (j = 0; j < points.length; j += ps) {
                    if (points[j] == null)
                        continue;

                    for (m = 0; m < ps; ++m) {
                        val = points[j + m];
                        f = format[m];
                        if (!f || val == fakeInfinity || val == -fakeInfinity)
                            continue;
                        
                        if (f.x) {
                            if (val < xmin)
                                xmin = val;
                            if (val > xmax)
                                xmax = val;
                        }
                        if (f.y) {
                            if (val < ymin)
                                ymin = val;
                            if (val > ymax)
                                ymax = val;
                        }
                    }
                }
                
                if (s.bars.show) {
                    // make sure we got room for the bar on the dancing floor
                    var delta = s.bars.align == "left" ? 0 : -s.bars.barWidth/2;
                    if (s.bars.horizontal) {
                        ymin += delta;
                        ymax += delta + s.bars.barWidth;
                    }
                    else {
                        xmin += delta;
                        xmax += delta + s.bars.barWidth;
                    }
                }
                
                updateAxis(s.xaxis, xmin, xmax);
                updateAxis(s.yaxis, ymin, ymax);
            }

            $.each(allAxes(), function (_, axis) {
                if (axis.datamin == topSentry)
                    axis.datamin = null;
                if (axis.datamax == bottomSentry)
                    axis.datamax = null;
            });
        }

        function makeCanvas(skipPositioning, cls) {
            var c = document.createElement('canvas');
            c.className = cls;
            c.width = canvasWidth;
            c.height = canvasHeight;
                    
            if (!skipPositioning)
                $(c).css({ position: 'absolute', left: 0, top: 0 });
                
            $(c).appendTo(placeholder);
                
            if (!c.getContext) // excanvas hack
                c = window.G_vmlCanvasManager.initElement(c);

            // used for resetting in case we get replotted
            c.getContext("2d").save();
            
            return c;
        }

        function getCanvasDimensions() {
            canvasWidth = placeholder.width();
            canvasHeight = placeholder.height();
            
            if (canvasWidth <= 0 || canvasHeight <= 0)
                throw "Invalid dimensions for plot, width = " + canvasWidth + ", height = " + canvasHeight;
        }

        function resizeCanvas(c) {
            // resizing should reset the state (excanvas seems to be
            // buggy though)
            if (c.width != canvasWidth)
                c.width = canvasWidth;

            if (c.height != canvasHeight)
                c.height = canvasHeight;

            // so try to get back to the initial state (even if it's
            // gone now, this should be safe according to the spec)
            var cctx = c.getContext("2d");
            cctx.restore();

            // and save again
            cctx.save();
        }
        
        function setupCanvases() {
            var reused,
                existingCanvas = placeholder.children("canvas.base"),
                existingOverlay = placeholder.children("canvas.overlay");

            if (existingCanvas.length == 0 || existingOverlay == 0) {
                // init everything
                
                placeholder.html(""); // make sure placeholder is clear
            
                placeholder.css({ padding: 0 }); // padding messes up the positioning
                
                if (placeholder.css("position") == 'static')
                    placeholder.css("position", "relative"); // for positioning labels and overlay

                getCanvasDimensions();
                
                canvas = makeCanvas(true, "base");
                overlay = makeCanvas(false, "overlay"); // overlay canvas for interactive features

                reused = false;
            }
            else {
                // reuse existing elements

                canvas = existingCanvas.get(0);
                overlay = existingOverlay.get(0);

                reused = true;
            }

            ctx = canvas.getContext("2d");
            octx = overlay.getContext("2d");

            // we include the canvas in the event holder too, because IE 7
            // sometimes has trouble with the stacking order
            eventHolder = $([overlay, canvas]);

            if (reused) {
                // run shutdown in the old plot object
                placeholder.data("plot").shutdown();

                // reset reused canvases
                plot.resize();
                
                // make sure overlay pixels are cleared (canvas is cleared when we redraw)
                octx.clearRect(0, 0, canvasWidth, canvasHeight);
                
                // then whack any remaining obvious garbage left
                eventHolder.unbind();
                placeholder.children().not([canvas, overlay]).remove();
            }

            // save in case we get replotted
            placeholder.data("plot", plot);
        }

        function bindEvents() {
            // bind events
            if (options.grid.hoverable) {
                eventHolder.mousemove(onMouseMove);
                eventHolder.mouseleave(onMouseLeave);
            }

            if (options.grid.clickable)
                eventHolder.click(onClick);

            executeHooks(hooks.bindEvents, [eventHolder]);
        }

        function shutdown() {
            if (redrawTimeout)
                clearTimeout(redrawTimeout);
            
            eventHolder.unbind("mousemove", onMouseMove);
            eventHolder.unbind("mouseleave", onMouseLeave);
            eventHolder.unbind("click", onClick);
            
            executeHooks(hooks.shutdown, [eventHolder]);
        }

        function setTransformationHelpers(axis) {
            // set helper functions on the axis, assumes plot area
            // has been computed already
            
            function identity(x) { return x; }
            
            var s, m, t = axis.options.transform || identity,
                it = axis.options.inverseTransform;
            
            // precompute how much the axis is scaling a point
            // in canvas space
            if (axis.direction == "x") {
                s = axis.scale = plotWidth / Math.abs(t(axis.max) - t(axis.min));
                m = Math.min(t(axis.max), t(axis.min));
            }
            else {
                s = axis.scale = plotHeight / Math.abs(t(axis.max) - t(axis.min));
                s = -s;
                m = Math.max(t(axis.max), t(axis.min));
            }

            // data point to canvas coordinate
            if (t == identity) // slight optimization
                axis.p2c = function (p) { return (p - m) * s; };
            else
                axis.p2c = function (p) { return (t(p) - m) * s; };
            // canvas coordinate to data point
            if (!it)
                axis.c2p = function (c) { return m + c / s; };
            else
                axis.c2p = function (c) { return it(m + c / s); };
        }

        function measureTickLabels(axis) {
            var opts = axis.options, i, ticks = axis.ticks || [], labels = [],
                l, w = opts.labelWidth, h = opts.labelHeight, dummyDiv;

            function makeDummyDiv(labels, width) {
                return $('<div style="position:absolute;top:-10000px;' + width + 'font-size:smaller">' +
                         '<div class="' + axis.direction + 'Axis ' + axis.direction + axis.n + 'Axis">'
                         + labels.join("") + '</div></div>')
                    .appendTo(placeholder);
            }
            
            if (axis.direction == "x") {
                // to avoid measuring the widths of the labels (it's slow), we
                // construct fixed-size boxes and put the labels inside
                // them, we don't need the exact figures and the
                // fixed-size box content is easy to center
                if (w == null)
                    w = Math.floor(canvasWidth / (ticks.length > 0 ? ticks.length : 1));

                // measure x label heights
                if (h == null) {
                    labels = [];
                    for (i = 0; i < ticks.length; ++i) {
                        l = ticks[i].label;
                        if (l)
                            labels.push('<div class="tickLabel" style="float:left;width:' + w + 'px">' + l + '</div>');
                    }

                    if (labels.length > 0) {
                        // stick them all in the same div and measure
                        // collective height
                        labels.push('<div style="clear:left"></div>');
                        dummyDiv = makeDummyDiv(labels, "width:10000px;");
                        h = dummyDiv.height();
                        dummyDiv.remove();
                    }
                }
            }
            else if (w == null || h == null) {
                // calculate y label dimensions
                for (i = 0; i < ticks.length; ++i) {
                    l = ticks[i].label;
                    if (l)
                        labels.push('<div class="tickLabel">' + l + '</div>');
                }
                
                if (labels.length > 0) {
                    dummyDiv = makeDummyDiv(labels, "");
                    if (w == null)
                        w = dummyDiv.children().width();
                    if (h == null)
                        h = dummyDiv.find("div.tickLabel").height();
                    dummyDiv.remove();
                }
            }

            if (w == null)
                w = 0;
            if (h == null)
                h = 0;

            axis.labelWidth = w;
            axis.labelHeight = h;
        }

        function allocateAxisBoxFirstPhase(axis) {
            // find the bounding box of the axis by looking at label
            // widths/heights and ticks, make room by diminishing the
            // plotOffset

            var lw = axis.labelWidth,
                lh = axis.labelHeight,
                pos = axis.options.position,
                tickLength = axis.options.tickLength,
                axismargin = options.grid.axisMargin,
                padding = options.grid.labelMargin,
                all = axis.direction == "x" ? xaxes : yaxes,
                index;

            // determine axis margin
            var samePosition = $.grep(all, function (a) {
                return a && a.options.position == pos && a.reserveSpace;
            });
            if ($.inArray(axis, samePosition) == samePosition.length - 1)
                axismargin = 0; // outermost

            // determine tick length - if we're innermost, we can use "full"
            if (tickLength == null)
                tickLength = "full";

            var sameDirection = $.grep(all, function (a) {
                return a && a.reserveSpace;
            });

            var innermost = $.inArray(axis, sameDirection) == 0;
            if (!innermost && tickLength == "full")
                tickLength = 5;
                
            if (!isNaN(+tickLength))
                padding += +tickLength;

            // compute box
            if (axis.direction == "x") {
                lh += padding;
                
                if (pos == "bottom") {
                    plotOffset.bottom += lh + axismargin;
                    axis.box = { top: canvasHeight - plotOffset.bottom, height: lh };
                }
                else {
                    axis.box = { top: plotOffset.top + axismargin, height: lh };
                    plotOffset.top += lh + axismargin;
                }
            }
            else {
                lw += padding;
                
                if (pos == "left") {
                    axis.box = { left: plotOffset.left + axismargin, width: lw };
                    plotOffset.left += lw + axismargin;
                }
                else {
                    plotOffset.right += lw + axismargin;
                    axis.box = { left: canvasWidth - plotOffset.right, width: lw };
                }
            }

             // save for future reference
            axis.position = pos;
            axis.tickLength = tickLength;
            axis.box.padding = padding;
            axis.innermost = innermost;
        }

        function allocateAxisBoxSecondPhase(axis) {
            // set remaining bounding box coordinates
            if (axis.direction == "x") {
                axis.box.left = plotOffset.left;
                axis.box.width = plotWidth;
            }
            else {
                axis.box.top = plotOffset.top;
                axis.box.height = plotHeight;
            }
        }
        
        function setupGrid() {
            var i, axes = allAxes();

            // first calculate the plot and axis box dimensions

            $.each(axes, function (_, axis) {
                axis.show = axis.options.show;
                if (axis.show == null)
                    axis.show = axis.used; // by default an axis is visible if it's got data
                
                axis.reserveSpace = axis.show || axis.options.reserveSpace;

                setRange(axis);
            });

            allocatedAxes = $.grep(axes, function (axis) { return axis.reserveSpace; });

            plotOffset.left = plotOffset.right = plotOffset.top = plotOffset.bottom = 0;
            if (options.grid.show) {
                $.each(allocatedAxes, function (_, axis) {
                    // make the ticks
                    setupTickGeneration(axis);
                    setTicks(axis);
                    snapRangeToTicks(axis, axis.ticks);

                    // find labelWidth/Height for axis
                    measureTickLabels(axis);
                });

                // with all dimensions in house, we can compute the
                // axis boxes, start from the outside (reverse order)
                for (i = allocatedAxes.length - 1; i >= 0; --i)
                    allocateAxisBoxFirstPhase(allocatedAxes[i]);

                // make sure we've got enough space for things that
                // might stick out
                var minMargin = options.grid.minBorderMargin;
                if (minMargin == null) {
                    minMargin = 0;
                    for (i = 0; i < series.length; ++i)
                        minMargin = Math.max(minMargin, series[i].points.radius + series[i].points.lineWidth/2);
                }
                    
                for (var a in plotOffset) {
                    plotOffset[a] += options.grid.borderWidth;
                    plotOffset[a] = Math.max(minMargin, plotOffset[a]);
                }
            }
            
            plotWidth = canvasWidth - plotOffset.left - plotOffset.right;
            plotHeight = canvasHeight - plotOffset.bottom - plotOffset.top;

            // now we got the proper plotWidth/Height, we can compute the scaling
            $.each(axes, function (_, axis) {
                setTransformationHelpers(axis);
            });

            if (options.grid.show) {
                $.each(allocatedAxes, function (_, axis) {
                    allocateAxisBoxSecondPhase(axis);
                });

                insertAxisLabels();
            }
            
            insertLegend();
        }
        
        function setRange(axis) {
            var opts = axis.options,
                min = +(opts.min != null ? opts.min : axis.datamin),
                max = +(opts.max != null ? opts.max : axis.datamax),
                delta = max - min;

            if (delta == 0.0) {
                // degenerate case
                var widen = max == 0 ? 1 : 0.01;

                if (opts.min == null)
                    min -= widen;
                // always widen max if we couldn't widen min to ensure we
                // don't fall into min == max which doesn't work
                if (opts.max == null || opts.min != null)
                    max += widen;
            }
            else {
                // consider autoscaling
                var margin = opts.autoscaleMargin;
                if (margin != null) {
                    if (opts.min == null) {
                        min -= delta * margin;
                        // make sure we don't go below zero if all values
                        // are positive
                        if (min < 0 && axis.datamin != null && axis.datamin >= 0)
                            min = 0;
                    }
                    if (opts.max == null) {
                        max += delta * margin;
                        if (max > 0 && axis.datamax != null && axis.datamax <= 0)
                            max = 0;
                    }
                }
            }
            axis.min = min;
            axis.max = max;
        }

        function setupTickGeneration(axis) {
            var opts = axis.options;
                
            // estimate number of ticks
            var noTicks;
            if (typeof opts.ticks == "number" && opts.ticks > 0)
                noTicks = opts.ticks;
            else
                // heuristic based on the model a*sqrt(x) fitted to
                // some data points that seemed reasonable
                noTicks = 0.3 * Math.sqrt(axis.direction == "x" ? canvasWidth : canvasHeight);

            var delta = (axis.max - axis.min) / noTicks,
                size, generator, unit, formatter, i, magn, norm;

            if (opts.mode == "time") {
                // pretty handling of time
                
                // map of app. size of time units in milliseconds
                var timeUnitSize = {
                    "second": 1000,
                    "minute": 60 * 1000,
                    "hour": 60 * 60 * 1000,
                    "day": 24 * 60 * 60 * 1000,
                    "month": 30 * 24 * 60 * 60 * 1000,
                    "year": 365.2425 * 24 * 60 * 60 * 1000
                };


                // the allowed tick sizes, after 1 year we use
                // an integer algorithm
                var spec = [
                    [1, "second"], [2, "second"], [5, "second"], [10, "second"],
                    [30, "second"], 
                    [1, "minute"], [2, "minute"], [5, "minute"], [10, "minute"],
                    [30, "minute"], 
                    [1, "hour"], [2, "hour"], [4, "hour"],
                    [8, "hour"], [12, "hour"],
                    [1, "day"], [2, "day"], [3, "day"],
                    [0.25, "month"], [0.5, "month"], [1, "month"],
                    [2, "month"], [3, "month"], [6, "month"],
                    [1, "year"]
                ];

                var minSize = 0;
                if (opts.minTickSize != null) {
                    if (typeof opts.tickSize == "number")
                        minSize = opts.tickSize;
                    else
                        minSize = opts.minTickSize[0] * timeUnitSize[opts.minTickSize[1]];
                }

                for (var i = 0; i < spec.length - 1; ++i)
                    if (delta < (spec[i][0] * timeUnitSize[spec[i][1]]
                                 + spec[i + 1][0] * timeUnitSize[spec[i + 1][1]]) / 2
                       && spec[i][0] * timeUnitSize[spec[i][1]] >= minSize)
                        break;
                size = spec[i][0];
                unit = spec[i][1];
                
                // special-case the possibility of several years
                if (unit == "year") {
                    magn = Math.pow(10, Math.floor(Math.log(delta / timeUnitSize.year) / Math.LN10));
                    norm = (delta / timeUnitSize.year) / magn;
                    if (norm < 1.5)
                        size = 1;
                    else if (norm < 3)
                        size = 2;
                    else if (norm < 7.5)
                        size = 5;
                    else
                        size = 10;

                    size *= magn;
                }

                axis.tickSize = opts.tickSize || [size, unit];
                
                generator = function(axis) {
                    var ticks = [],
                        tickSize = axis.tickSize[0], unit = axis.tickSize[1],
                        d = new Date(axis.min);
                    
                    var step = tickSize * timeUnitSize[unit];

                    if (unit == "second")
                        d.setUTCSeconds(floorInBase(d.getUTCSeconds(), tickSize));
                    if (unit == "minute")
                        d.setUTCMinutes(floorInBase(d.getUTCMinutes(), tickSize));
                    if (unit == "hour")
                        d.setUTCHours(floorInBase(d.getUTCHours(), tickSize));
                    if (unit == "month")
                        d.setUTCMonth(floorInBase(d.getUTCMonth(), tickSize));
                    if (unit == "year")
                        d.setUTCFullYear(floorInBase(d.getUTCFullYear(), tickSize));
                    
                    // reset smaller components
                    d.setUTCMilliseconds(0);
                    if (step >= timeUnitSize.minute)
                        d.setUTCSeconds(0);
                    if (step >= timeUnitSize.hour)
                        d.setUTCMinutes(0);
                    if (step >= timeUnitSize.day)
                        d.setUTCHours(0);
                    if (step >= timeUnitSize.day * 4)
                        d.setUTCDate(1);
                    if (step >= timeUnitSize.year)
                        d.setUTCMonth(0);


                    var carry = 0, v = Number.NaN, prev;
                    do {
                        prev = v;
                        v = d.getTime();
                        ticks.push(v);
                        if (unit == "month") {
                            if (tickSize < 1) {
                                // a bit complicated - we'll divide the month
                                // up but we need to take care of fractions
                                // so we don't end up in the middle of a day
                                d.setUTCDate(1);
                                var start = d.getTime();
                                d.setUTCMonth(d.getUTCMonth() + 1);
                                var end = d.getTime();
                                d.setTime(v + carry * timeUnitSize.hour + (end - start) * tickSize);
                                carry = d.getUTCHours();
                                d.setUTCHours(0);
                            }
                            else
                                d.setUTCMonth(d.getUTCMonth() + tickSize);
                        }
                        else if (unit == "year") {
                            d.setUTCFullYear(d.getUTCFullYear() + tickSize);
                        }
                        else
                            d.setTime(v + step);
                    } while (v < axis.max && v != prev);

                    return ticks;
                };

                formatter = function (v, axis) {
                    var d = new Date(v);

                    // first check global format
                    if (opts.timeformat != null)
                        return $.plot.formatDate(d, opts.timeformat, opts.monthNames);
                    
                    var t = axis.tickSize[0] * timeUnitSize[axis.tickSize[1]];
                    var span = axis.max - axis.min;
                    var suffix = (opts.twelveHourClock) ? " %p" : "";
                    
                    if (t < timeUnitSize.minute)
                        fmt = "%h:%M:%S" + suffix;
                    else if (t < timeUnitSize.day) {
                        if (span < 2 * timeUnitSize.day)
                            fmt = "%h:%M" + suffix;
                        else
                            fmt = "%b %d %h:%M" + suffix;
                    }
                    else if (t < timeUnitSize.month)
                        fmt = "%b %d";
                    else if (t < timeUnitSize.year) {
                        if (span < timeUnitSize.year)
                            fmt = "%b";
                        else
                            fmt = "%b %y";
                    }
                    else
                        fmt = "%y";
                    
                    return $.plot.formatDate(d, fmt, opts.monthNames);
                };
            }
            else {
                // pretty rounding of base-10 numbers
                var maxDec = opts.tickDecimals;
                var dec = -Math.floor(Math.log(delta) / Math.LN10);
                if (maxDec != null && dec > maxDec)
                    dec = maxDec;

                magn = Math.pow(10, -dec);
                norm = delta / magn; // norm is between 1.0 and 10.0
                
                if (norm < 1.5)
                    size = 1;
                else if (norm < 3) {
                    size = 2;
                    // special case for 2.5, requires an extra decimal
                    if (norm > 2.25 && (maxDec == null || dec + 1 <= maxDec)) {
                        size = 2.5;
                        ++dec;
                    }
                }
                else if (norm < 7.5)
                    size = 5;
                else
                    size = 10;

                size *= magn;
                
                if (opts.minTickSize != null && size < opts.minTickSize)
                    size = opts.minTickSize;

                axis.tickDecimals = Math.max(0, maxDec != null ? maxDec : dec);
                axis.tickSize = opts.tickSize || size;

                generator = function (axis) {
                    var ticks = [];

                    // spew out all possible ticks
                    var start = floorInBase(axis.min, axis.tickSize),
                        i = 0, v = Number.NaN, prev;
                    do {
                        prev = v;
                        v = start + i * axis.tickSize;
                        ticks.push(v);
                        ++i;
                    } while (v < axis.max && v != prev);
                    return ticks;
                };

                formatter = function (v, axis) {
                    return v.toFixed(axis.tickDecimals);
                };
            }

            if (opts.alignTicksWithAxis != null) {
                var otherAxis = (axis.direction == "x" ? xaxes : yaxes)[opts.alignTicksWithAxis - 1];
                if (otherAxis && otherAxis.used && otherAxis != axis) {
                    // consider snapping min/max to outermost nice ticks
                    var niceTicks = generator(axis);
                    if (niceTicks.length > 0) {
                        if (opts.min == null)
                            axis.min = Math.min(axis.min, niceTicks[0]);
                        if (opts.max == null && niceTicks.length > 1)
                            axis.max = Math.max(axis.max, niceTicks[niceTicks.length - 1]);
                    }
                    
                    generator = function (axis) {
                        // copy ticks, scaled to this axis
                        var ticks = [], v, i;
                        for (i = 0; i < otherAxis.ticks.length; ++i) {
                            v = (otherAxis.ticks[i].v - otherAxis.min) / (otherAxis.max - otherAxis.min);
                            v = axis.min + v * (axis.max - axis.min);
                            ticks.push(v);
                        }
                        return ticks;
                    };
                    
                    // we might need an extra decimal since forced
                    // ticks don't necessarily fit naturally
                    if (axis.mode != "time" && opts.tickDecimals == null) {
                        var extraDec = Math.max(0, -Math.floor(Math.log(delta) / Math.LN10) + 1),
                            ts = generator(axis);

                        // only proceed if the tick interval rounded
                        // with an extra decimal doesn't give us a
                        // zero at end
                        if (!(ts.length > 1 && /\..*0$/.test((ts[1] - ts[0]).toFixed(extraDec))))
                            axis.tickDecimals = extraDec;
                    }
                }
            }

            axis.tickGenerator = generator;
            if ($.isFunction(opts.tickFormatter))
                axis.tickFormatter = function (v, axis) { return "" + opts.tickFormatter(v, axis); };
            else
                axis.tickFormatter = formatter;
        }
        
        function setTicks(axis) {
            var oticks = axis.options.ticks, ticks = [];
            if (oticks == null || (typeof oticks == "number" && oticks > 0))
                ticks = axis.tickGenerator(axis);
            else if (oticks) {
                if ($.isFunction(oticks))
                    // generate the ticks
                    ticks = oticks({ min: axis.min, max: axis.max });
                else
                    ticks = oticks;
            }

            // clean up/labelify the supplied ticks, copy them over
            var i, v;
            axis.ticks = [];
            for (i = 0; i < ticks.length; ++i) {
                var label = null;
                var t = ticks[i];
                if (typeof t == "object") {
                    v = +t[0];
                    if (t.length > 1)
                        label = t[1];
                }
                else
                    v = +t;
                if (label == null)
                    label = axis.tickFormatter(v, axis);
                if (!isNaN(v))
                    axis.ticks.push({ v: v, label: label });
            }
        }

        function snapRangeToTicks(axis, ticks) {
            if (axis.options.autoscaleMargin && ticks.length > 0) {
                // snap to ticks
                if (axis.options.min == null)
                    axis.min = Math.min(axis.min, ticks[0].v);
                if (axis.options.max == null && ticks.length > 1)
                    axis.max = Math.max(axis.max, ticks[ticks.length - 1].v);
            }
        }
      
        function draw() {
            ctx.clearRect(0, 0, canvasWidth, canvasHeight);

            var grid = options.grid;

            // draw background, if any
            if (grid.show && grid.backgroundColor)
                drawBackground();
            
            if (grid.show && !grid.aboveData)
                drawGrid();

            for (var i = 0; i < series.length; ++i) {
                executeHooks(hooks.drawSeries, [ctx, series[i]]);
                drawSeries(series[i]);
            }

            executeHooks(hooks.draw, [ctx]);
            
            if (grid.show && grid.aboveData)
                drawGrid();
        }

        function extractRange(ranges, coord) {
            var axis, from, to, key, axes = allAxes();

            for (i = 0; i < axes.length; ++i) {
                axis = axes[i];
                if (axis.direction == coord) {
                    key = coord + axis.n + "axis";
                    if (!ranges[key] && axis.n == 1)
                        key = coord + "axis"; // support x1axis as xaxis
                    if (ranges[key]) {
                        from = ranges[key].from;
                        to = ranges[key].to;
                        break;
                    }
                }
            }

            // backwards-compat stuff - to be removed in future
            if (!ranges[key]) {
                axis = coord == "x" ? xaxes[0] : yaxes[0];
                from = ranges[coord + "1"];
                to = ranges[coord + "2"];
            }

            // auto-reverse as an added bonus
            if (from != null && to != null && from > to) {
                var tmp = from;
                from = to;
                to = tmp;
            }
            
            return { from: from, to: to, axis: axis };
        }
        
        function drawBackground() {
            ctx.save();
            ctx.translate(plotOffset.left, plotOffset.top);

            ctx.fillStyle = getColorOrGradient(options.grid.backgroundColor, plotHeight, 0, "rgba(255, 255, 255, 0)");
            ctx.fillRect(0, 0, plotWidth, plotHeight);
            ctx.restore();
        }

        function drawGrid() {
            var i;
            
            ctx.save();
            ctx.translate(plotOffset.left, plotOffset.top);

            // draw markings
            var markings = options.grid.markings;
            if (markings) {
                if ($.isFunction(markings)) {
                    var axes = plot.getAxes();
                    // xmin etc. is backwards compatibility, to be
                    // removed in the future
                    axes.xmin = axes.xaxis.min;
                    axes.xmax = axes.xaxis.max;
                    axes.ymin = axes.yaxis.min;
                    axes.ymax = axes.yaxis.max;
                    
                    markings = markings(axes);
                }

                for (i = 0; i < markings.length; ++i) {
                    var m = markings[i],
                        xrange = extractRange(m, "x"),
                        yrange = extractRange(m, "y");

                    // fill in missing
                    if (xrange.from == null)
                        xrange.from = xrange.axis.min;
                    if (xrange.to == null)
                        xrange.to = xrange.axis.max;
                    if (yrange.from == null)
                        yrange.from = yrange.axis.min;
                    if (yrange.to == null)
                        yrange.to = yrange.axis.max;

                    // clip
                    if (xrange.to < xrange.axis.min || xrange.from > xrange.axis.max ||
                        yrange.to < yrange.axis.min || yrange.from > yrange.axis.max)
                        continue;

                    xrange.from = Math.max(xrange.from, xrange.axis.min);
                    xrange.to = Math.min(xrange.to, xrange.axis.max);
                    yrange.from = Math.max(yrange.from, yrange.axis.min);
                    yrange.to = Math.min(yrange.to, yrange.axis.max);

                    if (xrange.from == xrange.to && yrange.from == yrange.to)
                        continue;

                    // then draw
                    xrange.from = xrange.axis.p2c(xrange.from);
                    xrange.to = xrange.axis.p2c(xrange.to);
                    yrange.from = yrange.axis.p2c(yrange.from);
                    yrange.to = yrange.axis.p2c(yrange.to);
                    
                    if (xrange.from == xrange.to || yrange.from == yrange.to) {
                        // draw line
                        ctx.beginPath();
                        ctx.strokeStyle = m.color || options.grid.markingsColor;
                        ctx.lineWidth = m.lineWidth || options.grid.markingsLineWidth;
                        ctx.moveTo(xrange.from, yrange.from);
                        ctx.lineTo(xrange.to, yrange.to);
                        ctx.stroke();
                    }
                    else {
                        // fill area
                        ctx.fillStyle = m.color || options.grid.markingsColor;
                        ctx.fillRect(xrange.from, yrange.to,
                                     xrange.to - xrange.from,
                                     yrange.from - yrange.to);
                    }
                }
            }
            
            // draw the ticks
            var axes = allAxes(), bw = options.grid.borderWidth;

            for (var j = 0; j < axes.length; ++j) {
                var axis = axes[j], box = axis.box,
                    t = axis.tickLength, x, y, xoff, yoff;
                if (!axis.show || axis.ticks.length == 0)
                    continue
                
                ctx.strokeStyle = axis.options.tickColor || $.color.parse(axis.options.color).scale('a', 0.22).toString();
                ctx.lineWidth = 1;

                // find the edges
                if (axis.direction == "x") {
                    x = 0;
                    if (t == "full")
                        y = (axis.position == "top" ? 0 : plotHeight);
                    else
                        y = box.top - plotOffset.top + (axis.position == "top" ? box.height : 0);
                }
                else {
                    y = 0;
                    if (t == "full")
                        x = (axis.position == "left" ? 0 : plotWidth);
                    else
                        x = box.left - plotOffset.left + (axis.position == "left" ? box.width : 0);
                }
                
                // draw tick bar
                if (!axis.innermost) {
                    ctx.beginPath();
                    xoff = yoff = 0;
                    if (axis.direction == "x")
                        xoff = plotWidth;
                    else
                        yoff = plotHeight;
                    
                    if (ctx.lineWidth == 1) {
                        x = Math.floor(x) + 0.5;
                        y = Math.floor(y) + 0.5;
                    }

                    ctx.moveTo(x, y);
                    ctx.lineTo(x + xoff, y + yoff);
                    ctx.stroke();
                }

                // draw ticks
                ctx.beginPath();
                for (i = 0; i < axis.ticks.length; ++i) {
                    var v = axis.ticks[i].v;
                    
                    xoff = yoff = 0;

                    if (v < axis.min || v > axis.max
                        // skip those lying on the axes if we got a border
                        || (t == "full" && bw > 0
                            && (v == axis.min || v == axis.max)))
                        continue;

                    if (axis.direction == "x") {
                        x = axis.p2c(v);
                        yoff = t == "full" ? -plotHeight : t;
                        
                        if (axis.position == "top")
                            yoff = -yoff;
                    }
                    else {
                        y = axis.p2c(v);
                        xoff = t == "full" ? -plotWidth : t;
                        
                        if (axis.position == "left")
                            xoff = -xoff;
                    }

                    if (ctx.lineWidth == 1) {
                        if (axis.direction == "x")
                            x = Math.floor(x) + 0.5;
                        else
                            y = Math.floor(y) + 0.5;
                    }

                    ctx.moveTo(x, y);
                    ctx.lineTo(x + xoff, y + yoff);
                }
                
                ctx.stroke();
            }
            
            
            // draw border
            if (bw) {
                ctx.lineWidth = bw;
                ctx.strokeStyle = options.grid.borderColor;
                ctx.strokeRect(-bw/2, -bw/2, plotWidth + bw, plotHeight + bw);
            }

            ctx.restore();
        }

        function insertAxisLabels() {
            placeholder.find(".tickLabels").remove();
            
            var html = ['<div class="tickLabels" style="font-size:smaller">'];

            var axes = allAxes();
            for (var j = 0; j < axes.length; ++j) {
                var axis = axes[j], box = axis.box;
                if (!axis.show)
                    continue;
                //debug: html.push('<div style="position:absolute;opacity:0.10;background-color:red;left:' + box.left + 'px;top:' + box.top + 'px;width:' + box.width +  'px;height:' + box.height + 'px"></div>')
                html.push('<div class="' + axis.direction + 'Axis ' + axis.direction + axis.n + 'Axis" style="color:' + axis.options.color + '">');
                for (var i = 0; i < axis.ticks.length; ++i) {
                    var tick = axis.ticks[i];
                    if (!tick.label || tick.v < axis.min || tick.v > axis.max)
                        continue;

                    var pos = {}, align;
                    
                    if (axis.direction == "x") {
                        align = "center";
                        pos.left = Math.round(plotOffset.left + axis.p2c(tick.v) - axis.labelWidth/2);
                        if (axis.position == "bottom")
                            pos.top = box.top + box.padding;
                        else
                            pos.bottom = canvasHeight - (box.top + box.height - box.padding);
                    }
                    else {
                        pos.top = Math.round(plotOffset.top + axis.p2c(tick.v) - axis.labelHeight/2);
                        if (axis.position == "left") {
                            pos.right = canvasWidth - (box.left + box.width - box.padding)
                            align = "right";
                        }
                        else {
                            pos.left = box.left + box.padding;
                            align = "left";
                        }
                    }

                    pos.width = axis.labelWidth;

                    var style = ["position:absolute", "text-align:" + align ];
                    for (var a in pos)
                        style.push(a + ":" + pos[a] + "px")
                    
                    html.push('<div class="tickLabel" style="' + style.join(';') + '">' + tick.label + '</div>');
                }
                html.push('</div>');
            }

            html.push('</div>');

            placeholder.append(html.join(""));
        }

        function drawSeries(series) {
            if (series.lines.show)
                drawSeriesLines(series);
            if (series.bars.show)
                drawSeriesBars(series);
            if (series.points.show)
                drawSeriesPoints(series);
        }
        
        function drawSeriesLines(series) {
            function plotLine(datapoints, xoffset, yoffset, axisx, axisy) {
                var points = datapoints.points,
                    ps = datapoints.pointsize,
                    prevx = null, prevy = null;
                
                ctx.beginPath();
                for (var i = ps; i < points.length; i += ps) {
                    var x1 = points[i - ps], y1 = points[i - ps + 1],
                        x2 = points[i], y2 = points[i + 1];
                    
                    if (x1 == null || x2 == null)
                        continue;

                    // clip with ymin
                    if (y1 <= y2 && y1 < axisy.min) {
                        if (y2 < axisy.min)
                            continue;   // line segment is outside
                        // compute new intersection point
                        x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;
                        y1 = axisy.min;
                    }
                    else if (y2 <= y1 && y2 < axisy.min) {
                        if (y1 < axisy.min)
                            continue;
                        x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;
                        y2 = axisy.min;
                    }

                    // clip with ymax
                    if (y1 >= y2 && y1 > axisy.max) {
                        if (y2 > axisy.max)
                            continue;
                        x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;
                        y1 = axisy.max;
                    }
                    else if (y2 >= y1 && y2 > axisy.max) {
                        if (y1 > axisy.max)
                            continue;
                        x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;
                        y2 = axisy.max;
                    }

                    // clip with xmin
                    if (x1 <= x2 && x1 < axisx.min) {
                        if (x2 < axisx.min)
                            continue;
                        y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;
                        x1 = axisx.min;
                    }
                    else if (x2 <= x1 && x2 < axisx.min) {
                        if (x1 < axisx.min)
                            continue;
                        y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;
                        x2 = axisx.min;
                    }

                    // clip with xmax
                    if (x1 >= x2 && x1 > axisx.max) {
                        if (x2 > axisx.max)
                            continue;
                        y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;
                        x1 = axisx.max;
                    }
                    else if (x2 >= x1 && x2 > axisx.max) {
                        if (x1 > axisx.max)
                            continue;
                        y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;
                        x2 = axisx.max;
                    }

                    if (x1 != prevx || y1 != prevy)
                        ctx.moveTo(axisx.p2c(x1) + xoffset, axisy.p2c(y1) + yoffset);
                    
                    prevx = x2;
                    prevy = y2;
                    ctx.lineTo(axisx.p2c(x2) + xoffset, axisy.p2c(y2) + yoffset);
                }
                ctx.stroke();
            }

            function plotLineArea(datapoints, axisx, axisy) {
                var points = datapoints.points,
                    ps = datapoints.pointsize,
                    bottom = Math.min(Math.max(0, axisy.min), axisy.max),
                    i = 0, top, areaOpen = false,
                    ypos = 1, segmentStart = 0, segmentEnd = 0;

                // we process each segment in two turns, first forward
                // direction to sketch out top, then once we hit the
                // end we go backwards to sketch the bottom
                while (true) {
                    if (ps > 0 && i > points.length + ps)
                        break;

                    i += ps; // ps is negative if going backwards

                    var x1 = points[i - ps],
                        y1 = points[i - ps + ypos],
                        x2 = points[i], y2 = points[i + ypos];

                    if (areaOpen) {
                        if (ps > 0 && x1 != null && x2 == null) {
                            // at turning point
                            segmentEnd = i;
                            ps = -ps;
                            ypos = 2;
                            continue;
                        }

                        if (ps < 0 && i == segmentStart + ps) {
                            // done with the reverse sweep
                            ctx.fill();
                            areaOpen = false;
                            ps = -ps;
                            ypos = 1;
                            i = segmentStart = segmentEnd + ps;
                            continue;
                        }
                    }

                    if (x1 == null || x2 == null)
                        continue;

                    // clip x values
                    
                    // clip with xmin
                    if (x1 <= x2 && x1 < axisx.min) {
                        if (x2 < axisx.min)
                            continue;
                        y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;
                        x1 = axisx.min;
                    }
                    else if (x2 <= x1 && x2 < axisx.min) {
                        if (x1 < axisx.min)
                            continue;
                        y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;
                        x2 = axisx.min;
                    }

                    // clip with xmax
                    if (x1 >= x2 && x1 > axisx.max) {
                        if (x2 > axisx.max)
                            continue;
                        y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;
                        x1 = axisx.max;
                    }
                    else if (x2 >= x1 && x2 > axisx.max) {
                        if (x1 > axisx.max)
                            continue;
                        y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;
                        x2 = axisx.max;
                    }

                    if (!areaOpen) {
                        // open area
                        ctx.beginPath();
                        ctx.moveTo(axisx.p2c(x1), axisy.p2c(bottom));
                        areaOpen = true;
                    }
                    
                    // now first check the case where both is outside
                    if (y1 >= axisy.max && y2 >= axisy.max) {
                        ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.max));
                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.max));
                        continue;
                    }
                    else if (y1 <= axisy.min && y2 <= axisy.min) {
                        ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.min));
                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.min));
                        continue;
                    }
                    
                    // else it's a bit more complicated, there might
                    // be a flat maxed out rectangle first, then a
                    // triangular cutout or reverse; to find these
                    // keep track of the current x values
                    var x1old = x1, x2old = x2;

                    // clip the y values, without shortcutting, we
                    // go through all cases in turn
                    
                    // clip with ymin
                    if (y1 <= y2 && y1 < axisy.min && y2 >= axisy.min) {
                        x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;
                        y1 = axisy.min;
                    }
                    else if (y2 <= y1 && y2 < axisy.min && y1 >= axisy.min) {
                        x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;
                        y2 = axisy.min;
                    }

                    // clip with ymax
                    if (y1 >= y2 && y1 > axisy.max && y2 <= axisy.max) {
                        x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;
                        y1 = axisy.max;
                    }
                    else if (y2 >= y1 && y2 > axisy.max && y1 <= axisy.max) {
                        x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;
                        y2 = axisy.max;
                    }

                    // if the x value was changed we got a rectangle
                    // to fill
                    if (x1 != x1old) {
                        ctx.lineTo(axisx.p2c(x1old), axisy.p2c(y1));
                        // it goes to (x1, y1), but we fill that below
                    }
                    
                    // fill triangular section, this sometimes result
                    // in redundant points if (x1, y1) hasn't changed
                    // from previous line to, but we just ignore that
                    ctx.lineTo(axisx.p2c(x1), axisy.p2c(y1));
                    ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));

                    // fill the other rectangle if it's there
                    if (x2 != x2old) {
                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));
                        ctx.lineTo(axisx.p2c(x2old), axisy.p2c(y2));
                    }
                }
            }

            ctx.save();
            ctx.translate(plotOffset.left, plotOffset.top);
            ctx.lineJoin = "round";

            var lw = series.lines.lineWidth,
                sw = series.shadowSize;
            // FIXME: consider another form of shadow when filling is turned on
            if (lw > 0 && sw > 0) {
                // draw shadow as a thick and thin line with transparency
                ctx.lineWidth = sw;
                ctx.strokeStyle = "rgba(0,0,0,0.1)";
                // position shadow at angle from the mid of line
                var angle = Math.PI/18;
                plotLine(series.datapoints, Math.sin(angle) * (lw/2 + sw/2), Math.cos(angle) * (lw/2 + sw/2), series.xaxis, series.yaxis);
                ctx.lineWidth = sw/2;
                plotLine(series.datapoints, Math.sin(angle) * (lw/2 + sw/4), Math.cos(angle) * (lw/2 + sw/4), series.xaxis, series.yaxis);
            }

            ctx.lineWidth = lw;
            ctx.strokeStyle = series.color;
            var fillStyle = getFillStyle(series.lines, series.color, 0, plotHeight);
            if (fillStyle) {
                ctx.fillStyle = fillStyle;
                plotLineArea(series.datapoints, series.xaxis, series.yaxis);
            }

            if (lw > 0)
                plotLine(series.datapoints, 0, 0, series.xaxis, series.yaxis);
            ctx.restore();
        }

        function drawSeriesPoints(series) {
            function plotPoints(datapoints, radius, fillStyle, offset, shadow, axisx, axisy, symbol) {
                var points = datapoints.points, ps = datapoints.pointsize;

                for (var i = 0; i < points.length; i += ps) {
                    var x = points[i], y = points[i + 1];
                    if (x == null || x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max)
                        continue;
                    
                    ctx.beginPath();
                    x = axisx.p2c(x);
                    y = axisy.p2c(y) + offset;
                    if (symbol == "circle")
                        ctx.arc(x, y, radius, 0, shadow ? Math.PI : Math.PI * 2, false);
                    else
                        symbol(ctx, x, y, radius, shadow);
                    ctx.closePath();
                    
                    if (fillStyle) {
                        ctx.fillStyle = fillStyle;
                        ctx.fill();
                    }
                    ctx.stroke();
                }
            }
            
            ctx.save();
            ctx.translate(plotOffset.left, plotOffset.top);

            var lw = series.points.lineWidth,
                sw = series.shadowSize,
                radius = series.points.radius,
                symbol = series.points.symbol;
            if (lw > 0 && sw > 0) {
                // draw shadow in two steps
                var w = sw / 2;
                ctx.lineWidth = w;
                ctx.strokeStyle = "rgba(0,0,0,0.1)";
                plotPoints(series.datapoints, radius, null, w + w/2, true,
                           series.xaxis, series.yaxis, symbol);

                ctx.strokeStyle = "rgba(0,0,0,0.2)";
                plotPoints(series.datapoints, radius, null, w/2, true,
                           series.xaxis, series.yaxis, symbol);
            }

            ctx.lineWidth = lw;
            ctx.strokeStyle = series.color;
            plotPoints(series.datapoints, radius,
                       getFillStyle(series.points, series.color), 0, false,
                       series.xaxis, series.yaxis, symbol);
            ctx.restore();
        }

        function drawBar(x, y, b, barLeft, barRight, offset, fillStyleCallback, axisx, axisy, c, horizontal, lineWidth) {
            var left, right, bottom, top,
                drawLeft, drawRight, drawTop, drawBottom,
                tmp;

            // in horizontal mode, we start the bar from the left
            // instead of from the bottom so it appears to be
            // horizontal rather than vertical
            if (horizontal) {
                drawBottom = drawRight = drawTop = true;
                drawLeft = false;
                left = b;
                right = x;
                top = y + barLeft;
                bottom = y + barRight;

                // account for negative bars
                if (right < left) {
                    tmp = right;
                    right = left;
                    left = tmp;
                    drawLeft = true;
                    drawRight = false;
                }
            }
            else {
                drawLeft = drawRight = drawTop = true;
                drawBottom = false;
                left = x + barLeft;
                right = x + barRight;
                bottom = b;
                top = y;

                // account for negative bars
                if (top < bottom) {
                    tmp = top;
                    top = bottom;
                    bottom = tmp;
                    drawBottom = true;
                    drawTop = false;
                }
            }
           
            // clip
            if (right < axisx.min || left > axisx.max ||
                top < axisy.min || bottom > axisy.max)
                return;
            
            if (left < axisx.min) {
                left = axisx.min;
                drawLeft = false;
            }

            if (right > axisx.max) {
                right = axisx.max;
                drawRight = false;
            }

            if (bottom < axisy.min) {
                bottom = axisy.min;
                drawBottom = false;
            }
            
            if (top > axisy.max) {
                top = axisy.max;
                drawTop = false;
            }

            left = axisx.p2c(left);
            bottom = axisy.p2c(bottom);
            right = axisx.p2c(right);
            top = axisy.p2c(top);
            
            // fill the bar
            if (fillStyleCallback) {
                c.beginPath();
                c.moveTo(left, bottom);
                c.lineTo(left, top);
                c.lineTo(right, top);
                c.lineTo(right, bottom);
                c.fillStyle = fillStyleCallback(bottom, top);
                c.fill();
            }

            // draw outline
            if (lineWidth > 0 && (drawLeft || drawRight || drawTop || drawBottom)) {
                c.beginPath();

                // FIXME: inline moveTo is buggy with excanvas
                c.moveTo(left, bottom + offset);
                if (drawLeft)
                    c.lineTo(left, top + offset);
                else
                    c.moveTo(left, top + offset);
                if (drawTop)
                    c.lineTo(right, top + offset);
                else
                    c.moveTo(right, top + offset);
                if (drawRight)
                    c.lineTo(right, bottom + offset);
                else
                    c.moveTo(right, bottom + offset);
                if (drawBottom)
                    c.lineTo(left, bottom + offset);
                else
                    c.moveTo(left, bottom + offset);
                c.stroke();
            }
        }
        
        function drawSeriesBars(series) {
            function plotBars(datapoints, barLeft, barRight, offset, fillStyleCallback, axisx, axisy) {
                var points = datapoints.points, ps = datapoints.pointsize;
                
                for (var i = 0; i < points.length; i += ps) {
                    if (points[i] == null)
                        continue;
                    drawBar(points[i], points[i + 1], points[i + 2], barLeft, barRight, offset, fillStyleCallback, axisx, axisy, ctx, series.bars.horizontal, series.bars.lineWidth);
                }
            }

            ctx.save();
            ctx.translate(plotOffset.left, plotOffset.top);

            // FIXME: figure out a way to add shadows (for instance along the right edge)
            ctx.lineWidth = series.bars.lineWidth;
            ctx.strokeStyle = series.color;
            var barLeft = series.bars.align == "left" ? 0 : -series.bars.barWidth/2;
            var fillStyleCallback = series.bars.fill ? function (bottom, top) { return getFillStyle(series.bars, series.color, bottom, top); } : null;
            plotBars(series.datapoints, barLeft, barLeft + series.bars.barWidth, 0, fillStyleCallback, series.xaxis, series.yaxis);
            ctx.restore();
        }

        function getFillStyle(filloptions, seriesColor, bottom, top) {
            var fill = filloptions.fill;
            if (!fill)
                return null;

            if (filloptions.fillColor)
                return getColorOrGradient(filloptions.fillColor, bottom, top, seriesColor);
            
            var c = $.color.parse(seriesColor);
            c.a = typeof fill == "number" ? fill : 0.4;
            c.normalize();
            return c.toString();
        }
        
        function insertLegend() {
            placeholder.find(".legend").remove();

            if (!options.legend.show)
                return;
            
            var fragments = [], rowStarted = false,
                lf = options.legend.labelFormatter, s, label;
            for (var i = 0; i < series.length; ++i) {
                s = series[i];
                label = s.label;
                if (!label)
                    continue;
                
                if (i % options.legend.noColumns == 0) {
                    if (rowStarted)
                        fragments.push('</tr>');
                    fragments.push('<tr>');
                    rowStarted = true;
                }

                if (lf)
                    label = lf(label, s);
                
                fragments.push(
                    '<td class="legendColorBox"><div style="border:1px solid ' + options.legend.labelBoxBorderColor + ';padding:1px"><div style="width:4px;height:0;border:5px solid ' + s.color + ';overflow:hidden"></div></div></td>' +
                    '<td class="legendLabel">' + label + '</td>');
            }
            if (rowStarted)
                fragments.push('</tr>');
            
            if (fragments.length == 0)
                return;

            var table = '<table style="font-size:smaller;color:' + options.grid.color + '">' + fragments.join("") + '</table>';
            if (options.legend.container != null)
                $(options.legend.container).html(table);
            else {
                var pos = "",
                    p = options.legend.position,
                    m = options.legend.margin;
                if (m[0] == null)
                    m = [m, m];
                if (p.charAt(0) == "n")
                    pos += 'top:' + (m[1] + plotOffset.top) + 'px;';
                else if (p.charAt(0) == "s")
                    pos += 'bottom:' + (m[1] + plotOffset.bottom) + 'px;';
                if (p.charAt(1) == "e")
                    pos += 'right:' + (m[0] + plotOffset.right) + 'px;';
                else if (p.charAt(1) == "w")
                    pos += 'left:' + (m[0] + plotOffset.left) + 'px;';
                var legend = $('<div class="legend">' + table.replace('style="', 'style="position:absolute;' + pos +';') + '</div>').appendTo(placeholder);
                if (options.legend.backgroundOpacity != 0.0) {
                    // put in the transparent background
                    // separately to avoid blended labels and
                    // label boxes
                    var c = options.legend.backgroundColor;
                    if (c == null) {
                        c = options.grid.backgroundColor;
                        if (c && typeof c == "string")
                            c = $.color.parse(c);
                        else
                            c = $.color.extract(legend, 'background-color');
                        c.a = 1;
                        c = c.toString();
                    }
                    var div = legend.children();
                    $('<div style="position:absolute;width:' + div.width() + 'px;height:' + div.height() + 'px;' + pos +'background-color:' + c + ';"> </div>').prependTo(legend).css('opacity', options.legend.backgroundOpacity);
                }
            }
        }


        // interactive features
        
        var highlights = [],
            redrawTimeout = null;
        
        // returns the data item the mouse is over, or null if none is found
        function findNearbyItem(mouseX, mouseY, seriesFilter) {
            var maxDistance = options.grid.mouseActiveRadius,
                smallestDistance = maxDistance * maxDistance + 1,
                item = null, foundPoint = false, i, j;

            for (i = series.length - 1; i >= 0; --i) {
                if (!seriesFilter(series[i]))
                    continue;
                
                var s = series[i],
                    axisx = s.xaxis,
                    axisy = s.yaxis,
                    points = s.datapoints.points,
                    ps = s.datapoints.pointsize,
                    mx = axisx.c2p(mouseX), // precompute some stuff to make the loop faster
                    my = axisy.c2p(mouseY),
                    maxx = maxDistance / axisx.scale,
                    maxy = maxDistance / axisy.scale;

                // with inverse transforms, we can't use the maxx/maxy
                // optimization, sadly
                if (axisx.options.inverseTransform)
                    maxx = Number.MAX_VALUE;
                if (axisy.options.inverseTransform)
                    maxy = Number.MAX_VALUE;
                
                if (s.lines.show || s.points.show) {
                    for (j = 0; j < points.length; j += ps) {
                        var x = points[j], y = points[j + 1];
                        if (x == null)
                            continue;
                        
                        // For points and lines, the cursor must be within a
                        // certain distance to the data point
                        if (x - mx > maxx || x - mx < -maxx ||
                            y - my > maxy || y - my < -maxy)
                            continue;

                        // We have to calculate distances in pixels, not in
                        // data units, because the scales of the axes may be different
                        var dx = Math.abs(axisx.p2c(x) - mouseX),
                            dy = Math.abs(axisy.p2c(y) - mouseY),
                            dist = dx * dx + dy * dy; // we save the sqrt

                        // use <= to ensure last point takes precedence
                        // (last generally means on top of)
                        if (dist < smallestDistance) {
                            smallestDistance = dist;
                            item = [i, j / ps];
                        }
                    }
                }
                    
                if (s.bars.show && !item) { // no other point can be nearby
                    var barLeft = s.bars.align == "left" ? 0 : -s.bars.barWidth/2,
                        barRight = barLeft + s.bars.barWidth;
                    
                    for (j = 0; j < points.length; j += ps) {
                        var x = points[j], y = points[j + 1], b = points[j + 2];
                        if (x == null)
                            continue;
  
                        // for a bar graph, the cursor must be inside the bar
                        if (series[i].bars.horizontal ? 
                            (mx <= Math.max(b, x) && mx >= Math.min(b, x) && 
                             my >= y + barLeft && my <= y + barRight) :
                            (mx >= x + barLeft && mx <= x + barRight &&
                             my >= Math.min(b, y) && my <= Math.max(b, y)))
                                item = [i, j / ps];
                    }
                }
            }

            if (item) {
                i = item[0];
                j = item[1];
                ps = series[i].datapoints.pointsize;
                
                return { datapoint: series[i].datapoints.points.slice(j * ps, (j + 1) * ps),
                         dataIndex: j,
                         series: series[i],
                         seriesIndex: i };
            }
            
            return null;
        }

        function onMouseMove(e) {
            if (options.grid.hoverable)
                triggerClickHoverEvent("plothover", e,
                                       function (s) { return s["hoverable"] != false; });
        }

        function onMouseLeave(e) {
            if (options.grid.hoverable)
                triggerClickHoverEvent("plothover", e,
                                       function (s) { return false; });
        }

        function onClick(e) {
            triggerClickHoverEvent("plotclick", e,
                                   function (s) { return s["clickable"] != false; });
        }

        // trigger click or hover event (they send the same parameters
        // so we share their code)
        function triggerClickHoverEvent(eventname, event, seriesFilter) {
            var offset = eventHolder.offset(),
                canvasX = event.pageX - offset.left - plotOffset.left,
                canvasY = event.pageY - offset.top - plotOffset.top,
            pos = canvasToAxisCoords({ left: canvasX, top: canvasY });

            pos.pageX = event.pageX;
            pos.pageY = event.pageY;

            var item = findNearbyItem(canvasX, canvasY, seriesFilter);

            if (item) {
                // fill in mouse pos for any listeners out there
                item.pageX = parseInt(item.series.xaxis.p2c(item.datapoint[0]) + offset.left + plotOffset.left);
                item.pageY = parseInt(item.series.yaxis.p2c(item.datapoint[1]) + offset.top + plotOffset.top);
            }

            if (options.grid.autoHighlight) {
                // clear auto-highlights
                for (var i = 0; i < highlights.length; ++i) {
                    var h = highlights[i];
                    if (h.auto == eventname &&
                        !(item && h.series == item.series &&
                          h.point[0] == item.datapoint[0] &&
                          h.point[1] == item.datapoint[1]))
                        unhighlight(h.series, h.point);
                }
                
                if (item)
                    highlight(item.series, item.datapoint, eventname);
            }
            
            placeholder.trigger(eventname, [ pos, item ]);
        }

        function triggerRedrawOverlay() {
            if (!redrawTimeout)
                redrawTimeout = setTimeout(drawOverlay, 30);
        }

        function drawOverlay() {
            redrawTimeout = null;

            // draw highlights
            octx.save();
            octx.clearRect(0, 0, canvasWidth, canvasHeight);
            octx.translate(plotOffset.left, plotOffset.top);
            
            var i, hi;
            for (i = 0; i < highlights.length; ++i) {
                hi = highlights[i];

                if (hi.series.bars.show)
                    drawBarHighlight(hi.series, hi.point);
                else
                    drawPointHighlight(hi.series, hi.point);
            }
            octx.restore();
            
            executeHooks(hooks.drawOverlay, [octx]);
        }
        
        function highlight(s, point, auto) {
            if (typeof s == "number")
                s = series[s];

            if (typeof point == "number") {
                var ps = s.datapoints.pointsize;
                point = s.datapoints.points.slice(ps * point, ps * (point + 1));
            }

            var i = indexOfHighlight(s, point);
            if (i == -1) {
                highlights.push({ series: s, point: point, auto: auto });

                triggerRedrawOverlay();
            }
            else if (!auto)
                highlights[i].auto = false;
        }
            
        function unhighlight(s, point) {
            if (s == null && point == null) {
                highlights = [];
                triggerRedrawOverlay();
            }
            
            if (typeof s == "number")
                s = series[s];

            if (typeof point == "number")
                point = s.data[point];

            var i = indexOfHighlight(s, point);
            if (i != -1) {
                highlights.splice(i, 1);

                triggerRedrawOverlay();
            }
        }
        
        function indexOfHighlight(s, p) {
            for (var i = 0; i < highlights.length; ++i) {
                var h = highlights[i];
                if (h.series == s && h.point[0] == p[0]
                    && h.point[1] == p[1])
                    return i;
            }
            return -1;
        }
        
        function drawPointHighlight(series, point) {
            var x = point[0], y = point[1],
                axisx = series.xaxis, axisy = series.yaxis;
            
            if (x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max)
                return;
            
            var pointRadius = series.points.radius + series.points.lineWidth / 2;
            octx.lineWidth = pointRadius;
            octx.strokeStyle = $.color.parse(series.color).scale('a', 0.5).toString();
            var radius = 1.5 * pointRadius,
                x = axisx.p2c(x),
                y = axisy.p2c(y);
            
            octx.beginPath();
            if (series.points.symbol == "circle")
                octx.arc(x, y, radius, 0, 2 * Math.PI, false);
            else
                series.points.symbol(octx, x, y, radius, false);
            octx.closePath();
            octx.stroke();
        }

        function drawBarHighlight(series, point) {
            octx.lineWidth = series.bars.lineWidth;
            octx.strokeStyle = $.color.parse(series.color).scale('a', 0.5).toString();
            var fillStyle = $.color.parse(series.color).scale('a', 0.5).toString();
            var barLeft = series.bars.align == "left" ? 0 : -series.bars.barWidth/2;
            drawBar(point[0], point[1], point[2] || 0, barLeft, barLeft + series.bars.barWidth,
                    0, function () { return fillStyle; }, series.xaxis, series.yaxis, octx, series.bars.horizontal, series.bars.lineWidth);
        }

        function getColorOrGradient(spec, bottom, top, defaultColor) {
            if (typeof spec == "string")
                return spec;
            else {
                // assume this is a gradient spec; IE currently only
                // supports a simple vertical gradient properly, so that's
                // what we support too
                var gradient = ctx.createLinearGradient(0, top, 0, bottom);
                
                for (var i = 0, l = spec.colors.length; i < l; ++i) {
                    var c = spec.colors[i];
                    if (typeof c != "string") {
                        var co = $.color.parse(defaultColor);
                        if (c.brightness != null)
                            co = co.scale('rgb', c.brightness)
                        if (c.opacity != null)
                            co.a *= c.opacity;
                        c = co.toString();
                    }
                    gradient.addColorStop(i / (l - 1), c);
                }
                
                return gradient;
            }
        }
    }

    $.plot = function(placeholder, data, options) {
        //var t0 = new Date();
        var plot = new Plot($(placeholder), data, options, $.plot.plugins);
        //(window.console ? console.log : alert)("time used (msecs): " + ((new Date()).getTime() - t0.getTime()));
        return plot;
    };

    $.plot.version = "0.7";
    
    $.plot.plugins = [];

    // returns a string with the date d formatted according to fmt
    $.plot.formatDate = function(d, fmt, monthNames) {
        var leftPad = function(n) {
            n = "" + n;
            return n.length == 1 ? "0" + n : n;
        };
        
        var r = [];
        var escape = false, padNext = false;
        var hours = d.getUTCHours();
        var isAM = hours < 12;
        if (monthNames == null)
            monthNames = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];

        if (fmt.search(/%p|%P/) != -1) {
            if (hours > 12) {
                hours = hours - 12;
            } else if (hours == 0) {
                hours = 12;
            }
        }
        for (var i = 0; i < fmt.length; ++i) {
            var c = fmt.charAt(i);
            
            if (escape) {
                switch (c) {
                case 'h': c = "" + hours; break;
                case 'H': c = leftPad(hours); break;
                case 'M': c = leftPad(d.getUTCMinutes()); break;
                case 'S': c = leftPad(d.getUTCSeconds()); break;
                case 'd': c = "" + d.getUTCDate(); break;
                case 'm': c = "" + (d.getUTCMonth() + 1); break;
                case 'y': c = "" + d.getUTCFullYear(); break;
                case 'b': c = "" + monthNames[d.getUTCMonth()]; break;
                case 'p': c = (isAM) ? ("" + "am") : ("" + "pm"); break;
                case 'P': c = (isAM) ? ("" + "AM") : ("" + "PM"); break;
                case '0': c = ""; padNext = true; break;
                }
                if (c && padNext) {
                    c = leftPad(c);
                    padNext = false;
                }
                r.push(c);
                if (!padNext)
                    escape = false;
            }
            else {
                if (c == "%")
                    escape = true;
                else
                    r.push(c);
            }
        }
        return r.join("");
    };
    
    // round to nearby lower multiple of base
    function floorInBase(n, base) {
        return base * Math.floor(n / base);
    }
    
})(jQuery);

/*
Flot plugin for automatically redrawing plots when the placeholder
size changes, e.g. on window resizes.

It works by listening for changes on the placeholder div (through the
jQuery resize event plugin) - if the size changes, it will redraw the
plot.

There are no options. If you need to disable the plugin for some
plots, you can just fix the size of their placeholders.
*/


/* Inline dependency: 
 * jQuery resize event - v1.1 - 3/14/2010
 * http://benalman.com/projects/jquery-resize-plugin/
 * 
 * Copyright (c) 2010 "Cowboy" Ben Alman
 * Dual licensed under the MIT and GPL licenses.
 * http://benalman.com/about/license/
 */
(function($,h,c){var a=$([]),e=$.resize=$.extend($.resize,{}),i,k="setTimeout",j="resize",d=j+"-special-event",b="delay",f="throttleWindow";e[b]=250;e[f]=true;$.event.special[j]={setup:function(){if(!e[f]&&this[k]){return false}var l=$(this);a=a.add(l);$.data(this,d,{w:l.width(),h:l.height()});if(a.length===1){g()}},teardown:function(){if(!e[f]&&this[k]){return false}var l=$(this);a=a.not(l);l.removeData(d);if(!a.length){clearTimeout(i)}},add:function(l){if(!e[f]&&this[k]){return false}var n;function m(s,o,p){var q=$(this),r=$.data(this,d);r.w=o!==c?o:q.width();r.h=p!==c?p:q.height();n.apply(this,arguments)}if($.isFunction(l)){n=l;return m}else{n=l.handler;l.handler=m}}};function g(){i=h[k](function(){a.each(function(){var n=$(this),m=n.width(),l=n.height(),o=$.data(this,d);if(m!==o.w||l!==o.h){n.trigger(j,[o.w=m,o.h=l])}});g()},e[b])}})(jQuery,this);


(function ($) {
    var options = { }; // no options

    function init(plot) {
        function onResize() {
            var placeholder = plot.getPlaceholder();

            // somebody might have hidden us and we can't plot
            // when we don't have the dimensions
            if (placeholder.width() == 0 || placeholder.height() == 0)
                return;

            plot.resize();
            plot.setupGrid();
            plot.draw();
        }
        
        function bindEvents(plot, eventHolder) {
            plot.getPlaceholder().resize(onResize);
        }

        function shutdown(plot, eventHolder) {
            plot.getPlaceholder().unbind("resize", onResize);
        }
        
        plot.hooks.bindEvents.push(bindEvents);
        plot.hooks.shutdown.push(shutdown);
    }
    
    $.plot.plugins.push({
        init: init,
        options: options,
        name: 'resize',
        version: '1.0'
    });
})(jQuery);
/*
Flot plugin for rendering pie charts. The plugin assumes the data is 
coming is as a single data value for each series, and each of those 
values is a positive value or zero (negative numbers don't make 
any sense and will cause strange effects). The data values do 
NOT need to be passed in as percentage values because it 
internally calculates the total and percentages.

* Created by Brian Medendorp, June 2009
* Updated November 2009 with contributions from: btburnett3, Anthony Aragues and Xavi Ivars

* Changes:
        2009-10-22: lineJoin set to round
        2009-10-23: IE full circle fix, donut
        2009-11-11: Added basic hover from btburnett3 - does not work in IE, and center is off in Chrome and Opera
        2009-11-17: Added IE hover capability submitted by Anthony Aragues
        2009-11-18: Added bug fix submitted by Xavi Ivars (issues with arrays when other JS libraries are included as well)
                

Available options are:
series: {
        pie: {
                show: true/false
                radius: 0-1 for percentage of fullsize, or a specified pixel length, or 'auto'
                innerRadius: 0-1 for percentage of fullsize or a specified pixel length, for creating a donut effect
                startAngle: 0-2 factor of PI used for starting angle (in radians) i.e 3/2 starts at the top, 0 and 2 have the same result
                tilt: 0-1 for percentage to tilt the pie, where 1 is no tilt, and 0 is completely flat (nothing will show)
                offset: {
                        top: integer value to move the pie up or down
                        left: integer value to move the pie left or right, or 'auto'
                },
                stroke: {
                        color: any hexidecimal color value (other formats may or may not work, so best to stick with something like '#FFF')
                        width: integer pixel width of the stroke
                },
                label: {
                        show: true/false, or 'auto'
                        formatter:  a user-defined function that modifies the text/style of the label text
                        radius: 0-1 for percentage of fullsize, or a specified pixel length
                        background: {
                                color: any hexidecimal color value (other formats may or may not work, so best to stick with something like '#000')
                                opacity: 0-1
                        },
                        threshold: 0-1 for the percentage value at which to hide labels (if they're too small)
                },
                combine: {
                        threshold: 0-1 for the percentage value at which to combine slices (if they're too small)
                        color: any hexidecimal color value (other formats may or may not work, so best to stick with something like '#CCC'), if null, the plugin will automatically use the color of the first slice to be combined
                        label: any text value of what the combined slice should be labeled
                }
                highlight: {
                        opacity: 0-1
                }
        }
}

More detail and specific examples can be found in the included HTML file.

*/

(function ($) 
{
        function init(plot) // this is the "body" of the plugin
        {
                var canvas = null;
                var target = null;
                var maxRadius = null;
                var centerLeft = null;
                var centerTop = null;
                var total = 0;
                var redraw = true;
                var redrawAttempts = 10;
                var shrink = 0.95;
                var legendWidth = 0;
                var processed = false;
                var raw = false;
                
                // interactive variables        
                var highlights = [];    
        
                // add hook to determine if pie plugin in enabled, and then perform necessary operations
                plot.hooks.processOptions.push(checkPieEnabled);
                plot.hooks.bindEvents.push(bindEvents); 

                // check to see if the pie plugin is enabled
                function checkPieEnabled(plot, options)
                {
                        if (options.series.pie.show)
                        {
                                //disable grid
                                options.grid.show = false;
                                
                                // set labels.show
                                if (options.series.pie.label.show=='auto')
                                        if (options.legend.show)
                                                options.series.pie.label.show = false;
                                        else
                                                options.series.pie.label.show = true;
                                
                                // set radius
                                if (options.series.pie.radius=='auto')
                                        if (options.series.pie.label.show)
                                                options.series.pie.radius = 3/4;
                                        else
                                                options.series.pie.radius = 1;
                                                
                                // ensure sane tilt
                                if (options.series.pie.tilt>1)
                                        options.series.pie.tilt=1;
                                if (options.series.pie.tilt<0)
                                        options.series.pie.tilt=0;
                        
                                // add processData hook to do transformations on the data
                                plot.hooks.processDatapoints.push(processDatapoints);
                                plot.hooks.drawOverlay.push(drawOverlay);       
                                
                                // add draw hook
                                plot.hooks.draw.push(draw);
                        }
                }
        
                // bind hoverable events
                function bindEvents(plot, eventHolder)          
                {               
                        var options = plot.getOptions();
                        
                        if (options.series.pie.show && options.grid.hoverable)
                                eventHolder.unbind('mousemove').mousemove(onMouseMove);
                                
                        if (options.series.pie.show && options.grid.clickable)
                                eventHolder.unbind('click').click(onClick);
                }       
                

                // debugging function that prints out an object
                function alertObject(obj)
                {
                        var msg = '';
                        function traverse(obj, depth)
                        {
                                if (!depth)
                                        depth = 0;
                                for (var i = 0; i < obj.length; ++i)
                                {
                                        for (var j=0; j<depth; j++)
                                                msg += '\t';
                                
                                        if( typeof obj[i] == "object")
                                        {       // its an object
                                                msg += ''+i+':\n';
                                                traverse(obj[i], depth+1);
                                        }
                                        else
                                        {       // its a value
                                                msg += ''+i+': '+obj[i]+'\n';
                                        }
                                }
                        }
                        traverse(obj);
                        alert(msg);
                }
                
                function calcTotal(data)
                {
                        for (var i = 0; i < data.length; ++i)
                        {
                                var item = parseFloat(data[i].data[0][1]);
                                if (item)
                                        total += item;
                        }
                }       
                
                function processDatapoints(plot, series, data, datapoints) 
                {       
                        if (!processed)
                        {
                                processed = true;
                        
                                canvas = plot.getCanvas();
                                target = $(canvas).parent();
                                options = plot.getOptions();
                        
                                plot.setData(combine(plot.getData()));
                        }
                }
                
                function setupPie()
                {
                        legendWidth = target.children().filter('.legend').children().width();
                
                        // calculate maximum radius and center point
                        maxRadius =  Math.min(canvas.width,(canvas.height/options.series.pie.tilt))/2;
                        centerTop = (canvas.height/2)+options.series.pie.offset.top;
                        centerLeft = (canvas.width/2);
                        
                        if (options.series.pie.offset.left=='auto')
                                if (options.legend.position.match('w'))
                                        centerLeft += legendWidth/2;
                                else
                                        centerLeft -= legendWidth/2;
                        else
                                centerLeft += options.series.pie.offset.left;
                                        
                        if (centerLeft<maxRadius)
                                centerLeft = maxRadius;
                        else if (centerLeft>canvas.width-maxRadius)
                                centerLeft = canvas.width-maxRadius;
                }
                
                function fixData(data)
                {
                        for (var i = 0; i < data.length; ++i)
                        {
                                if (typeof(data[i].data)=='number')
                                        data[i].data = [[1,data[i].data]];
                                else if (typeof(data[i].data)=='undefined' || typeof(data[i].data[0])=='undefined')
                                {
                                        if (typeof(data[i].data)!='undefined' && typeof(data[i].data.label)!='undefined')
                                                data[i].label = data[i].data.label; // fix weirdness coming from flot
                                        data[i].data = [[1,0]];
                                        
                                }
                        }
                        return data;
                }
                
                function combine(data)
                {
                        data = fixData(data);
                        calcTotal(data);
                        var combined = 0;
                        var numCombined = 0;
                        var color = options.series.pie.combine.color;
                        
                        var newdata = [];
                        for (var i = 0; i < data.length; ++i)
                        {
                                // make sure its a number
                                data[i].data[0][1] = parseFloat(data[i].data[0][1]);
                                if (!data[i].data[0][1])
                                        data[i].data[0][1] = 0;
                                        
                                if (data[i].data[0][1]/total<=options.series.pie.combine.threshold)
                                {
                                        combined += data[i].data[0][1];
                                        numCombined++;
                                        if (!color)
                                                color = data[i].color;
                                }                               
                                else
                                {
                                        newdata.push({
                                                data: [[1,data[i].data[0][1]]], 
                                                color: data[i].color, 
                                                label: data[i].label,
                                                angle: (data[i].data[0][1]*(Math.PI*2))/total,
                                                percent: (data[i].data[0][1]/total*100)
                                        });
                                }
                        }
                        if (numCombined>0)
                                newdata.push({
                                        data: [[1,combined]], 
                                        color: color, 
                                        label: options.series.pie.combine.label,
                                        angle: (combined*(Math.PI*2))/total,
                                        percent: (combined/total*100)
                                });
                        return newdata;
                }               
                
                function draw(plot, newCtx)
                {
                        if (!target) return; // if no series were passed
                        ctx = newCtx;
                
                        setupPie();
                        var slices = plot.getData();
                
                        var attempts = 0;
                        /*Modification : we need to redraw pie chart on resize*/
                        redraw = true;
                        /*End Modification*/
                        while (redraw && attempts<redrawAttempts)
                        {
                                redraw = false;
                                if (attempts>0)
                                        maxRadius *= shrink;
                                attempts += 1;
                                clear();
                                if (options.series.pie.tilt<=0.8)
                                        drawShadow();
                                drawPie();
                                /*Modification: We need to clear overlay in case of an update after a highlight*/
                                plot.triggerRedrawOverlay();
                                /*End Modification*/
                        }
                        if (attempts >= redrawAttempts) {
                                clear();
                                target.prepend('<div class="error">Could not draw pie with labels contained inside canvas</div>');
                        }
                        
                        if ( plot.setSeries && plot.insertLegend )
                        {
                                plot.setSeries(slices);
                                plot.insertLegend();
                        }
                        
                        // we're actually done at this point, just defining internal functions at this point
                        
                        function clear()
                        {
                                ctx.clearRect(0,0,canvas.width,canvas.height);
                                target.children().filter('.pieLabel, .pieLabelBackground').remove();
                                /*Modification : after a clear, we set total to zero and allow data processing again*/
                                total = 0;
                                processed = false;
                                /*End Modification*/
                        }
                        
                        function drawShadow()
                        {
                                var shadowLeft = 5;
                                var shadowTop = 15;
                                var edge = 10;
                                var alpha = 0.02;
                        
                                // set radius
                                if (options.series.pie.radius>1)
                                        var radius = options.series.pie.radius;
                                else
                                        var radius = maxRadius * options.series.pie.radius;
                                        
                                if (radius>=(canvas.width/2)-shadowLeft || radius*options.series.pie.tilt>=(canvas.height/2)-shadowTop || radius<=edge)
                                        return; // shadow would be outside canvas, so don't draw it
                        
                                ctx.save();
                                ctx.translate(shadowLeft,shadowTop);
                                ctx.globalAlpha = alpha;
                                ctx.fillStyle = '#000';

                                // center and rotate to starting position
                                ctx.translate(centerLeft,centerTop);
                                ctx.scale(1, options.series.pie.tilt);
                                
                                //radius -= edge;
                                for (var i=1; i<=edge; i++)
                                {
                                        ctx.beginPath();
                                        ctx.arc(0,0,radius,0,Math.PI*2,false);
                                        ctx.fill();
                                        radius -= i;
                                }       
                                
                                ctx.restore();
                        }
                        
                        function drawPie()
                        {
                                startAngle = Math.PI*options.series.pie.startAngle;
                                
                                // set radius
                                if (options.series.pie.radius>1)
                                        var radius = options.series.pie.radius;
                                else
                                        var radius = maxRadius * options.series.pie.radius;
                                
                                // center and rotate to starting position
                                ctx.save();
                                ctx.translate(centerLeft,centerTop);
                                ctx.scale(1, options.series.pie.tilt);
                                //ctx.rotate(startAngle); // start at top; -- This doesn't work properly in Opera
                                
                                // draw slices
                                ctx.save();
                                var currentAngle = startAngle;
                                for (var i = 0; i < slices.length; ++i)
                                {
                                        slices[i].startAngle = currentAngle;
                                        drawSlice(slices[i].angle, slices[i].color, true);
                                }
                                ctx.restore();
                                
                                // draw slice outlines
                                ctx.save();
                                ctx.lineWidth = options.series.pie.stroke.width;
                                currentAngle = startAngle;
                                for (var i = 0; i < slices.length; ++i)
                                        drawSlice(slices[i].angle, options.series.pie.stroke.color, false);
                                ctx.restore();
                                        
                                // draw donut hole
                                drawDonutHole(ctx);
                                
                                // draw labels
                                if (options.series.pie.label.show)
                                        drawLabels();
                                
                                // restore to original state
                                ctx.restore();
                                
                                function drawSlice(angle, color, fill)
                                {       
                                        if (angle<=0)
                                                return;
                                
                                        if (fill)
                                                ctx.fillStyle = color;
                                        else
                                        {
                                                ctx.strokeStyle = color;
                                                ctx.lineJoin = 'round';
                                        }
                                                
                                        ctx.beginPath();
                                        if (Math.abs(angle - Math.PI*2) > 0.000000001)
                                                ctx.moveTo(0,0); // Center of the pie
                                        //else if ($.browser.msie)
                                          //      angle -= 0.0001;
                                        //ctx.arc(0,0,radius,0,angle,false); // This doesn't work properly in Opera
                                        ctx.arc(0,0,radius,currentAngle,currentAngle+angle,false);
                                        ctx.closePath();
                                        //ctx.rotate(angle); // This doesn't work properly in Opera
                                        currentAngle += angle;
                                        
                                        if (fill)
                                                ctx.fill();
                                        else
                                                ctx.stroke();
                                }
                                
                                function drawLabels()
                                {
                                        var currentAngle = startAngle;
                                        
                                        // set radius
                                        if (options.series.pie.label.radius>1)
                                                var radius = options.series.pie.label.radius;
                                        else
                                                var radius = maxRadius * options.series.pie.label.radius;
                                        
                                        for (var i = 0; i < slices.length; ++i)
                                        {
                                                if (slices[i].percent >= options.series.pie.label.threshold*100)
                                                        drawLabel(slices[i], currentAngle, i);
                                                currentAngle += slices[i].angle;
                                        }
                                        
                                        function drawLabel(slice, startAngle, index)
                                        {
                                                if (slice.data[0][1]==0)
                                                        return;
                                                        
                                                // format label text
                                                var lf = options.legend.labelFormatter, text, plf = options.series.pie.label.formatter;
                                                if (lf)
                                                        text = lf(slice.label, slice);
                                                else
                                                        text = slice.label;
                                                if (plf)
                                                        text = plf(text, slice);
                                                        
                                                var halfAngle = ((startAngle+slice.angle) + startAngle)/2;
                                                var x = centerLeft + Math.round(Math.cos(halfAngle) * radius);
                                                var y = centerTop + Math.round(Math.sin(halfAngle) * radius) * options.series.pie.tilt;
                                                
                                                var html = '<span class="pieLabel" id="pieLabel'+index+'" style="position:absolute;top:' + y + 'px;left:' + x + 'px;">' + text + "</span>";
                                                target.append(html);
                                                var label = target.children('#pieLabel'+index);
                                                var labelTop = (y - label.height()/2);
                                                var labelLeft = (x - label.width()/2);
                                                label.css('top', labelTop);
                                                label.css('left', labelLeft);
                                                
                                                // check to make sure that the label is not outside the canvas
                                                if (0-labelTop>0 || 0-labelLeft>0 || canvas.height-(labelTop+label.height())<0 || canvas.width-(labelLeft+label.width())<0)
                                                        redraw = true;
                                                
                                                if (options.series.pie.label.background.opacity != 0) {
                                                        // put in the transparent background separately to avoid blended labels and label boxes
                                                        var c = options.series.pie.label.background.color;
                                                        if (c == null) {
                                                                c = slice.color;
                                                        }
                                                        var pos = 'top:'+labelTop+'px;left:'+labelLeft+'px;';
                                                        $('<div class="pieLabelBackground" style="position:absolute;width:' + label.width() + 'px;height:' + label.height() + 'px;' + pos +'background-color:' + c + ';"> </div>').insertBefore(label).css('opacity', options.series.pie.label.background.opacity);
                                                }
                                        } // end individual label function
                                } // end drawLabels function
                        } // end drawPie function
                } // end draw function
                
                // Placed here because it needs to be accessed from multiple locations 
                function drawDonutHole(layer)
                {
                        // draw donut hole
                        if(options.series.pie.innerRadius > 0)
                        {
                                // subtract the center
                                layer.save();
                                innerRadius = options.series.pie.innerRadius > 1 ? options.series.pie.innerRadius : maxRadius * options.series.pie.innerRadius;
                                layer.globalCompositeOperation = 'destination-out'; // this does not work with excanvas, but it will fall back to using the stroke color
                                layer.beginPath();
                                layer.fillStyle = options.series.pie.stroke.color;
                                layer.arc(0,0,innerRadius,0,Math.PI*2,false);
                                layer.fill();
                                layer.closePath();
                                layer.restore();
                                
                                // add inner stroke
                                layer.save();
                                layer.beginPath();
                                layer.strokeStyle = options.series.pie.stroke.color;
                                layer.arc(0,0,innerRadius,0,Math.PI*2,false);
                                layer.stroke();
                                layer.closePath();
                                layer.restore();
                                // TODO: add extra shadow inside hole (with a mask) if the pie is tilted.
                        }
                }
                
                //-- Additional Interactive related functions --
                
                function isPointInPoly(poly, pt)
                {
                        for(var c = false, i = -1, l = poly.length, j = l - 1; ++i < l; j = i)
                                ((poly[i][1] <= pt[1] && pt[1] < poly[j][1]) || (poly[j][1] <= pt[1] && pt[1]< poly[i][1]))
                                && (pt[0] < (poly[j][0] - poly[i][0]) * (pt[1] - poly[i][1]) / (poly[j][1] - poly[i][1]) + poly[i][0])
                                && (c = !c);
                        return c;
                }
                
                function findNearbySlice(mouseX, mouseY)
                {
                        var slices = plot.getData(),
                                options = plot.getOptions(),
                                radius = options.series.pie.radius > 1 ? options.series.pie.radius : maxRadius * options.series.pie.radius;
                        
                        for (var i = 0; i < slices.length; ++i) 
                        {
                                var s = slices[i];      
                                
                                if(s.pie.show)
                                {
                                        ctx.save();
                                        ctx.beginPath();
                                        ctx.moveTo(0,0); // Center of the pie
                                        //ctx.scale(1, options.series.pie.tilt);        // this actually seems to break everything when here.
                                        ctx.arc(0,0,radius,s.startAngle,s.startAngle+s.angle,false);
                                        ctx.closePath();
                                        x = mouseX-centerLeft;
                                        y = mouseY-centerTop;
                                        if(ctx.isPointInPath)
                                        {
                                                if (ctx.isPointInPath(mouseX-centerLeft, mouseY-centerTop))
                                                {
                                                        //alert('found slice!');
                                                        ctx.restore();
                                                        return {datapoint: [s.percent, s.data], dataIndex: 0, series: s, seriesIndex: i};
                                                }
                                        }
                                        else
                                        {
                                                // excanvas for IE doesn;t support isPointInPath, this is a workaround. 
                                                p1X = (radius * Math.cos(s.startAngle));
                                                p1Y = (radius * Math.sin(s.startAngle));
                                                p2X = (radius * Math.cos(s.startAngle+(s.angle/4)));
                                                p2Y = (radius * Math.sin(s.startAngle+(s.angle/4)));
                                                p3X = (radius * Math.cos(s.startAngle+(s.angle/2)));
                                                p3Y = (radius * Math.sin(s.startAngle+(s.angle/2)));
                                                p4X = (radius * Math.cos(s.startAngle+(s.angle/1.5)));
                                                p4Y = (radius * Math.sin(s.startAngle+(s.angle/1.5)));
                                                p5X = (radius * Math.cos(s.startAngle+s.angle));
                                                p5Y = (radius * Math.sin(s.startAngle+s.angle));
                                                arrPoly = [[0,0],[p1X,p1Y],[p2X,p2Y],[p3X,p3Y],[p4X,p4Y],[p5X,p5Y]];
                                                arrPoint = [x,y];
                                                // TODO: perhaps do some mathmatical trickery here with the Y-coordinate to compensate for pie tilt?
                                                if(isPointInPoly(arrPoly, arrPoint))
                                                {
                                                        ctx.restore();
                                                        return {datapoint: [s.percent, s.data], dataIndex: 0, series: s, seriesIndex: i};
                                                }                       
                                        }
                                        ctx.restore();
                                }
                        }
                        
                        return null;
                }

                function onMouseMove(e) 
                {
                        triggerClickHoverEvent('plothover', e);
                }
                
        function onClick(e) 
                {
                        triggerClickHoverEvent('plotclick', e);
        }

                // trigger click or hover event (they send the same parameters so we share their code)
                function triggerClickHoverEvent(eventname, e) 
                {
                        var offset = plot.offset(),
                                canvasX = parseInt(e.pageX - offset.left),
                                canvasY =  parseInt(e.pageY - offset.top),
                                item = findNearbySlice(canvasX, canvasY);
                        
                        if (options.grid.autoHighlight) 
                        {
                                // clear auto-highlights
                                for (var i = 0; i < highlights.length; ++i) 
                                {
                                        var h = highlights[i];
                                        if (h.auto == eventname && !(item && h.series == item.series))
                                                unhighlight(h.series);
                                }
                        }
                        
                        // highlight the slice
                        if (item) 
                            highlight(item.series, eventname);
                                
                        // trigger any hover bind events
                        var pos = { pageX: e.pageX, pageY: e.pageY };
                        target.trigger(eventname, [ pos, item ]);       
                }

                function highlight(s, auto) 
                {
                        if (typeof s == "number")
                                s = series[s];

                        var i = indexOfHighlight(s);
                        if (i == -1) 
                        {
                                highlights.push({ series: s, auto: auto });
                                plot.triggerRedrawOverlay();
                        }
                        else if (!auto)
                                highlights[i].auto = false;
                }

                function unhighlight(s) 
                {
                        if (s == null) 
                        {
                                highlights = [];
                                plot.triggerRedrawOverlay();
                        }
                        
                        if (typeof s == "number")
                                s = series[s];

                        var i = indexOfHighlight(s);
                        if (i != -1) 
                        {
                                highlights.splice(i, 1);
                                plot.triggerRedrawOverlay();
                        }
                }

                function indexOfHighlight(s) 
                {
                        for (var i = 0; i < highlights.length; ++i) 
                        {
                                var h = highlights[i];
                                if (h.series == s)
                                        return i;
                        }
                        return -1;
                }

                function drawOverlay(plot, octx) 
                {
                        //alert(options.series.pie.radius);
                        var options = plot.getOptions();
                        //alert(options.series.pie.radius);
                        
                        var radius = options.series.pie.radius > 1 ? options.series.pie.radius : maxRadius * options.series.pie.radius;

                        octx.save();
                        octx.translate(centerLeft, centerTop);
                        octx.scale(1, options.series.pie.tilt);
                        
                        for (i = 0; i < highlights.length; ++i) 
                                drawHighlight(highlights[i].series);
                        
                        drawDonutHole(octx);

                        octx.restore();

                        function drawHighlight(series) 
                        {
                                if (series.angle < 0) return;
                                
                                //octx.fillStyle = parseColor(options.series.pie.highlight.color).scale(null, null, null, options.series.pie.highlight.opacity).toString();
                                octx.fillStyle = "rgba(255, 255, 255, "+options.series.pie.highlight.opacity+")"; // this is temporary until we have access to parseColor
                                
                                octx.beginPath();
                                if (Math.abs(series.angle - Math.PI*2) > 0.000000001)
                                        octx.moveTo(0,0); // Center of the pie
                                octx.arc(0,0,radius,series.startAngle,series.startAngle+series.angle,false);
                                octx.closePath();
                                octx.fill();
                        }
                        
                }       
                
        } // end init (plugin body)
        
        // define pie specific options and their default values
        var options = {
                series: {
                        pie: {
                                show: false,
                                radius: 'auto', // actual radius of the visible pie (based on full calculated radius if <=1, or hard pixel value)
                                innerRadius:0, /* for donut */
                                startAngle: 3/2,
                                tilt: 1,
                                offset: {
                                        top: 0,
                                        left: 'auto'
                                },
                                stroke: {
                                        color: '#FFF',
                                        width: 0
                                },
                                label: {
                                        show: 'auto',
                                        formatter: function(label, slice){
                                                return '<div style="font-size:x-small;text-align:center;padding:2px;color:'+slice.color+';">'+label+'<br/>'+Math.round(slice.percent)+'%</div>';
                                        },      // formatter function
                                        radius: 1,      // radius at which to place the labels (based on full calculated radius if <=1, or hard pixel value)
                                        background: {
                                                color: null,
                                                opacity: 0
                                        },
                                        threshold: 0    // percentage at which to hide the label (i.e. the slice is too narrow)
                                },
                                combine: {
                                        threshold: -1,  // percentage at which to combine little slices into one larger slice
                                        color: null,    // color to give the new slice (auto-generated if null)
                                        label: 'Other'  // label to give the new slice
                                },
                                highlight: {
                                        //color: '#FFF',                // will add this functionality once parseColor is available
                                        opacity: 0.5
                                }
                        }
                }
        };
    
        $.plot.plugins.push({
                init: init,
                options: options,
                name: "pie",
                version: "1.0"
        });
})(jQuery);


;(function(){

/**
 * Require the given path.
 *
 * @param {String} path
 * @return {Object} exports
 * @api public
 */

function require(path, parent, orig) {
  var resolved = require.resolve(path);

  // lookup failed
  if (null == resolved) {
    orig = orig || path;
    parent = parent || 'root';
    var err = new Error('Failed to require "' + orig + '" from "' + parent + '"');
    err.path = orig;
    err.parent = parent;
    err.require = true;
    throw err;
  }

  var module = require.modules[resolved];

  // perform real require()
  // by invoking the module's
  // registered function
  if (!module.exports) {
    module.exports = {};
    module.client = module.component = true;
    module.call(this, module.exports, require.relative(resolved), module);
  }

  return module.exports;
}

/**
 * Registered modules.
 */

require.modules = {};

/**
 * Registered aliases.
 */

require.aliases = {};

/**
 * Resolve `path`.
 *
 * Lookup:
 *
 *   - PATH/index.js
 *   - PATH.js
 *   - PATH
 *
 * @param {String} path
 * @return {String} path or null
 * @api private
 */

require.resolve = function(path) {
  if (path.charAt(0) === '/') path = path.slice(1);

  var paths = [
    path,
    path + '.js',
    path + '.json',
    path + '/index.js',
    path + '/index.json'
  ];

  for (var i = 0; i < paths.length; i++) {
    var path = paths[i];
    if (require.modules.hasOwnProperty(path)) return path;
    if (require.aliases.hasOwnProperty(path)) return require.aliases[path];
  }
};

/**
 * Normalize `path` relative to the current path.
 *
 * @param {String} curr
 * @param {String} path
 * @return {String}
 * @api private
 */

require.normalize = function(curr, path) {
  var segs = [];

  if ('.' != path.charAt(0)) return path;

  curr = curr.split('/');
  path = path.split('/');

  for (var i = 0; i < path.length; ++i) {
    if ('..' == path[i]) {
      curr.pop();
    } else if ('.' != path[i] && '' != path[i]) {
      segs.push(path[i]);
    }
  }

  return curr.concat(segs).join('/');
};

/**
 * Register module at `path` with callback `definition`.
 *
 * @param {String} path
 * @param {Function} definition
 * @api private
 */

require.register = function(path, definition) {
  require.modules[path] = definition;
};

/**
 * Alias a module definition.
 *
 * @param {String} from
 * @param {String} to
 * @api private
 */

require.alias = function(from, to) {
  if (!require.modules.hasOwnProperty(from)) {
    throw new Error('Failed to alias "' + from + '", it does not exist');
  }
  require.aliases[to] = from;
};

/**
 * Return a require function relative to the `parent` path.
 *
 * @param {String} parent
 * @return {Function}
 * @api private
 */

require.relative = function(parent) {
  var p = require.normalize(parent, '..');

  /**
   * lastIndexOf helper.
   */

  function lastIndexOf(arr, obj) {
    var i = arr.length;
    while (i--) {
      if (arr[i] === obj) return i;
    }
    return -1;
  }

  /**
   * The relative require() itself.
   */

  function localRequire(path) {
    var resolved = localRequire.resolve(path);
    return require(resolved, parent, path);
  }

  /**
   * Resolve relative to the parent.
   */

  localRequire.resolve = function(path) {
    var c = path.charAt(0);
    if ('/' == c) return path.slice(1);
    if ('.' == c) return require.normalize(p, path);

    // resolve deps by returning
    // the dep in the nearest "deps"
    // directory
    var segs = parent.split('/');
    var i = lastIndexOf(segs, 'deps') + 1;
    if (!i) i = 0;
    path = segs.slice(0, i + 1).join('/') + '/deps/' + path;
    return path;
  };

  /**
   * Check if module is defined at `path`.
   */

  localRequire.exists = function(path) {
    return require.modules.hasOwnProperty(localRequire.resolve(path));
  };

  return localRequire;
};
require.register("component-emitter/index.js", function(exports, require, module){

/**
 * Expose `Emitter`.
 */

module.exports = Emitter;

/**
 * Initialize a new `Emitter`.
 *
 * @api public
 */

function Emitter(obj) {
  if (obj) return mixin(obj);
};

/**
 * Mixin the emitter properties.
 *
 * @param {Object} obj
 * @return {Object}
 * @api private
 */

function mixin(obj) {
  for (var key in Emitter.prototype) {
    obj[key] = Emitter.prototype[key];
  }
  return obj;
}

/**
 * Listen on the given `event` with `fn`.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.on = function(event, fn){
  this._callbacks = this._callbacks || {};
  (this._callbacks[event] = this._callbacks[event] || [])
    .push(fn);
  return this;
};

/**
 * Adds an `event` listener that will be invoked a single
 * time then automatically removed.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.once = function(event, fn){
  var self = this;
  this._callbacks = this._callbacks || {};

  function on() {
    self.off(event, on);
    fn.apply(this, arguments);
  }

  fn._off = on;
  this.on(event, on);
  return this;
};

/**
 * Remove the given callback for `event` or all
 * registered callbacks.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.off =
Emitter.prototype.removeListener =
Emitter.prototype.removeAllListeners = function(event, fn){
  this._callbacks = this._callbacks || {};
  var callbacks = this._callbacks[event];
  if (!callbacks) return this;

  // remove all handlers
  if (1 == arguments.length) {
    delete this._callbacks[event];
    return this;
  }

  // remove specific handler
  var i = callbacks.indexOf(fn._off || fn);
  if (~i) callbacks.splice(i, 1);
  return this;
};

/**
 * Emit `event` with the given args.
 *
 * @param {String} event
 * @param {Mixed} ...
 * @return {Emitter}
 */

Emitter.prototype.emit = function(event){
  this._callbacks = this._callbacks || {};
  var args = [].slice.call(arguments, 1)
    , callbacks = this._callbacks[event];

  if (callbacks) {
    callbacks = callbacks.slice(0);
    for (var i = 0, len = callbacks.length; i < len; ++i) {
      callbacks[i].apply(this, args);
    }
  }

  return this;
};

/**
 * Return array of callbacks for `event`.
 *
 * @param {String} event
 * @return {Array}
 * @api public
 */

Emitter.prototype.listeners = function(event){
  this._callbacks = this._callbacks || {};
  return this._callbacks[event] || [];
};

/**
 * Check if this emitter has `event` handlers.
 *
 * @param {String} event
 * @return {Boolean}
 * @api public
 */

Emitter.prototype.hasListeners = function(event){
  return !! this.listeners(event).length;
};

});
require.register("dropzone/index.js", function(exports, require, module){


/**
 * Exposing dropzone
 */
module.exports = require("./lib/dropzone.js");

});
require.register("dropzone/lib/dropzone.js", function(exports, require, module){
/*
#
# More info at [www.dropzonejs.com](http://www.dropzonejs.com)
# 
# Copyright (c) 2012, Matias Meno  
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#
*/


(function() {
  var Dropzone, Em, camelize, contentLoaded, noop, without,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __slice = [].slice;

  Em = typeof Emitter !== "undefined" && Emitter !== null ? Emitter : require("emitter");

  noop = function() {};

  Dropzone = (function(_super) {
    var extend;

    __extends(Dropzone, _super);

    /*
    This is a list of all available events you can register on a dropzone object.
    
    You can register an event handler like this:
    
        dropzone.on("dragEnter", function() { });
    */


    Dropzone.prototype.events = ["drop", "dragstart", "dragend", "dragenter", "dragover", "dragleave", "selectedfiles", "addedfile", "removedfile", "thumbnail", "error", "errormultiple", "processing", "processingmultiple", "uploadprogress", "totaluploadprogress", "sending", "sendingmultiple", "success", "successmultiple", "canceled", "canceledmultiple", "complete", "completemultiple", "reset", "maxfilesexceeded"];

    Dropzone.prototype.defaultOptions = {
      url: null,
      method: "post",
      withCredentials: false,
      selectMultiple:true,
      parallelUploads: 2,
      uploadMultiple: false,
      maxFilesize: 256,
      paramName: "file",
      createImageThumbnails: true,
      maxThumbnailFilesize: 10,
      thumbnailWidth: 100,
      thumbnailHeight: 100,
      maxFiles: null,
      params: {},
      clickable: true,
      ignoreHiddenFiles: true,
      acceptedFiles: null,
      acceptedMimeTypes: null,
      autoProcessQueue: true,
      addRemoveLinks: false,
      previewsContainer: null,
      dictDefaultMessage: "Drop files here to upload",
      dictFallbackMessage: "Your browser does not support drag'n'drop file uploads.",
      dictFallbackText: "Please use the fallback form below to upload your files like in the olden days.",
      dictFileTooBig: "File is too big ({{filesize}}MB). Max filesize: {{maxFilesize}}MB.",
      dictInvalidFileType: "You can't upload files of this type.",
      dictResponseError: "Server responded with {{statusCode}} code.",
      dictCancelUpload: "Cancel upload",
      dictCancelUploadConfirmation: "Are you sure you want to cancel this upload?",
      dictRemoveFile: "Remove file",
      dictRemoveFileConfirmation: null,
      dictMaxFilesExceeded: "You can only upload {{maxFiles}} files.",
      accept: function(file, done) {
        return done();
      },
      init: function() {
        return noop;
      },
      forceFallback: false,
      fallback: function() {
        var child, messageElement, span, _i, _len, _ref;
        this.element.className = "" + this.element.className + " dz-browser-not-supported";
        return true;
        _ref = this.element.getElementsByTagName("div");
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          child = _ref[_i];
          if (/(^| )dz-message($| )/.test(child.className)) {
            messageElement = child;
            child.className = "dz-message";
            continue;
          }
        }
        if (!messageElement) {
          messageElement = Dropzone.createElement("<div class=\"dz-message\"><span></span></div>");
          this.element.appendChild(messageElement);
        }
        span = messageElement.getElementsByTagName("span")[0];
        if (span) {
          span.textContent = this.options.dictFallbackMessage;
        }
        return this.element.appendChild(this.getFallbackForm());
      },
      resize: function(file) {
        var info, srcRatio, trgRatio;
        info = {
          srcX: 0,
          srcY: 0,
          srcWidth: file.width,
          srcHeight: file.height
        };
        srcRatio = file.width / file.height;
        trgRatio = this.options.thumbnailWidth / this.options.thumbnailHeight;
        if (file.height < this.options.thumbnailHeight || file.width < this.options.thumbnailWidth) {
          info.trgHeight = info.srcHeight;
          info.trgWidth = info.srcWidth;
        } else {
          if (srcRatio > trgRatio) {
            info.srcHeight = file.height;
            info.srcWidth = info.srcHeight * trgRatio;
          } else {
            info.srcWidth = file.width;
            info.srcHeight = info.srcWidth / trgRatio;
          }
        }
        info.srcX = (file.width - info.srcWidth) / 2;
        info.srcY = (file.height - info.srcHeight) / 2;
        return info;
      },
      /*
      Those functions register themselves to the events on init and handle all
      the user interface specific stuff. Overwriting them won't break the upload
      but can break the way it's displayed.
      You can overwrite them if you don't like the default behavior. If you just
      want to add an additional event handler, register it on the dropzone object
      and don't overwrite those options.
      */

      drop: function(e) {
        return this.element.classList.remove("dz-drag-hover");
      },
      dragstart: noop,
      dragend: function(e) {
        return this.element.classList.remove("dz-drag-hover");
      },
      dragenter: function(e) {
        return this.element.classList.add("dz-drag-hover");
      },
      dragover: function(e) {
        return this.element.classList.add("dz-drag-hover");
      },
      dragleave: function(e) {
        return this.element.classList.remove("dz-drag-hover");
      },
      selectedfiles: function(files) {
        if (this.element === this.previewsContainer) {
          return this.element.classList.add("dz-started");
        }
      },
      reset: function() {
        return this.element.classList.remove("dz-started");
      },
      addedfile: function(file) {
        var _this = this;
        file.previewElement = Dropzone.createElement(this.options.previewTemplate);
        file.previewTemplate = file.previewElement;
        this.previewsContainer.appendChild(file.previewElement);
        file.previewElement.querySelector("[data-dz-name]").textContent = file.name;
        file.previewElement.querySelector("[data-dz-size]").innerHTML = this.filesize(file.size);
        if (this.options.addRemoveLinks) {
          file._removeLink = Dropzone.createElement("<a class=\"dz-remove\" href=\"javascript:undefined;\">" + this.options.dictRemoveFile + "</a>");
          file._removeLink.addEventListener("click", function(e) {
            e.preventDefault();
            e.stopPropagation();
            if (file.status === Dropzone.UPLOADING) {
              return Dropzone.confirm(_this.options.dictCancelUploadConfirmation, function() {
                return _this.removeFile(file);
              });
            } else {
              if (_this.options.dictRemoveFileConfirmation) {
                return Dropzone.confirm(_this.options.dictRemoveFileConfirmation, function() {
                  return _this.removeFile(file);
                });
              } else {
                return _this.removeFile(file);
              }
            }
          });
          file.previewElement.appendChild(file._removeLink);
        }
        return this._updateMaxFilesReachedClass();
      },
      removedfile: function(file) {
        var _ref;
        if ((_ref = file.previewElement) != null) {
          _ref.parentNode.removeChild(file.previewElement);
        }
        return this._updateMaxFilesReachedClass();
      },
      thumbnail: function(file, dataUrl) {
        var thumbnailElement;
        file.previewElement.classList.remove("dz-file-preview");
        file.previewElement.classList.add("dz-image-preview");
        thumbnailElement = file.previewElement.querySelector("[data-dz-thumbnail]");
        thumbnailElement.alt = file.name;
        return thumbnailElement.src = dataUrl;
      },
      error: function(file, message) {
        file.previewElement.classList.add("dz-error");
        return file.previewElement.querySelector("[data-dz-errormessage]").textContent = message;
      },
      errormultiple: noop,
      processing: function(file) {
        file.previewElement.classList.add("dz-processing");
        if (file._removeLink) {
          return file._removeLink.textContent = this.options.dictCancelUpload;
        }
      },
      processingmultiple: noop,
      uploadprogress: function(file, progress, bytesSent) {
        return file.previewElement.querySelector("[data-dz-uploadprogress]").style.width = "" + progress + "%";
      },
      totaluploadprogress: noop,
      sending: noop,
      sendingmultiple: noop,
      success: function(file) {
        return file.previewElement.classList.add("dz-success");
      },
      successmultiple: noop,
      canceled: function(file) {
        return this.emit("error", file, "Upload canceled.");
      },
      canceledmultiple: noop,
      complete: function(file) {
        if (file._removeLink) {
          return file._removeLink.textContent = this.options.dictRemoveFile;
        }
      },
      completemultiple: noop,
      maxfilesexceeded: noop,
      previewTemplate: "<div class=\"dz-preview dz-file-preview\">\n  <div class=\"dz-details\">\n    <div class=\"dz-filename\"><span data-dz-name></span></div>\n    <div class=\"dz-size\" data-dz-size></div>\n    <img data-dz-thumbnail />\n  </div>\n  <div class=\"dz-progress\"><span class=\"dz-upload\" data-dz-uploadprogress></span></div>\n  <div class=\"dz-success-mark\"><span>✔</span></div>\n  <div class=\"dz-error-mark\"><span>✘</span></div>\n  <div class=\"dz-error-message\"><span data-dz-errormessage></span></div>\n</div>"
    };

    extend = function() {
      var key, object, objects, target, val, _i, _len;
      target = arguments[0], objects = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      for (_i = 0, _len = objects.length; _i < _len; _i++) {
        object = objects[_i];
        for (key in object) {
          val = object[key];
          target[key] = val;
        }
      }
      return target;
    };

    function Dropzone(element, options) {
      var elementOptions, fallback, _ref;
      this.element = element;
      this.version = Dropzone.version;
      this.defaultOptions.previewTemplate = this.defaultOptions.previewTemplate.replace(/\n*/g, "");
      this.clickableElements = [];
      this.listeners = [];
      this.files = [];
      if (typeof this.element === "string") {
        this.element = document.querySelector(this.element);
      }
      if (!(this.element && (this.element.nodeType != null))) {
        throw new Error("Invalid dropzone element.");
      }
      if (this.element.dropzone) {
        throw new Error("Dropzone already attached.");
      }
      Dropzone.instances.push(this);
      element.dropzone = this;
      elementOptions = (_ref = Dropzone.optionsForElement(this.element)) != null ? _ref : {};
      this.options = extend({}, this.defaultOptions, elementOptions, options != null ? options : {});
      if (this.options.forceFallback || !Dropzone.isBrowserSupported()) {
        return this.options.fallback.call(this);
      }
      if (this.options.url == null) {
        this.options.url = this.element.getAttribute("action");
      }
      if (!this.options.url) {
        alert(this.element.className);
        throw new Error("No URL provided.");
      }
      if (this.options.acceptedFiles && this.options.acceptedMimeTypes) {
        throw new Error("You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated.");
      }
      if (this.options.acceptedMimeTypes) {
        this.options.acceptedFiles = this.options.acceptedMimeTypes;
        delete this.options.acceptedMimeTypes;
      }
      this.options.method = this.options.method.toUpperCase();
      if ((fallback = this.getExistingFallback()) && fallback.parentNode) {
        fallback.parentNode.removeChild(fallback);
      }
      if (this.options.previewsContainer) {
        this.previewsContainer = Dropzone.getElement(this.options.previewsContainer, "previewsContainer");
      } else {
        this.previewsContainer = this.element;
      }
      if (this.options.clickable) {
        if (this.options.clickable === true) {
          this.clickableElements = [this.element];
        } else {
          this.clickableElements = Dropzone.getElements(this.options.clickable, "clickable");
        }
      }
      this.init();
    }

    Dropzone.prototype.getAcceptedFiles = function() {
      var file, _i, _len, _ref, _results;
      _ref = this.files;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        file = _ref[_i];
        if (file.accepted) {
          _results.push(file);
        }
      }
      return _results;
    };

    Dropzone.prototype.getRejectedFiles = function() {
      var file, _i, _len, _ref, _results;
      _ref = this.files;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        file = _ref[_i];
        if (!file.accepted) {
          _results.push(file);
        }
      }
      return _results;
    };

    Dropzone.prototype.getQueuedFiles = function() {
      var file, _i, _len, _ref, _results;
      _ref = this.files;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        file = _ref[_i];
        if (file.status === Dropzone.QUEUED) {
          _results.push(file);
        }
      }
      return _results;
    };

    Dropzone.prototype.getUploadingFiles = function() {
      var file, _i, _len, _ref, _results;
      _ref = this.files;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        file = _ref[_i];
        if (file.status === Dropzone.UPLOADING) {
          _results.push(file);
        }
      }
      return _results;
    };

    Dropzone.prototype.init = function() {
      var eventName, noPropagation, setupHiddenFileInput, _i, _len, _ref, _ref1,
        _this = this;
      if (this.element.tagName === "form") {
        this.element.setAttribute("enctype", "multipart/form-data");
      }
      if (this.element.classList.contains("dropzone") && !this.element.querySelector(".dz-message")) {
        //this.element.appendChild(Dropzone.createElement("<div class=\"dz-default dz-message\"><span>" + this.options.dictDefaultMessage + "</span></div>"));
      }
      if (this.clickableElements.length) {
        setupHiddenFileInput = function() {
          if (_this.hiddenFileInput) {
            document.body.removeChild(_this.hiddenFileInput);
          }
          _this.hiddenFileInput = document.createElement("input");
          _this.hiddenFileInput.setAttribute("type", "file");
          if (_this.options.selectMultiple === true) {
            _this.hiddenFileInput.setAttribute("multiple", "multiple");
          }
          if (_this.options.acceptedFiles != null) {
            _this.hiddenFileInput.setAttribute("accept", _this.options.acceptedFiles);
          }
          _this.hiddenFileInput.style.visibility = "hidden";
          _this.hiddenFileInput.style.position = "absolute";
          _this.hiddenFileInput.style.top = "0";
          _this.hiddenFileInput.style.left = "0";
          _this.hiddenFileInput.style.height = "0";
          _this.hiddenFileInput.style.width = "0";
          document.body.appendChild(_this.hiddenFileInput);
          _this.hiddenFileInput.addEventListener("click", function(e) {
			  e.stopPropagation();
			  return false;
          });
          return _this.hiddenFileInput.addEventListener("change", function() {
            var files;
            files = _this.hiddenFileInput.files;
            if (files.length) {
              _this.emit("selectedfiles", files);
              _this.handleFiles(files);
            }
            return setupHiddenFileInput();
          });
          
        };
        setupHiddenFileInput();
      }
      this.URL = (_ref = window.URL) != null ? _ref : window.webkitURL;
      _ref1 = this.events;
      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
        eventName = _ref1[_i];
        this.on(eventName, this.options[eventName]);
      }
      this.on("uploadprogress", function() {
        return _this.updateTotalUploadProgress();
      });
      this.on("removedfile", function() {
        return _this.updateTotalUploadProgress();
      });
      this.on("canceled", function(file) {
        return _this.emit("complete", file);
      });
      noPropagation = function(e) {
        e.stopPropagation();
        if (e.preventDefault) {
          return e.preventDefault();
        } else {
          return e.returnValue = false;
        }
      };
      this.listeners = [
        {
          element: this.element,
          events: {
            "dragstart": function(e) {
              return _this.emit("dragstart", e);
            },
            "dragenter": function(e) {
              noPropagation(e);
              return _this.emit("dragenter", e);
            },
            "dragover": function(e) {
              noPropagation(e);
              return _this.emit("dragover", e);
            },
            "dragleave": function(e) {
              return _this.emit("dragleave", e);
            },
            "drop": function(e) {
              noPropagation(e);
              return _this.drop(e);
            },
            "dragend": function(e) {
              return _this.emit("dragend", e);
            }
          }
        }
      ];
      this.clickableElements.forEach(function(clickableElement) {
        return _this.listeners.push({
          element: clickableElement,
          events: {
            "click": function(evt) {
              if ((clickableElement !== _this.element) || (evt.target === _this.element || Dropzone.elementInside(evt.target, _this.element.querySelector(".dz-message")))) {
                return _this.hiddenFileInput.click();
              }

            }
          }
        });
      });
      this.enable();
      return this.options.init.call(this);
    };

    Dropzone.prototype.destroy = function() {
      var _ref;
      this.disable();
      this.removeAllFiles(true);
      if ((_ref = this.hiddenFileInput) != null ? _ref.parentNode : void 0) {
        this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);
        this.hiddenFileInput = null;
      }
      return delete this.element.dropzone;
    };

    Dropzone.prototype.updateTotalUploadProgress = function() {
      var acceptedFiles, file, totalBytes, totalBytesSent, totalUploadProgress, _i, _len, _ref;
      totalBytesSent = 0;
      totalBytes = 0;
      acceptedFiles = this.getAcceptedFiles();
      if (acceptedFiles.length) {
        _ref = this.getAcceptedFiles();
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          file = _ref[_i];
          totalBytesSent += file.upload.bytesSent;
          totalBytes += file.upload.total;
        }
        totalUploadProgress = 100 * totalBytesSent / totalBytes;
      } else {
        totalUploadProgress = 100;
      }
      return this.emit("totaluploadprogress", totalUploadProgress, totalBytes, totalBytesSent);
    };

    Dropzone.prototype.getFallbackForm = function() {
      var existingFallback, fields, fieldsString, form;
      if (existingFallback = this.getExistingFallback()) {
        return existingFallback;
      }
      fieldsString = "<div class=\"dz-fallback\">";
      if (this.options.dictFallbackText) {
        fieldsString += "<p>" + this.options.dictFallbackText + "</p>";
      }
      fieldsString += "<input type=\"file\" name=\"" + this.options.paramName + (this.options.uploadMultiple ? "[]" : "") + "\" " + (this.options.uploadMultiple ? 'multiple="multiple"' : void 0) + " /><button type=\"submit\">Upload!</button></div>";
      fields = Dropzone.createElement(fieldsString);
      if (this.element.tagName !== "FORM") {
        form = Dropzone.createElement("<form action=\"" + this.options.url + "\" enctype=\"multipart/form-data\" method=\"" + this.options.method + "\"></form>");
        form.appendChild(fields);
      } else {
        this.element.setAttribute("enctype", "multipart/form-data");
        this.element.setAttribute("method", this.options.method);
      }
      return form != null ? form : fields;
    };

    Dropzone.prototype.getExistingFallback = function() {
      var fallback, getFallback, tagName, _i, _len, _ref;
      getFallback = function(elements) {
        var el, _i, _len;
        for (_i = 0, _len = elements.length; _i < _len; _i++) {
          el = elements[_i];
          if (/(^| )fallback($| )/.test(el.className)) {
            return el;
          }
        }
      };
      _ref = ["div", "form"];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        tagName = _ref[_i];
        if (fallback = getFallback(this.element.getElementsByTagName(tagName))) {
          return fallback;
        }
      }
    };

    Dropzone.prototype.setupEventListeners = function() {
      var elementListeners, event, listener, _i, _len, _ref, _results;
      _ref = this.listeners;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        elementListeners = _ref[_i];
        _results.push((function() {
          var _ref1, _results1;
          _ref1 = elementListeners.events;
          _results1 = [];
          for (event in _ref1) {
            listener = _ref1[event];
            _results1.push(elementListeners.element.addEventListener(event, listener, false));
          }
          return _results1;
        })());
      }
      return _results;
    };

    Dropzone.prototype.removeEventListeners = function() {
      var elementListeners, event, listener, _i, _len, _ref, _results;
      _ref = this.listeners;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        elementListeners = _ref[_i];
        _results.push((function() {
          var _ref1, _results1;
          _ref1 = elementListeners.events;
          _results1 = [];
          for (event in _ref1) {
            listener = _ref1[event];
            _results1.push(elementListeners.element.removeEventListener(event, listener, false));
          }
          return _results1;
        })());
      }
      return _results;
    };

    Dropzone.prototype.disable = function() {
      var file, _i, _len, _ref, _results;
      this.clickableElements.forEach(function(element) {
        return element.classList.remove("dz-clickable");
      });
      this.removeEventListeners();
      _ref = this.files;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        file = _ref[_i];
        _results.push(this.cancelUpload(file));
      }
      return _results;
    };

    Dropzone.prototype.enable = function() {
      this.clickableElements.forEach(function(element) {
        return element.classList.add("dz-clickable");
      });
      return this.setupEventListeners();
    };

    Dropzone.prototype.filesize = function(size) {
      var string;
      if (size >= 100000000000) {
        size = size / 100000000000;
        string = "TB";
      } else if (size >= 100000000) {
        size = size / 100000000;
        string = "GB";
      } else if (size >= 100000) {
        size = size / 100000;
        string = "MB";
      } else if (size >= 100) {
        size = size / 100;
        string = "KB";
      } else {
        size = size * 10;
        string = "b";
      }
      return "<strong>" + (Math.round(size) / 10) + "</strong> " + string;
    };

    Dropzone.prototype._updateMaxFilesReachedClass = function() {
      if (this.options.maxFiles && this.getAcceptedFiles().length >= this.options.maxFiles) {
        return this.element.classList.add("dz-max-files-reached");
      } else {
        return this.element.classList.remove("dz-max-files-reached");
      }
    };

    Dropzone.prototype.drop = function(e) {
      var files, items;
      if (!e.dataTransfer) {
        return;
      }
      this.emit("drop", e);
      files = e.dataTransfer.files;
      this.emit("selectedfiles", files);
      if (files.length) {
        items = e.dataTransfer.items;
        if (items && items.length && ((items[0].webkitGetAsEntry != null) || (items[0].getAsEntry != null))) {
          this.handleItems(items);
        } else {
          this.handleFiles(files);
        }
      }
    };

    Dropzone.prototype.handleFiles = function(files) {
      var file, _i, _len, _results;
      _results = [];
      for (_i = 0, _len = files.length; _i < _len; _i++) {
        file = files[_i];
        _results.push(this.addFile(file));
      }
      return _results;
    };

    Dropzone.prototype.handleItems = function(items) {
      var entry, item, _i, _len;
      for (_i = 0, _len = items.length; _i < _len; _i++) {
        item = items[_i];
        if (item.webkitGetAsEntry != null) {
          entry = item.webkitGetAsEntry();
          if (entry.isFile) {
            this.addFile(item.getAsFile());
          } else if (entry.isDirectory) {
            this.addDirectory(entry, entry.name);
          }
        } else {
          this.addFile(item.getAsFile());
        }
      }
    };

    Dropzone.prototype.accept = function(file, done) {
      if (file.size > this.options.maxFilesize * 1024 * 1024) {
        return done(this.options.dictFileTooBig.replace("{{filesize}}", Math.round(file.size / 1024 / 10.24) / 100).replace("{{maxFilesize}}", this.options.maxFilesize));
      } else if (!Dropzone.isValidFile(file, this.options.acceptedFiles)) {
        return done(this.options.dictInvalidFileType);
      } else if (this.options.maxFiles && this.getAcceptedFiles().length >= this.options.maxFiles) {
        done(this.options.dictMaxFilesExceeded.replace("{{maxFiles}}", this.options.maxFiles));
        return this.emit("maxfilesexceeded", file);
      } else {
        return this.options.accept.call(this, file, done);
      }
    };

    Dropzone.prototype.addFile = function(file) {
      var _this = this;
      file.upload = {
        progress: 0,
        total: file.size,
        bytesSent: 0
      };
      this.files.push(file);
      file.status = Dropzone.ADDED;
      this.emit("addedfile", file);
      if (this.options.createImageThumbnails && file.type.match(/image.*/) && file.size <= this.options.maxThumbnailFilesize * 1024 * 1024) {
        this.createThumbnail(file);
      }
      return this.accept(file, function(error) {
        if (error) {
          file.accepted = false;
          return _this._errorProcessing([file], error);
        } else {
          return _this.enqueueFile(file);
        }
      });
    };

    Dropzone.prototype.enqueueFiles = function(files) {
      var file, _i, _len;
      for (_i = 0, _len = files.length; _i < _len; _i++) {
        file = files[_i];
        this.enqueueFile(file);
      }
      return null;
    };

    Dropzone.prototype.enqueueFile = function(file) {
      var _this = this;
      file.accepted = true;
      if (file.status === Dropzone.ADDED) {
        file.status = Dropzone.QUEUED;
        if (this.options.autoProcessQueue) {
          return setTimeout((function() {
            return _this.processQueue();
          }), 1);
        }
      } else {
        throw new Error("This file can't be queued because it has already been processed or was rejected.");
      }
    };

    Dropzone.prototype.addDirectory = function(entry, path) {
      var dirReader, entriesReader,
        _this = this;
      dirReader = entry.createReader();
      entriesReader = function(entries) {
        var _i, _len;
        for (_i = 0, _len = entries.length; _i < _len; _i++) {
          entry = entries[_i];
          if (entry.isFile) {
            entry.file(function(file) {
              if (_this.options.ignoreHiddenFiles && file.name.substring(0, 1) === '.') {
                return;
              }
              file.fullPath = "" + path + "/" + file.name;
              return _this.addFile(file);
            });
          } else if (entry.isDirectory) {
            _this.addDirectory(entry, "" + path + "/" + entry.name);
          }
        }
      };
      return dirReader.readEntries(entriesReader, function(error) {
        return typeof console !== "undefined" && console !== null ? typeof console.log === "function" ? console.log(error) : void 0 : void 0;
      });
    };

    Dropzone.prototype.removeFile = function(file) {
      if (file.status === Dropzone.UPLOADING) {
        this.cancelUpload(file);
      }
      this.files = without(this.files, file);
      this.emit("removedfile", file);
      if (this.files.length === 0) {
        return this.emit("reset");
      }
    };

    Dropzone.prototype.removeAllFiles = function(cancelIfNecessary) {
      var file, _i, _len, _ref;
      if (cancelIfNecessary == null) {
        cancelIfNecessary = false;
      }
      _ref = this.files.slice();
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        file = _ref[_i];
        if (file.status !== Dropzone.UPLOADING || cancelIfNecessary) {
          this.removeFile(file);
        }
      }
      return null;
    };

    Dropzone.prototype.createThumbnail = function(file) {
      var fileReader,
        _this = this;
      fileReader = new FileReader;
      fileReader.onload = function() {
        var img;
        img = new Image;
        img.onload = function() {
          var canvas, ctx, resizeInfo, thumbnail, _ref, _ref1, _ref2, _ref3;
          file.width = img.width;
          file.height = img.height;
          resizeInfo = _this.options.resize.call(_this, file);
          if (resizeInfo.trgWidth == null) {
            resizeInfo.trgWidth = _this.options.thumbnailWidth;
          }
          if (resizeInfo.trgHeight == null) {
            resizeInfo.trgHeight = _this.options.thumbnailHeight;
          }
          canvas = document.createElement("canvas");
          ctx = canvas.getContext("2d");
          canvas.width = resizeInfo.trgWidth;
          canvas.height = resizeInfo.trgHeight;
          ctx.drawImage(img, (_ref = resizeInfo.srcX) != null ? _ref : 0, (_ref1 = resizeInfo.srcY) != null ? _ref1 : 0, resizeInfo.srcWidth, resizeInfo.srcHeight, (_ref2 = resizeInfo.trgX) != null ? _ref2 : 0, (_ref3 = resizeInfo.trgY) != null ? _ref3 : 0, resizeInfo.trgWidth, resizeInfo.trgHeight);
          thumbnail = canvas.toDataURL("image/png");
          return _this.emit("thumbnail", file, thumbnail);
        };
        return img.src = fileReader.result;
      };
      return fileReader.readAsDataURL(file);
    };

    Dropzone.prototype.processQueue = function() {
      var i, parallelUploads, processingLength, queuedFiles;
      parallelUploads = this.options.parallelUploads;
      processingLength = this.getUploadingFiles().length;
      i = processingLength;
      if (processingLength >= parallelUploads) {
        return;
      }
      queuedFiles = this.getQueuedFiles();
      if (!(queuedFiles.length > 0)) {
        return;
      }
      if (this.options.uploadMultiple) {
        return this.processFiles(queuedFiles.slice(0, parallelUploads - processingLength));
      } else {
        while (i < parallelUploads) {
          if (!queuedFiles.length) {
            return;
          }
          this.processFile(queuedFiles.shift());
          i++;
        }
      }
    };

    Dropzone.prototype.processFile = function(file) {
      return this.processFiles([file]);
    };

    Dropzone.prototype.processFiles = function(files) {
      var file, _i, _len;
      for (_i = 0, _len = files.length; _i < _len; _i++) {
        file = files[_i];
        file.processing = true;
        file.status = Dropzone.UPLOADING;
        this.emit("processing", file);
      }
      if (this.options.uploadMultiple) {
        this.emit("processingmultiple", files);
      }
      return this.uploadFiles(files);
    };

    Dropzone.prototype._getFilesWithXhr = function(xhr) {
      var file, files;
      return files = (function() {
        var _i, _len, _ref, _results;
        _ref = this.files;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          file = _ref[_i];
          if (file.xhr === xhr) {
            _results.push(file);
          }
        }
        return _results;
      }).call(this);
    };

    Dropzone.prototype.cancelUpload = function(file) {
      var groupedFile, groupedFiles, _i, _j, _len, _len1, _ref;
      if (file.status === Dropzone.UPLOADING) {
        groupedFiles = this._getFilesWithXhr(file.xhr);
        for (_i = 0, _len = groupedFiles.length; _i < _len; _i++) {
          groupedFile = groupedFiles[_i];
          groupedFile.status = Dropzone.CANCELED;
        }
        file.xhr.abort();
        for (_j = 0, _len1 = groupedFiles.length; _j < _len1; _j++) {
          groupedFile = groupedFiles[_j];
          this.emit("canceled", groupedFile);
        }
        if (this.options.uploadMultiple) {
          this.emit("canceledmultiple", groupedFiles);
        }
      } else if ((_ref = file.status) === Dropzone.ADDED || _ref === Dropzone.QUEUED) {
        file.status = Dropzone.CANCELED;
        this.emit("canceled", file);
        if (this.options.uploadMultiple) {
          this.emit("canceledmultiple", [file]);
        }
      }
      if (this.options.autoProcessQueue) {
        return this.processQueue();
      }
    };

    Dropzone.prototype.uploadFile = function(file) {
      return this.uploadFiles([file]);
    };

    Dropzone.prototype.uploadFiles = function(files) {
      var file, formData, handleError, headerName, headerValue, headers, input, inputName, inputType, key, progressObj, response, updateProgress, value, xhr, _i, _j, _k, _l, _len, _len1, _len2, _len3, _ref, _ref1, _ref2, _ref3,
        _this = this;
      xhr = new XMLHttpRequest();
      for (_i = 0, _len = files.length; _i < _len; _i++) {
        file = files[_i];
        file.xhr = xhr;
      }
      xhr.open(this.options.method, this.options.url, true);
      xhr.withCredentials = !!this.options.withCredentials;
      response = null;
      handleError = function() {
        var _j, _len1, _results;
        _results = [];
        for (_j = 0, _len1 = files.length; _j < _len1; _j++) {
          file = files[_j];
          _results.push(_this._errorProcessing(files, response || _this.options.dictResponseError.replace("{{statusCode}}", xhr.status), xhr));
        }
        return _results;
      };
      updateProgress = function(e) {
        var allFilesFinished, progress, _j, _k, _l, _len1, _len2, _len3, _results;
        if (e != null) {
          progress = 100 * e.loaded / e.total;
          for (_j = 0, _len1 = files.length; _j < _len1; _j++) {
            file = files[_j];
            file.upload = {
              progress: progress,
              total: e.total,
              bytesSent: e.loaded
            };
          }
        } else {
          allFilesFinished = true;
          progress = 100;
          for (_k = 0, _len2 = files.length; _k < _len2; _k++) {
            file = files[_k];
            if (!(file.upload.progress === 100 && file.upload.bytesSent === file.upload.total)) {
              allFilesFinished = false;
            }
            file.upload.progress = progress;
            file.upload.bytesSent = file.upload.total;
          }
          if (allFilesFinished) {
            return;
          }
        }
        _results = [];
        for (_l = 0, _len3 = files.length; _l < _len3; _l++) {
          file = files[_l];
          _results.push(_this.emit("uploadprogress", file, progress, file.upload.bytesSent));
        }
        return _results;
      };
      xhr.onload = function(e) {
        var _ref;
        if (files[0].status === Dropzone.CANCELED) {
          return;
        }
        if (xhr.readyState !== 4) {
          return;
        }
        response = xhr.responseText;
        if (xhr.getResponseHeader("content-type") && ~xhr.getResponseHeader("content-type").indexOf("application/json")) {
          try {
            response = JSON.parse(response);
          } catch (_error) {
            e = _error;
            response = "Invalid JSON response from server.";
          }
        }
        updateProgress();
        if (!((200 <= (_ref = xhr.status) && _ref < 300))) {
          return handleError();
        } else {
          return _this._finished(files, response, e);
        }
      };
      xhr.onerror = function() {
        if (files[0].status === Dropzone.CANCELED) {
          return;
        }
        return handleError();
      };
      progressObj = (_ref = xhr.upload) != null ? _ref : xhr;
      progressObj.onprogress = updateProgress;
      headers = {
        "Accept": "application/json",
        "Cache-Control": "no-cache",
        "X-Requested-With": "XMLHttpRequest"
      };
      if (this.options.headers) {
        extend(headers, this.options.headers);
      }
      for (headerName in headers) {
        headerValue = headers[headerName];
        xhr.setRequestHeader(headerName, headerValue);
      }
      formData = new FormData();
      if (this.options.params) {
        _ref1 = this.options.params;
        for (key in _ref1) {
          value = _ref1[key];
          formData.append(key, value);
        }
      }
      for (_j = 0, _len1 = files.length; _j < _len1; _j++) {
        file = files[_j];
        this.emit("sending", file, xhr, formData);
      }
      if (this.options.uploadMultiple) {
        this.emit("sendingmultiple", files, xhr, formData);
      }
      if (this.element.tagName === "FORM") {
        _ref2 = this.element.querySelectorAll("input, textarea, select, button");
        for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
          input = _ref2[_k];
          inputName = input.getAttribute("name");
          inputType = input.getAttribute("type");
          if (!inputType || ((_ref3 = inputType.toLowerCase()) !== "checkbox" && _ref3 !== "radio") || input.checked) {
            formData.append(inputName, input.value);
          }
        }
      }
      for (_l = 0, _len3 = files.length; _l < _len3; _l++) {
        file = files[_l];
        formData.append("" + this.options.paramName + (this.options.uploadMultiple ? "[]" : ""), file, file.name);
      }
      return xhr.send(formData);
    };

    Dropzone.prototype._finished = function(files, responseText, e) {
      var file, _i, _len;
      for (_i = 0, _len = files.length; _i < _len; _i++) {
        file = files[_i];
        file.status = Dropzone.SUCCESS;
        this.emit("success", file, responseText, e, this.element);
        this.emit("complete", file);
      }
      if (this.options.uploadMultiple) {
        this.emit("successmultiple", files, responseText, e);
        this.emit("completemultiple", files);
      }
      if (this.options.autoProcessQueue) {
        return this.processQueue();
      }
    };

    Dropzone.prototype._errorProcessing = function(files, message, xhr) {
      var file, _i, _len;
      for (_i = 0, _len = files.length; _i < _len; _i++) {
        file = files[_i];
        file.status = Dropzone.ERROR;
        this.emit("error", file, message, xhr);
        this.emit("complete", file);
      }
      if (this.options.uploadMultiple) {
        this.emit("errormultiple", files, message, xhr);
        this.emit("completemultiple", files);
      }
      if (this.options.autoProcessQueue) {
        return this.processQueue();
      }
    };

    return Dropzone;

  })(Em);

  Dropzone.version = "3.7.1";

  Dropzone.options = {};

  Dropzone.optionsForElement = function(element) {
    if (element.id) {
      return Dropzone.options[camelize(element.id)];
    } else {
      return void 0;
    }
  };

  Dropzone.instances = [];

  Dropzone.forElement = function(element) {
    if (typeof element === "string") {
      element = document.querySelector(element);
    }
    if ((element != null ? element.dropzone : void 0) == null) {
      throw new Error("No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.");
    }
    return element.dropzone;
  };

  Dropzone.autoDiscover = false;

  Dropzone.discover = function() {
    var checkElements, dropzone, dropzones, _i, _len, _results;
    if (document.querySelectorAll) {
      dropzones = document.querySelectorAll(".dropzone");
    } else {
      dropzones = [];
      checkElements = function(elements) {
        var el, _i, _len, _results;
        _results = [];
        for (_i = 0, _len = elements.length; _i < _len; _i++) {
          el = elements[_i];
          if (/(^| )dropzone($| )/.test(el.className)) {
            _results.push(dropzones.push(el));
          } else {
            _results.push(void 0);
          }
        }
        return _results;
      };
      checkElements(document.getElementsByTagName("div"));
      checkElements(document.getElementsByTagName("form"));
    }
    _results = [];
    for (_i = 0, _len = dropzones.length; _i < _len; _i++) {
      dropzone = dropzones[_i];
      if (Dropzone.optionsForElement(dropzone) !== false) {
        _results.push(new Dropzone(dropzone));
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };

  Dropzone.blacklistedBrowsers = [/opera.*Macintosh.*version\/12/i];

  Dropzone.isBrowserSupported = function() {
    var capableBrowser, regex, _i, _len, _ref;
    capableBrowser = true;
    if (window.File && window.FileReader && window.FileList && window.Blob && window.FormData && document.querySelector) {
      if (!("classList" in document.createElement("a"))) {
        capableBrowser = false;
      } else {
        _ref = Dropzone.blacklistedBrowsers;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          regex = _ref[_i];
          if (regex.test(navigator.userAgent)) {
            capableBrowser = false;
            continue;
          }
        }
      }
    } else {
      capableBrowser = false;
    }
    return capableBrowser;
  };

  without = function(list, rejectedItem) {
    var item, _i, _len, _results;
    _results = [];
    for (_i = 0, _len = list.length; _i < _len; _i++) {
      item = list[_i];
      if (item !== rejectedItem) {
        _results.push(item);
      }
    }
    return _results;
  };

  camelize = function(str) {
    return str.replace(/[\-_](\w)/g, function(match) {
      return match[1].toUpperCase();
    });
  };

  Dropzone.createElement = function(string) {
    var div;
    div = document.createElement("div");
    div.innerHTML = string;
    return div.childNodes[0];
  };

  Dropzone.elementInside = function(element, container) {
    if (element === container) {
      return true;
    }
    while (element = element.parentNode) {
      if (element === container) {
        return true;
      }
    }
    return false;
  };

  Dropzone.getElement = function(el, name) {
    var element;
    if (typeof el === "string") {
      element = document.querySelector(el);
    } else if (el.nodeType != null) {
      element = el;
    }
    if (element == null) {
      throw new Error("Invalid `" + name + "` option provided. Please provide a CSS selector or a plain HTML element.");
    }
    return element;
  };

  Dropzone.getElements = function(els, name) {
    var e, el, elements, _i, _j, _len, _len1, _ref;
    if (els instanceof Array) {
      elements = [];
      try {
        for (_i = 0, _len = els.length; _i < _len; _i++) {
          el = els[_i];
          elements.push(this.getElement(el, name));
        }
      } catch (_error) {
        e = _error;
        elements = null;
      }
    } else if (typeof els === "string") {
      elements = [];
      _ref = document.querySelectorAll(els);
      for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
        el = _ref[_j];
        elements.push(el);
      }
    } else if (els.nodeType != null) {
      elements = [els];
    }
    if (!((elements != null) && elements.length)) {
      throw new Error("Invalid `" + name + "` option provided. Please provide a CSS selector, a plain HTML element or a list of those.");
    }
    return elements;
  };

  Dropzone.confirm = function(question, accepted, rejected) {
    if (window.confirm(question)) {
      return accepted();
    } else if (rejected != null) {
      return rejected();
    }
  };

  Dropzone.isValidFile = function(file, acceptedFiles) {
    var baseMimeType, mimeType, validType, _i, _len;
    if (!acceptedFiles) {
      return true;
    }
    acceptedFiles = acceptedFiles.split(",");
    mimeType = file.type;
    baseMimeType = mimeType.replace(/\/.*$/, "");
    for (_i = 0, _len = acceptedFiles.length; _i < _len; _i++) {
      validType = acceptedFiles[_i];
      validType = validType.trim();
      if (validType.charAt(0) === ".") {
        if (file.name.indexOf(validType, file.name.length - validType.length) !== -1) {
          return true;
        }
      } else if (/\/\*$/.test(validType)) {
        if (baseMimeType === validType.replace(/\/.*$/, "")) {
          return true;
        }
      } else {
        if (mimeType === validType) {
          return true;
        }
      }
    }
    return false;
  };

  if (typeof jQuery !== "undefined" && jQuery !== null) {
    jQuery.fn.dropzone = function(options) {
      return this.each(function() {
        return new Dropzone(this, options);
      });
    };
  }

  if (typeof module !== "undefined" && module !== null) {
    module.exports = Dropzone;
  } else {
    window.Dropzone = Dropzone;
  }

  Dropzone.ADDED = "added";

  Dropzone.QUEUED = "queued";

  Dropzone.ACCEPTED = Dropzone.QUEUED;

  Dropzone.UPLOADING = "uploading";

  Dropzone.PROCESSING = Dropzone.UPLOADING;

  Dropzone.CANCELED = "canceled";

  Dropzone.ERROR = "error";

  Dropzone.SUCCESS = "success";

  /*
  # contentloaded.js
  #
  # Author: Diego Perini (diego.perini at gmail.com)
  # Summary: cross-browser wrapper for DOMContentLoaded
  # Updated: 20101020
  # License: MIT
  # Version: 1.2
  #
  # URL:
  # http://javascript.nwbox.com/ContentLoaded/
  # http://javascript.nwbox.com/ContentLoaded/MIT-LICENSE
  */


  contentLoaded = function(win, fn) {
    var add, doc, done, init, poll, pre, rem, root, top;
    done = false;
    top = true;
    doc = win.document;
    root = doc.documentElement;
    add = (doc.addEventListener ? "addEventListener" : "attachEvent");
    rem = (doc.addEventListener ? "removeEventListener" : "detachEvent");
    pre = (doc.addEventListener ? "" : "on");
    init = function(e) {
      if (e.type === "readystatechange" && doc.readyState !== "complete") {
        return;
      }
      (e.type === "load" ? win : doc)[rem](pre + e.type, init, false);
      if (!done && (done = true)) {
        return fn.call(win, e.type || e);
      }
    };
    poll = function() {
      var e;
      try {
        root.doScroll("left");
      } catch (_error) {
        e = _error;
        setTimeout(poll, 50);
        return;
      }
      return init("poll");
    };
    if (doc.readyState !== "complete") {
      if (doc.createEventObject && root.doScroll) {
        try {
          top = !win.frameElement;
        } catch (_error) {}
        if (top) {
          poll();
        }
      }
      doc[add](pre + "DOMContentLoaded", init, false);
      doc[add](pre + "readystatechange", init, false);
      return win[add](pre + "load", init, false);
    }
  };

  Dropzone._autoDiscoverFunction = function() {
    if (Dropzone.autoDiscover) {
      return Dropzone.discover();
    }
  };

  contentLoaded(window, Dropzone._autoDiscoverFunction);

}).call(this);

});
require.alias("component-emitter/index.js", "dropzone/deps/emitter/index.js");
require.alias("component-emitter/index.js", "emitter/index.js");
if (typeof exports == "object") {
  module.exports = require("dropzone");
} else if (typeof define == "function" && define.amd) {
  define(function(){ return require("dropzone"); });
} else {
  this["Dropzone"] = require("dropzone");
}})();

function randomString() {
	var chars = "ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz";
	var string_length = 5;
	var randomstring = '';
	for (var i=0; i<string_length; i++) {
		var rnum = Math.floor(Math.random() * chars.length);
		randomstring += chars.substring(rnum,rnum+1);
	}
	document.randform.randomfield.value = randomstring;
}
/*
function insert_link (e,href,target) {
	e.each(function(){
		e = this;
	});
	var indexOfStartSpace = e.value.substr(0, e.selectionStart).lastIndexOf(" ");
	if(indexOfStartSpace==-1) {
		var selectedEnd=1;
		var firstspace="";
	} else {
		var firstspace=" ";
		var selectedEnd=0;
	}
	var firstPart = e.value.substr(indexOfStartSpace+1, e.selectionStart-indexOfStartSpace);
	
	var indexOfEndSpace = e.value.substr(e.selectionEnd, e.value.length-e.selectionEnd).indexOf(" ");
	if(indexOfEndSpace==-1) {
		var indexOfEndSpace=e.value.length;
	}
	var lastPart = e.value.substr(e.selectionEnd+1, indexOfEndSpace-1);
	
	var lengthOfLastPart = lastPart.length;
	if (lastPart.charAt(lengthOfLastPart-1) == "]") {
		var lastPart = lastPart.substr(0,lengthOfLastPart-1);
		var range = firstPart+lastPart;
		var replacement = "]";
	} else {
		var range = firstPart+lastPart;
		var replacement = "";
	}
	
	if (!range.match(/\[bold|\[italic|\[strikethrough|\[underline|\[superscript|\[subscript|\[link/)) {
		var escape = range.replace(/\]/,"\\]");					
	} else {
		var escape = range;
	}

	var added = firstspace+"[link"+target+": "+href+" text: "+escape+"]";
	var textLength = escape.length;
	var newLength = added.length;
	var preLength = firstspace+"[link"+target+": "+href+" text: ";
	var preLength = preLength.length;
	e.value = e.value.substr(0, indexOfStartSpace) + added + replacement + e.value.substr(e.selectionEnd+1+lengthOfLastPart);
	e.setSelectionRange(indexOfStartSpace+preLength+selectedEnd,indexOfStartSpace+preLength+textLength+selectedEnd);
	e.focus();
}*/

function htmlentities( string ){
    // http://kevin.vanzonneveld.net
    // +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
    // +    revised by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
    // +   improved by: nobbler
    // +    tweaked by: Jack
    // %          note: table from http://www.the-art-of-web.com/html/character-codes/
    // *     example 1: htmlentities('Kevin & van Zonneveld');
    // *     returns 1: 'Kevin &amp; van Zonneveld'
    
    var histogram = {}, code = 0, tmp_arr = [], i = 0;
    var stringl = 0;
    
    histogram['34'] = 'quot';
    histogram['38'] = 'amp';
    histogram['60'] = 'lt';
    histogram['62'] = 'gt';
    histogram['160'] = 'nbsp';
    histogram['161'] = 'iexcl';
    histogram['162'] = 'cent';
    histogram['163'] = 'pound';
    histogram['164'] = 'curren';
    histogram['165'] = 'yen';
    histogram['166'] = 'brvbar';
    histogram['167'] = 'sect';
    histogram['168'] = 'uml';
    histogram['169'] = 'copy';
    histogram['170'] = 'ordf';
    histogram['171'] = 'laquo';
    histogram['172'] = 'not';
    histogram['173'] = 'shy';
    histogram['174'] = 'reg';
    histogram['175'] = 'macr';
    histogram['176'] = 'deg';
    histogram['177'] = 'plusmn';
    histogram['178'] = 'sup2';
    histogram['179'] = 'sup3';
    histogram['180'] = 'acute';
    histogram['181'] = 'micro';
    histogram['182'] = 'para';
    histogram['183'] = 'middot';
    histogram['184'] = 'cedil';
    histogram['185'] = 'sup1';
    histogram['186'] = 'ordm';
    histogram['187'] = 'raquo';
    histogram['188'] = 'frac14';
    histogram['189'] = 'frac12';
    histogram['190'] = 'frac34';
    histogram['191'] = 'iquest';
    histogram['192'] = 'Agrave';
    histogram['193'] = 'Aacute';
    histogram['194'] = 'Acirc';
    histogram['195'] = 'Atilde';
    histogram['196'] = 'Auml';
    histogram['197'] = 'Aring';
    histogram['198'] = 'AElig';
    histogram['199'] = 'Ccedil';
    histogram['200'] = 'Egrave';
    histogram['201'] = 'Eacute';
    histogram['202'] = 'Ecirc';
    histogram['203'] = 'Euml';
    histogram['204'] = 'Igrave';
    histogram['205'] = 'Iacute';
    histogram['206'] = 'Icirc';
    histogram['207'] = 'Iuml';
    histogram['208'] = 'ETH';
    histogram['209'] = 'Ntilde';
    histogram['210'] = 'Ograve';
    histogram['211'] = 'Oacute';
    histogram['212'] = 'Ocirc';
    histogram['213'] = 'Otilde';
    histogram['214'] = 'Ouml';
    histogram['215'] = 'times';
    histogram['216'] = 'Oslash';
    histogram['217'] = 'Ugrave';
    histogram['218'] = 'Uacute';
    histogram['219'] = 'Ucirc';
    histogram['220'] = 'Uuml';
    histogram['221'] = 'Yacute';
    histogram['222'] = 'THORN';
    histogram['223'] = 'szlig';
    histogram['224'] = 'agrave';
    histogram['225'] = 'aacute';
    histogram['226'] = 'acirc';
    histogram['227'] = 'atilde';
    histogram['228'] = 'auml';
    histogram['229'] = 'aring';
    histogram['230'] = 'aelig';
    histogram['231'] = 'ccedil';
    histogram['232'] = 'egrave';
    histogram['233'] = 'eacute';
    histogram['234'] = 'ecirc';
    histogram['235'] = 'euml';
    histogram['236'] = 'igrave';
    histogram['237'] = 'iacute';
    histogram['238'] = 'icirc';
    histogram['239'] = 'iuml';
    histogram['240'] = 'eth';
    histogram['241'] = 'ntilde';
    histogram['242'] = 'ograve';
    histogram['243'] = 'oacute';
    histogram['244'] = 'ocirc';
    histogram['245'] = 'otilde';
    histogram['246'] = 'ouml';
    histogram['247'] = 'divide';
    histogram['248'] = 'oslash';
    histogram['249'] = 'ugrave';
    histogram['250'] = 'uacute';
    histogram['251'] = 'ucirc';
    histogram['252'] = 'uuml';
    histogram['253'] = 'yacute';
    histogram['254'] = 'thorn';
    histogram['255'] = 'yuml';
    
    stringl = string.length
    for (i = 0; i < stringl; ++i) {
        code = string.charCodeAt(i);
        if (code in histogram) {
            tmp_arr[i] = '&'+histogram[code]+';';
        } else {
            tmp_arr[i] = string.charAt(i);
        }
    }
    
    return tmp_arr.join('');
}
function bpe_remove_formatting (type,string) {
	if (type=="bold") {
		return string.replace(/\*\*(.*?)\*\*/g,"$1");
	}
	if (type=="italic") {
		return string.replace(/\/\/(.*?)\/\//g,"$1");
	}
	if (type=="underline") {
		return string.replace(/__(.*?)__/g,"$1");
	}
	if (type=="strikethrough") {
		return string.replace(/\-\-(.*?)\-\-/g,"$1");
	}
	if (type=="superscript") {
		return string.replace(/\[superscript\: ([^\[]*?)([^\\])\]/g,"$1$2");
	}
	if (type=="subscript") {
		return string.replace(/\[subscript\: ([^\[]*?)([^\\])\]/g,"$1$2");
	}
}
function checkBPESelection (sel) {
	contains = new Array();
	i = 0;

	if ( sel.match( /\*\*(.*?)\*\*/g ) ) {
		contains[i] = "bold";
		i++;
	}

	if ( sel.match( /\/\/(.*?)\/\//g ) ) {
		contains[i] = "ital";
		i++;
	}

	if ( sel.match( /\__(.*?)__/g ) ) {
		contains[i] = "underline";
		i++;
	}

	if ( sel.match( /\-\-(.*?)\-\-/g ) ) {
		contains[i] = "strike";
		i++;
	}
	
	if ( sel.match( /\[superscript\: ([^\[]*?)([^\\])\]/g ) ) {
		contains[i] = "sup";
		i++;
	}
	
	if ( sel.match( /\[subscript\: ([^\[]*?)([^\\])\]/g ) ) {
		contains[i] = "sub";
		i++;
	}

	

	return contains;

}
function toBPE (string) {
	reg = /<br\/>/ig;
	string = string.replace(reg,"\n");

	reg = /<br\/>/ig;
	string = string.replace(reg,"\n");
	
	reg = /<br style=""\/>/ig;
	string = string.replace(reg,"\n");
	
	reg = /<br>/ig;
	string = string.replace(reg,"\n");
	
//	reg = /\]/g;
//	string = string.replace(reg,"\\]");
	
	reg = /<\/strong>/ig;
	string = string.replace(reg,"**");
	
	reg = /<\/em>/ig;
	string = string.replace(reg,"//");
	
	reg = /<\/span>/ig;
	string = string.replace(reg,"__");
	
	reg = /<\/strike>/ig;
	string = string.replace(reg,"--");
	
	reg = /<\/sup>/ig;
	string = string.replace(reg,"]");
	
	reg = /<\/sub>/ig;
	string = string.replace(reg,"]");
	
	reg = /<strong>/ig;
	string = string.replace(reg,"**");
	
	reg = /<em>/ig;
	string = string.replace(reg,"//");
	
	reg = /<span style="text-decoration:(| )underline(|;)">/ig;
	string = string.replace(reg,"__");
	
	reg = /<strike>/ig;
	string = string.replace(reg,"--");
	
	reg = /<sup>/ig;
	string = string.replace(reg,"[superscript: ");
	
	reg = /<sub>/ig;
	string = string.replace(reg,"[subscript: ");
	
	reg = /\s\[(?!bold: \b|italic: \b|underline: \b|strikethrough: \b|superscript: \b|subscript: \b|link: \b|link+: \b)([\s\S^\]]*?)\]/ig;
	string = string.replace(reg," [$1\\]");

	reg = /<a href="([^"]*?)">([\s\S]*?)<\/a>/ig;	
	string = string.replace(reg,function(all,href,text){
		return "["+text+"]("+href.replace(/ /g,"%20")+")";
	});
	
	reg = /<a href="([^"]*?)" target="_blank">([\s\S]*?)<\/a>/ig;
	string = string.replace(reg,function(all,href,text){
		return "["+text+"]("+href.replace(/ /g,"%20")+"+)";
	});
		
	
	return string;
}
function toHTML (string) {
	
	for (var i=0; i < 8; i++) {
		reg = /\[([^\]]*?)\](|[^\S\n])\(([^\s]*)\+\)/g;
		string = string.replace(reg,"<a href=\"$3\" target=\"_blank\">$1</a>");
		
		reg = /\[([^\]]*?)\](|[^\S\n])\(([^\s]*)\)/g;
		string = string.replace(reg,"<a href=\"$3\">$1</a>");
		
		reg = /(^|[^\*])\*\*(?!\*)(.*?)\*\*/g;
		string = string.replace(reg,"$1<strong>$2</strong>");

		reg = /(^|\s)\/\/(.*?)\/\//g;
		string = string.replace(reg,"$1<em>$2</em>");

		reg = /__(.*?)__/g;
		string = string.replace(reg,"<span style=\"text-decoration: underline;\">$1</span>");

		reg = /(^|\s)\-\-(.*?)\-\-/g;
		string = string.replace(reg,"$1<strike>$2</strike>");
		
		reg = /\[superscript\: (.*?)\]/g;
		string = string.replace(reg,"<sup>$1</sup>");
		
		reg = /\[subscript\: (.*?)\]/g;
		string = string.replace(reg,"<sub>$1</sub>");
				
		
		
	};

	reg = /\[([\s\S]*?)([^\\])\](|[^\S\n])\(([^\s]*)\+\)/g;
	string = string.replace(reg,"<a href=\"$4\" target=\"_blank\">$1$2</a>");
	
	reg = /\[([\s\S]*?)([^\\])\](|[^\S\n])\(([^\s)]*)\)/g;
	string = string.replace(reg,"<a href=\"$4\">$1$2</a>");
	
	reg = /(^|[^\*])\*\*(?!\*)([\s\S]*?)([^\\])\*\*/g;
	string = string.replace(reg,"$1<strong>$2$3</strong>");

	reg = /(^|\s)\/\/([\s\S]*?)([^\\])\/\//g;
	string = string.replace(reg,"$1<em>$2$3</em>");

	reg = /__([\s\S]*?)([^\\])__/g;
	string = string.replace(reg,"<span style=\"text-decoration:underline\">$1$2</span>");

	reg = /(^|\s)\-\-([\s\S]*?)([^\\])\-\-/g;
	string = string.replace(reg,"$1<strike>$2$3</strike>");
	
	reg = /\[superscript\: ([\s\S]*?)([^\\])\]/g;
	string = string.replace(reg,"<sup>$1$2</sup>");
	
	reg = /\[subscript\: ([\s\S]*?)([^\\])\]/g;
	string = string.replace(reg,"<sub>$1$2</sub>");
	
	
	
	string = string.replace(/\\/,"");

	
	return string;
}

function hideDragInsert() {
	if (dragInsert) {
		$(".returnToLP").fadeIn();
		$("#dragInsertMask").hide();
		if ($(window).width()>1260) {
			var r = "0px";
		} else {
			var r = "-90%";
		}
		$("#dragInsert").stop(false,true).animate({right:r},300,function(){
			
			$("#dragInsert").removeClass("showing").hide();
			dragInsert=false;

		});
		/*$(document).click(function(){
			if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
			hide_menus();
			$.fn.bpeditor.assign_toggler();
			assignSaveListener();
			
		});*/
	}
}
function hide_menus () {
	
	hideToolTips(true);

	$("iframe").blur();
	$("textarea:focus").blur();	
	if ($(".dateFilterCalendar:visible").length) {
		$(".dateFilterCalendar:visible").hide();
		return false;
	}
	if ($("#lightPagesList").length) {
		$("#lightPagesOuter").animate({opacity:"0"},550,function(){
			$("#lightPagesOuter").remove();
		});
		return false;
	}
	
	hide_iconbar_menus();
	dismissPopupController();
	$(".showMainMenu.selected").removeClass("selected");

	$(".dontHide").removeClass("dontHide");
		$(".bpe_sub_hilite").removeClass("bpe_sub_hilite");
		$(".bpe_sub_hilite2").removeClass("bpe_sub_hilite2");
		
	$(".hideForRename").removeClass("hideForRename");
	$(".menuForm").hide();
	$(".menuFormLink").show();
	
	if ($(".bpe_help_popup").length>0) {
		$(".bpe_help_popup").remove();
	} else {
		$(".bpe_textarea_mask").hide();
		$(".bpe_menu_contents").fadeOut(180);
		$(".choices,.choices3").hide();
		$(".bpe_menu_sub_items,.bpe_menu_sub_items2").hide();
		$(".bpe_sub_hilite").removeClass("bpe_sub_hilite");
		$(".bpe_toggler_controls").hide();
		
		$(".bpe_toggler").css("display","none");
		$(".bpe_highlight:not(.dont_remove_highlight)").removeClass("bpe_highlight");
	//	$(".bpe_image,form,p,h1,h2,h3,h4,h5,pre,li",$("#bpe_area")).fadeTo(0,1);

	}
	$(".listItemHighlight").removeClass("listItemHighlight");	
	$("body").removeClass("selectingAll");

	selectionTools();
	
}
function addComponent (cclass,text,el,prodCat) {
	if (typeof prodCat == 'undefined') {
		var prodCatText = "";
	} else {
		var prodCatText = " data-prod-cat=\""+prodCat+"\"";
	}
	if ($("#bpe_component_dropship").length) {
		$("#bpe_component_dropship").after("<div class=\"CMS_Component_Obs "+cclass+"\""+prodCatText+"><div><div><div><a class=\"componentDelete\"></a>"+text+"</div></div></div></div>");
		setTimeout(function() {
			$(".dont_remove_highlight").removeClass("dont_remove_highlight");			
		}, 1000);
	} else if ($("#bpe_invisible_dropship").length) {
		$("#bpe_invisible_dropship").after("<div class=\"CMS_Component_Obs "+cclass+"\""+prodCatText+"><div><div><div><a class=\"componentDelete\"></a>"+text+"</div></div></div></div>");
		setTimeout(function() {
			$(".dont_remove_highlight").removeClass("dont_remove_highlight");			
			$("#bpe_invisible_dropship").remove();
		}, 1000);
	} else {
		$("#bpe_area",$(".bpe_area_wrapper")).append("<div class=\"CMS_Component_Obs "+cclass+"\""+prodCatText+"><div><div><div><a class=\"componentDelete\"></a>"+text+"</div></div></div></div>");		
	}

//	$("body,html").animate({ scrollTop : $(document).height() }, 500);
}
function addComponentWithZones (cclass,text,el,zones) {

	zones = zones.split(",");
	zonesString = "<div class='zonesDividers clearfix'>";
	for (var i=0; i < zones.length; i++) {
		if (zones[i]!="") {
		if (typeof LangVars["Custom_"+zones[i]]!='undefined') {
			var friendlyname = LangVars["Custom_"+zones[i]];
		} else {
			var friendlyname = zones[i].replace(/_/g," ");
		}
		zonesString += "<div class='customZoneTitle' id='"+zones[i]+"'>"+friendlyname+"</div>";
		}
	};
	zonesString += "<div class='zonesEnd'></div></div>";
	if ($("#bpe_component_dropship").length) {
		$("#bpe_component_dropship").after("<div class=\"CMS_Component_Obs CMS_Component_ObsZones tooltipTarget "+cclass+"\"><div><div><div class='componentZonesTitle'><a class=\"componentDelete\"></a>"+text+"</div>"+zonesString+"</div></div></div>");
		
	} else if ($("#bpe_invisible_dropship").length) {
		$("#bpe_invisible_dropship").after("<div class=\"CMS_Component_Obs CMS_Component_ObsZones tooltipTarget "+cclass+"\"><div><div><div class='componentZonesTitle'><a class=\"componentDelete\"></a>"+text+"</div>"+zonesString+"</div></div></div>");
		setTimeout(function() {
			$(".dont_remove_highlight").removeClass("dont_remove_highlight");			
			$("#bpe_invisible_dropship").remove();
		}, 1000);
	} else {
		$("#bpe_area",$(".bpe_area_wrapper")).append("<div class=\"CMS_Component_Obs CMS_Component_ObsZones tooltipTarget "+cclass+"\"><div><div><div class='componentZonesTitle'><a class=\"componentDelete\"></a>"+text+"</div>"+zonesString+"</div></div></div>");
		
	}

	if (currentTooltip) {
		interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
		clearTimeout(toolTipTimeout);
	}
	currentTooltipItem=0;
	currentTooltip="zones";
	toolTipTimeout = setTimeout(tooltip, 500);
}

function changeEl ($selected,tag1,el,deselect,parent) {
//	$("#bpe_area .dropzone").remove();
	if (deselect===false) {
		var newClass = " class='bpe_highlight bpe_highlight_done'";
	} else {
		var newClass = "";
	}
	if (el == "indent") {
		if ($selected.prev().children("ul,ol").length>0) {
			$selected.prev().children("ul,ol").append("<li"+newClass+">"+$selected.html()+"</li>");
		} else {
			$selected.prev().append("<"+parent+"><li"+newClass+">"+$selected.html()+"</li></"+parent+">");
		}
		$selected.remove();
	} else if (el == "outdent") {
		$selected.parent().parent().after("<li"+newClass+">"+$selected.html()+"</li>");
		if ($selected.next().length==0 && $selected.prev().length==0) {
			$selected.parent().remove();
		} else {
			$selected.remove();
		}
	} else {
		/*} else if (el == "ul" || el == "ol") {
		if (tag1=="li") {
			var moveup = false;
			var movedown = false;
			var loner = true;
			if ($selected.parent().prev().length>0) {
				var tag;
				$selected.parent().prev().each(function(){
					tag = this.tagName.toLowerCase();
				});
				if (tag==el) {
					moveup = true;
				}
			}
			if ($selected.parent().next().length>0) {
				var tag;
				$selected.parent().next().each(function(){
					tag = this.tagName.toLowerCase();
				});
				if (tag==el) {
					movedown = true;
				}
			}
			if ($selected.prev().length>0||$selected.next().length>0) {
				loner = false;
			}
			if (moveup == true && movedown == false) {
				var contents = $selected.html();
				$selected.parent().prev().append("<li"+newClass+">"+contents+"</li>");
				if (loner == true) {
					$selected.parent().remove();
				} else {
					$selected.remove();
				}
			} else if (moveup == false && movedown == true) {
				var contents = $selected.html();
				$selected.parent().next().prepend("<li"+newClass+">"+contents+"</li>");
				if (loner == true) {
					$selected.parent().remove();
				} else {
					$selected.remove();
				}
			} else if (moveup == true && movedown == true) {
				var contents = $selected.html();
				$selected.parent().prev().append("<li"+newClass+">"+contents+"</li>");
				$selected.parent().next().children().appendTo($selected.parent().prev());
				$selected.parent().next().remove();
				if (loner == true) {
					$selected.parent().remove();
				} else {
					$selected.remove();
				}
			} else { // change single
				var contents = $selected.html();
				var newEl = "";
				$selected.nextAll().each(function(){
					if ($(this).hasClass("bpe_highlight")) {
						newEl = newEl+"<li class=\"bpe_highlight\">"+$(this).html()+"</li>";						
					} else {
						newEl = newEl+"<li>"+$(this).html()+"</li>";						
					}
					$(this).remove();
				});
				if (newEl=="") {
					$selected.parent().after("<"+el+">\n\t<li"+newClass+">"+contents+"</li>\n</"+el+">");							
				} else {
					$selected.parent().after("<"+el+">\n\t<li"+newClass+">"+contents+"</li>\n</"+el+"><"+parent+">"+newEl+"</"+parent+">");							
				}
				$selected.remove();
			}
		} else {
			var moveup = false;
			var movedown = false;
			if ($selected.prev().length>0) {
				var tag;
				$selected.prev().each(function(){
					tag = this.tagName.toLowerCase();
				});
				if (tag==el) {
					moveup = true;
				}
			}
			if ($selected.next().length>0) {
				var tag;
				$selected.next().each(function(){
					tag = this.tagName.toLowerCase();
				});
				if (tag==el) {
					movedown = true;
				}
			}
			if (moveup == true && movedown == false) {
				var contents = $selected.html();
				$selected.prev().append("<li"+newClass+">"+contents+"</li>");
				$selected.remove();
			} else if (moveup == false && movedown == true) {
				var contents = $selected.html();
				$selected.next().prepend("<li"+newClass+">"+contents+"</li>");
				$selected.remove();
			} else if (moveup == true && movedown == true) {
				var contents = $selected.html();
				$selected.prev().append("<li"+newClass+">"+contents+"</li>");
				$selected.next().children().appendTo($selected.prev());
				$selected.next().remove();
				$selected.remove();
			} else {
				var contents = $selected.html();
				if (tag1=="li") {
					var newEl = "";
					$selected.nextAll().each(function(){
						if ($(this).hasClass("bpe_highlight")) {
							newEl = newEl+"<li class=\"bpe_highlight\">"+$(this).html()+"</li>";						
						} else {
							newEl = newEl+"<li>"+$(this).html()+"</li>";						
						}
						$(this).remove();
					});
					$selected.parent().after("<"+el+">\n\t<li"+newClass+">"+contents+"</li>\n</"+el+"><"+parent+">"+newEl+"</"+parent+">");							
					$selected.remove();
				} else {
					$selected.after("<"+el+">\n\t<li"+newClass+">"+contents+"</li>\n</"+el+">").remove();							
				}
			}
		}
	} else {
		if (tag1=="li") {
			var last = true;
			var first = true;
			if ($selected.prev().length>0) {
				first = false;
			}
			if ($selected.next().length>0) {
				last = false;
			}
			if (first == true && last == true) {
				var contents = $selected.html();
				$selected.parent().after("<"+el+""+newClass+">"+contents+"</"+el+">");
				$selected.remove();
			} else if (first == true && last == false) {
				var contents = $selected.html();
				$selected.parent().before("<"+el+""+newClass+">"+contents+"</"+el+">");
				$selected.remove();
			} else if (first == false && last == true) {
				var contents = $selected.html();
				$selected.parent().after("<"+el+""+newClass+">"+contents+"</"+el+">");
				$selected.remove();
			} else {
				var contents = $selected.html();
				var newEl = "";
				$selected.nextAll().each(function(){
					if ($(this).hasClass("bpe_highlight")) {
						newEl = newEl+"<li class=\"bpe_highlight\">"+$(this).html()+"</li>";						
					} else {
						newEl = newEl+"<li>"+$(this).html()+"</li>";						
					}
					$(this).remove();
				});
				$selected.parent().after("<"+el+""+newClass+">"+contents+"</"+el+"><"+parent+">"+newEl+"</"+parent+">");							
				$selected.remove();
			}

		} else {*/
			$("#bpe_area .bpe_highlight .itemTag").remove();
			/*if (el=="p") {
				//$selected.prepend("<span class='itemTag itemTagP'>"+LangVars.Paragraph+"</span>");
			}*/
			/*if (el=="h1") {
				$selected.prepend("<span class='itemTag itemTagH1'></span>");
			}
			if (el=="h2") {
				$selected.prepend("<span class='itemTag itemTagH2'></span>");
			}
			if (el=="h3") {
				$selected.prepend("<span class='itemTag itemTagH3'></span>");
			}
			if (el=="h4") {
				$selected.prepend("<span class='itemTag itemTagH4'></span>");
			}
			if (el=="pre") {
				//$selected.prepend("<span class='itemTag itemTagPre'>"+LangVars.Code+"</span>");
			}*/
//			var contents = $selected.html();
//			$selected.after("<"+el+""+newClass+">"+contents+"</"+el+">").remove();
			$selected.removeClass("el_p el_h1 el_h2 el_h3 el_h4 el_pre el_ul el_ol el_table level-1 level-2 level-3");
			if (el=='ul'||el=='ol') {
				if ($selected.attr("data-el")=='ul'||$selected.attr("data-el")=='ol') {
					var selLevel = parseInt($selected.attr("data-level"));
					$selected.addClass("level-"+selLevel).attr("data-level",selLevel);
				} else {
					$selected.addClass("level-1").attr("data-level",'1');
				}
			}
			$selected.attr("data-el",el).addClass("el_"+el);
			selectionTools();
			//}
	}

}

function removeIndent($cur) {
	var curLevel = parseInt($cur.attr("data-level"));
	var newLevel = curLevel-1;
	$cur.removeClass("level-1 level-2 level-3").addClass("level-"+newLevel).attr('data-level',newLevel);
}
function removeIndentAll($cur) {
	$cur.removeClass("level-2 level-3").addClass("level-1").attr('data-level','1');
}
function fixTooDeep() {
	$(".el_ul,.el_ol").each(function(){
		if ($(this).prev().prev().hasClass("el_ul")||$(this).prev().prev().hasClass("el_ol")) {
			var thisLevel = parseInt($(this).attr("data-level"));
			var prevLevel = parseInt($(this).prev().prev().attr("data-level"));
			if (prevLevel+1<thisLevel) {
				removeIndent($(this));
			}
		} else {
			if ($(this).attr("data-level")!='1') {
				removeIndentAll($(this));				
			}
		}			
	
	});
}
function assign_sort () {

	assignSaveListener();
	
	$("#bpe_area .itemTag").remove();
	$(".hwrap").contents().unwrap();
/*	$("h1,h2,h3,h4,h5",$("#bpe_area")).each(function(){
		$(this).wrapInner("<span class='hwrap'></span>");
	});*/

	$(".bpe_image",$("#bpe_area")).each(function(){

		var classes = options.img_classes.split(",");			
		
		for (var i=0; i < classes.length; i++) {
			if ($(this).hasClass(classes[i])) {
				if ($(this).hasClass("bpe_image")) {
					var friendlyname = $("#iconbarImageClasses a[rel="+classes[i]+"] .friendlyname").text();
				} else {
					var friendlyname = $("#iconbarBlockClasses a[rel="+classes[i]+"] .friendlyname").text();
				}
				$(this).append("<span class='itemTag itemTagClass' title='"+friendlyname+"'>"+friendlyname+"</span>");
			}
		};

	});
	$("#bpe_area").css("height",$("#bpe_area").height());
	$("#bpe_area .dropzone").remove();
	//$("#bpe_area .dropzone").droppable( "destroy" );
	// /$(".bpe_image,form,p,h1,h2,h3,h4,h5,pre,li,ul,ol,.bpe_table,div.CMS_Component_Obs,.bpe_split_divider",$("#bpe_area")).draggable( "destroy" );
	
	if ($("#bpeSectionTabs a[data-tpl=]").hasClass("currentSectionTab") || !$("#bpeSectionTabs").length) {
		$("#bpe_area").prepend("<div class='dropzone'><div></div></div>");		
	}

	$(".textareaWrapper,.bpe_image,form,p,h1,h2,h3,h4,h5,pre,li,div.CMS_Component_Obs,.customZoneTitle",$("#bpe_area")).filter(":visible").after("<div class='dropzone'><div></div></div>");
	
	$(".bpe_split_divider[alt="+$("#bpeSectionTabs a.currentSectionTab").attr("data-tpl")+"]",$("#bpe_area")).after("<div class='dropzone'><div></div></div>");
	$("#bpe_area").css("height","auto");
//	$("#bpe_area > ul,#bpe_area > ol,.zonesDropBox > ul,.zonesDropBox > ol").after("<div class='dropzone'><div></div></div>");

	$("#bpe_area .CMS_Component_ObsZones").each(function(){
		if (!$(".zonesDropBox",$(this)).length) {
			$("> .customZoneTitle",$(".zonesDividers",$(this))).before("<div class='zonesDropBox'></div>");
			$(".zonesDropBox",$(this)).each(function(){
				$box = $(this);
				$(this).nextAll().each(function(){
					if ($(this).hasClass("zonesDropBox")) {
						return false;
					}
					$(this).appendTo($box);
				});
			});
		}
	});
	
	$("#bpe_area .zonesDropBox").each(function(){
		$(this).removeClass("empty");
		if ($(".dropzone",$(this)).length==1) {
//			$(this).addClass("empty");
		}
	});
	fixTooDeep();
	function addTextWhereClicked(search,y,$t) {
		function complete() {
			$(".bpe_highlight").removeClass("bpe_highlight");
			$(".editing").removeClass("editing");
			$("#bpe_area .textarea:focus").blur();
			$(".listTipEditor").hide();
			$(".textEditingArea  > .listTipUp").hide();

			$($(search,$t).get().reverse()).each(function(){
				var t = $(this).offset().top;
				var h = $(this).outerHeight();
				var b = t+h;
				if (y>b || !$(this).prev().length) {
					addTextareaAfter($(this),'p','','left','',true,true,true);
					assign_sort();
					//bindTextareaWrappers();
					prepForInsert();					
					autosave();
					if (!iOS){
					selectionTools();
					assignAddTextKeysAndClick();
					}
					return false;
				}			
			});
		}
		if ($(".editingImage").length) {
			hidePopdownOrPassthroughSave(saveImage);
			setTimeout(function () {
				complete();
			}, 10);
		} else {
			complete();
		}

	}
	/*
	DEV REMOVED
	$("#bpe_area .zonesDropBox").unbind('click').click(function(e){
		e.stopPropagation();
		var y = e.clientY;
		addTextWhereClicked("> *:not(.zonesEnd)",y,$(this));
	});
	*/
	$("#dragBoundry").unbind('click').click(function(e){
		if ($(e.target).attr("id")=="dragBoundry") {
			e.stopPropagation();
			var y = e.clientY + $("body").scrollTop() + 15;
			addTextWhereClicked("#bpe_area > *:visible",y,$(this));
		}
		return false;
	});
	$(".textEditingArea").unbind('click').click(function(e){
		if ($(e.target)[0].nodeName.toLowerCase()!="textarea" && $(e.target)[0].nodeName.toLowerCase()!="CMS_Component_Obs" && !$(e.target).hasClass("dragTextArea")) {
			e.stopPropagation();
			var y = e.clientY + $("body").scrollTop() + 15;
			addTextWhereClicked("#bpe_area > *:visible",y,$(this));
		}
		return false;
	});
	$(".zonesDropBox").unbind('click').click(function(e){
		if ($(e.target)[0].nodeName.toLowerCase()!="textarea") {
			e.stopPropagation();
			var y = e.clientY + $("body").scrollTop() + 15;
			addTextWhereClicked("> *:visible",y,$(this));
		}
		return false;
	});

	$(".textEditingArea").selectable({ 
		filter: '.textareaWrapper,p,h1,h2,h3,h4,h5,pre,li,div.CMS_Component_Obs,.bpe_image,form' 
		//,cancel: 'p,h1,h2,h3,h4,h5,pre,li,ol,ul,div.CMS_Component_Obs,.bpe_table,.bpe_image,form'
		,selecting: function(event, ui) { 
			$(".bpe_highlight").removeClass("bpe_highlight");
			$(".multi_highlight").removeClass("multi_highlight");
			
			$(".ui-selecting").addClass("bpe_highlight");
			if ($(".ui-selecting").hasClass("textareaWrapper")) {
				$(".ui-selecting").addClass("multi_highlight");				
			}
			$(".ui-selected").addClass("bpe_highlight");			
			if (!iOS) {
				selectionTools();
			}

		}
		,unselecting: function(event, ui) { 
			$(".bpe_highlight").removeClass("bpe_highlight");
			$(".multi_highlight").removeClass("multi_highlight");
			if ($(".ui-selecting").hasClass("textareaWrapper")) {
				$(".ui-selecting").addClass("multi_highlight");				
			}
			$(".ui-selecting").addClass("bpe_highlight");
			$(".ui-selected").addClass("bpe_highlight");
//			if ($(".bpe_highlight").length) {
//				$(".bpe_selection_tool").removeClass("greyedOut");
//			} else {
//				$(".bpe_selection_tool").addClass("greyedOut");
//			}
			if (!iOS) {
				selectionTools();
			}
		},
		stop:function(){
			setTimeout(function () {
				selectionTools();				
			}, 10);

		}
		,delay: 20
	});
	$(".bpe_image,form,div.CMS_Component_Obs,.bpe_split_divider,.textareaWrapper",$("#bpe_area")).draggable({
		helper: function() {
			var l = parseFloat($(".textEditingArea").css("paddingLeft"));
			l =l -5;
			
			if ($(".bpe_highlight").length>1 && $(this).hasClass("bpe_highlight")) {
				$clones = $("<div class='draggingBox'></div>");
				$(".bpe_highlight").each(function(){
					$clones.append($(this).clone()).append("<div class='dropzone'><div></div></div>");					
				});
				l = l +10;
				return $clones.css('width', this.offsetWidth).css("height",this.offsetHeight-7).css("margin-left",l+"px").css("z-index","1000")[0];
			} else {
		 		return $(this).clone().css('width', this.offsetWidth).css("height",this.offsetHeight-7).css("margin-left",l+"px").css("z-index","1000")[0];				
			}
		},
		appendTo:"#addEntryForm",
		scroll:false,
		refreshPositions:true,
		start: function(){
			$(".bpe_highlight",$("#rightPane")).addClass("dont_remove_highlight");
			if (typeof myScroll[$(".textEditingArea").attr("id")] !='undefined') {
			myScroll[$(".textEditingArea").attr("id")].disable();				
			}
			
		},
		stop: function(){
			setTimeout(function () {
				$(".dont_remove_highlight",$("#rightPane")).removeClass("dont_remove_highlight");
			}, 250);
			if (typeof myScroll[$(".textEditingArea").attr("id")] !='undefined') {
				myScroll[$(".textEditingArea").attr("id")].enable();
			}
			clearTimeout(lovelyScrollDrag);
		},
		drag: function(event, ui){
			hidePaneTools();
			
			if ($(".textEditingArea").length) {
				
				
				var topZoneTop = 0;
				var topZoneBottom = topZoneTop+160;
				var topZoneLeft = 0;
				var topZoneRight = topZoneLeft + $("#dragBoundry").width();

				var bottomZoneTop = $(window).height()-50;
				var bottomZoneBottom = $(window).height();
				var bottomZoneLeft = 0;
				var bottomZoneRight = $("#dragBoundry").width();

				var posTop = event.pageY - $("body").scrollTop();
				var posLeft = event.pageX;
				clearTimeout(lovelyScrollDrag);
				if (posTop > topZoneTop && posTop < topZoneBottom && posLeft > topZoneLeft && posLeft < topZoneRight) {
//					$(".textEditingArea").lovelyScrollMove(7);


					$("body,html").scrollTop($("body").scrollTop()-7);
					lovelyScrollDrag = setInterval(function(){
					$("body,html").scrollTop($("body").scrollTop()-7);
//						$(".textEditingArea").lovelyScrollMove(7);
					},30);
				}

				if (posTop > bottomZoneTop && posTop < bottomZoneBottom && posLeft > bottomZoneLeft && posLeft < bottomZoneRight) {
//					$(".textEditingArea").lovelyScrollMove(-7);
					$("body,html").scrollTop($("body").scrollTop()+7);
					lovelyScrollDrag = setInterval(function(){
						$("body,html").scrollTop($("body").scrollTop()+7);
//						$(".textEditingArea").lovelyScrollMove(-7);
					},30);
				}
				
				
			}
			
		},
	    zIndex: 1000,
		opacity:0.7,
		distance: 4,
		axis:'y'
	});
	$("div.CMS_Component_Obs.CMS_Component_ObsZones",$("#bpe_area")).draggable('option','cancel','.zonesDropBox');
	
	$(".textEditingArea,#dragBoundry").droppable({
		accept: ".textareaWrapper,.bpe_image,form,li,.bpe_table,div.CMS_Component_Obs,.bpe_split_divider,.contentImage,.addVideoItem,.responsiveListItem:not(.productOption,.formInputItem,.optionItem,.galleryThumb,.editPageBar)",
		tolerance:"pointer",
		greedy:true,
		drop: function(e, ui) {
			clearTimeout(lovelyScrollDrag);
			drop(e,ui,$("#bpe_area .dropzone.dropping"));			
		},
		over: function(e,ui) {
			var ot = ui.helper.offset().top;

			$("#bpe_area .dropzone.dropping").removeClass("dropping");
			var found=false;
			$("#bpe_area .dropzone").each(function(){

				
					if ($(this).offset().top > ot) {

						if (
							($(this).parents(".CMS_Component_ObsZones").length && $(".zonesDropBox",ui.draggable).length)
							||
							($(this).parents(".CMS_Component_ObsZones").length && typeof $(ui.draggable).attr("zones") != 'undefined' && $(ui.draggable).attr("zones")!="")
						) {

						} else {
							$(this).addClass("dropping");
							found=true;
							return false;	
						}
					
					}
			
			});
			if (!found) {
				$("#bpe_area .dropzone:last").addClass("dropping");	
			}
			
	    },
	    out: function() {
			$("#bpe_area .dropzone.dropping").removeClass("dropping");
	    }
	});
	/*
	$("li",$("#bpe_area ul,#bpe_area ol")).droppable({
		accept: "li",
		tolerance:"pointer",
		greedy:true,
		drop: function(e, ui) {
			clearTimeout(lovelyScrollDrag);
			if (!ui.draggable.hasClass("dragInsertItem")) {
				if ($(this).parents("ul,ol").length<3) {
					if ($(this).children("ul,ol").length) {
						var $t = $(this);
						if ($("li.bpe_highlight:not(.draggingBox li.bpe_highlight)").length) {
							$("li.bpe_highlight:not(.draggingBox li.bpe_highlight)").each(function(){
								$t.children("ul,ol").append($(this));							
							});							
						} else {
							$t.children("ul,ol").append(ui.draggable);							
						}
						setTimeout(function() {
							$.fn.bpeditor.clean(true);
						}, 50);
					} else {
						if ($(ui.draggable).parent()[0].tagName.toLowerCase()=="ul") {
							var $toAdd = $("<ul></ul>");
						} else {
							var $toAdd = $("<ol></ol>");
						}
						$(this).append($toAdd);
						if ($("li.bpe_highlight:not(.draggingBox li.bpe_highlight)").length) {
						
							$(".bpe_highlight:not(.draggingBox .bpe_highlight)").each(function(){
								$toAdd.append($(this));							
							});
						} else {
							$toAdd.append(ui.draggable);							
						}
						setTimeout(function() {
							$.fn.bpeditor.clean(true);
						}, 50);

					}
				}
				
			}
			$(".nestedTarget").removeClass("nestedTarget");					//$(this).animate({borderTopColor:"#FFFFFF",borderRightColor:"#FFFFFF",borderBottomColor:"#FFFFFF",borderLeftColor:"#FFFFFF"},50);
			
//			
		},
		over: function(e,ui) {
			$(this).addClass("dropping");
			if (!ui.draggable.hasClass("dragInsertItem")) {
				if (!$(".dropping",$(this)).length) {
					if ($(this).parents("ul,ol").length<3) {
						$(this).addClass("nestedTarget");
					}	
				}
				
			}
	    },
	    out: function() {
			$(this).removeClass("dropping");
			$(this).removeClass("nestedTarget");					//$(this).animate({borderTopColor:"#FFFFFF",borderRightColor:"#FFFFFF",borderBottomColor:"#FFFFFF",borderLeftColor:"#FFFFFF"},50);
	    }
	});*/

		$("#bpe_area .dropzone:not(.CMS_Component_ObsZones .dropzone,ul .dropzone)").droppable({
		accept: ".textareaWrapper,.bpe_image,form,li,.bpe_table,div.CMS_Component_Obs,.bpe_split_divider,.contentImage,.addVideoItem,.responsiveListItem:not(.productOption,.formInputItem,.optionItem,.galleryThumb)",
		tolerance:"pointer",
		greedy:true,
		drop: function(e, ui) {
			clearTimeout(lovelyScrollDrag);
			drop(e,ui,$(this));
			
//			
		},
		over: function(e,ui) {
			$(".dropping").removeClass("dropping");
			$(this).addClass("dropping");
			if (!ui.draggable.next().hasClass("dropping") && !ui.draggable.prev().hasClass("dropping")) {
			//	$(this).animate({borderTopColor:"#777777",borderRightColor:"#777777",borderBottomColor:"#777777",borderLeftColor:"#777777"},50);					
			}
	    },
	    out: function() {
			$(this).removeClass("dropping");
			//$(this).animate({borderTopColor:"#FFFFFF",borderRightColor:"#FFFFFF",borderBottomColor:"#FFFFFF",borderLeftColor:"#FFFFFF"},50);
	    }
	});
	
	function dropFSImageOnPage(file,serverData,e,t) {
		$(".bpe_images,#bpe_images,#imagesPaneInner .insertTarget").html(serverData);
		$obj=$("#bpe_images .contentImage:first");
		var sizeStr = $(".changeImageSize.defaultImageSize:first").attr("string");
		$newPic = $('<div class="bpe_image bpe_highlight dont_remove_highlight"><img src="'+$obj.data("path")+'?'+sizeStr+'" /></div><div class="dropzone"><div></div></div>');
		$newPic.insertAfter(t);
		
		$('<img />').load( function(){
			//Removed 9 Jan
			//$(".textEditingArea").lovelyScroll();
		}).attr('src', $obj.attr("id")+'?'+sizeStr).remove();
		$("#null .dz-preview.dz-error").remove();
		if (!$("#null .dz-preview:not(.dz-success)").length) {
			$("body").unbind("click");
			$.fn.bpeditor.clean(true);
			$(document).unbind("keyup");
			setTimeout(function() {
				$(".dont_remove_highlight").removeClass("dont_remove_highlight");			
			}, 1000);	
		}
	};
	var m = parseFloat($("#maxUploadSize").val())/1024;
	m = m/1024;

	$("#bpe_area .dropzone:not(ul .dropzone)").dropzone({
		url:"/admin/pageActions.php"
		,clickable:false
		,paramName: "image"
		,params:{pageAction:"addImage"}
		,previewsContainer:"#null"
		,acceptedMimeTypes:"image/*"
		,maxFilesize:m
		,dictInvalidFileType:LangVars.Upload_Error_Bad_Format
		,dictResponseError:LangVars.Misc_Error
		,dictFileTooBig:LangVars.File_Too_Large
		,init: function() {
			this.on("addedfile", function(event) { 
				uploading("1");
			}),
			this.on("uploadprogress", function(file,progress) { 
				if (updatedPercent==false) {
					uploading(progress);
					updatedPercent=true;
					setTimeout(function() {
						updatedPercent=false;
					}, 1000);	
				}
				
			}),
			this.on("error", function(file,message) { 
				$("#bpe_area .dropzone.dropping").removeClass("dropping");
				error(message);
			}),
			this.on("success", function(file,serverData,e,t) {
				if (serverData=="limit") {
					error(LangVars.Storage_Limit_Reached);
				} else {
	    			dropFSImageOnPage(file,serverData,e,t);
				}
			});
  		}

	});
	
	$(".textEditingArea:not(.dz-done)").dropzone({
		url:"/admin/pageActions.php"
		,clickable:false
		,paramName: "image"
		,params:{pageAction:"addImage"}
		,previewsContainer:"#null"
		,maxFilesize:m
		,acceptedMimeTypes:"image/*"
		,dictInvalidFileType:LangVars.Upload_Error_Bad_Format
		,dictResponseError:LangVars.Misc_Error
		,dictFileTooBig:LangVars.File_Too_Large
		,init: function() {
			this.on("dragenter", function() { 
				$("#bpe_area .dropzone:last").addClass("dropping");
			}),
			this.on("dragleave", function() { 
				$("#bpe_area .dropzone:last").removeClass("dropping");
			}),
			this.on("addedfile", function() { 
				working();
			}),
			this.on("error", function(file,message) { 
				$("#bpe_area .dropzone.dropping").removeClass("dropping");
				error(message);
			}),
    		this.on("success", function(file,serverData,e,t) { 
    			if (serverData=="limit") {
    				error(LangVars.Storage_Limit_Reached);
    			} else {

	    			dropFSImageOnPage(file,serverData,e,$("#bpe_area .dropzone:last"));
				
    			}
    		});
  		}
	});
	$(".textEditingArea").addClass("dz-done");
	function drop (e,ui,$this) {
		var editText=false;
		var addImage=false;
		var addTable=false;
		var addVideo=false;
		var addingForm=false;
		var addingFile=false;
		var addingProduct=false;
		var addingBookingProduct=false;
		var addingCalendar=false;
		var addingSnippet=false;
		var addingEmbedCode=false;
		var addingComponent=false;
		var addingCheckout=false;
		var addingInvoice=false;
		var addingBlog=false;
		var addingSitemap=false;
		var addingNewsletter=false;
		var addingCustom=false;
		var addingColumns=false;
		var addingSection=false;
		var addingGallery=false;
		var addingTable=false;
		var addingMailingList=false;
		if (ui.draggable.hasClass("contentImage")) {
			$(".bpe_highlight").removeClass("bpe_highlight");

			$("body").attr("pane",$("body").attr("previousPane"));

			var dropper = $("<div id='bpe_invisible_dropship'></div>");
			
			addImage=true;
			//var dropper = $("<div class='bpe_image'><img src='"+ui.draggable.attr("id")+"' /></div>")
		} else if (ui.draggable.hasClass("galleryItem")) {
			$(".bpe_highlight").removeClass("bpe_highlight");

			$("body").attr("pane",$("body").attr("previousPane"));
			var dropper = $("<div id='bpe_invisible_dropship'></div>");
			addingGallery=true;

		} else if (ui.draggable.hasClass("addVideoItem")) {
			$(".bpe_highlight").removeClass("bpe_highlight");
			$("body").attr("pane",$("body").attr("previousPane"));

			var vidId = ui.draggable.attr("data-src");
			var picSrc = ui.draggable.attr("data-thumb");
			var dropper = $("<div class='bpe_video bpe_image'><a href=\""+vidId+"\"><img src='"+picSrc+"' /></a></div>");			
		}
		else if (ui.draggable.hasClass("formItem")) {
			$(".bpe_highlight").removeClass("bpe_highlight");
			$("body").attr("pane",$("body").attr("previousPane"));
			var dropper = $("<div id='bpe_invisible_dropship'></div>");
			addingForm=true;
		} 
		else if (ui.draggable.hasClass("downloadableFile")) {
			$(".bpe_highlight").removeClass("bpe_highlight");
			$("body").attr("pane",$("body").attr("previousPane"));
			var dropper = $("<div id='bpe_invisible_dropship'></div>");

			addingFile=true;
		} 
		else if (ui.draggable.hasClass("productItemMain")) {
			$(".bpe_highlight").removeClass("bpe_highlight");
			$("body").attr("pane",$("body").attr("previousPane"));
			var dropper = $("<div id='bpe_invisible_dropship'></div>");
			addingProduct=true;
		} 
		else if (ui.draggable.hasClass("bookingProductItemMain")) {
			$(".bpe_highlight").removeClass("bpe_highlight");
			$("body").attr("pane",$("body").attr("previousPane"));
			var dropper = $("<div id='bpe_invisible_dropship'></div>");
			addingBookingProduct=true;
		} 
		else if (ui.draggable.hasClass("mailingListItem")) {
			$(".bpe_highlight").removeClass("bpe_highlight");
			$("body").attr("pane",$("body").attr("previousPane"));
			var dropper = $("<div id='bpe_invisible_dropship'></div>");
			addingMailingList=true;
		} 
		else if (ui.draggable.hasClass("calendarItem")) {
			$(".bpe_highlight").removeClass("bpe_highlight");
			$("body").attr("pane",$("body").attr("previousPane"));
			var dropper = $("<div id='bpe_invisible_dropship'></div>");
			addingCalendar=true;
		} 
		else if (ui.draggable.hasClass("snippetItem")) {
			$(".bpe_highlight").removeClass("bpe_highlight");
			$("body").attr("pane",$("body").attr("previousPane"));
			var dropper = $("<div id='bpe_invisible_dropship'></div>");
			addingSnippet=true;
		} 
		else if (ui.draggable.hasClass("embedCodeItem")) {
			$(".bpe_highlight").removeClass("bpe_highlight");
			$("body").attr("pane",$("body").attr("previousPane"));
			var dropper = $("<div id='bpe_invisible_dropship'></div>");
			addingEmbedCode=true;
		} 
		else if (ui.draggable.hasClass("tableItem")) {
			$(".bpe_highlight").removeClass("bpe_highlight");
			$("body").attr("pane",$("body").attr("previousPane"));
			var dropper = $("<div id='bpe_invisible_dropship'></div>");
			addingTable=true;
		} 
		else if (ui.draggable.hasClass("dragInsertItem")) { 
			$(".bpe_highlight").removeClass("bpe_highlight");
			if (
				ui.draggable.attr("id")=="dragInsertP"
				||ui.draggable.attr("id")=="dragInsertH1"
				||ui.draggable.attr("id")=="dragInsertH2"
				||ui.draggable.attr("id")=="dragInsertH3"
				||ui.draggable.attr("id")=="dragInsertH4"
				||ui.draggable.attr("id")=="dragInsertUL"
				||ui.draggable.attr("id")=="dragInsertOL"
				||ui.draggable.attr("id")=="dragInsertPre"
				) {
				if ($this.parents("ul,ol").length) {
					var dropper = $("<li class='bpe_highlight addText'></li>");	
				} else {
					var elo = false;
					if (ui.draggable.attr("id")=="dragInsertP") {
						var el = "p";
					}
					if (ui.draggable.attr("id")=="dragInsertH1") {
						var el = "h1";
					}
					if (ui.draggable.attr("id")=="dragInsertH2") {
						var el = "h2";
					}
					if (ui.draggable.attr("id")=="dragInsertH3") {
						var el = "h3";
					}
					if (ui.draggable.attr("id")=="dragInsertH4") {
						var el = "h4";
					}
					if (ui.draggable.attr("id")=="dragInsertUL") {
						var el = "li";
						var elo = "ul";
					}
					if (ui.draggable.attr("id")=="dragInsertOL") {
						var el = "li";
						var elo = "ol";
					}
					if (ui.draggable.attr("id")=="dragInsertPre") {
						var el = "pre";
					}
					
					var dropper = $("<"+el+" class='bpe_highlight addText'></"+el+">");						
					
					
				}
				editText=true;
			}
			if (ui.draggable.hasClass("dragInsertImage")) {
				var dropper = newImage;	
				addImage=true;
			}
			if (ui.draggable.hasClass("dragInsertVideo")) {
				var dropper = newVideo;	
				addVideo=true;
			}
			if (ui.draggable.hasClass("dragInsertTable")) {
				addTable=true;
				
				var dropper = $("<div class='bpe_table bpe_highlight'></div><div class='dropzone'><div></div></div>");	
			}
			if (ui.draggable.hasClass("dragInsertComponent")) {
				addingComponent=true;
				
				var dropper = $(newComponentDropship);	
			}
			if (ui.draggable.hasClass("dragInsertCheckout")) {
				addingCheckout = true;
				var dropper = $("<div id='bpe_invisible_dropship'></div>");
			}
			if (ui.draggable.hasClass("dragInsertInvoice")) {
				addingInvoice = true;
				var dropper = $("<div id='bpe_invisible_dropship'></div>");
			}
			if (ui.draggable.hasClass("dragInsertBlog")) {
				addingBlog = true;
				var dropper = $("<div id='bpe_invisible_dropship'></div>");
			}
			if (ui.draggable.hasClass("dragInsertSitemap")) {
				addingSitemap = true;
				var dropper = $("<div id='bpe_invisible_dropship'></div>");
			}
			
			if (ui.draggable.hasClass("drag_insert_subscribe")) {
				addingNewsletter = true;
				var dropper = $("<div id='bpe_invisible_dropship'></div>");
			}
			if (ui.draggable.hasClass("dragInsertCustom")) {
				addingCustom = true;
				var dropper = $("<div id='bpe_invisible_dropship'></div>");
			}
			if (ui.draggable.hasClass("dragInsertColumns")) {
				addingColumns = true;
				var dropper = $("<div id='bpe_invisible_dropship'></div>");
			}
			if (ui.draggable.hasClass("dragInsertSection")) {
				addingSection = true;
				var dropper = $("<div id='bpe_invisible_dropship'></div>");
			}
		} else {
			var dropper = ui.draggable;
			logTrainingClick("dragContentItemInEditPage");
		}
		if (ui.draggable.hasClass("bpe_highlight") && $(".bpe_highlight").length>1) {
			var $target = $this;
			$($(".bpe_area_wrapper .bpe_highlight:not(.draggingBox .bpe_highlight)").get().reverse()).each(function(){
				$(this).insertAfter($target);
			});
		} else {
			dropper.insertAfter($this);
		}
		$this.removeClass("dropping");
		if (editText) {
			addText(dropper,elo);
		} else if (addVideo) {
			prepForInsert();
			dropper.insertAfter($this);
			hide_menus();
			$.fn.bpeditor.clean(true);
			//dragVideo();

		} else if (addImage) {
			prepForInsert();
			var sizeStr = $(".changeImageSize.defaultImageSize:first").attr("string");
			if ($(".draggingBox").length) {
				$($(".draggingBox .contentImage").get().reverse()).each(function(){
					var $item = $('<div class="bpe_image bpe_highlight"><img src="'+$(this).data("path")+'?'+sizeStr+'" alt="'+$(this).attr("title")+'"/></div><div class="dropzone"><div></div></div>');
					$item.insertAfter(dropper);
					$('<img />').load( function(){
			//Removed 9 Jan
			//$(".textEditingArea").lovelyScroll();
					}).attr('src', $(this).attr("id")+'?'+sizeStr).remove();
				});
			} else {
				var dropper = $('<div class="bpe_image bpe_highlight"><img src="'+ui.draggable.data("path")+'?'+sizeStr+'" alt="'+ui.draggable.attr("title")+'"/></div><div class="dropzone"><div></div></div>');
				dropper.insertAfter($this);
				$('<img />').load( function(){
			//Removed 9 Jan
			//$(".textEditingArea").lovelyScroll();
				}).attr('src', ui.draggable.attr("id")+'?'+sizeStr).remove();
			}
			hide_menus();
			$.fn.bpeditor.clean(true);
		} else if (addingForm) {
			prepForInsert();
			dropper.insertAfter($this);
			if ($(".draggingBox").length) {
				$($(".draggingBox .formItem").get().reverse()).each(function(){
					addComponent("ComponentForm-"+$(this).attr("id").replace("form",""),"<strong>"+LangVars.Contact_form+":</strong> "+$(this).attr("rel"),false);
				});
			} else {
				addComponent("ComponentForm-"+ui.draggable.attr("id").replace("form",""),"<strong>"+LangVars.Contact_form+":</strong> "+ui.draggable.attr("rel"),false);
			}
			hide_menus();
			$.fn.bpeditor.clean(true);

		}
		else if (addingMailingList) {
			prepForInsert();
			dropper.insertAfter($this);
			if ($(".draggingBox").length) {
				$($(".draggingBox .formItem").get().reverse()).each(function(){
					addComponent("ComponentNewsletter-"+(this).attr("group-id"),"<strong>"+LangVars.Mailing_List_Subscribe+":</strong> "+(this).attr("title"),false);

				});
			} else {
				addComponent("ComponentNewsletter-"+ui.draggable.attr("group-id"),"<strong>"+LangVars.Mailing_List_Subscribe+":</strong> "+ui.draggable.attr("title"),$(this));
			}
			hide_menus();
			$.fn.bpeditor.clean(true);

		} else if (addingProduct) {
			prepForInsert();
			dropper.insertAfter($this);
			if ($(".draggingBox").length) {
				$($(".draggingBox .productItem").get().reverse()).each(function(){
					addComponent("ComponentProduct-"+$(this).attr("id").replace("prod",""),"<strong>"+LangVars.Product+":</strong> "+$(this).attr("rel"),false);
				});
			} else {
				addComponent("ComponentProduct-"+ui.draggable.attr("id").replace("prod",""),"<strong>"+LangVars.Product+":</strong> "+ui.draggable.attr("rel"),$(this));
			}
			hide_menus();
			$.fn.bpeditor.clean(true);

		} else if (addingBookingProduct) {
			prepForInsert();
			dropper.insertAfter($this);
			if ($(".draggingBox").length) {
				$($(".draggingBox .bookingProductItemMain").get().reverse()).each(function(){
					addComponent("ComponentBookingProduct-"+$(this).data("id"),"<strong>"+LangVars.Booking_Product+":</strong> "+$(this).attr("name"),false);
				});
			} else {
				addComponent("ComponentBookingProduct-"+ui.draggable.data("id"),"<strong>"+LangVars.Booking_Product+":</strong> "+ui.draggable.attr("name"),$(this));
			}
			hide_menus();
			$.fn.bpeditor.clean(true);

		} else if (addingCalendar) {
			prepForInsert();
			dropper.insertAfter($this);
			if ($(".draggingBox").length) {
				$($(".draggingBox .calendarItem").get().reverse()).each(function(){
					
					if ($(this).attr("rel")=="all_categories") {
						addComponent("ComponentCalendar","Calendar",false);
					} else {
						addComponent("ComponentCalendarCat-"+$(this).attr("rel"),"<strong>"+LangVars.Calendar+":</strong> "+$(this).attr("title"),false);
					}
				});
			} else {

				if (ui.draggable.attr("rel")=="all_categories") {
					addComponent("ComponentCalendar","Calendar",false);
				} else {
					addComponent("ComponentCalendarCat-"+ui.draggable.attr("rel"),"<strong>"+LangVars.Calendar+":</strong> "+ui.draggable.attr("title"),false);
				}
			}
			hide_menus();
			$.fn.bpeditor.clean(true);

		} else if (addingSnippet) {
			prepForInsert();
			dropper.insertAfter($this);
			if ($("#editing").val()==ui.draggable.attr("alt")) {
				error(LangVars.Cant_Add_Snippet_To_Itself);
			} else {
				if ($(".draggingBox").length) {
					$($(".draggingBox .snippetItem").get().reverse()).each(function(){
						addComponent("ComponentSnippet-"+$(this).attr("alt"),"<strong>"+LangVars.Snippet+":</strong> "+$(this).attr("title"),$(this));
					});
				} else {
					addComponent("ComponentSnippet-"+ui.draggable.attr("alt"),"<strong>"+LangVars.Snippet+":</strong> "+ui.draggable.attr("title"),$(this));
				}
					
				hide_menus();
				$.fn.bpeditor.clean(true);
			}
		} else if (addingEmbedCode) {
			prepForInsert();
			dropper.insertAfter($this);
			if ($(".draggingBox").length) {
					$($(".draggingBox .embedCodeItem").get().reverse()).each(function(){
						addComponent("ComponentEmbed-"+$(this).attr("embed-code-id"),"<strong>"+LangVars.Embed_Code+":</strong> "+htmlentities($(this).attr("embed-code-name")),$(this));
					});
			} else {
				addComponent("ComponentEmbed-"+ui.draggable.attr("embed-code-id"),"<strong>"+LangVars.Embed_Code+":</strong> "+htmlentities(ui.draggable.attr("embed-code-name")),$(this));	
			}
			
			hide_menus();
			$.fn.bpeditor.clean(true);
			
		}
	    else if (addingTable) {
   			prepForInsert();
   			dropper.insertAfter($this);
   			if ($(".draggingBox").length) {
   					$($(".draggingBox .tableItem").get().reverse()).each(function(){
   						addComponent("ComponentTable-"+$(this).attr("table-id"),"<strong>"+LangVars.Table+":</strong> "+htmlentities($(this).attr("title")),$(this));
   					});
   			} else {
   				addComponent("ComponentTable-"+ui.draggable.attr("table-id"),"<strong>"+LangVars.Table+":</strong> "+htmlentities(ui.draggable.attr("title")),$(this));	
   			}
		
   			hide_menus();
   			$.fn.bpeditor.clean(true);
		
   		}
		 else if (addingFile) {
			prepForInsert();
			dropper.insertAfter($this);
			if ($(".draggingBox").length) {
					$($(".draggingBox .downloadableFile").get().reverse()).each(function(){
						$("#bpe_invisible_dropship").after($("<p><a href=\"/downloads/"+$(this).attr("data-url")+"\" target=\"_blank\">"+$(this).attr("id")+"</a></p>"));
					});
			} else  {
				$("#bpe_invisible_dropship").after($("<p><a href=\"/downloads/"+ui.draggable.attr("data-url")+"\" target=\"_blank\">"+ui.draggable.attr("id")+"</a></p>"));	
			}

			
			hide_menus();
			$.fn.bpeditor.clean(true);
			
		} else if (addTable) {
			prepForInsert();
			dropper.insertAfter($this);
			addTableF($this.next());
		} else if (addingNewsletter) {
			prepForInsert();
			dropper.insertAfter($this);
			addComponent("ComponentNewsletter-"+ui.draggable.attr("group-id"),"<strong>"+LangVars.Mailing_List_Subscribe+":</strong> "+ui.draggable.attr("title"),$(this));
			hide_menus();
			$.fn.bpeditor.clean(true);

		} else if (addingComponent) {
			prepForInsert();
			dropper.insertAfter($this);
			dragComponent(ui.draggable.attr("rel"));
		} else if (addingCheckout) {
			prepForInsert();
			dropper.insertAfter($this);
			addComponent("ComponentShoppingBasket","<strong>"+LangVars.Core+":</strong> "+LangVars.Widget_Checkout+"</strong>",$(this));
			hide_menus();
			$.fn.bpeditor.clean(true);
		} else if (addingInvoice) {
			prepForInsert();
			dropper.insertAfter($this);
			addComponent("ComponentInvoice","<strong>"+LangVars.Core+":</strong> "+LangVars.Invoice_Widget+"</strong>",$(this));
			hide_menus();
			$.fn.bpeditor.clean(true);
		}
		 else if (addingSection) {
			prepForInsert();
			
			$this.after("<div class=\"bpe_split_divider tooltipTarget "+ui.draggable.attr("data-tpl")+"\" alt=\""+ui.draggable.attr("data-tpl")+"\">"+ui.draggable.html()+"</div>");

			hide_menus();
			$.fn.bpeditor.clean(true);

			if (currentTooltip) {
				interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
				clearTimeout(toolTipTimeout);
			}
			currentTooltipItem=0;
			currentTooltip="section";
			toolTipTimeout = setTimeout(tooltip, 500);
		}
		else if (addingGallery) {
			prepForInsert();
			dropper.insertAfter($this);
			if ($(".draggingBox").length) {
				$($(".draggingBox .galleryItem").get().reverse()).each(function(){
					addComponent("ComponentGallery-"+$(this).attr("id").replace("gal",""),"<strong>"+LangVars.Gallery+":</strong> "+$(this).attr("rel"),false);
				});
			} else {
				addComponent("ComponentGallery-"+ui.draggable.attr("id").replace("gal",""),"<strong>"+LangVars.Gallery+":</strong> "+ui.draggable.attr("rel"),false);
			}
			hide_menus();
			$.fn.bpeditor.clean(true);
		} else if (addingCustom) {

			prepForInsert();
			dropper.insertAfter($this);
			if (ui.draggable.attr("zones")=="") {
				if (ui.draggable.attr("data-prod-cat-id")!="") {
					addComponent("ComponentCustom-Core_Related_Products.tpl","<strong>"+LangVars.Extra+":</strong> "+ui.draggable.html(),false,ui.draggable.attr("data-prod-cat-id"));
				} else {
					addComponent("ComponentCustom-"+ui.draggable.attr("data-tpl"),"<strong>"+LangVars.Extra+":</strong> "+ui.draggable.html(),false);					
				}

			} else {
				if (ui.draggable.parents(".CMS_Component_ObsZones").length) {
					error(LangVars.Error_Cant_Nest_Editable_Zones);
					hide_menus();
					$.fn.bpeditor.clean(true);
				} else{
					addComponentWithZones("ComponentCustomZones-"+ui.draggable.attr("data-tpl"),ui.draggable.html(),ui.draggable.parent(),ui.draggable.attr("zones"));					
				}
				
			}
			hide_menus();
			$.fn.bpeditor.clean(true);
		} else if (addingColumns) {
			prepForInsert();
			dropper.insertAfter($this);
	
				if (ui.draggable.parents(".CMS_Component_ObsZones").length) {
					error(LangVars.Error_Cant_Nest_Editable_Zones);
					hide_menus();
					$.fn.bpeditor.clean(true);
				} else{
					addComponentWithZones("ComponentColumnsZones-"+ui.draggable.attr("data-tpl"),ui.draggable.html(),ui.draggable.parent(),ui.draggable.attr("zones"));					
				}
				
			
			hide_menus();
			$.fn.bpeditor.clean(true);
		} else if (addingBlog) {
			if ($("#bpe_area .ComponentBlog").length) {
				error(LangVars.Blog_Already_On_Page);
				return false;
			}
			prepForInsert();
			dropper.insertAfter($this);
			logTrainingClick("addBlogItem");
			addComponent("ComponentBlog","<strong>"+LangVars.Core+":</strong> "+LangVars.Widget_Blog+"",$(this));
			hide_menus();
			$.fn.bpeditor.clean(true);
		} else if (addingSitemap) {
			prepForInsert();
			dropper.insertAfter($this);
			addComponent("ComponentSitemap","<strong>"+LangVars.Core+":</strong> "+LangVars.Sitemap+"</strong>",$(this));
			hide_menus();
			$.fn.bpeditor.clean(true);
		} else {
			setTimeout(function() {	
				$.fn.bpeditor.clean(true);
			}, 5);			
		}
		
		
	}
	$("#editTextImage").unbind().click(function(){
		var textItems = "p.bpe_highlight,h1.bpe_highlight,h2.bpe_highlight,h3.bpe_highlight,h4.bpe_highlight,li.bpe_highlight,pre.bpe_highlight";
		if ($(textItems).length==1 && $(".bpe_highlight").length==1) {
			addText($(".bpe_highlight"));
		}
		if ($(".bpe_highlight.bpe_image").length==1 && $(".bpe_highlight").length==1) {
			editImage($(".bpe_highlight.bpe_image"));
		}
		return false;
	});
	
	$(".CMS_Component_ObsZones .dropzone").droppable({
		accept: ".textareaWrapper,.bpe_image,form,p,h1,h2,h3,h4,h5,pre,li:not(.dragInsertColumns,.dragInsertSection),ul,ol,.bpe_table,.contentImage,.addVideoItem,.responsiveListItem:not(.productOption,.formInputItem,.optionItem,.galleryThumb),div.CMS_Component_Obs:not(.CMS_Component_ObsZones)",
		tolerance:"pointer",
		greedy:true,
		drop: function(e, ui) {
			clearTimeout(lovelyScrollDrag);
			if (ui.draggable.attr("zones")=="" || typeof ui.draggable.attr("zones")=='undefined' ) {

				drop(e,ui,$(this));
			}			
//			
		},
		over: function(e,ui) {
			if (ui.draggable.attr("zones")=="" || typeof ui.draggable.attr("zones")=='undefined' ) {
				$(this).addClass("dropping");
			}
			
			if (!ui.draggable.next().hasClass("dropping") && !ui.draggable.prev().hasClass("dropping")) {
				//$(this).animate({borderTopColor:"#777777",borderRightColor:"#777777",borderBottomColor:"#777777",borderLeftColor:"#777777"},50);					
			}
	    },
	    out: function() {
			$(this).removeClass("dropping");
			//$(this).animate({borderTopColor:"#FFFFFF",borderRightColor:"#FFFFFF",borderBottomColor:"#FFFFFF",borderLeftColor:"#FFFFFF"},50);
	    }
	});
	
	/*
	$("ul .dropzone,ol .dropzone").droppable({
		accept: "#bpe_area li,.dragInsertUL,.dragInsertOL",
		tolerance:"pointer",
		greedy:true,
		
		drop: function(e, ui) {
			clearTimeout(lovelyScrollDrag);
			drop(e,ui,$(this));
			

//			
		},
		over: function(e,ui) {
			$(this).addClass("dropping");
			if (!ui.draggable.next().hasClass("dropping") && !ui.draggable.prev().hasClass("dropping")) {
			//	$(this).animate({borderTopColor:"#777777",borderRightColor:"#777777",borderBottomColor:"#777777",borderLeftColor:"#777777"},50);					
			}
	    },
	    out: function() {
			$(this).removeClass("dropping");
			//$(this).animate({borderTopColor:"#FFFFFF",borderRightColor:"#FFFFFF",borderBottomColor:"#FFFFFF",borderLeftColor:"#FFFFFF"},50);
	    }
	});*/
	$('#bpe_area img,.contentImage img,.addVideoItem img').mousedown(function(event){event.preventDefault();  }).bind('dragstart', function(event) { event.preventDefault(); });
	$("body").css({
	                   '-moz-user-select':'none',
	                   '-webkit-user-select':'none',
	                   'user-select':'none',
	                   '-ms-user-select':'none'
	               });
	
};

function insertOrEditTable (text) {
	var editingtarget;
	var el;
	var classes = "";
	editingtarget=false;
	el=false;
	if ($(".bpe_highlight").length) {
		editingtarget = $(".bpe_highlight");		
		$(".itemTag",editingtarget).remove();
		classes = editingtarget.attr("class");
		classes = classes.replace("bpe_highlight","");
		classes = classes.replace("bpe_table","");				
	}
	if (text!="") {
		var table;
		$.ajax({
		  type: "POST",
		  url: "pageActions.php",
		  data: "pageAction=csv2html&text="+encodeURIComponent(text),
		  success: function(msg){
			if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				table = msg;
				if (text!="") {
					if (editingtarget) {
						editingtarget.before("<div class=\"bpe_table "+classes+"\" id=\""+editingtarget.attr("id")+"\">"+table+"</div>");
						editingtarget.remove();
					} else {
						$("#bpe_area").append("<div class=\"bpe_table "+classes+"\">"+table+"</div>");							
						$("body,html").animate({ scrollTop : $(document).height() }, 500);
					}
				} else {
					editingtarget.remove();
				}
				$(".bpe_help_popup").remove();
				$(".bpe_mask").remove();
				$(".bpe_add_popup").remove();
				$(".bpe_toggler").css("display","none");
				$(document).unbind("keypress");
				assignSaveListener();
				cancelDialogue();
				$.fn.bpeditor.clean(true);

		  }
		});
	} else {
		editingtarget.remove();
		$(".bpe_help_popup").remove();
		$(".bpe_curently_editing").removeClass("bpe_curently_editing");
		$(".bpe_mask").remove();
		$(".bpe_add_popup").remove();
		$(".bpe_toggler").css("display","none");
		$(document).unbind("keypress");
		assignSaveListener();
		$.fn.bpeditor.clean(true);
		cancelDialogue();
	}

}
function html2csv (text) {
	$.ajax({
	  type: "POST",
	  url: "pageActions.php",
	  data: "pageAction=html2csv&text="+encodeURIComponent(text),
	  success: function(msg){
		$("#popupDialogueField textarea").val(msg);
		}
	});
}
function addTableF ($this) {
	
	if ($this.hasClass("dragInsertItem")) {
		var t = LangVars.Add_Table;
		var editTableType="addTable";
	} else {

		if ($(".bpe_highlight").html()=="") {
			var t = LangVars.Add_Table;
			var editTableType="addTable";
		} else {
			var t = LangVars.Edit_Table;
			var editTableType="editTable";	
		}
		
	}
	prepDialogue("<h2>"+t+"</h2><p>"+LangVars.Edit_Table_Text+" <a href='#' id='showTableExample'>"+LangVars.Show_Example+"</a><p>",LangVars.Cancel,cancelDialogue,LangVars.Done,insertOrEditTable,false,true,true,editTableType);

}
function prepForInsert () {
//	$("p,h1,h2,h3,h4,h5,pre,li,.bpe_table,div.CMS_Component_Obs,.bpe_image","#bpe_area").unbind("click").unbind("dblclick");
	//$(".bpe_image,form,p,h1,h2,h3,h4,h5,pre,li,ul,ol,.bpe_table,div.CMS_Component_Obs,.bpe_split_divider",$("#bpe_area")).draggable( "destroy" );
	//$("#bpe_area").selectable("destroy");
	//$("#bpe_area .dropzone,.textEditingArea").droppable( "destroy" );
	hideDragInsert();
	$(document).unbind("keypress");
	$(document).unbind("keydown");
	$(document).unbind("keyup");
//	$(document).unbind("click");
//	$("body").unbind("click");
	$(".bpe_menu_contents").hide();
}
function updateImageLinkVal ($clicked) {
	var linkVal = $clicked.attr("alt");
	$("#newImageLink").val(linkVal);
	$("#newImageLink").parents(".imageContextEditFieldset").removeClass("showingLabel");
	$("#insertInteralLinksInline").hide();
	hidePopdownOrPassthroughSave(false);
}
function lightPagesHeight () {
	if ($("#mainWrapperObs .lightPagesList .pagesScroll").length) {
		var contentLength = $("#mainWrapperObs .lightPagesList .pagesScroll").height() + 50 + 43;
		var availHeight = $("body").height()-80;
		var availHeightMinusPadding = availHeight-50-43-43;
		if (contentLength > availHeight) {
			$("#mainWrapperObs .lightPagesList .pagesScroll").css("height",availHeightMinusPadding+"px");
		}		
	} else {
		var contentLength = $("#mainWrapperObs #downloadsPopdownInner .pagesScroll").height() + 50 + 43;
		var availHeight = $("body").height()-80;
		var availHeightMinusPadding = availHeight-50-43-43;
		if (contentLength > availHeight) {

			$("#mainWrapperObs #downloadsPopdownInner .pagesScroll").css("height",availHeightMinusPadding+"px");
			
		}
	}

	
}
function showHideMenusOnScroll ($this) {
	var st = $this.scrollTop();

	
	if ($(window).height()<400) {
		
		if (st > scrollDirectionTest){
			if ($this.scrollTop()>35) {
				$(".cleverFilterBar,.topBar").stop(true,true).fadeOut();
				$("#header").addClass("withBottomBorder");
			}
		} else {
			$(".cleverFilterBar,.topBar").stop(true,true).fadeIn();
			$("#header").removeClass("withBottomBorder");
		}
		scrollDirectionTest = st;	
	}
}
var scrollDirectionTest = 0;
function pagesScrollMailingListSubs() {
	assignRightPanePaginateEvent("newsletterActions.php","newsletterAction=showEmails&ajax=true&filterCat="+filterSubscribersByCategory+filterSubscribersByCategoryMatchAll+filterSubscribersByStatus+"&start=","#newsletterSubscribersPaneInner");
}
function pagesScrollBottomPane() {
	pagesScrollEvent("pages.php","ajax=true","#adminPages");
}
function pagesScrollBottomLightPages() {
	pagesScrollEvent("pages.php","ajax=true","#lightPagesListInner");
}
function pagesScrollBottomDownloads() {
	pagesScrollEvent("pageActions.php","pageAction=showMoreFiles&ajax=true","#downloadsPopdownInner");
}
function pagesScrollBottomDownloadsFiles() {
	pagesScrollEvent("pageActions.php","pageAction=showMoreFiles&ajax=true","#filesPaneInner");
}
function pagesScrollBottomSnippets() {
	pagesScrollEvent("snippetsActions.php","snippetsAction=page&rightPane=true","#snippetsPane");
}
function pagesScrollBottomBlog() {
	pagesScrollEvent("blogActions.php","blogAction=showEntries&rightPane=true&ajax=true","#blogPane");
}
function pagesScrollBottomProducts() {
	pagesScrollEvent("shopActions.php","shopAction=showProducts&ajax=true&pagination=true","#productsPane");
}
function pagesScrollBottomBookingProducts() {
	pagesScrollEvent("shopActions.php","shopAction=showBookingProducts&ajax=true&pagination=true","#bookingProductsPane");
}
function pagesScrollEvent (url,data,target) {

	var elem = $(target+' .pagesScroll');
	var inner = $(target+' .pagesScroll .insertTarget');

	var cutoff = inner.height()-100;

	
	var el = $(target+" .pagesScroll .showMoreItems");

	if (!el.length) {
		setTimeout(function() {
			scrollWaiting=false;
		}, 500);
		return false;
	}
	working();
	var start = parseInt(el.attr("href"));
	var startNo = start;
	if ($(target+" .pageFilterSearch").length && $(target+" .pageFilterSearch").val()!="" && $(target+" .pageFilterSearch").val()!=LangVars.Search) {
		start = "&search="+$(target+" .pageFilterSearch").val()+"&start="+start;
	} else {
		start = "&start="+start;
	}
	var $insertBefore = el.prev();
	var extra="";
	if (data.match("shopAction=showProducts")) {
		extra = "&filterCat="+filterProductsByCategory;
	}
	if (data.match("snippetsAction=showSnippets")) {
		extra = "&filterCat="+filterSnippetsByCategory;
	}
	$.ajax({
	  type: "POST",
	  url: url,
	  data: data+start+extra,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		setTimeout(function() {
			scrollWaiting=false;
		}, 500);
		if (msg=="") {
			el.remove();
		} else {
			$insertBefore.before("<div class='loaded'>"+msg+"</div>");


			if ($("#adminPages:visible").length) {
				assignSortableListItems($insertBefore.prev(),"listItemHighlight","responsiveListItem");						
				if ($("body").hasClass("selectingAll")) {
					$(target+" .responsiveListItem:not(.breadcrumbPage)").addClass("listItemHighlight");
				}
				selectionTools();
				$(".pagesScroll",$("#adminPages:visible")).lovelyScroll(pagesScrollBottomPane);
			} else {
				setTimeout(function () {
					if (typeof myScroll[elem.attr("id")] !='undefined') {
						myScroll[elem.attr("id")].refresh();						
					}

				}, 10);
			}

			if (data.match("snippetsAction=page")) {
				assignDragAssets($("#snippetsPaneInner .insertTarget .loaded"));
			}


			el.attr("href",startNo+50);

		}
		saved(true);

	  }
	});
		
}
function popdownPaginate (url,data,target) {
	var justFired = false;
	$(target+" .pagesScroll").scroll(function(){
		showHideMenusOnScroll($(this));
		
		justScrolled=true;
		if (scrollTimeout) {
			clearTimeout(scrollTimeout);
		}
		scrollTimeout = setTimeout(function() {
			justScrolled=false;
		},500);
		if (justFired) {
			return false;
		}
		setTimeout(function() {
			justFired=false;
		}, 1500);
		justFired=true;
		var elem = $(target+' .pagesScroll');
		var inner = $(target+' .pagesScroll .insertTarget');

		var cutoff = inner.height()-100;
		if ( elem.scrollTop() + elem.height() >= cutoff) {
			working();
			var el = $(target+" .pagesScroll .showMoreItems");
			var start = parseInt(el.attr("href"));
			var startNo = start;
			if ($(target+" .searchList").val()!="" && $(target+" .searchList").val()!=LangVars.Search) {
				start = "&search="+$(target+" .searchList").val()+"&start="+start;
			} else {
				start = "&start="+start;
			}
			var $insertBefore = el.prev();
			$.ajax({
			  type: "POST",
			  url: url,
			  data: data+start,
			  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

				if (msg=="") {
				} else {
					$insertBefore.before("<div>"+msg+"</div>");
					if ($("#adminPages:visible").length) {
						assignSortableListItems($insertBefore.prev(),"listItemHighlight","responsiveListItem");						
					}


					el.attr("href",startNo+50);

				}
				saved("Items Loaded");

			  }
			});
  		}
	});
}
function showDownloadPopdown (onClickFunction,title) {
	$("body").append(downloadsPopdown);
	$("#downloadsPopdownInner").html($("#downloads").html());

	if (!window.dropzoneFilePopdown) {
		window.dropzoneFilePopdown = new Dropzone("#downloadsPopdownInner",uploadFilePaneDZOptions($("#downloadsPopdownInner .uploadFile")[0]));
	} else {
		window.dropzoneFilePopdown.disable();
		window.dropzoneFilePopdown = new Dropzone("#downloadsPopdownInner",uploadFilePaneDZOptions($("#downloadsPopdownInner .uploadFile")[0]));
	}
	assignHeaderMenus();
	$("#downloadsPopdownTitle").html(title);
	$("#cancelPopdownDownloads").html(LangVars.Cancel);
	prepFancyLabelForms($(".filterBox",$("#downloadsPopdownInner")));
	rebindSearchList($("#downloadsPopdownInner"),"pageActions.php","pageAction=showMoreFiles&ajax=true","#downloadsPopdownInner");
	var minus = $("#downloadsPopdown").height();
	$("#downloadsPopdownOuter").css("opacity","1").css("visibility","visible");
	$("#downloadsPopdownInner .pagesScroll").lovelyScroll(pagesScrollBottomDownloads);
	$(document).unbind("keyup");
	$(window).trigger('resize');

	//$("#downloadsPopdown").animate({top:0},500);
	$("#downloadsPopdown").click(function(e){
		if ($(e.target)[0].nodeName.toLowerCase()=="input") {
			return false;
		}
		hide_header_menus();
		if ($(e.target).parents(".responsiveListItem").length) {
			onClickFunction($(e.target).parents(".responsiveListItem"));
			return false;
		}
		if ($(e.target).hasClass("responsiveListItem")) {
			onClickFunction($(e.target));
			return false;
		}


		return false;
	});
	
	$("#cancelPopdownDownloads").click(function(e){
		$(document).keyup(function(e){
			if (e.keyCode==27) {
				cancelDialogue();
				e.preventDefault();
			}
		});
		e.stopPropagation();
		if ($("#downloadsPopdown").length) {
			var minus = $("#downloadsPopdown").height();
			$("#downloadsPopdownOuter").animate({opacity:"0"},550,function(){
				$("#downloadsPopdownOuter").remove();
			});
			return false;
		}

	});
	
}
function hidePopdownOrPassthroughSave (passthroughFunction) {

	if ($(".bpe_mask_small").length) {
		return false;
	}
	if ($("#lightPagesList").length) {
		$("#lightPagesOuter").animate({opacity:"0"},550,function(){
			$("#lightPagesOuter").remove();
		});
		return false;
	}
	if ($("#downloadsPopdown").length) {
		var minus = $("#downloadsPopdown").height();
		$("#downloadsPopdownOuter").animate({opacity:"0"},550,function(){
			$("#downloadsPopdownOuter").remove();
		});
		return false;
	}
	passthroughFunction();
}
function showLightPages (onClickFunction,action,allowSubs,title) {
	$(document).unbind("keyup");
	$("body").append(lightPages);
	$("#lightPagesOuter").css("opacity","1");
	if ($(window).width()>1260) { 
		$("#lightPagesOuter").css("width",$("#launchPad").css("width"));
	}
	$("#lightPagesTitle").html(title);
	$("#cancelPopdown").html(LangVars.Cancel);
	$.ajax({
	  type: "POST",
	  url: "pageActions.php",
	  data: "pageAction="+action,
	  success: function(msg){
		if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			$("#lightPagesListInner").load("pages.php?to_prevent_cache="+(new Date).getTime(),function(){

				if (action=="showTop") {
					$("#lightPagesListInner #nonLinkingPagesMain").hide();
				} else {
					$("#lightPagesListInner #mainMenuPagesMain").hide();					
				}
//				popdownPaginate("pages.php","ajax=true","#lightPagesListInner");
				assign_page_filter($("#lightPagesListInner"));		

			});
		}
	});
	$("#cancelPopdown").click(function(e){
		if ($("#lightPagesList:visible").length) {
			$(document).keyup(function(e){
				if (e.keyCode==27) {
					cancelDialogue();
					e.preventDefault();
				}
			});
		}
		e.stopPropagation();
		if ($("#lightPagesList").length) {
			$("#lightPagesOuter").animate({opacity:"0"},550,function(){
				$("#lightPagesOuter").remove();
			});
			return false;
		}
	});
	//var minus = $("#lightPagesList").height();
	$("#lightPagesList").css("visibility","visible");
	$("#lightPagesList").removeClass("dontAllowSubs");
	if (!allowSubs) {
		$("#lightPagesList").addClass("dontAllowSubs");
	}
	//$("#lightPagesList").animate({top:0},500);
	$("#lightPagesList").click(function(e){
		hide_header_menus();
		if ($(e.target).parents(".editPageBar").length || $(e.target).hasClass("editPageBar")) {
			if ($(e.target).parents(".editPageBar").length) {
				$this = $(e.target).parents(".editPageBar");
			} else {
				$this = $(e.target);
			}
			if ($(e.target).hasClass("backToMainPages")||$(e.target).parents().hasClass("backToMainPages")) {
			$.ajax({
			  type: "POST",
			  url: "pageActions.php",
			  data: "pageAction=showTop",
			  success: function(msg){
				if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

				$("#lightPagesListInner").load("pages.php?to_prevent_cache="+(new Date).getTime(),function(){
					//popdownPaginate("pages.php","ajax=true","#lightPagesListInner");
					assign_page_filter($("#lightPagesListInner"));		
					saved();
				});
			  }
			});
			
			return false;
			}
			if (($(e.target).hasClass("showSubPages")||$(e.target).parents(".showSubPages").length)&&!$(e.target).hasClass("backToMainPages")) {
				working();
				if ($(e.target).parents(".showSubPages").length) {
					bits = $(e.target).parents(".showSubPages").attr("id").split("|");
				} else {
					bits = $(e.target).attr("id").split("|");	
				}
				
				var id = bits[0];
				var type = bits[1];
				$.ajax({
				  type: "POST",
				  url: "pageActions.php",
				  data: "pageAction=viewSubs&id="+id+"&type="+type,
				  success: function(msg){
					if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

					$("#lightPagesListInner").load("pages.php?to_prevent_cache="+(new Date).getTime(),function(){
						//popdownPaginate("pages.php","ajax=true","#lightPagesListInner");
						assign_page_filter($("#lightPagesListInner"));		
						saved();
					});
				  }
				});
				return false;
			}
			logTrainingClick("choosePageOrDoneForWebsiteLink");
			onClickFunction($this);
			return false;

		}
		return false;
	});
}
function showOrderPopdown (content) {
	$("#dragBoundry").append(orderPopdown);
	if ($("#orderPopdownListInner .pagesScroll .lovelyScrollContents").length) {
		$("#orderPopdownListInner .pagesScroll .lovelyScrollContents").html(content.html());
	} else {
		$("#orderPopdownListInner .pagesScroll").html(content.html());		
	}

	$("#mainWrapperObs .orderPopdownList .customerAddress").autosize();

	var minus = $("#orderPopdownList").height();
	$("#orderPopdownTitle").text(LangVars.Order_Details);
	$("#cancelOrderPopdown").text(LangVars.Close)
	$("#orderPopdownList").css("top","-"+minus+"px").css("visibility","visible");
	$("#orderPopdownList").css("top","0");
//	$("#orderPopdownList").animate({top:0},500,function(){
//	$("#orderPopdownListInner .pagesScroll").lovelyScroll();
//	});

	$(window).trigger("resize");
	setTimeout(function () {
	$("#orderPopdownListInner .pagesScroll").lovelyScroll();		
	}, 400);


	
	$("#cancelOrderPopdown").click(function(e){
		
		if ($(e.target).hasClass("orderEmail")) {
			window.location=$(e.target).attr("href");
		} else {
			if ($("#orderPopdownOuter:visible").length) {
				var minus = $("#orderPopdownList").height();
				$("#orderPopdownList").animate({top:"-"+minus+"px"},550,function(){
					$("#orderPopdownOuter").remove();
				});
				return false;
			}
		}
		
		return false;
	});
}
var downloadsPopdown = $("<div id='downloadsPopdownOuter'><div id='downloadsPopdown'><div id='downloadsPopdownTitleBar'><span id='downloadsPopdownTitle'></span><span id='cancelPopdownDownloads'></span></div><div id='downloadsPopdownInset'><div id='downloadsPopdownInner'></div></div></div></div>");
var lightPages = $("<div id='lightPagesOuter'><div id='lightPagesList'><div id='lightPagesTitleBar'><span id='lightPagesTitle'></span><span id='cancelPopdown'></span></div><div id='lightPagesListInset'><div id='lightPagesListInner' class='lightPagesList'></div></div></div></div>");
var orderPopdown = $("<div id='orderPopdownOuter'><div id='orderPopdownList'><div id='orderPopdownTitleBar'><span id='orderPopdownTitle'></span><span id='cancelOrderPopdown'></span></div><div id='orderPopdownListInset'><div id='orderPopdownListInner' class='orderPopdownList'><div class='pagesScroll'></div></div></div></div></div>");
var newComponentDropship = "<div id='bpe_component_dropship'><div id='componentsList' class='clearfix'><div class='clearfix'></div></div></div>";
var newImage;
var newVideo;

function assign_click () {

	$("#mainWrapperObs #dragInsert li.dragInsertItem").draggable({
		appendTo: '#dragBoundry'
		,helper: 'clone'
		,zIndex: 1000
		,scroll: false
		,containment: "#dragBoundry"
		,refreshPositions:true
		,revert: 'invalid'
		,start: function () {
			if ($(this).hasClass("greyedOut"))  {
				return false;
			}
			if ($("body").hasClass("slideoverRightPane")) {
				$("#rightPaneMask").fadeOut();
				$("#dragInsert").fadeOut();
				$(".slideoverRightPane").removeClass("slideoverRightPane");				
			}
			if (!$("#bpe_area #bpe_text_dropship").length && !$("#bpe_area #bpe_image_dropship").length && !$("#bpe_area #bpe_component_dropship").length) {
			if ($(".assetPane:visible").length) {
				$("body").attr("drag-pane",$("body").attr("pane"));	
			}
			$("body").removeAttr("previous-pane");
			$("body").attr("pane","editContent");
			hideDragInsert();
			hideToolTips(false);
			}

		}
		,refreshPositions:true
		,drag: function(event, ui){
			// make .textEditingArea scroll when near top or bottom
				var topZoneTop = 0;
				var topZoneBottom = topZoneTop+160;
				var topZoneLeft = 0;
				var topZoneRight = topZoneLeft + $("#dragBoundry").width();

				var bottomZoneTop = $(window).height()-50;
				var bottomZoneBottom = $(window).height();
				var bottomZoneLeft = 0;
				var bottomZoneRight = $("#dragBoundry").width();

				var posTop = event.pageY - $("body").scrollTop();
				var posLeft = event.pageX;
				clearTimeout(lovelyScrollDrag);
				if (posTop > topZoneTop && posTop < topZoneBottom && posLeft > topZoneLeft && posLeft < topZoneRight) {
//					$(".textEditingArea").lovelyScrollMove(7);


					$("body,html").scrollTop($("body").scrollTop()-7);
					lovelyScrollDrag = setInterval(function(){
					$("body,html").scrollTop($("body").scrollTop()-7);
//						$(".textEditingArea").lovelyScrollMove(7);
					},30);
				}

				if (posTop > bottomZoneTop && posTop < bottomZoneBottom && posLeft > bottomZoneLeft && posLeft < bottomZoneRight) {
//					$(".textEditingArea").lovelyScrollMove(-7);
					$("body,html").scrollTop($("body").scrollTop()+7);
					lovelyScrollDrag = setInterval(function(){
						$("body,html").scrollTop($("body").scrollTop()+7);
//						$(".textEditingArea").lovelyScrollMove(-7);
					},30);
				}
		}
	});
	$("#bpe_selection_menu .showMenu").unbind().click(function(){
		$(document).unbind("keydown");
		/*$("#bpe_area").selectable("destroy");
		$(".ui-selectee").removeClass("ui-selectee");
		$(".ui-selected").removeClass("ui-selected");
		$(".ui-selectable").removeClass("ui-selectable");*/
		assign_sort();
		$("#renamePallet").remove();
		$(this).next().show();
		$("p,h1,h2,h3,h4,h5,pre,li,ul,ol,.bpe_image img","#bpe_area").unbind();
		return false;
	});
	$("#bpe_menu_init").unbind().click(function(){
		$(document).unbind("keydown");
		/*$("#bpe_area").selectable("destroy");
		$(".ui-selectee").removeClass("ui-selectee");
		$(".ui-selected").removeClass("ui-selected");
		$(".ui-selectable").removeClass("ui-selectable");*/
		assign_sort();
		$("#renamePallet").remove();
		$(this).next().show();
		$("p,h1,h2,h3,h4,h5,pre,li,ul,ol,.bpe_image img","#bpe_area").unbind();
		return false;
	});
	
	
	
	// add video 
	
	
	
	
	$(".bpe_upload_video").unbind("click");
	$(".bpe_upload_video").click(function(){
		//$(".bpe_menu_contents").hide();
		
		return false;
	});
	
	$(".bpe_add_youtube").unbind("click");
	$(".bpe_add_youtube").click(function(){
//			$(".bpe_menu_contents").hide();
		$(".drag").remove();
		$(".bpe_area_wrapper").addClass("bpe_curently_editing");
		images = $("#bpe_vids").html();
		$("body").append("<div class='bpe_mask_small'></div><div class='bpe_popup_small'><div class='bpe_popup_inner_small'><div class='bpe_popup_handle'></div><img src='graphics/bpeditor/help.png' alt='To upload a file to use on your website click the ‘Choose file(s) to upload’ button. You will then see a window contianing the contents of your computer. Select more than one file by holding down the ‘Command/Apple key’ on a mac or ‘Control’ key in Windows.' class='bpe_help'/><h2>Upload New Video</h2><label class='bpe_label'>Enter YouTube video address:</label><input type='text' class='bpe_input' id='youtubeURL'/><div class='clear'></div><div id='add_video_thumb' style='display:block'><p>Choose a ‘Click to play’ image: (Optional)</p><div class='upload_button_wrapper thumb'><span id='bpe_upload_button_thumb'></span></div><div class='files_selected thumb'></div><div class='uploader_wrapper thumb'><span class='upload_info thumb'><span class='upload_status thumb'>Uploading</span> file <span class='current_file thumb'></span> of <span class='total_files thumb'></span></span><div class='uploader thumb'><div class='uploaderInner thumb'></div></div></div><div class='clear'></div></div><div class='bpe_savecancel bpe_add_image_button' style='clear:both;'><a href='#' class='bpe_save'><span>Done</span></a><a href='#' class='bpe_cancel'><span>Cancel</span></a></div></div></div>");
		$(".bpe_mask_small,.bpe_popup_small").click(function(){return false;});
		//assign_help();
		init_youtube_thumb_uploader();

		$('.start_upload').fadeTo(0,0.5);
		$(".start_upload").addClass("disabled");
//			$('.bpe_save').fadeTo(0,0.5);
//			$(".bpe_save").addClass("disabled");

		$(".bpe_mask_small").css("height",$(document).height()+"px");
		$(".bpe_mask_small").fadeTo(0,0.4);
		height = $(".bpe_popup_small").height()+40
		otop = $(window).height()-height;
		otop = otop/2;
		otop = otop-30;
		var width = $(".bpe_popup_small").width()+40
		var left = $(window).width()-width;
		left = left/2;
		$(".bpe_popup_small").draggable({handle: ".bpe_popup_handle"});
		$(".bpe_popup_small").css("top",$(document).scrollTop()+otop+"px");
		$(".bpe_popup_small").css("left",left+"px");
		$(document).unbind("keypress");
		$(document).keypress(function (e) {
	      if (e.keyCode == 27) {
			if ($(".bpe_help_popup").length>0) {
				$(".bpe_help_popup").remove();
			} else {
				swfu.destroy();
				$(".bpe_popup_small").remove();
				$('.bpe_mask_small').remove();					
			}
			e.preventDefault();
	      }
	    });
		$(".bpe_save").click(function(){
			if (!$(this).hasClass("disabled")){
			/*	swfu.destroy();
				$(".bpe_help_popup").remove();
				$(".bpe_mask_small").remove();
				$(".bpe_popup_small").remove();
				$(".bpe_toggler").css("display","none");
				$(document).unbind("keypress");
				assignSaveListener();*/
			}
			return false;
		});
		$(".bpe_cancel").click(function(){
			swfu.destroy();
			$(".bpe_help_popup").remove();
			$(".bpe_mask_small").remove();
			$(".bpe_popup_small").remove();
			$(".bpe_toggler").css("display","none");
			$(document).unbind("keypress");
			assignSaveListener();
			return false;
		});
		return false;
	});

	//
	$(".bpe_add_table, .bpe_edit_table").unbind("click");
	$(".bpe_add_table, .bpe_edit_table").click(function(){
		addTableF($(this));
		
		return false;
	});
	//
	$(".bpe_add_text, .bpe_edit_menu").unbind("click");
	var dontClickIfVisible = "#bpe_text_dropship,#bpe_video_dropship,#bpe_image_dropship,#bpe_component_dropship,#bpe_invisible_dropship,.editingImage";
	$("#dragInsertP,#dragInsertH1,#dragInsertH2,#dragInsertH3,#dragInsertH4,#dragInsertUL,#dragInsertOL,#dragInsertPre").unbind("click").click(function(event){		
		if ($(dontClickIfVisible).length) {
			return false;
		}
		if ($(this).attr("id")=="dragInsertP") {
			var el = "p";
		}
		if ($(this).attr("id")=="dragInsertH1") {
			var el = "h1";
		}
		if ($(this).attr("id")=="dragInsertH2") {
			var el = "h2";
		}
		if ($(this).attr("id")=="dragInsertH3") {
			var el = "h3";
		}
		if ($(this).attr("id")=="dragInsertH4") {
			var el = "h4";
		}
		if ($(this).attr("id")=="dragInsertPre") {
			var el = "pre";
		}
		var oel = false;
		if ($(this).attr("id")=="dragInsertOL") {
			var el = "li";
			var oel = "ol";
		}
		if ($(this).attr("id")=="dragInsertUL") {
			var el = "li";
			var oel = "ul";
		}
		if (!ignoreClickCatchup) {
			hidePanes();
			$(".bpe_highlight").removeClass("bpe_highlight");
			$(".bpe_toggler").hide();
			
			var newText=$("<"+el+" class='bpe_highlight addText'></"+el+">");
			
			$("#bpe_area").append(newText);
			addText(newText,oel);				
		}
		return false;
	});
	
	$("#dragInsertImage").unbind("click").click(function(){
		if ($(this).hasClass("greyedOut")) {
			return false;
		}
		if ($(dontClickIfVisible).length) {
			return false;
		}
		if (!ignoreClickCatchup) {
			hidePanes();
			
			prepForInsert();
			$("#bpe_area").append(newImage);
			dragImage();
			$(".textEditingArea").animate({ scrollTop : $("#bpe_area").height() }, 500);
		}
	
		return false;
	});
	$("#dragInsertTable").unbind("click").click(function(){
		if ($(dontClickIfVisible).length) {
			return false;
		}
		if (!ignoreClickCatchup) {
			hidePanes();
			
			addTableF($(this));
		}
		return false;
	});
	
	$(".drag_insert_subscribe").unbind("click").click(function(){
			addComponent("ComponentNewsletter-"+$(this).attr("group-id"),"<strong>"+LangVars.Mailing_List_Subscribe+":</strong> "+$(this).attr("title"),$(this));
			$.fn.bpeditor.clean(true);
			$(".textEditingArea").animate({ scrollTop : $("#bpe_area").height() }, 500);
			setTimeout(function() {
				$("#bpe_area .CMS_Component_Obs:last").addClass("bpe_highlight");
			}, 10);
	});
	/*
	$(".dragInsertComponent").unbind("click").click(function(){
		if ($(this).hasClass("greyedOut")) {
			return false;
		}
		if ($(dontClickIfVisible).length) {
			return false;
		}
		if (!ignoreClickCatchup) {
			hidePanes();
			
			prepForInsert();
			$("#bpe_area").append(newComponentDropship);
			dragComponent($(this).attr("rel"));
			setTimeout(function() {
				$(".textEditingArea").animate({ scrollTop : $("#bpe_area").height() }, 500);
			}, 10);

		}
	
		return false;
	});
	$(".dragInsertCustom").unbind("click").click(function(){
		if ($(this).hasClass("greyedOut")) {
			return false;
		}
		if ($(dontClickIfVisible).length) {
			return false;
		}
		if (!ignoreClickCatchup) {
			hidePanes();
			prepForInsert();
			
			if ($(this).attr("zones")=="") {
				addComponent("ComponentCustom-"+$(this).attr("data-tpl"),"<strong>"+LangVars.Extra+":</strong> "+$(this).html(),false);				
			} else {
				if ($(this).parents(".CMS_Component_ObsZones").length) {
					error(LangVars.Error_Cant_Nest_Editable_Zones);
					hide_menus();
					$.fn.bpeditor.clean(true);
				} else{
					addComponentWithZones("ComponentCustomZones-"+$(this).attr("data-tpl"),$(this).html(),$(this).parent(),$(this).attr("zones"));					
				}
				
			}
			$.fn.bpeditor.clean(true);
			$(".textEditingArea").animate({ scrollTop : $("#bpe_area").height() }, 500);
			setTimeout(function() {
				$("#bpe_area .CMS_Component_Obs:last").addClass("bpe_highlight");
			}, 10);
			

		}
	
		return false;
	});
	$(".dragInsertColumns").unbind("click").click(function(){
		if ($(this).hasClass("greyedOut")) {
			return false;
		}
		if ($(dontClickIfVisible).length) {
			return false;
		}
		if (!ignoreClickCatchup) {
			hidePanes();
			hideDragInsert();
			prepForInsert();

			if ($(this).parents(".CMS_Component_ObsZones").length) {
				error(LangVars.Error_Cant_Nest_Editable_Zones);
				hide_menus();
				$.fn.bpeditor.clean(true);
			} else{
				addComponentWithZones("ComponentColumnsZones-"+$(this).attr("data-tpl"),$(this).html(),$(this).parent(),$(this).attr("zones"));					
			}
			
			$.fn.bpeditor.clean(true);
			$(".textEditingArea").animate({ scrollTop : $("#bpe_area").height() }, 500);
			setTimeout(function() {
				$("#bpe_area .CMS_Component_Obs:last").addClass("bpe_highlight");
			}, 10);
			

		}
	
		return false;
	});*/
	/*
	$(".dragInsertSection").unbind("click").click(function(){
		if ($(this).hasClass("greyedOut")) {
			return false;
		}
		if ($(dontClickIfVisible).length) {
			return false;
		}
		if (!ignoreClickCatchup) {
			hidePanes();
			prepForInsert();
			hideDragInsert();
			$("#bpe_area").append("<div class=\"bpe_split_divider tooltipTarget "+$(this).attr("data-tpl")+"\" alt=\""+$(this).attr("data-tpl")+"\">"+$(this).html()+"</div>");

			$.fn.bpeditor.clean(true);
			$(".textEditingArea").animate({ scrollTop : $("#bpe_area").height() }, 500);
			$("#dragSectionItems .bpe_menu_sub").each(function(){
				if ($("#bpe_area ."+$(this).attr("data-tpl")).length) {
					$(this).addClass("greyedOut");
				}
			});
			if (currentTooltip) {
				interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
				clearTimeout(toolTipTimeout);
			}
			currentTooltipItem=0;
			currentTooltip="section";
			toolTipTimeout = setTimeout(tooltip, 500);
		}
	
		return false;
	});*/
	$("#dragInsertCheckout").unbind("click").click(function(){
		if ($(dontClickIfVisible).length) {
			return false;
		}
		hidePanes();
		
		addComponent("ComponentShoppingBasket","<strong>"+LangVars.Core+":</strong> "+LangVars.Checkout+"</strong>",$(this));
		hide_menus();
		$.fn.bpeditor.clean(true);
		$(".textEditingArea").animate({ scrollTop : $("#bpe_area").height() }, 500);
		setTimeout(function() {
			$("#bpe_area .CMS_Component_Obs:last").addClass("bpe_highlight");
		}, 10);
	});
	$("#dragInsertBlog").unbind("click").click(function(){
		if ($(dontClickIfVisible).length) {
			return false;
		}
		if ($("#bpe_area .ComponentBlog").length) {
			error(LangVars.Blog_Already_On_Page);
			return false;
		}
		
		hidePanes();
		logTrainingClick("addBlogItem");
		addComponent("ComponentBlog","<strong>"+LangVars.Core+":</strong> "+LangVars.Blog+"",$(this));
		hide_menus();
		$.fn.bpeditor.clean(true);
		$(".textEditingArea").animate({ scrollTop : $("#bpe_area").height() }, 500);
		setTimeout(function() {
			$("#bpe_area .CMS_Component_Obs:last").addClass("bpe_highlight");
		}, 10);
	});
	$("#dragInsertSitemap").unbind("click").click(function(){
		if ($(dontClickIfVisible).length) {
			return false;
		}
		hidePanes();
		
		addComponent("ComponentSitemap","<strong>"+LangVars.Core+":</strong> "+LangVars.Sitemap+"</strong>",$(this));
		hide_menus();
		$.fn.bpeditor.clean(true);
		$(".textEditingArea").animate({ scrollTop : $("#bpe_area").height() }, 500);
		setTimeout(function() {
			$("#bpe_area .CMS_Component_Obs:last").addClass("bpe_highlight");
		}, 10);
	});
};
function init_vid_uploader () {
	
	$(".start_upload:not(.disabled,.thumb)").click(function(){
		var width = $('.width_input').val();
		keepaliveok=false;
		swfu_vid.startUpload();
		return false;
	});
	
	function uploadProgress(file, bytesLoaded) {
		try {
			var percent = Math.ceil((bytesLoaded / file.size) * 100);
			$(".uploader:not(.thumb)").css("backgroundPosition","-"+percent+"% 2px");
		} catch (ex) {
			this.debug(ex);
		}
	}
	
	function fileDialogComplete (numFilesSelected, numFilesQueued) {
		if (numFilesQueued == 1) {
			$(".files_selected:not(.thumb)").html(LangVars.Selected+": 1");
			$(".start_upload:not(.thumb)").removeClass("disabled");
			$('.start_upload:not(.thumb)').fadeTo(0,1);
			$(".total_files:not(.thumb)").html(numFilesQueued);
		} else if (numFilesQueued > 1) {
			$(".files_selected:not(.thumb)").html(LangVars.Selected+": "+numFilesQueued);				
			$(".start_upload:not(.thumb)").removeClass("disabled");
			$('.start_upload:not(.thumb)').fadeTo(0,1);
			$(".total_files:not(.thumb)").html(numFilesQueued);
		}
	}
	var aborted = false;
	function uploadStart (file) {
		var total = $(".total_files:not(.thumb)").html();
		var queued = this.getStats().files_queued;
		var current = total-queued+1;
		if (parseFloat(file.size) > parseFloat($("#maxUploadSize").val())){
			//var m = parseFloat($("#maxUploadSize").val())/1024;
			//m = m/1024;
			error(LangVars.File_Too_Large);
			swfu_vid.cancelQueue();
			aborted=true;
			return false;
		}
		aborted=false;
		$(".uploader_wrapper:not(.thumb)").slideDown(500);
		$(".uploader:not(.thumb)").css("backgroundPosition","-0% 2px");
		$(".bpe_save:not(.thumb)").addClass("disabled");
		$('.bpe_save:not(.thumb)').fadeTo(0,0.5);
		$(".current_file:not(.thumb)").html(current);
		swfu_vid.refreshCookies();
	}
	function uploadComplete () {
		$(".uploader:not(.thumb)").css("backgroundPosition","-100% 2px");
		if (this.getStats().files_queued === 0) {
			if (aborted==false) {
				$(".bpe_save:not(.thumb)").removeClass("disabled");
				$('.bpe_save:not(.thumb)').fadeTo(0,1);	
				$(".upload_status:not(.thumb)").html(LangVars.Completed);
				swfu_vid.destroy();
				$("#upload_video_buttons").hide();
				init_vid_thumb_uploader();					
			}
			
		} else {
			swfu_vid.startUpload();
		}
	}
	function uploadSuccess (file, serverData, receivedResponse) {
		keepaliveok=true;
		if (serverData=="limit") {
			error(LangVars.Storage_Limit_Reached);
			swfu_vid.cancelQueue();
			aborted=true;
		} else {
			if (this.getStats().files_queued === 0) {
			
			$("#videoList").load("mediaActions.php?mediaAction=show&to_prevent_cache="+(new Date).getTime(),function(){
				$("#bpe_dropship_videos").html($("#videoList").html());
				$("#addedVideo").val(serverData);
				$("#videosPaneInner .insertTarget").html($("#videoList").html());
				$("#videosPaneInner").lovelyScroll();
				
			});
			$("#add_video_thumb").show();
//			$("#upload_video_buttons").hide();
			}
		}
	}
	swfu_vid = new SWFUpload({
		upload_url : "/admin/mediaActions.php",
		flash_url : "javascripts/swfupload.swf",
		post_params: {"mediaAction" : "addItem"},
		file_size_limit : "0",
		file_types : "*.mp4;*.flv;*.mov;*.m4v",
		file_types_description : "Video Files",
		file_upload_limit : 100,
		file_queue_limit : 0,
		custom_settings : {
			progressTarget : "fsUploadProgress",
			cancelButtonId : "btnCancel"
		},
		debug: false,
		file_post_name: "file",
		// Button settings
		button_image_url: "graphics/uploadButton.png",
		button_width: "193",
		button_height: "21",
		button_placeholder_id: "bpe_upload_button",
		button_text: '<span class="theFont">Choose file to upload</span>',
		button_text_style: ".theFont { font-size: 12; text-align: center; color:#FFFFFF; font-family:Arial; } .theFont:hover { background:none; }",
		button_text_left_padding: 0,
		button_text_top_padding: 1,
		button_window_mode: "transparent",
		button_cursor: SWFUpload.CURSOR.HAND,
		button_action : SWFUpload.BUTTON_ACTION.SELECT_FILE,
		// The event handler functions are defined in handlers.js
		//file_queued_handler : fileQueued,
		//file_queue_error_handler : fileQueueError,
		file_dialog_complete_handler : fileDialogComplete,
		upload_start_handler : uploadStart,
		upload_progress_handler : uploadProgress,
//			upload_error_handler : uploadError,
		upload_success_handler : uploadSuccess,
		upload_complete_handler : uploadComplete,
		//queue_complete_handler : queueComplete	// Queue plugin event
	});
}
function init_vid_thumb_uploader () {

	$(".start_upload.thumb").click(function(){
		if (!$(this).hasClass("disabled")) {
			swfu.addPostParam("mediaId",$("#addedVideo").val());
			swfu.startUpload();
		}
		
		return false;
	});
	
	function uploadProgress_thumb(file, bytesLoaded) {
		try {
			var percent = Math.ceil((bytesLoaded / file.size) * 100);
			$(".uploader.thumb").css("backgroundPosition","-"+percent+"% 2px");
		} catch (ex) {
			this.debug(ex);
		}
	}
	
	function fileDialogComplete_thumb (numFilesSelected, numFilesQueued) {
		if (numFilesQueued == 1) {
			$(".files_selected.thumb").html(LangVars.Selected+": 1");
			$(".start_upload.thumb").removeClass("disabled");
			$('.start_upload.thumb').fadeTo(0,1);
			$(".total_files.thumb").html(numFilesQueued);
		} else if (numFilesQueued > 1) {
			$(".files_selected.thumb").html(LangVars.Selected+": "+numFilesQueued);				
			$(".start_upload.thumb").removeClass("disabled");
			$('.start_upload.thumb').fadeTo(0,1);
			$(".total_files.thumb").html(numFilesQueued);
		}
	}
	aborted=false;
	function uploadStart_thumb (file) {
		var total = $(".total_files.thumb").html();
		var queued = this.getStats().files_queued;
		var current = total-queued+1;
		if (parseFloat(file.size) > parseFloat($("#maxUploadSize").val())){
			//var m = parseFloat($("#maxUploadSize").val())/1024;
			//m = m/1024;
			error(LangVars.File_Too_Large);
			swfu.cancelQueue();
			aborted=true;
			return false;
		}
		aborted=false;
		$(".uploader_wrapper.thumb").slideDown(500);
		
		$(".uploader.thumb").css("backgroundPosition","-0% 2px");
		
		$(".bpe_save").addClass("disabled");
		$('.bpe_save').fadeTo(0,0.5);
		
		$(".current_file.thumb").html(current);
		swfu.refreshCookies();
	}
	function uploadComplete_thumb () {
		$(".uploader.thumb").css("backgroundPosition","-100% 2px");
		if (this.getStats().files_queued === 0) {
			if (aborted==false) {
			$(".bpe_save").removeClass("disabled");
			$('.bpe_save').fadeTo(0,1);	
			$(".upload_status.thumb").html(LangVars.Completed);
			}
		} else {
			swfu.startUpload();
		}
	}
	function uploadSuccess_thumb (file, serverData, receivedResponse) {
		if (serverData=="limit") {
			error(LangVars.Storage_Limit_Reached);
			swfu.cancelQueue();
			aborted=true;
		} else {
			if (this.getStats().files_queued === 0) {
				$("#videoList").load("mediaActions.php?mediaAction=show&to_prevent_cache="+(new Date).getTime(),function(){
					$("#bpe_dropship_videos").html($("#videoList").html());
					$("#addedVideo").val(serverData);
					$("#videosPaneInner .insertTarget").html($("#videoList").html());
					$("#videosPaneInner").lovelyScroll();
				});
			}
		}
	}
	swfu = new SWFUpload({
		upload_url : "/admin/mediaActions.php",
		flash_url : "javascripts/swfupload.swf",
		post_params: {"mediaAction" : "addThumb"},
		file_size_limit : "0",
		button_window_mode: "transparent",
		file_types : "*.jpg;*.gif;*.jpeg;*.png",
		file_types_description : "Image Files",
		file_upload_limit : 100,
		file_queue_limit : 0,
		debug: false,
		file_post_name: "image",
		// Button settings
		button_image_url: "graphics/uploadButton.png",
		button_width: "193",
		button_height: "21",
		button_placeholder_id: "bpe_upload_button_thumb",
		button_text: '<span class="theFont">Choose file to upload</span>',
		button_text_style: ".theFont { font-size: 12; text-align: center; color:#FFFFFF; font-family:Arial; } .theFont:hover { background:none; }",
		button_text_left_padding: 0,
		button_text_top_padding: 1,
		button_cursor: SWFUpload.CURSOR.HAND,
		button_action : SWFUpload.BUTTON_ACTION.SELECT_FILE, 
		// The event handler functions are defined in handlers.js
		//file_queued_handler : fileQueued,
		//file_queue_error_handler : fileQueueError,
		file_dialog_complete_handler : fileDialogComplete_thumb,
		upload_start_handler : uploadStart_thumb,
		
		upload_progress_handler : uploadProgress_thumb,
		//upload_error_handler : uploadError,
		upload_success_handler : uploadSuccess_thumb,
		upload_complete_handler : uploadComplete_thumb,
		//queue_complete_handler : queueComplete	// Queue plugin event
	});
}
function init_youtube_thumb_uploader () {
	$(".bpe_save").click(function(){
		if (!$(this).hasClass("disabled")) {
			if (swfu.getStats().files_queued == 0) {
				$.ajax({
				  type: "POST",
				  url: "mediaActions.php",
				  data: "mediaAction=addItem&filenameText="+$("#youtubeURL").val(),
				  success: function(msg){
					swfu.destroy();
					$(".bpe_help_popup").remove();
					$(".bpe_mask_small").remove();
					$(".bpe_popup_small").remove();
					$(".bpe_toggler").css("display","none");
					$(document).unbind("keypress");
					assignSaveListener();
					$(".bpe_videos").load("mediaActions.php?mediaAction=show&to_prevent_cache="+(new Date).getTime(),function(){
						//assignVideos();
						assign_click();
						//assign_menus($(".bpe_videos"));
					});
				  }
				});
			} else {
				swfu.addPostParam("filenameText",$("#youtubeURL").val());
				swfu.startUpload();
				
			}
		}
		
		return false;
	});
	
	function uploadProgress_thumb(file, bytesLoaded) {
		try {
			var percent = Math.ceil((bytesLoaded / file.size) * 100);
			$(".uploader.thumb").css("backgroundPosition","-"+percent+"% 2px");
		} catch (ex) {
			this.debug(ex);
		}
	}
	
	function fileDialogComplete_thumb (numFilesSelected, numFilesQueued) {
		if (numFilesQueued == 1) {
			$(".files_selected.thumb").html(LangVars.Selected+": 1");
			$(".start_upload.thumb").removeClass("disabled");
			$('.start_upload.thumb').fadeTo(0,1);
			$(".total_files.thumb").html(numFilesQueued);
		} else if (numFilesQueued > 1) {
			$(".files_selected.thumb").html(LangVars.Selected+": "+numFilesQueued);				
			$(".start_upload.thumb").removeClass("disabled");
			$('.start_upload.thumb').fadeTo(0,1);
			$(".total_files.thumb").html(numFilesQueued);
		}
	}
	var aborted=false;
	function uploadStart_thumb (file) {
		total = $(".total_files.thumb").html();
		queued = this.getStats().files_queued;
		current = total-queued+1;
		if (parseFloat(file.size) > parseFloat($("#maxUploadSize").val())){
			//var m = parseFloat($("#maxUploadSize").val())/1024;
			//m = m/1024;
			error(LangVars.File_Too_Large);
			swfu.cancelQueue();
			aborted=true;
			return false;
		}
		aborted=false;
		$(".uploader_wrapper.thumb").slideDown(500);

		$(".uploader.thumb").css("backgroundPosition","-0% 2px");

		$(".bpe_save").addClass("disabled");
		$('.bpe_save').fadeTo(0,0.5);
		
		$(".current_file.thumb").html(current);
		swfu.refreshCookies();
	}
	function uploadComplete_thumb () {
		$(".uploader.thumb").css("backgroundPosition","-100% 2px");
		if (this.getStats().files_queued === 0) {
			if (aborted==false) {
			$(".bpe_save").removeClass("disabled");
			$('.bpe_save').fadeTo(0,1);	
			$(".upload_status.thumb").html(LangVars.Completed);
			}
		} else {
			swfu.startUpload();
		}
	}
	function uploadSuccess_thumb (file, serverData, receivedResponse) {
		if (serverData=="limit") {
			error(LangVars.Storage_Limit_Reached);
			swfu.cancelQueue();
			aborted=true;
		} else {
			if (this.getStats().files_queued === 0) {
				swfu.destroy();
				$(".bpe_help_popup").remove();
				$(".bpe_mask_small").remove();
				$(".bpe_popup_small").remove();
				$(".bpe_toggler").css("display","none");
				$(document).unbind("keypress");
				assignSaveListener();
				$(".bpe_videos").load("mediaActions.php?mediaAction=show&to_prevent_cache="+(new Date).getTime(),function(){
					//assignVideos();
					assign_click();
					//assign_menus($(".bpe_videos"));
				});
				$(".bpe_videos").load("mediaActions.php?mediaAction=show&to_prevent_cache="+(new Date).getTime(),function(){
					//assignVideos();
					assign_click();
					//assign_menus($(".bpe_videos"));
				});
			}
		}
	}
	swfu = new SWFUpload({
		upload_url : "/admin/mediaActions.php",
		flash_url : "javascripts/swfupload.swf",
		post_params: {"mediaAction" : "addItem"},
		file_size_limit : "0",
		file_types : "*.jpg;*.gif;*.jpeg;*.png",
		file_types_description : "Image Files",
		file_upload_limit : 100,
		file_queue_limit : 0,
		debug: false,
		file_post_name: "image",
		button_window_mode: "transparent",
		// Button settings
		button_image_url: "graphics/uploadButton.png",
		button_width: "193",
		button_height: "21",
		button_placeholder_id: "bpe_upload_button_thumb",
		button_text: '<span class="theFont">Choose file to upload</span>',
		button_text_style: ".theFont { font-size: 12; text-align: center; color:#FFFFFF; font-family:Arial; } .theFont:hover { background:none; }",
		button_text_left_padding: 0,
		button_text_top_padding: 1,
		button_cursor: SWFUpload.CURSOR.HAND,
		button_action : SWFUpload.BUTTON_ACTION.SELECT_FILE, 
		// The event handler functions are defined in handlers.js
		//file_queued_handler : fileQueued,
		//file_queue_error_handler : fileQueueError,
		file_dialog_complete_handler : fileDialogComplete_thumb,
		upload_start_handler : uploadStart_thumb,
		
		upload_progress_handler : uploadProgress_thumb,
		//upload_error_handler : uploadError,
		upload_success_handler : uploadSuccess_thumb,
		upload_complete_handler : uploadComplete_thumb,
		//queue_complete_handler : queueComplete	// Queue plugin event
	});
}

function miniSearchStart (obj) {
	if ($(window).width()<0) {
		$(".showLeftPane:visible,.topBarTitle:visible,.topBarButtonBack:visible,.topBarButtonSwap:visible",obj).fadeOut().addClass("fadeBack");
		obj.css("padding-left","7px");
		var w = obj.width();
		w = w-10;
		$(".filterBox").animate({width:w+"px"});
		
		obj.addClass("showingMini");
	}
}
function miniSearchStop (obj) {
	if (obj.hasClass("showingMini")) {
		$(".fadeBack",obj).fadeIn().removeClass("fadeBack");

		if (!obj.hasClass("showingMini")) {
			obj.css("padding-left","40px");			
		}

		obj.removeClass("showingMini");
		$(".filterBox").animate({width:"100px"});
	}
}
function assignPaneSearch ($input,url,data,type) {
	/*
	$input.unbind("focus").focus(function(){
		miniSearchStart($input.parents(".topBar"));
		$(document).unbind("keyup");
		$(document).unbind("keydown");
		$(document).unbind("keypress");
		if ($(this).val()==LangVars.Search) {
			$(this).val("");
		}
	});
	*/
		$input.blur(function(){
		/*miniSearchStop($input.parents(".topBar"));
		if ($(this).val()=="") {
			$(this).val(LangVars.Search);
		}*/
		if (type=="image") {
			assignImagesKeys();
		}
		if (type=="product") {
			assignProductsKeys();
		}
		if (type=="snippet") {
			assignSnippetsKeys();
		}
		if (type=="file") {
			assignFilesKeys();
		}
		if (type=="newsletterSubscribers") {
			assignNewsletterSubscribersKeys();
		}
		if (type=="blog") {
			assignBlogKeys();
		}
	});

	function submitSearch (clicked) {
		working();
		var string = clicked.val();
		var extra="";
		if (data.match("shopAction=showProducts")) {
			extra = "&filterCat="+filterProductsByCategory;
		}
		$.ajax({
		  type: "POST",
		  url: url,
		  data: data+string+extra,
		  success: function(msg){
			
			if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				if (type=="image") {
						hide_header_menus();
					$("#imagesPaneInner .insertTarget").html(msg);
					assignDragAssets($("#imagesPaneInner .insertTarget"));
					if (!($("body").hasClass("storageDraggable"))) {
						assignSortableListItems($("#imagesPaneInner"),"listItemHighlight","contentImage");		
					}
					if (string!="") {
						$("#imagesPane .sendMe").hide();
						$("#imagesPane .clearSearch").show();
						$("#imagesPane .searchSVG").parent().addClass("searching");
					} else {
						$("#imagesPane .searchSVG").parent().removeClass("searching");
					}
					$("#imagesPaneInner").lovelyScroll(scrollImagesBottom);
					prepFancyLabelForms($("#imagesPane .filterBox"));

					

				}
				if (type=="product") {
					$("#productsPaneInner .insertTarget").html(msg);
					assignDragAssets($("#productsPaneInner .insertTarget"));
					hide_header_menus();
					if (string!="") {
						$("#productsPane .sendMe").hide();
						$("#productsPane .clearSearch").show();
						$("#productsPane .searchSVG").parent().addClass("searching");
					} else {
						$("#productsPane .searchSVG").parent().removeClass("searching");
					}
					prepFancyLabelForms($("#productsPane .filterBox"));
					$("#productsPaneInner").lovelyScroll();
				}
				if (type=="snippet") {
					$("#snippetsPaneInner .insertTarget").html(msg);
					assignDragAssets($("#snippetsPaneInner .insertTarget"));
					hide_header_menus();
					if (string!="") {
						$("#snippetsPane .sendMe").hide();
						$("#snippetsPane .clearSearch").show();
						$("#snippetsPane .searchSVG").parent().addClass("searching");
					} else {
						$("#snippetsPane .searchSVG").parent().removeClass("searching");
					}
					prepFancyLabelForms($("#snippetsPane .filterBox"));
				}
				if (type=="file") {
					$("#filesPaneInner .insertTarget").html(msg);
					assignDragAssets($("#filesPaneInner .insertTarget"));
					hide_header_menus();
					if (string!="") {
						$("#filesPaneInner .sendMe").hide();
						$("#filesPaneInner .clearSearch").show();
						$("#filesPaneInner .searchSVG").parent().addClass("searching");
					} else {
						$("#filesPaneInner .searchSVG").parent().removeClass("searching");
					}
					prepFancyLabelForms($("#filesPaneInner .filterBox"));
				}
				if (type=="newsletterSubscribers") {
					hide_header_menus();
					if (string!="") {
						$("#newsletterSubscribersPane .sendMe").hide();
						$("#newsletterSubscribersPane .clearSearch").show();
						$("#newsletterSubscribersPane .searchSVG").parent().addClass("searching");
					} else {
						$("#newsletterSubscribersPane .searchSVG").parent().removeClass("searching");
					}
					prepFancyLabelForms($("#rightPaneNewsletterSubscribers .filterBox"));

					$("#newsletterSubscribersPaneInner .insertTarget").load("newsletterActions.php?newsletterAction=showEmails&showPane=&to_prevent_cache="+(new Date).getTime(),function(){
						$("#newsletterSubscribersPaneInner").lovelyScroll();
					});
				}
				if (type=="blog") {
					$("#blogPaneInner .insertTarget").load("blogActions.php?blogAction=showEntries&showPane=&to_prevent_cache="+(new Date).getTime(),function(){
						$("#blogPane > .paneContents > .cleverFilterBar .langFilterMenu").remove();
						$("#blogPane > .paneContents > .cleverFilterBar .blogSearchMenu").remove();
						$("#blogPaneInner .blogSearchMenu").insertBefore("#blogPane > .paneContents > .cleverFilterBar .primaryItem");
						$("#blogPaneInner .langFilterMenu").insertAfter("#blogPane > .paneContents > .cleverFilterBar .primaryItem");
						assignBlogFilterBar();
						$("#blogPaneInner").lovelyScroll(pagesScrollBottomBlog);
					});
				}
				
				saved();
		  }
		});
	}
	$input.parents("form").submit(function(){
		submitSearch($(".focus",$(this)));
		return false;
	});
	/*
	$input.keyup(function(e){
		
		if (e.which==13) {
			submitSearch($(this));
			if (!$(this).prev().hasClass("clearSearch") && $(this).val()!="") {
				$(this).before("<img src=\"/admin/graphics/bpeditor/remove_menu_item_off.png\" class=\"clearSearch\" id='clearSearch'/>");	
			}
			if ($(this).val()=="") {
				$input.val(LangVars.Search);
			}
				
			
		}
	});*/
	$input.parents(".filterBox").click(function(e){

		if ($(e.target).hasClass("clearSearch")) {
			$input.val("");
			submitSearch($input);
			$(e.target).hide();
			if (type=="image") {
				assignImagesKeys();
			}
		}
		return false;
	});
	
}


function rotateGalleryImage () {
	var imagesJson = "[";
	$(".listItemHighlight").each(function(){
		if (imagesJson=="[") {
			imagesJson+='"'+$(this).attr("title")+'"';
		} else {
			imagesJson+=',"'+$(this).attr("title")+'"';
		}		
	});
	imagesJson += "]";
	working();
	$.ajax({
	  type: "POST",
	  url: "galleriesActions.php",
	  data: "galleriesAction=rotateImages&images="+imagesJson,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		
		$(".listItemHighlight").each(function(){
			var srcImg = "/images/galleries/thumbs/"+$(this).attr("title");	
			$(".responsiveListItemImage",$(this)).attr("style","background: url('"+srcImg+"&d="+(new Date).getTime()+"') 50% 50% no-repeat;background-size:50px 50px;");
			selectionTools();
		});
		saved("Images rotated");

	  }
	});
}
function rotateImage () {
	var imagesJson = "[";
	$(".listItemHighlight").each(function(){
		if (imagesJson=="[") {
			imagesJson+='"'+$(this).attr("id")+'"';
		} else {
			imagesJson+=',"'+$(this).attr("id")+'"';
		}		
	});
	imagesJson += "]";
	working();
	$.ajax({
	  type: "POST",
	  url: "pageActions.php",
	  data: "pageAction=rotateImages&ids="+imagesJson,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		
		$(".listItemHighlight").each(function(){
			var srcImg = $(this).attr("data-filename");	
			$(".responsiveListItemImage",$(this)).attr("style","background: url('/images/"+srcImg+"&d="+(new Date).getTime()+"') 50% 50% no-repeat;background-size:50px 50px;");
			selectionTools();
		});

		saved("Images rotated");

	  }
	});
}
function scrollImagesBottom() {
	var el = $("#imagesPaneInner .showMoreImages").last();
	if (!el.length) {
		return false;
	}
	var start = parseInt(el.attr("href"));
	if ($("#imagePalletFilter").length) {
		var search = $("#imagePalletFilter").val();				
	} else {
		var search = $("#rightPaneImages .searchList").val();
	}
	working();
	$.ajax({
		  type: "POST",
		  url: "pageActions.php",
		  data: "pageAction=showMoreImages&start="+start+"&search="+search,
		  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			
			if (msg=="") {
				el.remove();
			} else {
				el.prev().before(msg);
				
				assignDragAssets($("#imagesPaneInner .insertTarget"));
				$("#imagesPaneInner").lovelyScroll(scrollImagesBottom);

				setTimeout(function() {
					scrollWaiting=false;
				}, 500);
				
				el.attr("href",start+50);
			}
			saved("Images Loaded");

		  }
		});
}
var justFired = false;

function saveImage () {

	$("img",$(".editingImage")).removeAttr("style");
	if ($("#newImageDescription").val()!="") {
		$("img",$(".editingImage")).attr("alt",$("#newImageDescription").val());
	} else {
		$("img",$(".editingImage")).removeAttr("alt");
	}

	if ($("#newImageLink").val()!="") {
		if ($("a",$(".editingImage")).length) {
			$("a",$(".editingImage")).attr("href",$("#newImageLink").val());
			if ($("#openNewWindow").is(":checked")) {
				$("a",$(".editingImage")).attr("target","_blank");
			} else {
				$("a",$(".editingImage")).removeAttr("target");
			}
		} else {
			$("img",$(".editingImage")).wrap("<a href='"+$("#newImageLink").val()+"'></a>");
			if ($("#openNewWindow").is(":checked")) {
				$("a",$(".editingImage")).attr("target","_blank");
			}
		}
	} else {
		$("a img",$(".editingImage")).unwrap();	
	}
	$(".editingImage .imageContextualEdit").remove();

	$(".editingImage").addClass("bpe_highlight dont_remove_highlight");
	$(".editingImage").removeClass("editingImage");	
	$.fn.bpeditor.clean(true);
	assign_sort();
	selectionTools();
	
}
function editImage ($this) {
	hidePaneTools();
	prepForInsert();
	if ($("img",$this).attr("alt")) {
		var alt = $("img",$this).attr("alt");
		var showingLabel = "";						
	} else {
		var alt = "";
		var showingLabel = "showingLabel";
	}
	var checked = "";
	if ($("a",$this).length) {
		if ($("a",$this).attr("target")=="_blank") {
			checked = "checked='checked'";
		}
		var link = $("a",$this).attr("href");
		var showingLabelLink = "";
	} else {
		var link = "";
		var showingLabelLink = "showingLabel";
	}

	$this.append("<div class='imageContextualEdit'><div class='imageContextEditFieldset "+showingLabel+"'><div class='imageContextEditLabel'>"+LangVars.Description+"</div><div class='imageContextEditInputWrap'><input type='text' class='toggleLabelValue imageContextInput' value='"+alt+"' id='newImageDescription' title='"+LangVars.Description+"'/></div></div><div class='imageContextEditFieldset "+showingLabelLink+"'><div class='imageContextEditLabel'>"+LangVars.Link+"</div><div class='imageContextEditInputWrap'><input type='text' title='"+LangVars.Link+"' class='toggleLabelValue imageContextInput' value='"+link+"' id='newImageLink' /></div></div><span id='insertInteralLinksInline' class='clearfix'><span id='insertLinkToPage'>"+LangVars.Insert_Link_To_Page+"</span><span id='insertLinkToDownload'>"+LangVars.Insert_Link_To_File+"</span><span id='imageEditCheckbox'><input "+checked+" type='checkbox' id='openNewWindow' /> <span id='openNewWindowLabel'>"+LangVars.Link_Opens_In_New_Window+"</span></span></span></div>");

	$("#insertInteralLinksInline").hide();
	$("#insertLinkToPage").click(function(){
		$("#newImageLink").blur();
		showLightPages(updateImageLinkVal,"showTop",true,LangVars.Insert_Link_To_Page);
	});
	$("#insertLinkToDownload").click(function(){
		$("#newImageLink").blur();
		showDownloadPopdown(updateImageLinkVal,LangVars.Insert_Link_To_File);
	});
	$(".toggleLabelValue",$this).focus(function(){
		if ($(this).attr("id")=="newImageLink") {
			$("#insertInteralLinksInline").show();
		} else {
			$("#insertInteralLinksInline").hide();
		}
		$(this).parents(".imageContextEditFieldset").addClass("focus");
	});
	$(".toggleLabelValue",$this).blur(function(){

		$(this).parents(".imageContextEditFieldset").removeClass("focus");
	});
		$("input:first",$this).focus();
	$(".toggleLabelValue",$this).keyup(function(e){
		if ($(this).val()!="") {
			$(this).parents(".imageContextEditFieldset").removeClass("showingLabel");
		} else {
			$(this).parents(".imageContextEditFieldset").addClass("showingLabel");
		}
	});
	$(".toggleLabelValue",$this).keypress(function(e){
		if (e.keyCode==13) {
			e.preventDefault();
		}
	});
	$this.addClass("editingImage");

	$("#rightPane").unbind("click").click(function(e){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		if ($(e.target).attr("id")!="openNewWindow" && $(e.target).attr("id")!="openNewWindowLabel") {
			hidePopdownOrPassthroughSave(saveImage);	
			$("#rightPane").unbind("click");		
		}
	});
	$(document).keydown(function(e){
		if (e.keyCode==27) { // esc
			hidePopdownOrPassthroughSave(saveImage);
			e.preventDefault();
			return false;
		}
		if (e.keyCode==13) {
			saveImage();
			return false;
		}
	});
	$("#openNewWindowLabel",$this).click(function(){
		if ($("#openNewWindow:checked",$this).length) {
			$("#openNewWindow",$this).prop('checked', false);
		} else {
			$("#openNewWindow",$this).prop('checked', true);
		}
		return false;
	});
	$(".editingImage").unbind("click").click(function(e){
		if (!$(e.target).hasClass("imageContextualEdit") && !$(e.target).parents(".imageContextualEdit").length) {
			$("#insertInteralLinksInline").hide();						
		}
		if ($(e.target).attr("id")!="openNewWindow" && $(e.target).attr("id")!="openNewWindowLabel") {
			return false;	
		}
	});
}
/*
function addLinkToText (clicked) {
		if ($("#linkOpensInNewWindow").hasClass("checked")) {
			var target = "+";
		} else {
			var target = "";
		}
		if (clicked.attr("alt")!="") {
			var range = $("textarea",$("#bpe_text_dropship")).getSelection();
			if (!range.text.match(/\[bold|\[italic|\[strikethrough|\[underline|\[superscript|\[subscript/)) {
				var escape = range.text.replace(/\]/,"\\]");					
			} else {
				var escape = range.text;
			}
			
			var added = "[link"+target+": "+clicked.attr("alt")+" text: "+escape+"]";
			if (range.text=="") {
				insert_link($("textarea",$("#bpe_text_dropship")),clicked.attr("alt"),"");
				//$("textarea",$(this).parents(".bpe_add_popup")).replaceSelection(" [link"+target+": "+$(this).attr("href")+" text: example link text] ",true);
			} else{
				$("textarea",$("#bpe_text_dropship")).replaceSelection(added,true);
			}
		}
		hidePopdownOrPassthroughSave(false);
}*/
function bpe_save () {
	hideToolTips(true);
	logTrainingClick("typeAndSubmitInTextDropship"+typeAndSubmitCounter);
	$(".bpe_help_popup").remove();
	$(".textEditingTip").remove();
	//$(".listTipUp:not(.hideTips .listTipUp)").show();
	clearTimeout(bpe_hide_drag);
	$('.drag').remove();
	if ($("#bpe_text_dropship").length) {
	var text = $("textarea",$("#bpe_text_dropship")).val();			
	} else {
		var text="";
	}

	if (el) {
		el = el.toLowerCase();
	}
	if (text!="") {
		/*
		if (el!="pre") {
			text = text.split("\n\n");						
		} else {
			var t2 = text;
			text = new Array();
			text[0] = t2;
		}

		align = $("textarea",$("#bpe_text_dropship")).css("text-align");
		if (align=="left") {
			textAlign = " style='text-align:left'";
		} else if (align=="center") {
			textAlign = " style='text-align:center'";
		} else if (align=="right") {
			textAlign = " style='text-align:right'";
		} else if (align=="justify") {
			textAlign = " style='text-align:justify'";
		} else {
			textAlign = "";
		}
		var scrollDown=false;
		for (var i=0; i < text.length; i++) {
			if (el!="pre") {
			str_text = $.trim(text[i]);
			str_text = toHTML(htmlentities(str_text).replace(/\n/,"<br/>"));
			} else {
			str_text = toHTML(htmlentities(text[i]).replace(/\n/,"<br/>"));							
			}


			if (editingtarget) {
				if (editingtarget.children("ul,ol").length>0) {
					editingtarget.before("<"+el+""+textAlign+" class='bpe_add_children "+classes+"' id=\""+editingtarget.attr("id")+"\">"+str_text+"</"+el+">");
					if (i==0) {
						$(".bpe_add_children").append(editingtarget.children("ul,ol"));
						$(".bpe_add_children").removeClass("bpe_add_children");
					}

				} else {
					editingtarget.before("<"+el+""+textAlign+" class=\""+classes+" bpe_highlight\" id=\""+editingtarget.attr("id")+"\">"+str_text+"</"+el+">");

				} 
			} else {
				$(".bpe_curently_editing #bpe_area").append("<p"+textAlign+" class=\""+classes+" bpe_highlight\">"+str_text+"</p>");		
				scrollDown = true;
			}
		};*/
	} else {
		if (editingtarget) {
			if (editingtarget.children("ul,ol").length>0) {
				editingtarget.parent().before(editingtarget.children("ul,ol"));
			}
		}
	}
	if (editingtarget) {
		editingtarget.remove();
	}
	$(".bpe_mask").remove();		
	$("#bpe_text_dropship").remove();
	$(".bpe_curently_editing").removeClass("bpe_curently_editing");
	$.fn.bpeditor.clean(true);
	if (scrollDown) {
		$("body").animate({ scrollTop : $(document).height() }, 500);
	}
	assignSaveListener();
	assign_sort();
}
var editingtarget;
var el;
var classes;
function insertLinkToWebsite (website) {
	logTrainingClick("choosePageOrDoneForWebsiteLink");
	var link = website;
	var range = $("textarea",$(".textareaWrapper.bpe_highlight")).getSelection();
	if (!range.text.match(/\[bold|\[italic|\[strikethrough|\[underline|\[superscript|\[subscript/)) {
		var escape = range.text.replace(/\]/,"\\]");					
	} else {
		var escape = range.text;
	}
	if ($('#linkOpensInNewWindow').hasClass("checked")) {
		var target = "+";
	} else {
		var target = "";
	}
	var added = "["+escape+"]("+link.replace(/ /g,"%20")+target+")";
	/*if (range.text=="") {
		insert_link($("textarea",$(".textareaWrapper.bpe_highlight")),link,target);

		//$("textarea",$(".bpe_add_popup")).replaceSelection(" [link"+target+": "+link+" text: example link text] ",true);
	} else{*/
		$("textarea",$(".textareaWrapper.bpe_highlight")).replaceSelection(added,true);
	//}
	cancelDialogue();
	
//	$("textarea",$(".textareaWrapper.bpe_highlight")).trigger('autosize.resize');
	$(".bpe_mask_small").remove(); 
	$(".bpe_popup_small").remove();
	$("textarea",$(".textareaWrapper.bpe_highlight")).focus();	
	setFakeHighlight(false);
	setTimeout(function () {
		$("textarea",$(".textareaWrapper.bpe_highlight")).text($("textarea",$(".textareaWrapper.bpe_highlight")).val());
		autosave(true);
		
	}, 10);

}
function bpe_button (type,ele,abr) {


		var range = $("textarea",ele.parents(".textareaWrapper")).getSelection();

		var result = checkBPESelection(range.text);
		var exists = false;
		for (var i=0; i < result.length; i++) {
			if (result[i] == abr) {
				exists = true;
			}
		};
		if (exists) {
			var removed = bpe_remove_formatting(type,range.text);
			$("textarea",ele.parents(".textareaWrapper")).replaceSelection(removed,true);
			$(".bpe_selected").removeClass("bpe_selected");
			$("textarea",ele.parents(".textareaWrapper")).focus();
		} else {
			/*if (!range.text.match(/\[bold|\[italic|\[strikethrough|\[underline|\[superscript|\[subscript|\[link/)) {
				var escape = range.text.replace(/\]/,"\\]");					
			} else {*/
				var escape = range.text;
			//}
			if (type=='bold') {
				var added = "**"+escape+"**";		
				var firstPart = "**";		
			}
			if (type=='italic') {
				var added = "//"+escape+"//";				
				var firstPart = "//";
			}
			if (type=='underline') {
				var added = "__"+escape+"__";				
				var firstPart = "__";
			}
			if (type=='strikethrough') {
				var added = "--"+escape+"--";				
				var firstPart = "--";
			}
			if (type=='superscript') {
				var added = "[superscript: "+escape+"]";				
				var firstPart = "[superscript: ";
			}
			if (type=='subscript') {
				var added = "[subscript: "+escape+"]";				
				var firstPart = "[subscript: ";
			}
			/*
			if (range.text=="") {
				$("textarea",ele.parents(".textareaWrapper")).each(function(){
					e = this;
				});
				var start = e.value.substr(0, e.selectionStart).lastIndexOf(firstPart);
				var typeLength = firstPart.length;
				var begining = e.value.substr(start+typeLength, e.selectionStart-start-typeLength);
				var beginingWithTag = e.value.substr(start, e.selectionStart-start);
				
				if (!begining.match(/\[/) && begining.search(/([^\\])\]/)==-1 && start!=-1) {
					var beginingWithoutTag = beginingWithTag.replace("["+type+": ","");
					var beginingWithoutTagLength = beginingWithoutTag.length;
					var endTagLength = e.value.substr(e.selectionEnd, e.value.length - e.selectionStart).search(/([^\\])\]/)+1;
					var endWithoutTag = e.value.substr(e.selectionEnd, e.value.length - e.selectionStart).replace(/([^\\])\]/,"$1");
					if (e.value.substr(e.selectionEnd, endTagLength).search(/\[/)==-1) {
						var begining = e.value.substr(0, start);
						e.value = begining + beginingWithoutTag + endWithoutTag;
						e.setSelectionRange(start,beginingWithoutTagLength+endTagLength+start);
					}

					e.focus();
				} else {
					var indexOfStartSpace = e.value.substr(0, e.selectionStart).lastIndexOf(" ");
					if(indexOfStartSpace==-1) {
						var selectedEnd=1;
						var firstspace="";
					} else {
						var firstspace=" ";
						var selectedEnd=0;
					}
					var firstPart = e.value.substr(indexOfStartSpace+1, e.selectionStart-indexOfStartSpace);

					var indexOfEndSpace = e.value.substr(e.selectionEnd, e.value.length-e.selectionEnd).indexOf(" ");
					if(indexOfEndSpace==-1) {
						indexOfEndSpace = e.value.length;
					}
					var lastPart = e.value.substr(e.selectionEnd+1, indexOfEndSpace-1);

					var lengthOfLastPart = lastPart.length;
					if (lastPart.charAt(lengthOfLastPart-1) == "]") {
						var lastPart = lastPart.substr(0,lengthOfLastPart-1);
						var range = firstPart+lastPart;
						var replacement = "]";
					} else {
						range = firstPart+lastPart;
						replacement = "";
					}

					if (!range.match(/\[bold|\[italic|\[strikethrough|\[underline|\[superscript|\[subscript|\[link/)) {
						escape = range.replace(/\]/,"\\]");					
					} else {
						escape = range;
					}

					added = firstspace+added;

					newLength = added.length;
					e.value = e.value.substr(0, indexOfStartSpace) + added + replacement + e.value.substr(e.selectionEnd+1+lengthOfLastPart);
					e.setSelectionRange(indexOfStartSpace+1,indexOfStartSpace+newLength+selectedEnd);
					e.focus();
				}

//						$("textarea",$(ele).parent().parent()).replaceSelection(" ["+type+": example text] "," ["+type+": ");
			} else {
			*/
				if (range.text.indexOf(firstPart)!=0) {
					$("textarea",ele.parents(".textareaWrapper")).replaceSelection(added,firstPart,1);							
				} else {
					result = checkBPESelection(range.text);
					for (var i=0; i < result.length; i++) {
						//$(".bpe_"+result[i]).css("border","1px solid #f00");
					};
					$("textarea",ele.parents(".textareaWrapper")).focus();
				}
			//}
		}
		$(".bpe_selected").removeClass("bpe_selected");
		result = checkBPESelection( $("textarea",ele.parents(".textareaWrapper")).getSelection().text );
		for (var i=0; i < result.length; i++) {
			$(".bpe_"+result[i]).addClass("bpe_selected");
		};

		//$("textarea",ele.parents(".textareaWrapper")).text($("textarea",ele.parents(".textareaWrapper")).val()).trigger('autosize.resize');
		$("textarea",ele.parents(".textareaWrapper")).text($("textarea",ele.parents(".textareaWrapper")).val());
		autosave(true);
		setFakeHighlight(false);
	}
function setFakeHighlight (blur,blured) {
	if (typeof blured =='undefined') {
		var $textarea = $("textarea:focus",$(".textareaWrapper"));
	} else {
		var $textarea = blured;
	}
	$(".dropshipToolbarBottom,.format_mttri").hide();
	if ($textarea.length) {
		var $wrap = $textarea.parents('.textareaWrapper');
		if ($wrap.attr("data-el")=='pre') {
			return false;
		}
//		var tw = $textarea.outerWidth();
//		var th = $textarea.height(); 
//		var tpt = $textarea.css("padding-top"); 
//		var tpr = $textarea.css("padding-right"); 
//		var tpb = $textarea.css("padding-bottom"); 
//		var tpl = $textarea.css("padding-left"); 
		var tta = $textarea.css("text-align"); 
//		var tt = $textarea.position().top-$textarea.scrollTop();
//		var tl = $textarea.position().left;
//		if (iOS) {
//			tl=tl+3;
//		}
		$textarea.removeClass("draggingSel");
		var text = $textarea.val().replace(/</g,"-").replace(/>/g,"-");
		var start = $textarea[0].selectionStart;
		var end = $textarea[0].selectionEnd;
		if (start!=end) {
			text = text.insert(start,"<span>");
			text =  text.insert(end+6,"</span>");
		} else {
			text = text.insert(start,"<span></span>");
			
			if (blur) {
				autosave(true);
				//bpe_save();
//				return false;	
			}
		}
		var reg = /\n/ig;
		text = text.replace(reg,"<br />");

		$(".visibleHighlight",$wrap).html(text+" ").css({
			textAlign:tta
		});

		if ($textarea[0].selectionStart!=$textarea[0].selectionEnd) {
			$(".dropshipToolbarBottom,.format_mttri",$wrap).removeAttr("style").show();
//			$(".dropshipToolbarBottom",$wrap).css("width","auto");
//			$(".dropshipToolbarBottom",$wrap).css("width",$(".dropshipToolbarBottom",$wrap).width());
			var posLeft = $(".visibleHighlight span",$wrap).position().left;
			var posTop = $(".visibleHighlight span",$wrap).position().top+parseInt($(".dropshipToolbarBottom",$wrap).css("top"))+2-$textarea.scrollTop() + $(".visibleHighlight span",$wrap).height() - 20;
			posLeft = posLeft+($(".visibleHighlight span",$wrap).width()/2);
			
			var mainLeft = posLeft - ($(".dropshipToolbarBottom",$wrap).width()/2);

			if (mainLeft<34) {
				mainLeft=0;
			}
			if (mainLeft+$(".dropshipToolbarBottom",$wrap).width() > $textarea.width()) {
				var overshoot = (mainLeft+$(".dropshipToolbarBottom",$wrap).width()) - $textarea.width();
				mainLeft = mainLeft - overshoot ;
				
			}
			$(".dropshipToolbarBottom",$wrap).css({
				left:mainLeft
				,top:posTop+65
			});
			
			$(".format_mttri",$wrap).css({
				left:posLeft+5
				,top:posTop+33+25
			});

			
		} else {
			$(".dropshipToolbarBottom,.format_mttri").hide();
/*			if (!iOS) {
				var cursorY = $(".visibleHighlight span",$wrap).position().top + $wrap.position().top;
				if ($(".visibleHighlight span",$wrap).parents(".zonesDropBox").length) {
					cursorY=cursorY+$(".visibleHighlight span",$wrap).parents(".zonesDropBox").position().top + $(".visibleHighlight span",$wrap).parents(".zonesDropBox").parents('.CMS_Component_ObsZones').position().top;
				}
				if (typeof myScroll[$(".textEditingArea").attr("id")]!='undefined') {
				var scrolledY = Math.abs(myScroll[$(".textEditingArea").attr("id")].y);					
				} else {
					scrolled=0;
				}

				if (cursorY<scrolledY) {
					var diff = scrolledY-cursorY;
					myScroll[$(".textEditingArea").attr("id")].scrollBy(0,diff);
				}
				var scrollBottomLimit = scrolledY+$(".textEditingArea").height()-30;
				if (iOS) {
					scrollBottomLimit = scrollBottomLimit-250;

				}
				if (cursorY>scrollBottomLimit) {
					var d = cursorY - scrollBottomLimit;
					myScroll[$(".textEditingArea").attr("id")].scrollBy(0,-d);
				}
			} */

		}
	}
		
}
function assignAddTextKeysAndClick () {
	
	$(document).keydown(function(e) {

   		if (metaDown) {
			if (e.keyCode==66) { // b
				bpe_button('bold',$('.textareaWrapper textarea:focus'),"bold");
				e.preventDefault();
			}
			if (e.keyCode==73) { // i
				bpe_button('italic',$('.textareaWrapper textarea:focus'),"ital");
				e.preventDefault();
			}
			if (e.keyCode==85) { // u
				bpe_button('underline',$('.textareaWrapper textarea:focus'),"underline");
				e.preventDefault();
			}
		}
	    if (e.metaKey || e.ctrlKey) {
			metaDown = true;
		}
		if (!modDown && !shiftDown) {
			/*if (e.keyCode==13) { // Return
				bpe_save();
				var node = $(".bpe_highlight:last")[0].nodeName.toLowerCase();
				$(".bpe_highlight:last").next().after("<"+node+" class=\"addText bpe_highlight\"></"+node+">");
				$(".bpe_highlight:not(:last)").removeClass("bpe_highlight");
				addText($(".bpe_highlight:last"),false);
				e.preventDefault();
				return false;
			}*/
		} 

	    if (/*e.metaKey || e.ctrlKey ||*/ e.altKey) {
			modDown = true;
		}
		if (e.shiftKey) {
			shiftDown = true;
		}
   	}).keyup(function(e) {
   		
   		
	    if (/*!e.metaKey && !e.ctrlKey && */!e.altKey) {
			modDown = false;
		}
	    if (!e.metaKey && !e.ctrlKey) {
			metaDown = false;
		}
		if (!e.shiftKey) {
			shiftDown = false;
		}
		

    });
    $(document).mouseup(function(){
		$("textarea.draggingSel").removeClass("draggingSel");
		setTimeout(function() {
			if (!touchdown) {
				setFakeHighlight();
			}
		}, 10);
	});
	$(document).keydown(function(e){
		if (e.keyCode==8) { // backspace
			if ($("textarea:focus").val()=="") {
				if ($("textarea:focus").parents(".textareaWrapper").prev().prev(".textareaWrapper").length) {
					var el = $("textarea:focus").parents(".textareaWrapper").prev().prev(".textareaWrapper").find("textarea");

					el.trigger("click").focus();
					var len = el.val().length * 2;
		        	el[0].setSelectionRange(len, len);
					return false;
				}
			}
		}
		
		if (e.keyCode==27) { // esc
			$(".dropshipToolbarBottom,.format_mttri").hide();
			$("textarea:focus").blur();
			selectionTools();
			autosave(true);
			assignSaveListener();
//			hidePopdownOrPassthroughSave(bpe_save);
			e.preventDefault();
		}
	});
}
function addText ($this,elo) {
	hidePaneTools();
	hideDragInsert();
	$(".listTipEditor").hide();
	$(".textEditingArea  > .listTipUp").hide();
//	$("#bpe_area").css("height",$("#bpe_area").height());
	prepForInsert();
	$(".bpe_highlight:first").parents("#bpe_area").addClass("bpe_curently_editing");


	editingtarget=false;
	el=false;
	if ($this.parent().hasClass("bpe_menu_bottom")) {
		var verb = "Add";
		var content = "";
		var align = "normal";
		$(".bpe_area_wrapper").addClass("bpe_curently_editing");
		$("#bpe_area").append("<p></p>");
		$("#bpe_area p").hide();
		var target = $("#bpe_area p").last();
	} else {
		if ($this.hasClass("bpe_edit_menu")) {
			var target = $(".bpe_highlight:first");
		} else {
			var target = $this;
		}
		if (target.parents(".zonesDropBox").length) {
			target.parents(".zonesDropBox").removeClass("empty");	
		}

		target.hide(); 
		$(".drag,.itemTag",target).remove();
		$(".hwrap",target).contents().unwrap();
		var verb = "Edit";
		if ($this.hasClass("addText")) {
			logTrainingClick("clickAddText");
			
			verb="Add";
			
			target.after("<div class='dropzone'><div></div></div>")
			if (typeof elo !== 'undefined' && elo!==false) {

				target.wrap("<"+elo+"></"+elo+">");	
				target.after("<div class='dropzone'><div></div></div>");
				target.before("<div class='dropzone'><div></div></div>")
			}
			
			$this.removeClass("addText");
		} else {
			logTrainingClick("editTextItemInEditPage");
		}
		$(".bpe_toggler").css("display","none");
		if ($(".bpe_highlight:first").children("ul,ol").length>0) {
			$(".bpe_highlight:first").after("<div class='bpe_highlight_temp' style='display:none'></div>");
			$(".bpe_highlight_temp").append($('.bpe_highlight').children("ul,ol"));
			$('.bpe_highlight').children("ul,ol,.dropzone").remove();
			var content = toBPE($('.bpe_highlight').html());
			content = content.replace(/\n/,"");
			content = content.replace(/\r/,"");
			$(".bpe_highlight").append($(".bpe_highlight_temp").html());
			$(".bpe_highlight_temp").remove();
			editingtarget = $(".bpe_highlight");
		} else {
			editingtarget = $(".bpe_highlight");		
			var content = toBPE(editingtarget.html());
		}
		classes = editingtarget.attr("class");
		classes = classes.replace("bpe_highlight","");

		$(".bpe_highlight").each(function(){
			el = this.tagName;					
		});
		$(".bpe_highlight").parent().each(function(){
			var parent = this.tagName;					
		});
		var align = editingtarget.css("text-align");
	}
	if ($("#existingPages").length>0) {
		var existingPages = $("#existingPages").html();
		var showExistingPages = "block";
	} else {
		var existingPages = "";
		var showExistingPages = "none";
	}

	if ($("#downloads").length>0) {
		var downloads = $("#downloads").html();
		if ($("#downloads").children().length==0) {
			downloads = "<span class='bpe_menu_message'>Uploaded files will appear here</span>";
		}
		var showDownloads = "block";
	} else {
		var downloads = "";
		var showDownloads = "none";
	}
//	$('body').append("<div class='bpe_mask'></div><div class='bpe_add_popup' id='bpe_add_popup' style='height:420px'><div class='bpe_add_popup_inner' style='height:360px'><img src='graphics/bpeditor/help.png' alt='This text editor uses simple, human-readable notation to define areas of text that have formatting. Bold, italic, a link, or other formatting for example. The formatting buttons above the text area provide convenient shortcuts to enter this notation. || As you’ll see when using the shortcut buttons, the notation shows in this format: || [format: your text] || You can continue to edit text inbetween the colon and closing square-bracket after the formatting has been applied. When you click ‘Done’ the notation will be converted and displayed properly, as it will on your website itself.' class='bpe_help' /><h2>"+verb+" text content</h2><div class='bpe_popup_menu'><a href='' class='bpe_popup_link'><span>Link</span></a><div class='bpe_menu_contents'><div class='bpe_menu_top'><div class='bpe_menu_bottom'><a href='' class='bpe_link_to_website'>Link to website&hellip;</a><div class='bpe_menu_sub'><a href='' class='bpe_menu_sub_item'>Link to a page</a><div class='bpe_menu_sub_items bpe_wide' style='top:-56px;'><div class='bpe_menu_top'><div class='bpe_menu_bottom bpe_add_page_links lightPagesList'></div></div></div></div><div class='bpe_menu_sub'><a href='' class='bpe_menu_sub_item'>Link to a file</a><div class='bpe_menu_sub_items bpe_wide'><div class='bpe_menu_top'><div class='bpe_menu_bottom bpe_add_file_links'><a href='' class='bpe_upload_new_file'>Upload new file&hellip;</a><div class='bpe_rule'></div><div class='bpe_downloads'>"+downloads+"</div></div></div></div></div></div></div></div></div><div class='bpe_buttons'><a href='#' class='bpe_bold' title='Bold'></a><a href='#' class='bpe_ital' title='Italic'></a><a href='#' class='bpe_underline' title='Underline'></a><a href='#' class='bpe_strike' title='Strikethough'></a><a href='#' class='bpe_sup' title='Superscript'></a><a href='#' class='bpe_sub' title='Subscript'></a> <a href='#' class='bpe_left' title='Align Left'></a><a href='#' class='bpe_centre' title='Align Centre'></a><a href='#' class='bpe_right' title='Align right'></a><a href='#' class='bpe_justify' title='Align Justify'></a></div><textarea style=\"text-align:"+align+"\">"+content+"</textarea><div class='bpe_textarea_mask'></div><div class='bpe_savecancel'><a href='#' class='bpe_save'><span>Done</span></a><a href='#' class='bpe_cancel'><span>Cancel</span></a></div></div></div>");
	
	if ($("body").hasClass("hideTips")) {
		var tip = "";
	} else {
		var tip = "<div class='listTipUp textEditingTip'>"+LangVars.Tip_Editing_Text+"</div>";
	}
	tip="";
	//target.after("<div id='bpe_text_dropship' class='clearfix'><div id='visibleHighlight'></div><textarea style=\"text-align:"+align+"\" class='bpe_textarea'>"+content+"</textarea><div class='bpe_textarea_mask'></div><div id='dropshipToolbarBottom' class='clearfix'><div class='bpe_buttons'><a href='#' class='bpe_bold' title='Bold'>B</a><a href='#' class='bpe_ital' title='Italic'>I</a><a href='#' class='bpe_underline' title='Underline'>U</a><a href='#' class='bpe_strike' title='Strikethough'>Az</a><a href='#' class='bpe_sub' title='Subscript'>X<sub>1</sub></a><a href='#' class='bpe_sup' title='Superscript'>X<sup>1</sup></a><a href='#' class='bpe_left' title='Align Left'><img src='/admin/graphics/bpeditor/left-align.png' /></a><a href='#' class='bpe_centre' title='Align Centre'><img src='/admin/graphics/bpeditor/center-align.png' /></a><a href='#' class='bpe_right' title='Align right'><img src='/admin/graphics/bpeditor/right-align.png' /></a><a href='#' class='bpe_justify' title='Align Justify'><img src='/admin/graphics/bpeditor/justify.png' /></a><span id='insertLinkToPage'>"+LangVars.Insert_Link_To_Page+"</span><span id='insertLinkToDownload'>"+LangVars.Insert_Link_To_File+"</span><span id='insertLinkToWebsite'>"+LangVars.Insert_Link_To_Website+"</span></div></div></div>"+tip);
	target.after("<div id='bpe_text_dropship' class='clearfix'><div id='visibleHighlight'></div><textarea style=\"text-align:"+align+"\" class='bpe_textarea'>"+content+"</textarea><div class='bpe_textarea_mask'></div><div id='format_mttri'></div><div id='dropshipToolbarBottom' class='clearfix'><div class='format_first_block'><div class='bpe_buttons'><a href='#' class='bpe_bold' title='Bold'>"+LangVars.Bold+"</a><a href='#' class='bpe_ital' title='Italic'>"+LangVars.Italics+"</a><a href='#' class='bpe_underline' title='Underline'>"+LangVars.Underline+"</a></div><div class='format_separator'></div><span id='insertLinkToWebsite'>"+LangVars.Link+"</span><div class='format_separator'></div><div id='format_more'></div></div><div class='format_second_block'><div id='format_less'></div><div class='format_separator'></div><div class='bpe_buttons'><a href='#' class='bpe_strike' title='Strikethough'>"+LangVars.Strikethrough+"</a><a href='#' class='bpe_sub' title='Subscript'>"+LangVars.SubSupX+"<sub>"+LangVars.SubSupY+"</sub></a><a href='#' class='bpe_sup' title='Superscript'>"+LangVars.SubSupX+"<sup>"+LangVars.SubSupY+"</sup></a></div></div></div>");
	$("#dropshipToolbarBottom,#format_mttri,#format_triShadow,.format_second_block").hide();
	if (currentTooltip) {
		interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
		clearTimeout(toolTipTimeout);
	}
	currentTooltipItem=0;
	currentTooltip="addtext";
	toolTipTimeout = setTimeout(tooltip, 10);

	$("#format_more").click(function(){	
		$(".format_first_block").fadeOut(200,function(){
			$(".format_second_block").fadeIn();
			$("#dropshipToolbarBottom").css("width","auto");
			$("#dropshipToolbarBottom").css("width",$("#dropshipToolbarBottom").width()+1);
		});
	});
	$("#format_less").click(function(){
		$(".format_second_block").fadeOut(200,function(){
			$(".format_first_block").fadeIn();
			$("#dropshipToolbarBottom").css("width","auto");
			$("#dropshipToolbarBottom").css("width",$("#dropshipToolbarBottom").width()+1);
		});
	});
	//$("#bpe_area").css("height","auto");
	
	rebindSearchList($(".bpe_downloads"));
	$(".bpe_mask,#bpe_text_dropship").click(function(){ $(".bpe_help_popup").hide(); return false;});
	
	$(".bpe_mask").css("height",$(document).height()+"px");
	$(".bpe_mask").fadeTo(0,0.4);

	var otop = 100;


	$("#insertLinkToPage").click(function(){
		logTrainingClick("addLinkTextEditor");
		showLightPages(addLinkToText,"showTop",true);
		return false;
	});
	$("#insertLinkToDownload").click(function(){
		logTrainingClick("addLinkTextEditor");
		showDownloadPopdown(addLinkToText,LangVars.Insert_Link_To_File);
	});
	$(".bpe_close_popup").click(function(){
		$(".bpe_mask").remove();
		$("#bpe_text_dropship").remove();
		$(".bpe_editing_image").removeClass("bpe_editing_image");
	});
	
	$("body").css({
	                   '-moz-user-select':'',
	                   '-webkit-user-select':'',
	                   'user-select':'',
	                   '-ms-user-select':''
	  });
	             
	var align = $("textarea",$("#bpe_text_dropship")).css("text-align");
	if (align=="left") {
		$(".bpe_left").addClass("bpe_selected_align");
	} else if (align=="center") {
		$(".bpe_centre").addClass("bpe_selected_align");
	} else if (align=="right") {
		$(".bpe_right").addClass("bpe_selected_align");
	} else if (align=="justify") {
		$(".bpe_justify").addClass("bpe_selected_align");
	} else {
		$(".bpe_left").addClass("bpe_selected_align");
	}
	
	$("#bpe_text_dropship .cancel_confirm,#bpe_text_dropship .show_choices4").unbind();
	/*
	$(".bpe_add_file_links").click(function(e){
		var clicked = $(e.target);

		if (!clicked.hasClass("showMore") && !clicked.hasClass("filterBox") && !clicked.hasClass("filterSearchLabel") && !clicked.hasClass("searchList") && !clicked.hasClass("clearSearch") && !clicked.hasClass("bpe_upload_new_file") && !clicked.hasClass("removeFileFromList") && !clicked.hasClass("show_choices4") && !clicked.hasClass("cancel_confirm")) {
			if (clicked.attr("href")!="") {
			var range = $("textarea",clicked.parents("#bpe_text_dropship")).getSelection();
			if (!range.text.match(/\[bold|\[italic|\[strikethrough|\[underline|\[superscript|\[subscript/)) {
				var escape = range.text.replace(/\]/,"\\]");					
			} else {
				var escape = range.text;
			}
			if ($('.bpe_blank_tick:checked').length>0) {
				var target = "+";
			} else {
				var target = "+";
			}
			var added = "[link"+target+": "+clicked.attr("id")+" text: "+escape+"]";
			if (range.text=="") {
				insert_link($("textarea",clicked.parents("#bpe_text_dropship")),clicked.attr("id"),"+");

				//$("textarea",$(this).parents(".bpe_add_popup")).replaceSelection(" [link"+target+": "+$(this).attr("href")+" text: example link text] ",true);
			} else{
				$("textarea",clicked.parents("#bpe_text_dropship")).replaceSelection(added,true);
			}
			}
			$(".bpe_menu_sub_items").hide();
			$(".bpe_textarea_mask").hide();
			$(".bpe_sub_hilite").removeClass("bpe_sub_hilite");
			$(".bpe_menu_contents").hide();
		} else if (clicked.hasClass("removeFileFromList")) {
			working();
			var id = clicked.attr("id");
			$.ajax({
			  type: "POST",
			  url: "removeFileFromList.php",
			  data: "file="+id,
			  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
					$(".bpe_downloads,#downloads").html(msg);
					saved("File remvoved");
			  }
			});
		} else if (clicked.hasClass("show_choices4")) {
			$(".choices4:first",clicked).show();
			clicked.parents(".menu_hidden_extras").addClass("dontHide");
		} else if (clicked.hasClass("cancel_confirm")) {
			clicked.parents(".choices4").hide();
			clicked.parent().parent().parent().parent().parent().removeClass("dontHide");
		} else {

		}
		return false;
	});*/
	/*
	$("#insertLinkToWebsite").click(function(){
		logTrainingClick("addLinkTextEditor");
		
		prepDialogue ("<h2>"+LangVars.Insert_Link+"</h2><p>"+LangVars.Insert_Link_Text+"</p>",LangVars.Cancel,cancelDialogue,LangVars.Done,insertLinkToWebsite,false,true,true,"",true);
		return false;
	});
	assignAddTextKeysAndClick();
	
    $("textarea",$("#bpe_text_dropship")).keyup(function(){
    	setFakeHighlight(); 		
    });
    
   
	$("textarea",$("#bpe_text_dropship")).mouseup(function(){

		$(".bpe_selected").removeClass("bpe_selected");
		var result = checkBPESelection($(this).getSelection().text);
		for (var i=0; i < result.length; i++) {
			$(".bpe_"+result[i]).addClass("bpe_selected");
		};
	});
	$("#bpe_text_dropship").click(function(){
		$(".bpe_menu_contents").hide();
		$(".bpe_textarea_mask").hide();
	});
	$("textarea",$("#bpe_text_dropship")).mousedown(function(){
		$("textarea",$("#bpe_text_dropship")).addClass("draggingSel");
	});
	
	$("textarea",$("#bpe_text_dropship")).click(function(){
		$(".bpe_selected").removeClass("bpe_selected");
		var e;
		$("textarea",$("#bpe_text_dropship")).each(function(){
			e = this;
		});
		setTimeout(function() {
			if (!touchdown) {
				setFakeHighlight();
				
			}
		}, 10);
		
		var start = e.value.substr(0, e.selectionStart).lastIndexOf("[");	
		if (start!=-1) {

			if (e.value.substr(start, e.selectionStart-start).search(/[^\\]\]/)!=-1) {
				return false;
			}
			var end = e.value.substr(e.selectionEnd, e.value.length-e.selectionEnd).search(/[^\\]\]/);
			if (end!=-1) {
				var end2 = e.value.substr(e.selectionEnd, end).indexOf(":"); 
				if (end2!=-1) {
					var end = end + e.value.substr(0, e.selectionStart).length +2;
					if (e.value.substr(start,e.selectionStart - start).indexOf(":")==-1 && e.value.substr(start,e.selectionStart - start).indexOf(" ")==-1) {
						if (e.value.substr(e.selectionEnd, end - e.value.substr(0, e.selectionStart).length).indexOf("[")==-1) {
							e.setSelectionRange(start,end);	
							$(".bpe_selected").removeClass("bpe_selected");
							var result = checkBPESelection($(this).getSelection().text);
							for (var i=0; i < result.length; i++) {
								$(".bpe_"+result[i]).addClass("bpe_selected");
							};
						} else {

							var numberOfOpeners = e.value.substr(e.selectionEnd, end - e.value.substr(0, e.selectionStart).length).match(/\[bold|\[italic|\[strikethrough|\[underline|\[superscript|\[subscript/g).length;
								var end = e.value.substr(e.selectionEnd+end2, e.value.length-e.selectionEnd).split(/[^\\]\]/g);
								var stringLength = 0;

								for (var i=0; i <= numberOfOpeners; i++) {
									stringLength = stringLength + end[i].length + 2;
								};
								var h = e.selectionStart-start;
								e.setSelectionRange(start,stringLength+start+h+end2);	
								e.focus();
								$(".bpe_selected").removeClass("bpe_selected");
								var result = checkBPESelection($(this).getSelection().text);
								for (var i=0; i < result.length; i++) {
									$(".bpe_"+result[i]).addClass("bpe_selected");
								};
						}

					}

				} else {

					if ( e.value.substr(start+1,e.value.substr(start,e.selectionStart - start).indexOf(":")).search(/[^\\]\]/) == -1) {
						var type = (e.value.substr(start+1,e.value.substr(start,e.selectionStart - start).indexOf(":")-1));
						if (type=="strikethrough") {
							$(".bpe_strike").addClass("bpe_selected");
						} else if (type=="italic") {
							$(".bpe_ital").addClass("bpe_selected");
						} else if (type=="superscript") {
							$(".bpe_sup").addClass("bpe_selected");
						} else if (type=="subscript") {
							$(".bpe_sub").addClass("bpe_selected");
						} else {
							$(".bpe_"+type).addClass("bpe_selected");
						}
					}


				}

			}
			setTimeout(function() {
				if (!touchdown) {
					setFakeHighlight();
					
				}
			}, 10);
			

		}

	});
	
	$(".bpe_bold").click(function(){
		alert("test");
		logTrainingClick("formattingIconInEditPage");
		bpe_button('bold',$(this),"bold");
		return false;
	});
	$(".bpe_ital").click(function(){
				logTrainingClick("formattingIconInEditPage");
		bpe_button('italic',$(this),"ital");
		return false;
	});
	$(".bpe_underline").click(function(){
				logTrainingClick("formattingIconInEditPage");
		bpe_button('underline',$(this),"underline");
		return false;
	});
	$(".bpe_strike").click(function(){
				logTrainingClick("formattingIconInEditPage");
		bpe_button('strikethrough',$(this),"strike");
		return false;
	});
	$(".bpe_left").click(function(){
				logTrainingClick("formattingIconInEditPage");
		$("textarea",$(this).parents("#bpe_text_dropship")).css("text-align","left");
		$(".bpe_left,.bpe_centre,.bpe_right,.bpe_justify").removeClass("bpe_selected_align");
		$(this).addClass("bpe_selected_align");
		return false;
	});
	$(".bpe_centre").click(function(){
		$("textarea",$(this).parents("#bpe_text_dropship")).css("text-align","center");
		$(".bpe_left,.bpe_centre,.bpe_right,.bpe_justify").removeClass("bpe_selected_align");
		$(this).addClass("bpe_selected_align");
		return false;
	});
	$(".bpe_right").click(function(){
		$("textarea",$(this).parents("#bpe_text_dropship")).css("text-align","right")
		$(".bpe_left,.bpe_centre,.bpe_right,.bpe_justify").removeClass("bpe_selected_align");
		$(this).addClass("bpe_selected_align");
		return false;
	});
	$(".bpe_justify").click(function(){
		$("textarea",$(this).parents("#bpe_text_dropship")).css("text-align","justify");
		$(".bpe_left,.bpe_centre,.bpe_right,.bpe_justify").removeClass("bpe_selected_align");
		$(this).addClass("bpe_selected_align");
		return false;
	});
	$(".bpe_sup").click(function(){
				logTrainingClick("formattingIconInEditPage");
		bpe_button('superscript',$(this),"sup");
		return false;
	});
	$(".bpe_sub").click(function(){
				logTrainingClick("formattingIconInEditPage");
		bpe_button('subscript',$(this),"sub");
		return false;
	});
	

	
	
	$("#dragBoundry").click(function(e){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		hidePopdownOrPassthroughSave(bpe_save);
		$("#dragBoundry").unbind("click");
	});
	
	$(".bpe_save").click(function(){				
		bpe_save();
		return false;
	});
	$(".bpe_cancel").click(function(){
		target.show()
		$(".bpe_help_popup").remove();
		$(".bpe_curently_editing").removeClass("bpe_curently_editing");
		$(".bpe_mask").remove();
		$("#bpe_text_dropship").remove();
		$(".bpe_toggler").css("display","none");
		$(document).unbind("keypress");
		assignSaveListener();
		$.fn.bpeditor.clean(true);

		return false;
	});
	var mh = $(".textEditingArea").height()-$("textarea",$("#bpe_text_dropship")).offset().top-20;
	if (mh<50) {
		$(".textEditingArea").lovelyScrollMove(-50);
		setTimeout(function() {
			mh=80;
			$("textarea",$("#bpe_text_dropship")).focus().css("max-height",mh+"px").autosize();
		}, 10);
		
	} else {
		$("textarea",$("#bpe_text_dropship")).focus().css("max-height",mh+"px").autosize();
	}
	
	$("textarea",$("#bpe_text_dropship")).scroll(function(){
		setFakeHighlight(false);
	});
	if (iOS) {
		$("#dropshipToolbarBottom").hide();
		$("textarea",$("#bpe_text_dropship")).css("left","-3px");
	}
	
	String.prototype.insert = function (index, string) {
	  if (index > 0)
	    return this.substring(0, index) + string + this.substring(index, this.length);
	  else
	    return string + this;
	};
	
	if (iOS) {
		$("textarea",$("#bpe_text_dropship")).blur(function(){
			setFakeHighlight(true);
			
		});	
	}
	*/

}
var clipboard = false;
function cut () {
	setTimeout(function() {

		copy();
		
		if ($(".bpe_highlight").length) {
			$(".bpe_highlight").remove();
			selectionTools();
			$(".bpe_toggler").css("display","none");
			$.fn.bpeditor.clean(true);
		
		}
	},10);
	
}
function softCopy () {
	$copy = $("<div></div>");
	$(".bpe_highlight",$("#bpe_area")).each(function(){
		if (!$(this).hasClass("bpe_highlight_done")) {
			if ($("li.bpe_highlight,p.bpe_highlight,h1.bpe_highlight,h2.bpe_highlight,h3.bpe_highlight,h4.bpe_highlight,.bpe_image.bpe_highlight,.bpe_table.bpe_highlight,pre.bpe_highlight,.CMS_Component_Obs.bpe_highlight").length) {
				if ($(this).hasClass('CMS_Component_Obs')) {
					var elegible = ".textareaWrapper:not(.bpe_highlight),.bpe_image:not(.bpe_highlight),.CMS_Component_Obs:not(.bpe_highlight)";
					$list = $(this).clone();
					$(elegible,$list).remove();
					$("ul,ol",$list).each(function(){
						$(this).children().children("ul,ol").each(function(){
							if ( $("li",$(this)).length==0 )  {
								$(this).remove();
							}
						});
						if ( $("li",$(this)).length==0 )  {
							$(this).remove();
						}
					});
					$(".bpe_highlight",$(this)).addClass("bpe_highlight_done");
					$copy.append($list);
					
				} else {
					if ($(this).parent("ul").length || $(this).parent("ol").length) {	
						$list = $(this).parent().clone();
						$list.children("li:not(.bpe_highlight)").remove();
						$list.children().children().children("li:not(.bpe_highlight)").remove();
						$list.children().children().children().children().children("li:not(.bpe_highlight)").remove();
						$list.children().children("ul,ol").each(function(){
							$(this).children().children("ul,ol").each(function(){
								if ( $("li",$(this)).length==0 )  {
									$(this).remove();
								}
							});
							if ( $("li",$(this)).length==0 )  {
								$(this).remove();
							}
						});
						$(".bpe_highlight",$(this).parent()).addClass("bpe_highlight_done");
						$copy.append($list);
					} else {
						$copy.append($(this).clone());			
					}
				}
				
			} else {
				$copy.append($(this).clone());		
			}

		}

	});
	return $copy;
}
function findTarget ($copy) {
	$dest = $(".bpe_highlight:last");
	if ($dest.parents(".CMS_Component_ObsZones").length) {
		if ($(".CMS_Component_ObsZones",$copy).length) {
			$dest = $dest.parents(".CMS_Component_ObsZones");
		} else {
			if ($dest.parent("ul").length || $dest.parent("ol").length) {
				if ($("p,h1,h2,h3,h4,.bpe_image,.bpe_table,pre,.CMS_Component_Obs",$copy).length) {
					if (!$dest.parent().parent("li").length) {
						$dest = $dest.parent();
					} else {
						if (!$dest.parent().parent().parent().parent("li").length) {
							$dest = $dest.parent().parent().parent();
						} else {
							if (!$dest.parent().parent().parent().parent().parent().parent("li").length) {
								$dest = $dest.parent().parent().parent().parent().parent();
							}
						}
					}			
				} else {
					if ($dest.parents("li.bpe_highlight").length) {
						$dest = $dest.parents("li.bpe_highlight:first");					
					}
				}
			}
		}
	} else {
		if ($dest.parent("ul").length || $dest.parent("ol").length) {
			if ($("p,h1,h2,h3,h4,.bpe_image,.bpe_table,pre,.CMS_Component_Obs",$copy).length) {
				if (!$dest.parent().parent("li").length) {
					$dest = $dest.parent();
				} else {
					if (!$dest.parent().parent().parent().parent("li").length) {
						$dest = $dest.parent().parent().parent();
					} else {
						if (!$dest.parent().parent().parent().parent().parent().parent("li").length) {
							$dest = $dest.parent().parent().parent().parent().parent();
						}
					}
				}			
			} else {
				if ($dest.parents("li.bpe_highlight").length) {
					$dest = $dest.parents("li.bpe_highlight:first");					
				}
			}
		}
	}
	return $dest;
}
function duplicate () {
	$copy = softCopy();
	$copy.find(".textareaWrapper,.bpe_image,.CMS_Component_Obs").addClass("bpe_highlight dont_remove_highlight");
	$dest = findTarget($copy);
	$(".bpe_highlight",$("#bpe_area")).removeClass("bpe_highlight");
	$(".bpe_toggler").hide();
	$dest.after($copy.html());
	$.fn.bpeditor.clean(true);
	selectionTools();
}
function copy () {
	$copy = softCopy();
	$.ajax({
	  type: "POST",
	  url: "pageActions.php",
	  data: "pageAction=copy&content="+encodeURIComponent($copy.html()),
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		$.ajax({
		  type: "POST",
		  url: "pageActions.php",
		  data: "pageAction=paste",
		  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			clipboard= msg;
			$("#bpe_paste").removeClass("greyedOut");
		  }
		});
	  }
	});
}
function paste () {
	
	if (clipboard) {
		$temp = $("<div></div>").html(clipboard);
		if ($(".bpe_highlight:visible").length) {
			$dest = findTarget($temp);
			$(".bpe_highlight").removeClass("bpe_highlight");
			$(".bpe_toggler").hide();
			$temp.find(".textareaWrapper,.bpe_image,.CMS_Component_Obs").addClass("bpe_highlight dont_remove_highlight");
			var topaste = $temp.html();
			$dest.after(topaste);
		} else {
			$temp.find(".textareaWrapper,.bpe_image,.CMS_Component_Obs").addClass("bpe_highlight dont_remove_highlight");
			var topaste = $temp.html();
			$("#bpe_area > *:visible:last").after(topaste);
		}
		$.fn.bpeditor.clean(true);
		
		scrollToEl($(".bpe_highlight:first"),$(".textEditingArea"));
	}
}
function undo () {
	if (!$("#bpe_undo").hasClass("greyedOut")) {
//		$("#bpe_area").css("height",$("#bpe_area").height());
		if ($("#undoStack .viewing").length) {
			$("#bpe_area").empty().append($("#undoStack .viewing").prev().data("content"));
			$("#undoStack .viewing").prev().addClass("viewing");
			$("#undoStack .viewing:last").removeClass("viewing");
		} else {
			$("#finalRedo").data("content",$("#entryTextAreaVal").val());
			$("#bpe_area").empty().append($("#undoStack input:last").data("content"));
			$("#undoStack input:last").addClass("viewing");
		}
		if (!$("#undoStack .viewing").prev().length) {
			$("#bpe_undo").addClass("greyedOut");
		}
		$.fn.bpeditor.clean(false);
		$("#bpe_redo").removeClass("greyedOut");
		//$("#bpe_area").css("height","auto");
	}
}
function removeEls () {
	if ($(".bpe_highlight").length) {
		$(".bpe_highlight").each(function(){
			$el = $(this);
			$(".textareaWrapper:not(.bpe_highlight),li:not(.bpe_highlight),p:not(.bpe_highlight),h1:not(.bpe_highlight),h2:not(.bpe_highlight),h3:not(.bpe_highlight),h3:not(.bpe_highlight),h4:not(.bpe_highlight),pre:not(.bpe_highlight),.bpe_image:not(.bpe_highlight),.CMS_Component_Obs:not(.bpe_highlight)",$(this)).each(function(){
				if (!$(this).parents("li").length) {
					$(this).insertBefore($el);					
				}
			});
		
		});
		$(".bpe_highlight").remove();
		selectionTools();
		$(".bpe_toggler").css("display","none");
		setTimeout(function() {
			$.fn.bpeditor.clean(true);
		}, 10);
		
	}	
}
function redo () {
	if (!$("#bpe_redo").hasClass("greyedOut")) {
		//$("#bpe_area").css("height",$("#bpe_area").height());
		
		if ($("#undoStack .viewing").length) {
			if ($("#undoStack input.viewing").next().length) {
				$("#bpe_area").empty().append($("#undoStack .viewing").next().data("content"));
				$("#undoStack .viewing").next().addClass("viewing");
				$("#undoStack .viewing:first").removeClass("viewing");						
			} else {
				$("#bpe_area").empty().append($("#finalRedo").data("content"));
				$("#undoStack .viewing").removeClass("viewing");
			}
		}
		if (!$("#undoStack .viewing").length) {
			$("#bpe_redo").addClass("greyedOut");
		}
		$.fn.bpeditor.clean(false);
		$("#bpe_undo").removeClass("greyedOut");
		//$("#bpe_area").css("height","auto");
		
	}
}
function showEditingToooltips () {
	if (!$("#rightPane").hasClass("editingSnippet") && !$("#rightPane").hasClass("editingSitewideContent") && !$("#rightPane").hasClass("editingBlog")) {
			if (currentTooltip) {
				interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
				clearTimeout(toolTipTimeout);
			}
			currentTooltipItem=0;
			currentTooltip="editor";
			toolTipTimeout=setTimeout(tooltip, 1000);	
		}
		if ($("#rightPane").hasClass("editingSnippet")) {
			if (currentTooltip) {
				interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
				clearTimeout(toolTipTimeout);
			}
			currentTooltipItem=0;
			currentTooltip="editor";
			toolTipTimeout=setTimeout(tooltip, 1000);		
		}
		if ($("#rightPane").hasClass("editingSitewideContent")) {
			if (currentTooltip) {
				interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
				clearTimeout(toolTipTimeout);
			}
			currentTooltipItem=0;
			currentTooltip="editor";
			toolTipTimeout=setTimeout(tooltip, 1000);		
		}
}
var justScrolled=false;
var scrollTimeout;
var options;
var editingTextScroll;
var fakehighlighttimeout;
function focusTextArea($this) {
	if (!shiftDown&&!metaDown) {
		prepForInsert();
		assignAddTextKeysAndClick();
		
	}
	// Fires before Click
	if (iOS) {
		$(".visibleHighlight span").css("visibility","hidden");
		$(".dropshipToolbarBottom,.format_mttri").hide();
/*		if (typeof myScroll[$(".textEditingArea").attr("id")] != 'undefined') {
			myScroll[$(".textEditingArea").attr("id")].destroy();
		}
		$(".textEditingArea").removeClass("scrollWrapper");
		$(".textEditingArea .lovelyScrollContents").removeClass("lovelyScrollContents").addClass("removeBeforeLovelyScroll").removeAttr("style");
		$(".textEditingArea").removeAttr("style");
		*/
//		$("body").addClass("noscroll");
/*		$(window).scrollTop($this.offset().top);
		editingTextScroll=$(window).scrollTop();
		$("body").unbind("scroll").scroll(function(){
			editingTextScroll=$(window).scrollTop();
		});*/
	}
	if ($(".bpe_highlight.bpe_image").length && !metaDown) {
		saveImage();
		$(".bpe_highlight").removeClass("bpe_highlight dont_remove_highlight");
	}
	if ($this.val()!="") {
		$this.parents(".textareaWrapper").addClass("notEmpty");
	} else {
		$this.parents(".textareaWrapper").removeClass("notEmpty");
	}
	
	if (!metaDown) {
		
		if (!shiftDown) {
			$(".bpe_highlight").removeClass('bpe_highlight');			
		} else {
			$this.blur();
			endToEndHighlight($this.parents(".textareaWrapper"));
//			$this.parents(".textareaWrapper").addClass("bpe_highlight");
	
			
			setTimeout(function () {
				if (!iOS) {
					selectionTools();			
					assignSaveListener();	
				}
			}, 10);
			return false;
		}
		$this.parents(".textareaWrapper").addClass("editing stayhighlighted bpe_highlight");
	} else {
		if ($this.parents(".textareaWrapper").hasClass("bpe_highlight")) {
			$this.parents(".textareaWrapper").removeClass("multi_highlight stayhighlighted bpe_highlight");
		} else {
			$this.parents(".textareaWrapper").addClass("bpe_highlight");
			
		}
		$this.blur();
		setTimeout(function () {
			if (!iOS) {
				selectionTools();				
				assignSaveListener();
			}
		}, 10);
		return false;
	}
	
//	$this.autosize();
	//console.log("h123");
	//
	
	setTimeout(function () {
		autosave(false);
		if (!iOS) {
			selectionTools();				
		}

	}, 100);
}
function clickTextArea($this) {
	
	if (iOS) {
		hidePaneTools();
	}

	if (metaDown) {
		if ($this.parents(".textareaWrapper").hasClass("editing")) {
			$this.parents(".textareaWrapper").removeClass("editing stayhighlighted");
			$this.blur();
			selectionTools();
			assignSaveListener();
		} else {
		//	$this.parents(".textareaWrapper").addClass("bpe_highlight");
		//	$(".textareaWrapper.bpe_highlight").addClass("multi_highlight");
		}
//		$this.blur();
//		selectionTools();
//		assignSaveListener();
		return false;
	} else {
		if (shiftDown) {
//			endToEndHighlight($this);
//			$this.blur();

			return false;
		} else {
//			$(".multi_highlight").removeClass("multi_highlight");
			
		}
	}

	// 
	
//	$(".bpe_highlight").removeClass("bpe_highlight");
//	$t = $this;
//	$t.parents(".textareaWrapper").addClass("bpe_highlight");
	setTimeout(function () {
		// Safety fire in case it's bluring another textarea at the same time
//		$t.parents(".textareaWrapper").addClass("bpe_highlight stayhighlighted");			
	}, 20);
	if (!iOS) {
//		selectionTools();
	}
	

	

	
	var e = $this[0];
	
	setTimeout(function() {
		if (!touchdown) {
			setFakeHighlight();
		
		}
	}, 10);

	var start = e.value.substr(0, e.selectionStart).lastIndexOf("[");	
	if (start!=-1) {

		if (e.value.substr(start, e.selectionStart-start).search(/[^\\]\]/)!=-1) {
			return false;
		}
		var end = e.value.substr(e.selectionEnd, e.value.length-e.selectionEnd).search(/[^\\]\]/);
		if (end!=-1) {
			var end2 = e.value.substr(e.selectionEnd, end).indexOf(":"); 
			if (end2!=-1) {
				var end = end + e.value.substr(0, e.selectionStart).length +2;
				if (e.value.substr(start,e.selectionStart - start).indexOf(":")==-1 && e.value.substr(start,e.selectionStart - start).indexOf(" ")==-1) {
					if (e.value.substr(e.selectionEnd, end - e.value.substr(0, e.selectionStart).length).indexOf("[")==-1) {
						e.setSelectionRange(start,end);	
						$(".bpe_selected").removeClass("bpe_selected");
						var result = checkBPESelection($this.getSelection().text);
						for (var i=0; i < result.length; i++) {
							$(".bpe_"+result[i]).addClass("bpe_selected");
						};
					} else {

						var numberOfOpeners = e.value.substr(e.selectionEnd, end - e.value.substr(0, e.selectionStart).length).match(/\[bold|\[italic|\[strikethrough|\[underline|\[superscript|\[subscript/g).length;
							var end = e.value.substr(e.selectionEnd+end2, e.value.length-e.selectionEnd).split(/[^\\]\]/g);
							var stringLength = 0;

							for (var i=0; i <= numberOfOpeners; i++) {
								stringLength = stringLength + end[i].length + 2;
							};
							var h = e.selectionStart-start;
							e.setSelectionRange(start,stringLength+start+h+end2);	
							e.focus();
							$(".bpe_selected").removeClass("bpe_selected");
							var result = checkBPESelection($this.getSelection().text);
							for (var i=0; i < result.length; i++) {
								$(".bpe_"+result[i]).addClass("bpe_selected");
							};
					}

				}

			} else {

				if ( e.value.substr(start+1,e.value.substr(start,e.selectionStart - start).indexOf(":")).search(/[^\\]\]/) == -1) {
					var type = (e.value.substr(start+1,e.value.substr(start,e.selectionStart - start).indexOf(":")-1));
					if (type=="strikethrough") {
						$(".bpe_strike").addClass("bpe_selected");
					} else if (type=="italic") {
						$(".bpe_ital").addClass("bpe_selected");
					} else if (type=="superscript") {
						$(".bpe_sup").addClass("bpe_selected");
					} else if (type=="subscript") {
						$(".bpe_sub").addClass("bpe_selected");
					} else {
						$(".bpe_"+type).addClass("bpe_selected");
					}
				}


			}

		}
		setTimeout(function() {
			if (!touchdown) {
				setFakeHighlight();
			
			}
		}, 10);
	

	}
}
$(document).ready(function(){
	
	if ($("#dragInsert").length) {
		$("body").addClass("noscroll");		
	}


	$(document).on('blur', '.textareaWrapper textarea',  function(e){
		var $t = $(this);
		$t.parents(".textareaWrapper").removeClass("editing");
		if ($t.val().replace(/\s/g,"").replace(/\r/g,"").replace(/\n/g,"")=="") {
			$t.parents(".textareaWrapper").next('.dropzone').remove();
			$t.parents(".textareaWrapper").remove();
		}
		$(".visibleHighlight span",$t.parents(".textareaWrapper")).css("visibility","hidden");
		if ($t.val().match(/\n\n/) && $t.parents(".textareaWrapper").attr("data-el")!='pre') {
			var $wrap = $t.parents(".textareaWrapper");
			var el = $wrap.attr("data-el");
			if ($wrap.hasClass("stayhighlighted")) {
				$wrap.removeClass("stayhighlighted editing level-1 level-2 level-3 el_p el_h1 el_h2 el_h3 el_h4 el_ul el_ol el_table");
			} else {
				$wrap.removeClass("editing bpe_highlight level-1 level-2 level-3 el_p el_h1 el_h2 el_h3 el_h4 el_ul el_ol el_table");
			}

			var classes = $wrap.attr("class");
			var align = $wrap.css("text-align");
		
			var texts = $t.val().split(/\n\n/);
			var newHTML = "";
			for (var i = 0; i < texts.length; i++) {
				if (texts[i]!='') {
					if ($wrap.attr("data-level")!='') {
						var l = parseInt($wrap.attr("data-level"));
					} else {
						var l = '1';
					}
					var newel = addTextareaAfter($wrap,el,classes,align,texts[i],false,l,true,true);
					newHTML = newHTML+newel;
				}
			}

			$wrap.after(newHTML);
			//$(".textareaWrapper textarea").autosize();
			$wrap.remove();
			//Removed 9 Jan
			//$(".textEditingArea").lovelyScroll();

			assign_sort();
//			bindTextareaWrappers();

		} else {
			//assign_sort();
		}
		setTimeout(function () {
			$t.parents(".textareaWrapper").removeClass("stayhighlighted");
		}, 50);
		if (iOS) {
			//$t.css("max-height","1000px").trigger('autosize.refresh');

			setTimeout(function () {
				if (!$('.textareaWrapper textarea:focus').length) {
			//		$(".textEditingArea .removeBeforeLovelyScroll > *:first").unwrap();
			//		$("body").removeClass("noscroll");

					setTimeout(function () {

			//Removed 9 Jan
			//$(".textEditingArea").lovelyScroll();

			//			var c = editingTextScroll-160;
			//			setTimeout(function () {
			//				if (typeof myScroll[$(".textEditingArea").attr("id")] != 'undefined') {
			//					myScroll[$(".textEditingArea").attr("id")].scrollBy(0,-c);							
			//				}
							
			//			}, 10);

						setFakeHighlight(true,$t);
						selectionTools();	

					}, 100);

				}	
			}, 20);
		}
	});
	
	$(document).on('click', '#rightPane',  function(e){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		hide_menus();
		$(".dropshipToolbarBottom,.format_mttri").hide();
		$.fn.bpeditor.assign_toggler();
		assignSaveListener();				
	
	});
	$("#entryWrapper").on('click', '.dragTextArea',  function(e){
		e.stopPropagation();
		if (!metaDown) {
			//$("textarea",$(this).parents(".textareaWrapper")).trigger('click').focus();
		} else {
			$(this).parents(".textareaWrapper").removeClass("bpe_highlight multi_highlight");
		}
		return false;
	});
	
	$(document).on('focus', '.textareaWrapper textarea',  function(e){
		bindTextareaWrappers($(this));
		focusTextArea($(this));			

		//clickTextArea($(this));
		
	});
	
	$("#entryWrapper").on('click', '.textareaWrapper textarea',  function(e){
		clickTextArea($(this));
/*		if (metaDown) {
			e.stopPropagation();
			return false;
		} else {
			if (shiftDown) {
				e.stopPropagation();
			}
		}
		e.preventDefault();
		e.stopPropagation();*/
	});
	
	$(document).on('mouseup', '.textareaWrapper textarea',  function(e){
		$(".bpe_selected").removeClass("bpe_selected");
		var result = checkBPESelection($(this).getSelection().text);
		for (var i=0; i < result.length; i++) {
			$(".bpe_"+result[i]).addClass("bpe_selected");
		};
	});
	$(document).on('mousedown', '.textareaWrapper textarea',  function(e){
		$(this).addClass("draggingSel");
	});
			
	
	LangVars = jQuery.parseJSON( $("#LangVarsJson").val() );

	tooltips["mainmenupages"] = new Array();
	tooltips["mainmenupages"][0] = {
		itarget:".editPageBar:first:visible"
		,pos:"top_center"
		,texts:""
		,texts_touch:LangVars.Tip_Pages_Touch
		,touchOnly:true
	};
	tooltips["returntowelcome"] = new Array();
	tooltips["returntowelcome"][0] = {
		itarget:".returnToLP:visible"
		,pos:"top_right"
		,texts:LangVars.Tip_Welcome
		,texts_touch:LangVars.Tip_Welcome_Touch
	};

	tooltips["zones"] = new Array();
	tooltips["zones"][0] = {
		itarget:".tooltipTarget .dropzone"
		,pos:"top_center"
		,texts:LangVars.Tip_Zones
	};

	tooltips["section"] = new Array();
	tooltips["section"][0] = {
		itarget:".tooltipTarget.bpe_split_divider"
		,pos:"bottom_center"
		,texts:LangVars.Tip_Section
	};


	tooltips["newvideo"] = new Array();
	tooltips["newvideo"][0] = {
		itarget:"#changeVidThumb"
		,pos:"bottom_center"
		,texts:LangVars.Tip_Video
	};

	tooltips["newform"] = new Array();
	tooltips["newform"][0] = {
		itarget:"#recipientTooltip"
		,pos:"bottom_center"
		,texts:LangVars.Tip_Form
	};


	tooltips["contextmenu"] = new Array();
	tooltips["contextmenu"][0] = {
		itarget:"#dragBoundry"
		,pos:"center_center"
		,texts:LangVars.Tip_Context_Menu
		,texts_touch:LangVars.Tip_Context_Menu_Touch
	};

	tooltips["contextmenuwithcutcopypaste"] = new Array();
	tooltips["contextmenuwithcutcopypaste"][0] = {
		itarget:"#dragBoundry"
		,pos:"center_center"
		,texts:LangVars.Tip_Context_Menu_CCP
		,texts_touch:LangVars.Tip_Context_Menu_CCP_Touch
	};

	tooltips["addednewpage"] = new Array();
	tooltips["addednewpage"][0] = {
		itarget:".editPageBar.offline:first:visible"
		,pos:"top_center"
		,texts:LangVars.Tip_New_Page
	};
	tooltips["editor"] = new Array();

	tooltips["editor"][0] = {
		itarget:".textEditingArea"
		,pos:"center_center"
		,reveal:".textEditingArea:visible"
		,texts:LangVars.Tip_Editor_1
	};
	tooltips["editor"][1] = {
		itarget:"#livepreview:visible"
		,pos:"right_center"
		,texts:LangVars.Tip_Editor_2
	};
	tooltips["editor"][2] = {
		itarget:"#previewPage:visible"
		,pos:"top_center"
		,texts:LangVars.Tip_Editor_3
		,texts_touch:LangVars.Tip_Editor_3_Touch
	};

	tooltips["editorsnippets"] = new Array();

	tooltips["editorsnippets"][0] = {
		itarget:"#livepreview:visible"
		,pos:"right_center"
		,texts:LangVars.Tip_Snippets_1
	};
	tooltips["editorsnippets"][2] = {
		itarget:"#previewPage:visible"
		,pos:"top_center"
		,texts:LangVars.Tip_Snippets_2
		,texts_touch:LangVars.Tip_Snippets_2_Touch
	};

	tooltips["makeScreenBigger"] = new Array();
	tooltips["makeScreenBigger"][0] = {
		itarget:"body"
		,pos:"body_center"
		,withEnlarge:true
		,texts:LangVars.Tip_Enlarge
	};

	tooltips["publish"] = new Array();
	tooltips["publish"][0] = {
		itarget:"#saveEditPage:visible,#publishInPreview:visible"
		,pos:"top_left"
		,texts:LangVars.Tip_Publish
		,texts_touch:LangVars.Tip_Publish_Touch
	};
	tooltips["addtext"] = new Array();
	tooltips["addtext"][0] = {
		itarget:"#bpe_text_dropship:visible"
		,pos:"bottom_center"
		,mouseOnly:true
		,texts:LangVars.Tip_Text
	};
	tooltips["dragItemsToPage"] = new Array();
	tooltips["dragItemsToPage"][0] = {
		itarget:".dragInsertItem:visible:first,.thumbItem:visible:first,.thumbItem:visible:first,.assetPane .responsiveListItem:visible:first"
		,pos:"bottom_center"
		,texts:LangVars.Tip_Drag
	};
	
	newVideo = $("<div id='bpe_video_dropship'><div id='dropshipToolbar' class='clearfix'><a href='#' class='dropshipButton' id='bpe_upload_video'>"+LangVars.Upload_New_Video+"</a></div><div id='bpe_dropship_videos' class='clearfix'></div></div>");	
	newImage = $("<div id='bpe_image_dropship'><div id='dropshipToolbar' class='dropshipToolbar clearfix'><a href='#' class='dropshipButton bpe_upload_image' id='bpe_upload_image'>"+LangVars.Upload_New_Image+"</a><div id='toolbarFilter' class=\"clearfix\"><input type='text' id='imagePalletFilter' value='Search' /></div></div><div id='bpe_dropship_images' class='clearfix'><div class='clearfix'></div></div></div>");	
	options = {
	    img_classes: $("#imageClasses").html(), 
		block_classes: $("#blockClasses").html(),
		split_classes: $("#splitClasses").html()
	  };

});
function addTextareaAfter(target,el,classes,align,content,focusme,level,vis,returnHTML) {
	if (typeof returnHTML === 'undefined') {
		var returnHTML = false;
	} else {
		var returnHTML = true;
	}
	if (typeof level === 'undefined') {
		var level = '';
	}
	if (focusme) {
		var focusClass = 'editing bpe_highlight stayhighlighted';
	} else {
		var focusClass = '';
	}
	if (el=='ul'||el=='ol') {
		var levelClass='level-'+level;
	} else {
		var levelClass='';
	}
	if (el=="table") {
		var tableextra = "<div class=\"bpe_table\">"+target.html()+"</div>";
	} else {
		var tableextra="";
	}
	if (vis) {
		var vis = "";
	} else {
		var vis = "display:none;";
	}
	var newc = classes.replace(/editing/g,"").replace(/textareaWrapper/g,"").replace(/notEmpty/g,"").replace(/level-1/g,"").replace(/level-2/g,"").replace(/level-3/g,"").replace("stayhighlighted","").replace("ui-draggable","").replace("ui-selectee","").replace("ui-selected","").replace("ui-selectable","").replace("dont_remove_highlight","").replace("bpe_highlight","").replace("bpe_highlight_done","").replace(/ /g,"").replace(/_/g," ");		

	if (newc!="") {		
		var classLabel ='<div class="textAreaClassLabel" title="'+newc.trim()+'">'+newc.trim()+'</div>';		
	} else {
		var classLabel="";
	}
//	var newHTML = '<div class="el_'+el+' textareaWrapper '+classes+' '+focusClass+' '+levelClass+'" data-level="'+level+'" data-el="'+el+'" style="text-align:'+align+';'+vis+'">'+classLabel+'<div class="dragTextArea"><!-- --></div><div class="visibleHighlight"></div><textarea style="text-align:inherit" class="bpe_textarea">'+content+'</textarea><div class="bpe_textarea_mask"></div><div class="format_mttri"></div>'+tableextra+'</div>';
	var newHTML = '<div class="el_'+el+' textareaWrapper '+classes+' '+focusClass+' '+levelClass+'" data-level="'+level+'" data-el="'+el+'" style="text-align:'+align+';'+vis+'">'+classLabel+'<div class="dragTextArea"><!-- --></div><div class="visibleHighlight">'+content.replace("\r","<br/>")+'</div><textarea style="text-align:inherit" class="bpe_textarea">'+content+'</textarea><div class="bpe_textarea_mask"></div><div class="format_mttri"></div><div class="dropshipToolbarBottom clearfix" style="display:none;"><div class="format_first_block"><div class="bpe_buttons"><a href="#" class="bpe_bold" title="Bold">'+LangVars.Bold+'</a><a href="#" class="bpe_ital" title="Italic">'+LangVars.Italics+'</a><a href="#" class="bpe_underline" title="Underline">'+LangVars.Underline+'</a></div><div class="format_separator"></div><span class="insertLinkToWebsite">'+LangVars.Link+'</span><div class="format_separator"></div><div class="format_more"><!-- --></div></div><div class="format_second_block"><div class="format_less"><!-- --></div><div class="format_separator"></div><div class="bpe_buttons"><a href="#" class="bpe_strike" title="Strikethough">'+LangVars.Strikethrough+'</a><a href="#" class="bpe_sub" title="Subscript">'+LangVars.SubSupX+'<sub>'+LangVars.SubSupY+'</sub></a><a href="#" class="bpe_sup" title="Superscript">'+LangVars.SubSupX+'<sup>'+LangVars.SubSupY+'</sup></a></div></div>'+tableextra+'</div></div>';
	if (returnHTML===false) {
		target.after(newHTML);
		var $wrap = target.next();
		var align = $("textarea",$wrap).css("text-align");
		if (align=="left") {
			$(".bpe_left",$wrap).addClass("bpe_selected_align");
		} else if (align=="center") {
			$(".bpe_centre",$wrap).addClass("bpe_selected_align");
		} else if (align=="right") {
			$(".bpe_right",$wrap).addClass("bpe_selected_align");
		} else if (align=="justify") {
			$(".bpe_justify",$wrap).addClass("bpe_selected_align");
		} else {
			$(".bpe_left",$wrap).addClass("bpe_selected_align");
		}
		if (focusme) {
			$("textarea",$wrap).focus();
		}
//		$("textarea",$wrap).autosize({callback:refreshScrollHeights});
		return $wrap;
	} else {
		return newHTML;
	}
	
}
function bindTextareaWrappers($textarea) {

	var $wrap = $textarea.parent();
	$(".dropshipToolbarBottom,.format_mttri,.format_triShadow,.format_second_block",$wrap).hide();
	
    $textarea.unbind('keydown').keydown(function(e){

		if ($(this).parents(".textareaWrapper").attr('data-el')=='pre') {
			var keyCode = e.keyCode || e.which;

			if (keyCode == 9) {
				e.preventDefault();
				var start = $(this).get(0).selectionStart;
				var end = $(this).get(0).selectionEnd;

				$(this).val($(this).val().substring(0, start)
				+ "\t"
			    + $(this).val().substring(end));

				$(this).get(0).selectionEnd = start + 1;
			}
		}
		

	});	
   $textarea.unbind('keyup').keyup(function(e){

		if ($(this).val()!="") {
			$(this).parents(".textareaWrapper").addClass("notEmpty stayhighlighted");
		} else {
			$(this).parents(".textareaWrapper").removeClass("notEmpty stayhighlighted");
		}
		if ($(this).parents(".textareaWrapper").hasClass("el_table")) {
			$(this).parents(".textareaWrapper").addClass("changed");
			var timeout = 500;
		} else {
			var timeout = 1500;
		}
    	setFakeHighlight();
		clearTimeout(autosaveontype);
		autosaveontype = false;
		var $this = $(this);
		var $wrap = $this.parents(".textareaWrapper");
		if (typeof $("#iframe"+livepreviewToggle)[0].contentWindow.updateCMSText !='undefined') {

			if ($wrap.attr("data-el")=='pre') {
				$("#iframe"+livepreviewToggle)[0].contentWindow.updateCMSText(htmlentities($this.val()).replace(/(?:\r\n|\r|\n)/g, '<br />'));
			} else {
				$("#iframe"+livepreviewToggle)[0].contentWindow.updateCMSText(toHTML(htmlentities($this.val()).replace(/(?:\r\n|\r|\n)/g, '<br />')));				
			}
		}
		var el = $wrap.attr("data-el");		
		if ($this.val().match(/\n\n/) && el!='pre' && !iOS) {

			$wrap.removeClass("stayhighlighted editing bpe_highlight level-1 level-2 level-3 el_p el_h1 el_h2 el_h3 el_h4 el_ul el_ol el_table");
			var classes = $wrap.attr("class");
			var align = $wrap.css("text-align");
		
			var texts = $this.val().split(/\n\n/);
			if (texts[1]=="") {
				for (var i = texts.length - 1; i >= 0; i--) {
					if (i == texts.length-1) {
						var focusme = true;
					} else {
						var focusme = false;
					}
					if ($wrap.attr("data-level")!='') {
						var l = parseInt($wrap.attr("data-level"));
					} else {
						var l = '1';
					}
					if (texts[i]!=""||focusme) {
						addTextareaAfter($wrap,el,classes,align,texts[i],focusme,l,true);						
					}

				}
				$wrap.remove();
				assign_sort();
				//bindTextareaWrappers();
				prepForInsert();
				if (!iOS){
				selectionTools();
				assignAddTextKeysAndClick();
				}
			} else {
				$wrap.addClass("editing bpe_highlight");
				setTimeout(function() {
					if (!touchdown) {
						setFakeHighlight();
					}
				}, 10);
			}
		} else {
		
			autosaveontype = setTimeout(function () {
				if (!$this.is(":focus")) {
					var blurit = true;
				} else {
					var blurit = false;
				}
				var s = $this[0].selectionStart;
				var e = $this[0].selectionEnd;
				$this.text($this.val());
				$this[0].selectionStart = s;
				$this[0].selectionEnd = e;
				if (blurit) {
					$this.blur();
				}
				autosave(true);
			}, timeout);
			if (e.keyCode==37||e.keyCode==39||e.keyCode==38||e.keyCode==40) {
				if (!touchdown) {
					setFakeHighlight();
				}				
			}
			/*
			setTimeout(function() {
				if (!touchdown) {
					setFakeHighlight();
				}
			}, 10);
			*/
		}
	
		
		
    });

	/*$("textarea",$wrap).unbind('mouseup').mouseup(function(){
		$(".bpe_selected").removeClass("bpe_selected");
		var result = checkBPESelection($(this).getSelection().text);
		for (var i=0; i < result.length; i++) {
			$(".bpe_"+result[i]).addClass("bpe_selected");
		};
	});
	*/
//	$("textarea",$wrap).unbind('mousedown').mousedown(function(){
//		$(this).addClass("draggingSel");
//	});
	/*$(".dragTextArea").unbind("click").click(function(e){
		e.stopPropagation();
		if (!metaDown) {
			$("textarea",$(this).parents(".textareaWrapper")).trigger('click').focus();
		} else {
			$(this).parents(".textareaWrapper").removeClass("bpe_highlight multi_highlight");
		}
	});*/
	/*
	$("textarea",$wrap).unbind('click').click(function(e){
		clickTextArea($(this));
		if (metaDown) {
			e.stopPropagation();
			return false;
		} else {
			if (shiftDown) {
				e.stopPropagation();
			}
		}
		e.preventDefault();
		return false;
	});
	*/
	setTimeout(function () {
		$(".format_more",$wrap).unbind().click(function(e){	
			var $scope = $(this).parents('.dropshipToolbarBottom');
			$(".format_first_block",$scope).fadeOut(200,function(){
				$(".format_second_block",$scope).fadeIn();
//				$(".dropshipToolbarBottom",$scope).css("width","auto");
//				$(".dropshipToolbarBottom",$scope).css("width",$(".dropshipToolbarBottom",$scope).width()+1);
			});
			return false;
		});
		$(".format_less",$wrap).unbind().click(function(e){
			var $scope = $(this).parents('.dropshipToolbarBottom');
		
			$(".format_second_block",$scope).fadeOut(200,function(){
				$(".format_first_block",$scope).fadeIn();
//				$(".dropshipToolbarBottom",$scope).css("width","auto");
//				$(".dropshipToolbarBottom",$scope).css("width",$(".dropshipToolbarBottom",$scope).width()+1);
			});
			return false;
		});
		$(".bpe_bold",$wrap).unbind().click(function(e){
			logTrainingClick("formattingIconInEditPage");
			bpe_button('bold',$(this),"bold");
			return false;
		});
		$(".bpe_ital",$wrap).unbind().click(function(e){
					logTrainingClick("formattingIconInEditPage");
			bpe_button('italic',$(this),"ital");
			return false;
		});
		$(".bpe_underline",$wrap).unbind().click(function(e){
					logTrainingClick("formattingIconInEditPage");
			bpe_button('underline',$(this),"underline");
			return false;
		});
		$(".insertLinkToWebsite",$wrap).unbind().click(function(){
			logTrainingClick("addLinkTextEditor");
	
			prepDialogue ("<h2>"+LangVars.Insert_Link+"</h2><p>"+LangVars.Insert_Link_Text+"</p>",LangVars.Cancel,cancelDialogue,LangVars.Done,insertLinkToWebsite,false,true,true,"",true);
			return false;
		});
		$(".bpe_strike",$wrap).unbind().click(function(e){
					logTrainingClick("formattingIconInEditPage");
			bpe_button('strikethrough',$(this),"strike");
			return false;
		});
		$(".bpe_sup",$wrap).unbind().click(function(e){
					logTrainingClick("formattingIconInEditPage");
			bpe_button('superscript',$(this),"sup");
			return false;
		});
		$(".bpe_sub",$wrap).unbind().click(function(e){
			logTrainingClick("formattingIconInEditPage");
			bpe_button('subscript',$(this),"sub");
			return false;
		});
	}, 10);
	


//	$("textarea",$wrap).unbind().focus(function(){
//		focusTextArea($(this));
//	});
	

	$textarea.unbind('scroll').scroll(function(){
		setFakeHighlight(false);
	});
	if (iOS) {
		$("#dropshipToolbarBottom").hide();
//		$textarea.css("left","-3px");
	}	
	

	String.prototype.insert = function (index, string) {
	  if (index > 0)
	    return this.substring(0, index) + string + this.substring(index, this.length);
	  else
	    return string + this;
	};
	/*
	$("textarea",$wrap).unbind('blur').blur(function(){	
		var $t = $(this);

		$t.parents(".textareaWrapper").removeClass("editing");
		if ($t.val().replace(/\s/g,"").replace(/\r/g,"").replace(/\n/g,"")=="") {
			$t.parents(".textareaWrapper").next('.dropzone').remove();
			$t.parents(".textareaWrapper").remove();
		}
		
		if ($t.val().match(/\n\n/) && $t.parents(".textareaWrapper").attr("data-el")!='pre') {
			var $wrap = $t.parents(".textareaWrapper");
			var el = $wrap.attr("data-el");
			if ($wrap.hasClass("stayhighlighted")) {
				$wrap.removeClass("stayhighlighted editing level-1 level-2 level-3 el_p el_h1 el_h2 el_h3 el_h4 el_ul el_ol el_table");
			} else {
				$wrap.removeClass("editing bpe_highlight level-1 level-2 level-3 el_p el_h1 el_h2 el_h3 el_h4 el_ul el_ol el_table");			
			}

			var classes = $wrap.attr("class");
			var align = $wrap.css("text-align");
		
			var texts = $t.val().split(/\n\n/);
			for (var i = texts.length - 1; i >= 0; i--) {
				if (texts[i]!='') {
					if ($wrap.attr("data-level")!='') {
						var l = parseInt($wrap.attr("data-level"));
					} else {
						var l = '1';
					}
					addTextareaAfter($wrap,el,classes,align,texts[i],false,l,true);
				}
			}
			$wrap.remove();
			assign_sort();
//			bindTextareaWrappers();

		} else {
			
			//assign_sort();
		}
		setTimeout(function () {
			$t.parents(".textareaWrapper").removeClass("stayhighlighted");
		}, 50);
		if (iOS) {
			//$t.css("max-height","1000px").trigger('autosize.refresh');

			setTimeout(function () {
				if (!$('.textareaWrapper textarea:focus').length) {
					$(".textEditingArea .removeBeforeLovelyScroll > *:first").unwrap();
					$("body").removeClass("noscroll");

					setTimeout(function () {

						$(".textEditingArea").lovelyScroll();

						var c = editingTextScroll-160;
						setTimeout(function () {
							if (typeof myScroll[$(".textEditingArea").attr("id")] != 'undefined') {
								myScroll[$(".textEditingArea").attr("id")].scrollBy(0,-c);							
							}
							
						}, 10);

						setFakeHighlight(true,$t);
						selectionTools();	

					}, 100);

				}	
			}, 20);
		}

		
	});*/
	
	
}
var bpe_hide_drag;
var singleClick;
var doubleClickTimer = false;
var autosaveontype = false;
function isMac () {
	return navigator.userAgent.indexOf("Mac OS X") != -1;
}
function endToEndHighlight ($clicked) {
	if ($(".bpe_highlight").length) {
		$(".bpe_toggler").css("display","none");
		$(".bpe_stop").removeClass("bpe_stop");
		$clicked.addClass("bpe_stop");
		var highlightAll = true;
		var toplevel = false;
		if ($(".bpe_highlight:first").nextAll(".bpe_stop").length) {
			var toplevel = true;
			$(".bpe_highlight:first").nextAll(".textareaWrapper,div.CMS_Component_Obs,.bpe_image").each(function(){
				if (this.tagName.toLowerCase()=="ol"||this.tagName.toLowerCase()=="ul") {
					if (highlightAll) {
						$(this).addClass("bpe_highlight");
						$("li",$(this)).addClass("bpe_highlight");
					}
				} else {
					if ($(this).hasClass("bpe_stop")) {
						$(this).addClass("bpe_highlight");										
						$("li",$(this)).addClass("bpe_highlight");
						highlightAll = false;
					} else {
						if (highlightAll) {
							$(this).addClass("bpe_highlight");
							$("li",$(this)).addClass("bpe_highlight");
						}
					}									
				}
			});
		} 
		if ($(".bpe_highlight:last").prevAll(".bpe_stop").length) {
			var toplevel = true;
			$(".bpe_highlight:last").prevAll(".textareaWrapper,div.CMS_Component_Obs,.bpe_image").each(function(){
				if (this.tagName.toLowerCase()=="ol"||this.tagName.toLowerCase()=="ul") {
					if (highlightAll) {
						$(this).addClass("bpe_highlight");
						$("li",$(this)).addClass("bpe_highlight");
					}
				} else {
					if ($(this).hasClass("bpe_stop")) {
						$(this).addClass("bpe_highlight");										
						$("li",$(this)).addClass("bpe_highlight");
						highlightAll = false;
					} else {
						if (highlightAll) {
							$(this).addClass("bpe_highlight");
							$("li",$(this)).addClass("bpe_highlight");
						}
					}									
				}
			});
		
		}
		if (!toplevel) {
			// Could be in a zone.
			$(".bpe_stop").removeClass("bpe_stop");
			var isprev = false;
			var firstFound = false;

			$clicked.parents(".CMS_Component_ObsZones").prevAll().each(function(){

				if ($(this).hasClass("bpe_highlight")){
					isprev=true;
					if (!firstFound) {
						firstFound = true;
					}
				}
				if ($(this).find(".bpe_highlight").length) {
					isprev=true;
					if (!firstFound) {
						firstFound = true;
					}
				}
			});
			if ($clicked.parents(".CMS_Component_ObsZones").hasClass("bpe_highlight")&&!isprev) {
				isprev=true;				
			}
			if (isprev) {
				$clicked.addClass("stopSelectDownUntilHere");

				var limit = 0;
				function checkuntil() {
					if ($("#bpe_area .stopSelectDownUntilHere").length) {
						var selectedIsZones = false;
						var zonesHasChildren = false;
						var $elementAfterSelected = false
						var selectedIsListWithChildren = false
						var $current = false;
						var isListItem = false;
						var nextIsList = false;

						if ($(".bpe_highlight:last").length) {
							$current = $(".bpe_highlight:last");
							if ($(".bpe_highlight:last").hasClass("CMS_Component_ObsZones")) {
								selectedIsZones = true;
								if ($(".bpe_highlight:last").find("div.CMS_Component_Obs,.bpe_image,.textareaWrapper").filter(":visible").length ) {
									zonesHasChildren = true;
								}
							} else {
								if ($("ul",$(".bpe_highlight:last")).length) {
									selectedIsListWithChildren = true;
								}
							}
							if ($current.parent("ul").length || $current.parent("ol").length) {
								isListItem = true;
							}
							if ($(".bpe_highlight:last").nextAll("div.CMS_Component_Obs,.bpe_image,.textareaWrapper").filter(":visible").length ) {
								$elementAfterSelected = $(".bpe_highlight:last").nextAll("div.CMS_Component_Obs,.bpe_image,.textareaWrapper").filter(":visible").first();

							} else {
								// no next item, check if there are zones after this one.
								if ($(".bpe_highlight:last").parents(".zonesDropBox").next(".zonesDropBox").length) {
									$elementAfterSelected = $(".bpe_highlight:last").parents(".zonesDropBox").next(".zonesDropBox").find("div.CMS_Component_Obs,.bpe_image,.textareaWrapper").first();
								}
							}


						}


						if ($current) {

							if (!$elementAfterSelected && !isListItem) {

								if ($current.parents(".CMS_Component_Obs").nextAll("div.CMS_Component_Obs,.bpe_image,.textareaWrapper").filter(":visible").first().length) {
									$next = $current.parents(".CMS_Component_Obs").nextAll("div.CMS_Component_Obs,.bpe_image,.textareaWrapper").filter(":visible").first();
									$next.addClass("bpe_highlight").removeClass("stopSelectDownUntilHere");
								}
							}

							if (selectedIsZones) {
								if (zonesHasChildren) {
									$next = $current.find("div.CMS_Component_Obs,.bpe_image,.textareaWrapper").filter(":visible").first();
									$next.addClass("bpe_highlight").removeClass("stopSelectDownUntilHere");
								}
							}

							if ($elementAfterSelected && !zonesHasChildren && !selectedIsListWithChildren && !nextIsList) {
								$elementAfterSelected.addClass("bpe_highlight").removeClass("stopSelectDownUntilHere");
							}
							
							


						} else {
							$next = $("#bpe_area").find("div.CMS_Component_Obs,.bpe_image,.textareaWrapper").filter(":visible").first();
							$next.addClass("bpe_highlight").removeClass("stopSelectDownUntilHere");

						}
					
				
						checkuntil();
					
					}
				}
				checkuntil();

				scrollToEl($(".bpe_highlight:last"),$(".textEditingArea"));
				
			}
		
			
		}
	} else {
		if (!$(this).hasClass("CMS_Component_Obs")) {
			//showToggler($(this));								
		} else {
			$(".bpe_highlight").removeClass("bpe_highlight");
			$(this).addClass("bpe_highlight");
			$(".bpe_toggler").css("display","none");
		}
	}
}

(function($) {
jQuery.fn.remove_bpeditor = function() {
	return this.each(function(){
		$(this).next(".bpe_area_wrapper").remove();
		$(this).css("display","block");
	});
};

jQuery.fn.bpeditor = function(options) {
	// default settings
	  var options = jQuery.extend( {
	    img_classes: $("#imageClasses").html(), 
		block_classes: $("#blockClasses").html(),
		split_classes: $("#splitClasses").html()
	  },options);
		$.fn.bpeditor.assign_toggler = function () {
//			assign_sort();

			$(".componentDelete").unbind("click");
			$(".componentDelete").click(function(){
				$(this).parents(".CMS_Component_Obs").remove();
				$.fn.bpeditor.clean(true);
			});
			//$(".bpe_image,form,p,h1,h2,h3,h4,h5,pre,li,.bpe_table,div.CMS_Component_Obs",$("#bpe_area")).fadeTo(0,1);
			

			$(".bpe_image, .addToBasketForm","#bpe_area").unbind("click");
			$(".bpe_image, .addToBasketForm","#bpe_area").click(function(){

				$("input,textarea").blur();
				if ($(".bpe_highlight.bpe_image").length && !$(this).hasClass("bpe_highlight") && !metaDown) {
					saveImage();
					$(".bpe_highlight").removeClass("bpe_highlight dont_remove_highlight");
				}
				if (doubletap) {
					editImage($(this));
					return false;
				}

				if (!ignoreClickCatchup && !doubletap && !justScrolled) {
					doubletap=true;
					setTimeout(function() {
						doubletap=false;
					}, 300);
					hide_iconbar_menus();
					$(".bpe_stop").removeClass("bpe_stop");
					if (metaDown) {
						$(".bpe_toggler").css("display","none");
						if ($(this).hasClass("bpe_highlight")) {
							$(this).removeClass("bpe_highlight");
						} else {
							$(this).addClass("bpe_highlight");						
						}
						$(".textareaWrapper.bpe_highlight").addClass("multi_highlight");
						assignSaveListener();
					} else {
						if (shiftDown) {
							endToEndHighlight($(this));
						} else {
							//showImageToggler($(this));
							$(".bpe_highlight").removeClass("bpe_highlight");
							$(this).addClass("bpe_highlight");
						}				
					}
					//console.timeEnd("rest");
				//	scrollToEl($(this));	
					selectionTools();
				}
				
				
				return false;
			});
			$("div.CMS_Component_Obs","#bpe_area").unbind("click");


			 
			$(".textEditingArea").unbind("click").click(function(event){


				if (doubletap && touchdown!=1) {
				
					return false;
				}
				if (!ignoreClickCatchup && !doubletap && !justScrolled) {
					doubletap=true;
					setTimeout(function() {
						doubletap=false;
					}, 300);
				}
				$("input").blur();
			});
			$("div.CMS_Component_Obs","#bpe_area").click(function(event){
				if ($(event.target)[0].nodeName.toLowerCase()=="textarea") {
					return false;
				}
				$("input:focus").blur();
				$("textarea:focus").blur();

				if (doubletap && touchdown!=1) {
					touchdown=0;
					clearTimeout(singleClick);
					if (!$(this).hasClass("CMS_Component_Obs") && !$(this).hasClass("bpe_table")) {
					
						event.stopPropagation();
						hide_iconbar_menus();
						$(".bpe_highlight").removeClass("bpe_highlight");
						$(this).addClass("bpe_highlight");													
						addText($(this));
					}
					if ($(this).hasClass("bpe_table")) {
						event.stopPropagation();
						hide_iconbar_menus();
						$(".bpe_highlight").removeClass("bpe_highlight");
						$(this).addClass("bpe_highlight");													
						addTableF($(this));
					}
					return false;
				}
				if (!ignoreClickCatchup && !doubletap && !justScrolled) {
					hide_iconbar_menus();
					doubletap=true;
					setTimeout(function() {
						doubletap=false;
					}, 300);
					$(".bpe_stop").removeClass("bpe_stop");
					if (!$(this).hasClass("CMS_Component_ObsZones")) {
						//scrollToEl($(this));					
					}
					var $this = $(this);
					singleClick = setTimeout(function() {
						if (metaDown) {
							$(".bpe_toggler").css("display","none");
							if ($this.hasClass("bpe_highlight")) {
								$this.removeClass("bpe_highlight");
							} else {

								$this.addClass("bpe_highlight");													

							}
							$(".textareaWrapper.bpe_highlight").addClass("multi_highlight");
							assignSaveListener();
						} else {
							if (shiftDown) {
								endToEndHighlight($this);
							} else {
								if (!$this.hasClass("CMS_Component_Obs")) {
									if ($this.hasClass("bpe_highlight") && $this.prevAll(".bpe_highlight").length===0) {
										logTrainingClick("highlightFirstNewTextItem");
									}

									$(".bpe_highlight").removeClass("bpe_highlight");
									$this.addClass("bpe_highlight");													
									
								//	showToggler($this);								
								} else {									
									$(".bpe_highlight").removeClass("bpe_highlight");
									$this.addClass("bpe_highlight");
									$(".bpe_toggler").css("display","none");
								}
							}
						}
						
						selectionTools();
					}, 300);


				}

				return false;
			});
			assign_sort();
			
		};
	
	$.fn.bpeditor.clean = function(addToUndo) {

		$("#bpe_area").css("height",$("#bpe_area").height()+"px");
		var st= $("body").scrollTop();

		selectionTools();
		$("#rightPane .paneTools").lovelyScroll();
//		$(".textareaWrapper textarea").autosize();
		if ($("#bpeSectionTabs").length) {
			var tpl = $("#bpeSectionTabs a.currentSectionTab").attr("data-tpl");	
		} else {
			var tpl = "";
		}

		$(".bpe_split_divider").hide();
		$(".bpe_split_divider").each(function(){
			$(this).html($(this).attr("alt").replace(/_/g," "));
		});

		$(".bpe_highlight_done").removeClass("bpe_highlight_done");
		$(".bpe_stop").removeClass("bpe_stop");

		$(".drag,#bpe_area .dropzone,#bpe_area .itemTag").remove();
		$("body").scrollTop(st);
		/* Start Live Editors */
		
		$("p,h1,h2,h3,h4,pre,ul,ol,.bpe_table:not(.textareaWrapper .bpe_table)",$("#bpe_area")).each(function(){
			var target=$(this);
			
			$(".drag,.itemTag",$(this)).remove();
			$(".hwrap",$(this)).contents().unwrap();
			$(".drag,.itemTag",target).remove();
			$(".hwrap",target).contents().unwrap();
			
			var el = target[0].tagName.toLowerCase();
			function toBlueprintEl($t,target,level,el,ignoreClasses) {
				var align = $t.css("text-align");
				var content = toBPE($t.html());
				if (content=="") {
					return false;
				}
				if (ignoreClasses==true) {
					var classes='';
				} else {
					if (typeof $t.attr("class")!='undefined') {
						var classes  = $t.attr("class");
					} else {
						var classes  = '';
					}
				}

				if ($t.css("display")=="none") {
					var vis =false;
				} else {
					var vis =true;
				}
				
				return addTextareaAfter(target,el,classes,align,content,false,level,vis);
			}
			if (el=='ul'||el=='ol')  {
				$($('> li',target).get().reverse()).each(function(){
					var $children = $("> ul,> ol",$(this)).clone();
					$("> ul,> ol",$(this)).remove();

					var el2 = $(this).parent()[0].tagName.toLowerCase();
					var $l2Target = toBlueprintEl($(this),target,'1',el2,false);
					if ($children.length) {
						$($children.get().reverse()).each(function(){
							var el3 = $(this)[0].tagName.toLowerCase();
							$($('> li',$(this)).get().reverse()).each(function(){
								var $children2 = $("> ul,> ol",$(this)).clone();
								
								$("> ul,> ol",$(this)).remove();
								var $l3Target = toBlueprintEl($(this),$l2Target,'2',el3,true);
								
								if ($children2.length) {
									$($children2.get().reverse()).each(function(){
										var el4 = $(this)[0].tagName.toLowerCase();
										$($('> li',$(this)).get().reverse()).each(function(){
											toBlueprintEl($(this),$l3Target,'3',el4,true);
											$(this).remove();	
										});
									});
								}
								$(this).remove();	
							});
						});
					}
					$(this).remove();	
				});
			} else {
				if (target.hasClass("bpe_table")) {
					$.ajax({
					  type: "POST",
					  url: "pageActions.php",
					  data: "pageAction=html2csv&text="+encodeURIComponent(target.html()),
					  success: function(msg){
		  					addTextareaAfter(target,'table',target.attr("class").replace("bpe_table",""),'left',toBPE(msg),false,'',true)
		  					target.remove();
							//bindTextareaWrappers();
							assign_sort();
						}
					});	
				} else {
					toBlueprintEl(target,target,'',el,false);
					$(this).remove();
				}
			}

		});
		
		//bindTextareaWrappers();
		
		// END LIVE EDITORS
		// ========
		$.fn.bpeditor.showSection(tpl);
		
		var saveNow = true;
		$("#bpe_area ul,#bpe_area ol").remove();
		
		$("#bpe_area").children().each(function(){
			$(this).find("ul,ol").each(function(){
				if ($("li",$(this)).length===0) {
					$(this).remove();
				}
			});
			$(this).find(".zonesDropBox").children().each(function(){

				$(this).children().children().children().each(function(){
					if ($(this).html()=="" && tag!="img") {
						$(this).remove();
					}
				});
				$(this).children().children().each(function(){
					var tag = this.tagName.toLowerCase();
					if (tag=="ul"||tag=="ol") {
						if ($(this).next().length>0) {
							var tagNext;
							$(this).next().each(function(){
								tagNext = this.tagName.toLowerCase();
							});
							if (tag==tagNext) {
								var contents = $(this).next().html();
								$(this).append(contents);
								$(this).next().remove();
							}
						}
						if ($(this).children("li").length==0) {
							$(this).remove();
						}
					}
				});
				
				
				var tag = this.tagName.toLowerCase();
				
				if ($(this).html()=="" && tag!="img" && !$(this).hasClass("bpe_split_divider") && !$(this).hasClass("zonesEnd")) {
					$(this).remove();
				}
				tag = this.tagName.toLowerCase();
				if (tag=="ul"||tag=="ol") {
					$(this).children().each(function(){
						if ($(this).html()=="") {
							$(this).remove();
						}
					});
					if ($(this).next().length>0) {
						var tagNext;
						$(this).next().each(function(){
							tagNext = this.tagName.toLowerCase();
						});
						if (tag==tagNext) {
							contents = $(this).next().html();
							$(this).append(contents);
							$(this).next().remove();
						}
					}
					if ($(this).children("li").length==0) {
						$(this).remove();
					}
				} else if (tag=="img") {
					if ($(this).parents(".bpe_image").length==0) {
						$(this).wrap("<div class='bpe_image'></div>");
					}
				} else if (tag=="li") {
					if ($(this).parents("ul").length==0) {
						$(this).wrap("<ul></ul>");
						saveNow=false;
						$.fn.bpeditor.clean(addToUndo);					
					}
				} else if (tag=="a") {
					if ($(this).children("img").length>0) {
						$(this).wrap("<div class='bpe_image'></div>");
					} else {
						$(this).wrap("<p></p>");
					}
				}
				$("ul,ol",$(this)).each(function(){
					if ($(this).children("ul,ol").length) {
						$(this).children("ul,ol").each(function(){
							$(this).after($(this).html()).remove();
						});
					}
				});
				if (saveNow) {
					if ($(this).children("ul,ol").length) {
						$(this).children("ul,ol").each(function(){
							$(this).after($(this).html()).remove();
						});
					}				
				}
				$(this).children().removeAttr("hoverintent_t");
				$(this).removeAttr("hoverintent_t").removeAttr("sizset").removeAttr("sizcache");
			});
			$(this).children().children().children().each(function(){
				if ($(this).html()=="" && tag!="img") {
					$(this).remove();
				}
			});
			$(this).children().children().each(function(){
				var tag = this.tagName.toLowerCase();
				if (tag=="ul"||tag=="ol") {
					if ($(this).next().length>0) {
						var tagNext;
						$(this).next().each(function(){
							tagNext = this.tagName.toLowerCase();
						});
						if (tag==tagNext) {
							var contents = $(this).next().html();
							$(this).append(contents);
							$(this).next().remove();
						}
					}
					if ($(this).children("li").length==0) {
						$(this).remove();
					}
				}
			});
			
			
			var tag = this.tagName.toLowerCase();
			
			if ($(this).html()=="" && tag!="img" && !$(this).hasClass("bpe_split_divider")) {
				$(this).remove();
			}
			tag = this.tagName.toLowerCase();
			if (tag=="ul"||tag=="ol") {
				$(this).children().each(function(){
					if ($(this).html()=="") {
						$(this).remove();
					}
				});
				if ($(this).next().length>0) {
					var tagNext;
					$(this).next().each(function(){
						tagNext = this.tagName.toLowerCase();
					});
					if (tag==tagNext) {
						contents = $(this).next().html();
						$(this).append(contents);
						$(this).next().remove();
					}
				}
				if ($(this).children("li").length==0) {
					$(this).remove();
				}
			} else if (tag=="img") {
				if ($(this).parents(".bpe_image").length==0) {
					$(this).wrap("<div class='bpe_image'></div>");
				}
			} else if (tag=="li") {
				if ($(this).parents("ul").length==0) {
					$(this).wrap("<ul></ul>");
					saveNow=false;
					$.fn.bpeditor.clean(addToUndo);					
				}
			} else if (tag=="a") {
				if ($(this).children("img").length>0) {
					$(this).wrap("<div class='bpe_image'></div>");
				} else {
					$(this).wrap("<p></p>");
				}
			}
			$("ul,ol",$(this)).each(function(){
				if ($(this).children("ul,ol").length) {
					$(this).children("ul,ol").each(function(){
						$(this).after($(this).html()).remove();
					});
				}
			});
			if (saveNow) {
				if ($(this).children("ul,ol").length) {
					$(this).children("ul,ol").each(function(){
						$(this).after($(this).html()).remove();
					});
				}				
			}
			$(this).children().removeAttr("hoverintent_t");
			$(this).removeAttr("hoverintent_t").removeAttr("sizset").removeAttr("sizcache");
		});
		

		if ($("#bpe_area").children().length) {
			//$(".textEditingArea .listTipUp:not(.hideTips .listTipUp)").show();
			$(".listTipEditor").hide();			
		} else {
			$(".textEditingArea .listTipUp").hide();
			$(".listTipEditor").show();
		}
		if ($("#cloning:visible").length) {
			$(".listTipEditor").hide();			
		}
		$(".bpe_toggler").css("display","none");
		
		
//		$(".bpe_highlight").removeClass("bpe_highlight");
					
		$("#bpe_area a").unbind().click(function(event){
			event.preventDefault();
		});

		assignSaveListener();
//		$(document).unbind("click");
// 		DEV REMOVED up and down
/*
		$(document).click(function(e){
			if ($(e.target)[0].nodeName.toLowerCase()!="textarea") {
				if (justScrolled) {return false;}
				if (ignoreClickCatchup) {return false;}
				hide_menus();
				$(".dropshipToolbarBottom,.format_mttri,.visibleHighlight").hide();
				$.fn.bpeditor.assign_toggler();
				assignSaveListener();				
			}
		});
		*/
		$("#editModeDelete").removeClass("bpe_current");
		$("#editModeEdit").addClass("bpe_current");

		if (saveNow) {
			
			if ($("#addEntryForm").length) {

				autosave(addToUndo);			
			} else {
				autosaveBlog();
			}
			
		}
			//Removed 9 Jan
			//$(".textEditingArea").lovelyScroll();



		$.fn.bpeditor.assign_toggler();
		
		$(".iconbarMenu").hide();
		//selectionTools();
		//assign_click();
		$("#dragSectionItems li").each(function(){
			if ($("#bpe_area ."+$(this).attr("title")).length) {
				$(this).addClass("greyedOut");
			} else {
				$(this).removeClass("greyedOut");
			}
		});
		if ($("#bpe_area .ComponentBlog").length) {
			$("#dragInsertBlog").addClass("greyedOut");
		}
		if ($("#bpe_area .ComponentShoppingBasket").length) {
			$("#dragInsertCheckout").addClass("greyedOut");
		} else {
			$("#dragInsertCheckout").removeClass("greyedOut");
		}
		$(window).trigger("resize");
		$("#rightPane").css("opacity","1");
		$("#bpe_area").css("height","auto");

		$("body").scrollTop(st);
		setTimeout(function () {
			$("body").scrollTop(st);
		}, 40);

//		var h = $(window).height() - $("#bpe_area").position().top - 30;
//		$("#bpe_area").css("height","auto");
//		if ($("#bpe_area").height()<h) {
//			$("#bpe_area").css("height",h+"px");
//		}
	};
	var tabscroll;
	$.fn.bpeditor.makeTabsOneLine = function(){
		if ($("#bpeSectionTabs:visible").length) {
			var w = 0;
			$("#bpeSectionTabs > ul").css("width","auto");
		
			$("#bpeSectionTabs > ul li").each(function(){
				w=w+$(this).outerWidth();
			});
			w=w+10;
			$("#bpeSectionTabs > ul").css("width",w+"px");
			$("#rightPane").removeClass("withSectionTabs");
			$("#sectionNav").remove();
			if ($("#bpeSectionTabs").width()<w && !iOS) {
				$("#rightPane").addClass("withSectionTabs");
				$("#bpeSectionTabs").append('<div id="sectionNav"><div id="scrollSectionRight"></div><div id="scrollSectionLeft"></div></div>');
			}
			$("#scrollSectionRight").click(function(){
				var l = $("#bpeSectionTabs > ul").outerWidth();
				var avail = $("#bpeSectionTabs").innerWidth();
				var offset = Math.abs(tabscroll.x);
				var diff = avail+offset;
				diff = l-diff;
				if (diff<100) {
					var x = parseInt("-"+diff);
				}else {
					var x = -100;
				}
				tabscroll.scrollBy(x, 0,500,IScroll.utils.ease.quadratic);	
				return false;
			});
			$("#scrollSectionLeft").click(function(){
				if (tabscroll.x>-100) {
					//console.log(tabscroll.x);
					var x = Math.abs(tabscroll.x);
				}else {
					var x = 100;
				}
				tabscroll.scrollBy(x, 0,500,IScroll.utils.ease.quadratic);	
				return false;
			})
			if ($("#bpeSectionTabs").hasClass("scrollWrapper")) {
				tabscroll.refresh();
			} else {
			 	tabscroll = new IScroll($("#bpeSectionTabs")[0], {
			 		scrollbars: true,
			 		mouseWheel: true,
			 		interactiveScrollbars: true,
			 		shrinkScrollbars: 'scale',
					disableMouse:true,
					fadeScrollbars:true,
					scrollX:true,
					scrollY:false,
					probeType:2,
					scrollbars: 'custom'
			 	});
			}			
		}

	 	
	}
	$.fn.bpeditor.showSection = function(tpl) {
		$("#bpe_area .dropzone").remove();
		$(".bpe_highlight:not(.dont_remove_highlight)").removeClass("bpe_highlight");
		$(".multi_highlight").removeClass("multi_highlight");
		selectionTools();
		$("#bpe_area").children().hide();
		if (tpl=="") {
			var $start = $("#bpe_area").children().first();
			if ($start.hasClass("bpe_split_divider")) {
				return false;
			} else {
				$start.show();
			}
		} else {
			var $start = $("#bpe_area .bpe_split_divider[alt="+tpl+"]");
		}
		$start.nextAll().each(function(){
			if ($(this).hasClass("bpe_split_divider")) {
				return false;
			} else {
				$(this).show();
			}
		});
		setTimeout(function () {
			assign_sort();
//			$("textarea",$(".textareaWrapper")).trigger('autosize.resize');
			//Removed 9 Jan
			//$(".textEditingArea").lovelyScroll();
		}, 100);
		
	};
	return this.each(function(){
		var images = $("#bpe_images").html();
		if ($("#bpe_images").children().length==0) {
			images = "<span class='bpe_menu_message'>Uploaded images will appear here</span>";
		}
		

		var videos = "<span class='bpe_menu_message'>Uploaded videos will appear here</span>";
	
		
		var left = $(this).offset().left;
		if (left+50 < $(window).width() / 2 ) {
			var menus = "bpe_subs_left";
		} else {
			var menus = "";
		}
	   $(this).css("display","none");
		var rand = randomString();
		var menu =  "<div class='bpe_area_wrapper' style='width:auto;' id='"+rand+"'>";
		menu += "<div class='bpe_area' id='bpe_area'>"+$(this).prev().html()+"</div>";
		menu += "</div>";
		
		if (isMac) {
			var modifier = "⌘";
			var shift = "⇧";			
		} else {
			var modifier = "Ctrl+";			
			var shift = "⇧+";
		}
		$(this).after(menu);

		$.ajax({
		  type: "POST",
		  url: "pageActions.php",
		  data: "pageAction=paste",
		  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			if (msg!="") {
				clipboard= msg;			
				$("#bpe_paste").removeClass("greyedOut");
			}
		  }
		});
		/*
		$(".textEditingArea").scroll(function(){
			justScrolled=true;
			if (scrollTimeout) {
				clearTimeout(scrollTimeout);
			}
		
			showHideMenusOnScroll($(this));
	
			scrollTimeout = setTimeout(function() {
			justScrolled=false;				
			if ($(".bpe_highlight").length==1) {
				if ($(".bpe_highlight").hasClass("bpe_image")) {
				//	showImageToggler($(".bpe_highlight"));
				} else {
				//	showToggler($(".bpe_highlight"));					
				}

			}
			}, 500);
			$(".bpe_toggler:visible").hide();
		});*/
		
		//assign_menus($("#bpe_add_menu"));
		//assign_menus($("#bpe_selection_menu"));		
		/*
		8 Dec removed
		$(".contentImage").draggable({ 
			appendTo: 'body'
			,helper: 'clone'
			,zIndex: 1000
			,revert: 'invalid'
			,start: function () { 
				//hide_menus();
			}
	 	});
		*/
	
		

	

		
		$("#bpe_vids"+rand).html($("#videoList").html());


		if ($("#dragSectionItems li").length) {
			$("body").addClass("hasSections");
			$("#entryWrapper").prepend('<div id="bpeSectionTabs" class="clearfix"><ul></ul></div>');
			$("#dragSectionItems li").each(function(){
				if ($(this).attr("data-default")!="1") {
					if (!$("#bpe_area .bpe_split_divider[alt="+$(this).attr("data-tpl")+"]").length && $(this).attr("data-tpl")!="") {
						$("#bpe_area").append("<div class=\"bpe_split_divider tooltipTarget "+$(this).attr("data-tpl")+"\" alt=\""+$(this).attr("data-tpl")+"\">"+$(this).html()+"</div>");
					}
					$("#bpeSectionTabs > ul").append('<li><a href="#" data-tpl="'+$(this).attr("data-tpl")+'"><span>'+$(this).html()+'</span></a></li>');					
				}
			});
			$("#dragSectionItems li").each(function(){
				if ($(this).attr("data-default")=="1") {
				
					if (!$("#bpe_area .bpe_split_divider[alt="+$(this).attr("data-tpl")+"]").length && $(this).attr("data-tpl")!="") {
						$("#bpe_area").append("<div class=\"bpe_split_divider tooltipTarget "+$(this).attr("data-tpl")+"\" alt=\""+$(this).attr("data-tpl")+"\">"+$(this).html()+"</div>");
					}
					$("#bpeSectionTabs > ul").prepend('<li><a href="#" data-tpl="'+$(this).attr("data-tpl")+'"><span>'+$(this).html()+'</span></a></li>');
				}
			});

			if (!$("#bpeSectionTabs > ul li a[data-tpl=]").length) {
				$("#bpeSectionTabs > ul").prepend('<li><a href="#" data-tpl=""><span>'+LangVars.Main_Content+'</span></a></li>');
			}
			
			$("#bpeSectionTabs a").click(function(){
				$("#bpeSectionTabs .currentSectionTab").removeClass("currentSectionTab");
				$(this).addClass("currentSectionTab");
				var tpl = $(this).attr("data-tpl");
				$.fn.bpeditor.showSection(tpl);
				tabscroll.scrollToElement($(this).parent()[0],500,-50);
				assign_sort();
				return false;
			});
			
			$("#bpeSectionTabs > ul li:first-child a").addClass('currentSectionTab');
			$.fn.bpeditor.makeTabsOneLine();
			
//			$.fn.bpeditor.showSection('');
		}
		



/*		$(".bpe_split_divider").each(function(){
			if ($(this).nextAll(":not(.bpe_split_divider,.dropzone)").length==0) {
				$(this).remove();
			}
		});*/
		//assign_menus($("#bpe_vids"+rand));
		setTimeout(function () {
			assign_sort();
			$.fn.bpeditor.clean(true);
			assign_click();
			
		}, 10);
		if ($("#splitClasses .bpe_menu_sub").length) {
			$("#splitClasses .bpe_menu_sub").each(function(){
				if ($("#bpe_area ."+$(this).attr("title")).length) {
					$(this).remove();
				}
			});
			
		}
		$("#template a").unbind();
		$("#template a").click(function(){
					
			working();
			var id = $("#kbid").val();
			var clicked = $(this);
			$.ajax({
			  type: "POST",
			  url: "pageActions.php",
			  data: "pageAction=change&action=template&id="+id+"&template="+$(this).attr("href"),
			  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				$("#template .bpe_current").removeClass("bpe_current");
				clicked.addClass("bpe_current");
				saved("Template changed for page");
			  }
			});

			return false;
			
		});
		showEditingToooltips();
		

		
	  	
	  	if ($("#rightPane").hasClass("editingBlog")) {
			if (currentTooltip) {
				interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
				clearTimeout(toolTipTimeout);
			}
			currentTooltipItem=0;
			currentTooltip="editorblog";
			toolTipTimeout=setTimeout(tooltip, 1000);		
		}

		
		  	
	});


	
	/*
	function assign_selectable () {

		$(".bpe_image, .addToBasketForm","#bpe_area").unbind();
		$("p,h1,h2,h3,h4,h5,pre,li,ol,ul,div.CMS_Component_Obs,.bpe_table","#bpe_area").unbind();

		$("#bpe_area").selectable({ filter: 'p,h1,h2,h3,h4,h5,pre,li,ol,ul,div.CMS_Component_Obs,.bpe_table,.bpe_image,form' });
	
		$("body").click(function(){

			if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
			hide_menus();
			$(".ui-selectee").removeClass("ui-selectee");
			$(".ui-selected").removeClass("ui-selected");
			$(".ui-selectable").removeClass("ui-selectable");
		});
		
	}*/
	
	

};
	})(jQuery);

function switchToGallery (switcher,goingBack) {
	hidePaneTools();
	if (!$("#rightPaneGalleries").hasClass("shownOnce")) {
		$("#galleriesPaneInner .insertTarget").html($("#galleriesAdmin").html());
		assignGalleryAdd();
	}
	$("#galleriesPaneInner").css("width","auto");
	if (!switcher) {
		$("body").attr("previous-pane",$("body").attr("pane"));	
		showPane($("#rightPaneGalleries"),true,false,goingBack,false);
	} else {
		showPane($("#rightPaneGalleries"),false,false,goingBack,false);
	}
	$("#loadingMask").hide();	

	setTimeout(function() {$("#galleriesPaneInner").lovelyScroll();}, 400);
	
	if ($("body").hasClass("storageDraggable")) {
		if (currentTooltip) {
			interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
			clearTimeout(toolTipTimeout);
		}
		currentTooltipItem=0;
		currentTooltip="dragItemsToPage";
		tooltip();
	}


	assignListLasso($("#galleriesPaneInner"));
	assignListPane($("#galleriesPaneInner"),renameGallery);
	assignGalleriesKeys();
	$("#galleriesPaneInner").lovelyScroll();
	//$("#galleriesPaneInner").unbind("scroll").scroll(function(){
	//	showHideMenusOnScroll($(this));
	//});
	assignDragAssets($("#galleriesPaneInner .insertTarget"));

}
function switchToForm (switcher,goingBack)
 {
	hidePaneTools();
	
	if ($("#rightPaneForms").hasClass("shownOnce")) {
		if ($("body").attr("previous-pane")=="editContent") {
			$("body").addClass("storageDraggable");
		}

		assignAddFormForm();
		$("#loadingMask").hide();	
		assignListLasso($("#formsPaneInner .insertTarget"));
		assignFormsKeys();
		assignDragAssets($("#formsPaneInner .insertTarget"));
		setTimeout(function() {$("#formsPaneInner").lovelyScroll();}, 400);
		assignListPane($("#formsPaneInner .insertTarget"),editForm);

		if ($("body").hasClass("storageDraggable")) {
			if (currentTooltip) {
				interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
				clearTimeout(toolTipTimeout);
			}
			currentTooltipItem=0;
			currentTooltip="dragItemsToPage";
			tooltip();
		}

	} else {
		working();
		
		$("#formsWrapper").load("formsActions.php?formsAction=show&to_prevent_cache="+(new Date).getTime(),function(){
			saved();
			$("#formsPaneInner .insertTarget").html($("#formsWrapper").html());
			assignAddFormForm();
			

			$("#loadingMask").hide();	
			assignListLasso($("#formsPaneInner .insertTarget"));
			assignDragAssets($("#formsPaneInner .insertTarget"));
			setTimeout(function() {$("#formsPaneInner").lovelyScroll();}, 400);
			
			assignListPane($("#formsPaneInner"),editForm);
			assignFormsKeys();
			if ($("body").hasClass("storageDraggable")) {
				if (currentTooltip) {
					interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
					clearTimeout(toolTipTimeout);
				}
				currentTooltipItem=0;
				currentTooltip="dragItemsToPage";
				tooltip();
			}


		});
	}
	$("#formsPaneInner").css("width","auto");

		if (!switcher) {
			$("body").attr("previous-pane",$("body").attr("pane"));	
			showPane($("#rightPaneForms"),true,false,goingBack);
		} else {
			showPane($("#rightPaneForms"),false,false,goingBack);
		}
		$("body").attr("pane","forms");
}
var pinnedSnippet=false;
function switchToSnippets (hard,switcher,goingBack) {

		hidePaneTools();
		
		if (!switcher) {
			$("body").attr("previous-pane",$("body").attr("pane"));	
			showPane($("#rightPaneSnippets"),true);
		} else {
			showPane($("#rightPaneSnippets"),false);
		}
		$("body").attr("pane","snippets");
		$("#snippetsPane .searchList").val("");
		$("#snippetsPane .clearSearch").hide();
		$("#snippetsPane .searchSVG").parent().removeClass("searching");
		prepFancyLabelForms($("#snippetsPane .filterBox"));
		working();
		if (pinnedSnippet) {
			filterSnippetsByCategory=pinnedSnippet;
			$("#snippetFilterCategories a,#showAllSnippets").removeClass("bpe_current");
			$("#snippetFilterCategories a[category-id="+filterSnippetsByCategory+"]").addClass("bpe_current");
			$(".target",$("#snippetFilterCategories").parents(".subHeaderLeftMenuItem")).text($("#snippetFilterCategories a[category-id="+filterSnippetsByCategory+"]").attr("data-lang"));
			$(".pinnedSnippetText").show();
			$(".normalSnippetText,#filterBySnippetCat,#snippetCategoryPaneTools").hide();
			$("#filterBySnippetCat").addClass("hiddenByPin");
			$("#pinnedSnippetCatTitle").text($("#snippetFilterCategories a[category-id="+pinnedSnippet+"]").attr("data-lang"));
		} else {
			
			filterSnippetsByCategory="";
			$("#snippetFilterCategories a,#showAllSnippets").removeClass("bpe_current");
			$("#showAllSnippets").addClass("bpe_current");
			$(".target",$("#snippetFilterCategories").parents(".subHeaderLeftMenuItem")).text($("#showAllSnippets").attr("data-lang"));
			$(".pinnedSnippetText").hide();
			$(".normalSnippetText,#filterBySnippetCat.hiddenByPin,#snippetCategoryPaneTools").show();
		}
		$("#snippetsPaneInner .insertTarget").load("snippetsActions.php?snippetsAction=search&rightPane=&string=&filterCat="+filterSnippetsByCategory,function(){


			saved();
			assignListLasso($("#snippetsPaneInner"));
			assignListPane($("#snippetsPaneInner"),editSnippet);


			assignSnippetsKeys();
			assignPaneSearch($("#rightPaneSnippets .searchList"),"snippetsActions.php","snippetsAction=search&rightPane=&string=","snippet");
			assignDragAssets($("#snippetsPaneInner .insertTarget"));
			
			setTimeout(function() {$("#snippetsPaneInner").lovelyScroll(pagesScrollBottomSnippets);}, 400);
			$("#loadingMask").hide();	

			if ($("body").hasClass("storageDraggable")) {
				if (currentTooltip) {
					interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
					clearTimeout(toolTipTimeout);
				}
				currentTooltipItem=0;
				currentTooltip="dragItemsToPage";
				tooltip();
			}


		});
}
function switchToTables (hard,switcher,goingBack) {

		hidePaneTools();
		
		if (!switcher) {
			$("body").attr("previous-pane",$("body").attr("pane"));	
			showPane($("#rightPaneTables"),true);
		} else {
			showPane($("#rightPaneTables"),false);
		}
		$("body").attr("pane","tables");
		$("#tablesPane .searchList").val("");
		$("#tablesPane .clearSearch").hide();
		$("#tablesPane .searchSVG").parent().removeClass("searching");
		prepFancyLabelForms($("#tablesPane .filterBox"));
		working();
	
	
	
		$("#tablesPaneInner .insertTarget").load("tablesActions.php?tablesAction=search&rightPane=&string=",function(){


			saved();
			assignListLasso($("#tablesPaneInner"));
			assignListPane($("#tablesPaneInner"),editTable);


			assignTablesKeys();
//			assignPaneSearch($("#rightPaneTables .searchList"),"tablesActions.php","snippetsAction=search&rightPane=&string=","snippet");
			assignDragAssets($("#tablesPaneInner .insertTarget"));
			
			setTimeout(function() {$("#tablesPaneInner").lovelyScroll();}, 400);
			$("#loadingMask").hide();	

			if ($("body").hasClass("storageDraggable")) {
				if (currentTooltip) {
					interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
					clearTimeout(toolTipTimeout);
				}
				currentTooltipItem=0;
				currentTooltip="dragItemsToPage";
				tooltip();
			}


		});
}
function switchToProducts (hard,switcher,goingBack) {
		working();
		if (hard) {
			$("#productsPane .searchList").val("");
			$("#productsPane .clearSearch").hide();
			$("#productsPane .searchSVG").parent().removeClass("searching");
			$("#productsPaneInner .insertTarget").load("shopActions.php?shopAction=showProducts&ajax=yes&initPane=yes&searchBy=&filterCat="+filterProductsByCategory,function(){
				
				$("#productsPaneInner").css("width","auto");
				if (!switcher) {
					$("body").attr("previous-pane",$("body").attr("pane"));	
					showPane($("#rightPaneProducts"),true,false,goingBack,false);
				} else {
					showPane($("#rightPaneProducts"),false,false,goingBack,false);
				}
				$("body").attr("pane","products");

				$("#loadingMask").hide();
				saved();

				if ($("body").hasClass("storageDraggable")) {
					if (currentTooltip) {
						interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
						clearTimeout(toolTipTimeout);
					}
					currentTooltipItem=0;
					currentTooltip="dragItemsToPage";
					tooltip();
				}
				
				setTimeout(function() {$("#productsPaneInner").lovelyScroll(pagesScrollBottomProducts);selectionTools();}, 400);
			
				assignDragAssets($("#productsPaneInner .insertTarget"));

			});
		
			if ($("#rightPaneGalleries").hasClass("shownOnce")) {
				$("#chooseGalleriesList").html("");
				$("#galleriesAdmin > .responsiveListItem").each(function(){
					$("#chooseGalleriesList").append("<li><a gallery-id='"+$(this).attr("gallery-id")+"' data-item-value='"+$(this).attr("gallery-id")+"'><span class='overflowEllipsis'>"+$(this).attr("rel")+"</span></a></li>");
				});
			
			} else {
				$("#galleriesAdmin").load("galleriesActions.php?galleriesAction=show&to_prevent_cache="+(new Date).getTime(),function(){
					$("#chooseGalleriesList").html("");
					$("#galleriesAdmin > .responsiveListItem").each(function(){
						$("#chooseGalleriesList").append("<li><a gallery-id='"+$(this).attr("gallery-id")+"' data-item-value='"+$(this).attr("gallery-id")+"'><span class='overflowEllipsis'>"+$(this).attr("rel")+"</span></a></li>");
					});
				});
			}
	
			if ($("#rightPaneForms").hasClass("shownOnce")) {
				$("#chooseFormsList").html("");
				$("#formsWrapper > .formItem").each(function(){
					$("#chooseFormsList").append("<li><a form-id='"+$(this).attr("form-id")+"' data-item-value='"+$(this).attr("form-id")+"'><span class='overflowEllipsis'>"+$(this).attr("rel")+"</span></a></li>");
				});
			} else {
				$("#formsWrapper").load("formsActions.php?formsAction=show&to_prevent_cache="+(new Date).getTime(),function(){
					$("#formsWrapper > .formItem").each(function(){
						$("#chooseFormsList").append("<li><a form-id='"+$(this).attr("form-id")+"' data-item-value='"+$(this).attr("form-id")+"'><span class='overflowEllipsis'>"+$(this).attr("rel")+"</span></a></li>");
					});
				});
			}
		
		} else {
			
			$("#productsPaneInner").css("width","auto");
			if (!switcher) {
				$("body").attr("previous-pane",$("body").attr("pane"));	
				showPane($("#rightPaneProducts"),true,false,goingBack,false);
			} else {
				showPane($("#rightPaneProducts"),false,false,goingBack,false);
			}
			$("body").attr("pane","products");

			if ($("body").hasClass("storageDraggable")) {
				if (currentTooltip) {
					interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
					clearTimeout(toolTipTimeout);
				}
				currentTooltipItem=0;
				currentTooltip="dragItemsToPage";
				tooltip();
			}




			$("#loadingMask").hide();
			saved();
			setTimeout(function() {$("#productsPaneInner").lovelyScroll(pagesScrollBottomProducts);selectionTools();}, 400);

			assignDragAssets($("#productsPaneInner .insertTarget"));

		}
		prepFancyLabelForms($("#rightPaneProducts .filterBox"));
		assignPaneSearch($("#rightPaneProducts .searchList"),"shopActions.php","shopAction=showProducts&ajax=true&initPane=true&searchBy=","product");
		
		assignListLasso($("#productsPaneInner"));
		assignListPane($("#productsPaneInner"),editProduct);
		assignProductsKeys();
}
function switchToBookingProducts (hard,switcher,goingBack) {
		working();
		if (hard) {
			$("#bookingProductsPane .searchList").val("");
			$("#bookingProductsPane .clearSearch").hide();
			$("#bookingProductsPane .searchSVG").parent().removeClass("searching");
			$("#bookingProductsPaneInner .insertTarget").load("shopActions.php?shopAction=showBookingProducts&ajax=yes&initPane=yes",function(){
				
				$("#bookingProductsPaneInner").css("width","auto");
				if (!switcher) {
					$("body").attr("previous-pane",$("body").attr("pane"));	
					showPane($("#rightPaneBookingProducts"),true,false,goingBack,false);
				} else {
					showPane($("#rightPaneBookingProducts"),false,false,goingBack,false);
				}
				$("body").attr("pane","bookingproducts");

				$("#loadingMask").hide();
				saved();

				if ($("body").hasClass("storageDraggable")) {
					if (currentTooltip) {
						interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
						clearTimeout(toolTipTimeout);
					}
					currentTooltipItem=0;
					currentTooltip="dragItemsToPage";
					tooltip();
				}

				
				setTimeout(function() {$("#bookingProductsPaneInner").lovelyScroll(pagesScrollBottomBookingProducts);selectionTools();}, 400);
			
				assignDragAssets($("#bookingProductsPaneInner .insertTarget"));

			});
		
		} else {
			
			$("#bookingProductsPaneInner").css("width","auto");
			if (!switcher) {
				$("body").attr("previous-pane",$("body").attr("pane"));	
				showPane($("#rightPaneBookingProducts"),true,false,goingBack,false);
			} else {
				showPane($("#rightPaneBookingProducts"),false,false,goingBack,false);
			}
			$("body").attr("pane","bookingproducts");

			if ($("body").hasClass("storageDraggable")) {
				if (currentTooltip) {
					interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
					clearTimeout(toolTipTimeout);
				}
				currentTooltipItem=0;
				currentTooltip="dragItemsToPage";
				tooltip();
			}




			$("#loadingMask").hide();
			saved();
			setTimeout(function() {$("#bookingProductsPaneInner").lovelyScroll(pagesScrollBottomBookingProducts);selectionTools();}, 400);

			assignDragAssets($("#bookingProductsPaneInner .insertTarget"));

		}
//		prepFancyLabelForms($("#rightPaneBookingProducts .filterBox"));
//		assignPaneSearch($("#rightPaneProducts .searchList"),"shopActions.php","shopAction=showProducts&ajax=true&initPane=true&searchBy=","product");
		
		assignListLasso($("#bookingProductsPaneInner"));
		assignListPane($("#bookingProductsPaneInner"),editBookingProduct);
		assignBookingProductsKeys();
}
function switchToCalendars (hard,switcher,goingBack) {
	hidePaneTools();

	$("#calendarsPaneInner").css("width","auto");
	if (!switcher) {
		$("body").attr("previous-pane",$("body").attr("pane"));	
		showPane($("#rightPaneCalendars"),true,false,goingBack,false);
	} else {
		showPane($("#rightPaneCalendars"),false,false,goingBack,false);
	}
	$("body").attr("pane","calendars");
	if ($("body").hasClass("storageDraggable")) {
		if (currentTooltip) {
			interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
			clearTimeout(toolTipTimeout);
		}
		currentTooltipItem=0;
		currentTooltip="dragItemsToPage";
		tooltip();
	}


	$("#loadingMask").hide();

	assignListLasso($("#calendarsPaneInner"));
	assignListPane($("#calendarsPaneInner"),editCalendar);
	assignCalendarsKeys();
	setTimeout(function() {$("#calendarsPaneInner").lovelyScroll();}, 400);
	assignDragAssets($("#calendarsPaneInner .insertTarget"));
}
function switchToMailingLists (hard,switcher,goingBack) {
	hidePaneTools();
	
	$("#level1Target .text").html(LangVars.Mailing_Lists)
	$("#rightPaneNewsletter .searchList").val(LangVars.Search);
	$("#rightPaneNewsletter .clearSearch").remove();
	if (hard) {
		working();

		$("#newsletterPaneInner .insertTarget").load("newsletterActions.php?newsletterAction=showGroups&showPane=&to_prevent_cache="+(new Date).getTime(),function(){
			assignAddForms();
			$("#newsletterPaneInner").css("width","auto");
			if (!switcher) {
				$("body").attr("previous-pane",$("body").attr("pane"));	
				showPane($("#rightPaneNewsletter"),true,false,goingBack,false);
			} else {
				showPane($("#rightPaneNewsletter"),false,false,goingBack,false);
			}
			$("body").attr("pane","newsletter");

			$("#newsletterPaneInner").lovelyScroll();

			assignDragAssets($("#newsletterPaneInner .insertTarget"));
			assignListLasso($("#newsletterPaneInner"));
			assignListPane($("#newsletterPaneInner"),showSubscribers);
			assignNewsletterKeys();

			if ($("body").hasClass("storageDraggable")) {
				if (currentTooltip) {
					interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
					clearTimeout(toolTipTimeout);
				}
				currentTooltipItem=0;
				currentTooltip="dragItemsToPage";
				tooltip();
			}


		});
	
		saved();

	} else {
		if (!switcher) {
			$("body").attr("previous-pane",$("body").attr("pane"));	
			showPane($("#rightPaneNewsletter"),true,false,goingBack,false);
		} else {
			showPane($("#rightPaneNewsletter"),false,false,goingBack,false);
		}
		$("body").attr("pane","newsletter");

		if ($("body").hasClass("storageDraggable")) {
			if (currentTooltip) {
				interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
				clearTimeout(toolTipTimeout);
			}
			currentTooltipItem=0;
			currentTooltip="dragItemsToPage";
			tooltip();
		}



		assignDragAssets($("#newsletterPaneInner .insertTarget"));

		assignListLasso($("#newsletterPaneInner"));
		assignListPane($("#newsletterPaneInner"),showSubscribers);
		assignNewsletterKeys();
	}
	
	
	$("#loadingMask").hide();	
	
}
function switchToBlog (hard,highlightFirst) {
	hidePaneTools();
	
	$("#level1Target .text").html(LangVars.Blog)
	$("#rightPaneBlog .searchList").val(LangVars.Search);
	$("#rightPaneBlog .clearSearch").remove();
	hidePaneTools();
	if (hard) {
		working();
		$("#blogPaneInner .insertTarget").load("blogActions.php?blogAction=showEntries&showPane=&to_prevent_cache="+(new Date).getTime(),function(){
			$("#blogPane > .paneContents > .cleverFilterBar .langFilterMenu").remove();
			$("#blogPane > .paneContents > .cleverFilterBar .blogSearchMenu").remove();
			$("#blogPane > .paneContents > .cleverFilterBar #blogCategoryFilterMenu").remove();
			$("#blogPaneInner .blogSearchMenu").insertBefore("#blogPane > .paneContents > .cleverFilterBar .primaryItem");
			$("#blogPaneInner .langFilterMenu").insertAfter("#blogPane > .paneContents > .cleverFilterBar .primaryItem");
			$("#blogPaneInner #blogCategoryFilterMenu").insertAfter("#blogPane > .paneContents > .cleverFilterBar .langFilterMenu");
			assignBlogFilterBar();
			

			$("#blogCategoriesList").html($("#blogPaneInner #catsMenuList").html());
			
			if ($("#blogCategoriesList li").length===0) {
				$("#blogCategoriesList").next().hide();
			} else {
				$("#blogCategoriesList").next().show();
			}
			$("#blogAuthorsList").html($("#blogPaneInner #authorsMenuList").html());	
			if ($("#blogAuthorsList li").length===0) {
				$("#blogAuthorsList").next().hide();
			} else {
				$("#blogAuthorsList").next().show();
			}
			$("#blogTagsList").html($("#blogPaneInner #tagsListLoad").html());			
			if (highlightFirst) {
				$("#blogPaneInner .insertTarget .responsiveListItem:first").addClass("listItemHighlight");				
				selectionTools();
			}

			
			saved();
			$("#rightPaneBlog").show();
			$(window).trigger("resize");

			assignListLasso($("#blogPaneInner"));
			assignListPane($("#blogPaneInner .insertTarget"),editBlog);
			

			$("#blogPaneInner").lovelyScroll(pagesScrollBottomBlog);
			assignBlogKeys();
			$("#loadingMask").hide();
		});		
	} else {
		$("#rightPaneBlog").show();
		assignBlogFilterBar();
		

		assignBlogKeys();
		
		$("#loadingMask").hide();		
	}
	assignAddForms();
}
function switchToCheckout (hard) {
	hidePaneTools();
	$("#level1Target .text").html(LangVars.Checkout)
	
	if (hard) {
		working();
		
		$("#checkoutPaneInner .insertTarget").load("shop.php?to_prevent_cache="+(new Date).getTime(),function(){
			saved();
			$("#rightPaneCheckout").show();
			$(window).trigger("resize");

			assignListLasso($("#checkoutPaneInner"));
			assignListPane($("#checkoutPaneInner"),editCheckoutOrder);
			$("#checkoutPaneInner").lovelyScroll();

			assignCheckoutKeys();
			$("#loadingMask").hide();
			urchin();
		});		
	} else {
		$("#rightPaneCheckout").show();
		$(window).trigger("resize");

		assignCheckoutKeys();
		$("#checkoutPaneInner").lovelyScroll();
		$("#loadingMask").hide();		
	}

}
function switchToBookings () {
	hidePaneTools();
	$("#level1Target .text").html(LangVars.Checkout);
	
	$("#bookingsInner").load("shopActions.php?shopAction=showBookings",function(){
		$("#bookingsOuter").show();
		showBookingDay();
		setTimeout(function () {
			$("#bookings").addClass("visible");		
		}, 5);			
	});


}
function showPagesStep1 () {
	hidePaneTools();
	$("#rightPanePages").show();
	$("#adminPages #mainMenuPagesMain").show();
	$("#adminPages #nonLinkingPagesMain").hide();
	$(window).trigger("resize");
	$("#iconbarAddPage").removeClass("nonMenuPages");
	$("#iconbarAddPage").removeClass("subMenuPages");
	$("#iconbarAddPage").addClass("mainMenuPages");
	
}
function showPagesStep1Sep () {
	$("#rightPanePages").show();
	$("#adminPages #mainMenuPagesMain").show();
	$("#adminPages #nonLinkingPagesMain").hide();
	$(window).trigger("resize");
	$("#iconbarAddPage").addClass("nonMenuPages");
	$("#iconbarAddPage").removeClass("subMenuPages");
	$("#iconbarAddPage").removeClass("mainMenuPages");

	working();
	
}
function showPagesStep2 (toShow) {
	$.ajax({
		  type: "POST",
		  url: "pageActions.php",
		  data: "pageAction="+toShow,
		  success: function(msg){
			if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			$("#adminPages").load("pages.php?to_prevent_cache="+(new Date).getTime(),function(){
				
				if (toShow=="showTop") {
					logTrainingClick("mainMenuPagesTab");
					$("#level1Target .text").html(LangVars.Main_Menu_Pages);
					if (currentTooltip) {
						interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
						clearTimeout(toolTipTimeout);
					}
					currentTooltipItem=0;
					currentTooltip="contextmenuwithcutcopypaste";
					toolTipTimeout = setTimeout(tooltip, 10);
					
					if (currentTooltip) {
						interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
						clearTimeout(toolTipTimeout);
					}
					currentTooltipItem=0;
					currentTooltip="mainmenupages";
				 	toolTipTimeout = setTimeout(tooltip, 10);

					if (currentTooltip) {
						interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
						clearTimeout(toolTipTimeout);
					}
					currentTooltipItem=0;
					currentTooltip="returntowelcome";
					toolTipTimeout = setTimeout(tooltip, 10);

					


				} else {
					logTrainingClick("nonMenuPagesTab");
					$("#level1Target .text").html(LangVars.Non_Menu_Pages);
				}

				assignPages();		
				assign_page_filter();
				saved();
			});
		  }
		});
}
function hideAssetPanes () {
	
	
	hidePaneTools();
	$("body").attr("pane",$("body").attr("previous-pane"));
	$(".assetPane").animate({right:"-100%"},300,function(){
		$(".assetPane").hide();
		
	});
	
	$(".assetPane").removeClass("showing");
	$("input").unbind();

	hide_header_menus();
	
	if ($("body").attr("previous-pane")=="editContent") {
		assignSaveListener();
		assign_page_filter();
		$.fn.bpeditor.clean(true);
	}
	if ($("body").attr("previous-pane")=="mainMenuPages") {
		$("body").attr("pane","mainMenuPages");
		showPagesStep1();
		$("#pagesMoreLangs").show();
		var toShow = "showTop";
		showPagesStep2(toShow);
	}
	if ($("body").attr("previous-pane")=="nonMenuPages") {
		$("body").attr("pane","nonMenuPages");
		showPagesStep1Sep();
		$("#iconbarLanguagePages,#pagesMoreLangs").hide();	
		var toShow = "showNonLinkers";
		showPagesStep2(toShow);
	}
	if ($("body").attr("previous-pane")=="newsletter") {
		$("body").attr("pane","newsletter");
		logTrainingClick("clickMailingListTab");
		switchToMailingLists(true);
	}
	if ($("body").attr("previous-pane")=="blog") {
		$("body").attr("pane","blog");
		logTrainingClick("blogTab");
		switchToBlog(true,false);
	}
	if ($("body").attr("previous-pane")=="checkout") {
		$("body").attr("pane","checkout");
		switchToCheckout(true);
	}
	if ($("body").attr("previous-pane")=="livechat") {
		$("#level1Target .text").html(LangVars.Livechat);
		$("body").attr("pane","livechat");

		livechat_init();
		$("#rightPaneLivechat").show();
		$(window).trigger("resize");
		assignListLasso($("#livechatPaneInner"));
		assignListPane($("#livechatPaneInner"),openChat);
		$("#livechatPaneInner").lovelyScroll();
		assignLivechatKeys();
		$("#loadingMask").hide();

	}
	if ($("body").attr("previous-pane")=="staff") {
		showStaff();
	}

}
function assignDragAssets ($wrapper) {
	if (!$("body").hasClass("storageDraggable")) {
		return false;
	}
	//if ($("> .ui-draggable",$wrapper).length) {
	//	$("> .thumbItem:not(.addImageThumb),> .responsiveListItem",$wrapper).draggable("destroy");
	//}
	$("> .thumbItem:not(.addImageThumb),> .responsiveListItem",$wrapper).draggable({
		appendTo: '#dragBoundry'
		,zIndex: 1000
		,scroll: false
		,distance:15
		,containment: "#dragBoundry"
		,revert: 'invalid'
		,refreshPositions:true
		,helper: function(){
			if ($("> .thumbItem.imageItemHighlight,> .responsiveListItem.listItemHighlight",$wrapper).length>1) {
				$clones = $("<div class='draggingBox'></div>");
				var ofTop = 0;
				var ofLeft = 0;
				$("> .thumbItem.imageItemHighlight,> .responsiveListItem.listItemHighlight",$wrapper).each(function(){
					if ($(this).hasClass("thumbItem")) {
						$clones.append($(this).clone().css('width', $(this).width()+"px").css("top",ofTop+"px").css("left",ofLeft+"px").css("position","absolute").css("margin-right","0px")).append("<div class='dropzone'><div></div></div>");					
						ofTop+=20;
						ofLeft+=20;
						
					} else {
						ofTop+=20;
						ofLeft+=20;
						$clones.append($(this).clone().css('width', $(".textEditingArea").width()-100+"px").css("top",ofTop+"px").css("left",ofLeft+"px").css("position","absolute").css("margin-right","0px")).append("<div class='dropzone'><div></div></div>");					
						
					}
				});
				return $clones.css("opacity",0.7).css('width', $(".textEditingArea").width()-20+"px").css("margin-left","10px").css("margin-right","0px")[0];
			} else {
				if ($(this).hasClass("thumbItem")) {

		 			return $(this).clone().css('width', $(this).width()+"px").css("opacity",0.7).css("height",this.offsetHeight-12).css("margin-left","10px")[0];				
		 		} else {
		 			var mr = $(this).css("margin-right");
		 			$(this).css("margin-right","0");
		 			var $n = $(this).clone().css('width', $(".textEditingArea").width()-100+"px").css("opacity",0.7).css("height",this.offsetHeight-12).css("margin-left","10px").css("margin-right","0px")[0];
		 			setTimeout(function() {
		 				$(this).css("margin-right",mr);
		 			}, 10);
		 			
		 			return $n;				
		 		}
			}		
		},
		handle:false,
		start: function () {

			if ($("body").attr("previous-pane")!="editContent") {
				return false;
			}
			if ($(".assetPane:visible").length) {
				$("body").attr("drag-pane",$("body").attr("pane"));	
			}
			$("body").removeAttr("previous-pane");
			$("body").attr("pane","editContent");
			$("body").removeClass("storageDraggable");
			$("body").attr("pane",$("body").attr("previous-pane"));
/*			$(".itemTag").stop(true,true).animate({right:"0px"},150);
			$("#contentWrapper .paneTools").animate({right:"-300px"},150,function(){
				$("#contentWrapper .paneTools").hide().removeClass("visible");
			});*/
			$("#dragInsertMask").hide();
			$("input").unbind("blur");
			
			hideAssetPanes();
			

			if ($(this).hasClass("greyedOut"))  {
			return false;
			}
			if ($("body").hasClass("slideoverRightPane")) {
			$("#rightPaneMask").fadeOut();
			$("#dragInsert").fadeOut();
			$(".slideoverRightPane").removeClass("slideoverRightPane");				
			}
			hide_header_menus();

		}
		,refreshPositions:true
		,drag: function(event, ui){

			hidePaneTools();

			if ($(".textEditingArea").length) {
				var topZoneTop = $(".textEditingArea").offset().top;
				var topZoneBottom = topZoneTop+160;
				var topZoneLeft = $(".textEditingArea").offset().left;
				var topZoneRight = topZoneLeft + $(".textEditingArea").width();

				var bottomZoneTop = $(".textEditingArea").offset().top+$(".textEditingArea").outerHeight()-50;
				var bottomZoneBottom = $(".textEditingArea").offset().top+$(".textEditingArea").outerHeight();
				var bottomZoneLeft = $(".textEditingArea").offset().left;
				var bottomZoneRight = topZoneLeft + $(".textEditingArea").width();

				var posTop = event.pageY;
				var posLeft = event.pageX;
				clearTimeout(lovelyScrollDrag);
				if (posTop > topZoneTop && posTop < topZoneBottom && posLeft > topZoneLeft && posLeft < topZoneRight) {
					$(".textEditingArea").lovelyScrollMove(7);
					lovelyScrollDrag = setInterval(function(){
						$(".textEditingArea").lovelyScrollMove(7);
					},30);
				}

				if (posTop > bottomZoneTop && posTop < bottomZoneBottom && posLeft > bottomZoneLeft && posLeft < bottomZoneRight) {
					$(".textEditingArea").lovelyScrollMove(-7);
					lovelyScrollDrag = setInterval(function(){
						$(".textEditingArea").lovelyScrollMove(-7);
					},30);
				}
			
				
			}
			
		}
	});
}
function showStaff () {
	hidePaneTools();
	hideAssetPanes();
	$(".assetPane,.rightPane").hide();
	$("#level1Target .text").html("<span class='tempTargetName'>"+LangVars.Staff+"</span>");
	$("body").attr("pane","staff");
	hidePanes();
	hide_header_menus();
	$("input").unbind();
	$("#loadingMask").show();
	$("#level1Switcher li.current").removeClass("current");
	working();
	$("#adminList").load("adminUsersActions.php?adminUsersAction=showAdminUsers",function(){
		$("#rightPaneStaff").show();
		$(window).trigger("resize");
		saved();
		assignListLasso($("#staffPaneInner"));
		assignListPane($("#staffPaneInner .insertTarget"),editStaff);
		assignStaffKeys();
		$("#loadingMask").hide();	
		$("#staffPaneInner").lovelyScroll();
	
	});
}
function showPane ($pane,slideIn,forceFullWidth,goingBack,reloading) {
	var paneWidth = "100%";
	$(".assetPane").hide();	
	$("body").removeClass("storageDraggable");
	$('body').removeClass("storageUnderEditContext");
	if ($("body").attr("previous-pane")=="editContent") {
		if (forceFullWidth!==true) {
			$("body").addClass("storageDraggable");
			paneWidth="90%";	
		} else {
			$('body').addClass("storageUnderEditContext");
		}

	}
	var lpw = $("#dragBoundry").width();
	var lpworiginal = lpw;
	if ($("#livepreview:visible").length) {
		var tw = $(window).width();
		tw = tw-lpw;
		var r = tw+"px";			
	} else {
		var r = "0%";
	}
	if (paneWidth=="90%") {
		if ($(window).width()<480) {
			lpw=lpw-25;
		} else {
			lpw=lpw-80;
		}
	}
	if (slideIn) {
		$pane.css({right:r,width:lpw+"px"}).show().addClass("shownOnce");
	} else {
		if ($("body").attr("previous-pane")=="editContent" && forceFullWidth) {
			if (reloading) {
				$pane.css({right:r,width:lpw+"px"}).show().addClass("shownOnce");
			} else {

				$pane.css({right:r,width:lpw+"px"}).show().animate({width:lpw+"px"},300).addClass("shownOnce");	
			}
		} else { 
			if (goingBack) {
				if (paneWidth!="100%") {
					$pane.css({right:r,width:lpworiginal+"px"}).show().animate({width:lpw+"px"},300,function(){

					}).addClass("shownOnce");
				} else {
					$pane.css({right:r,width:lpw+"px"}).show().addClass("shownOnce");	
				}
				
			} else {
				$pane.css({right:r,width:lpw+"px"}).show().addClass("shownOnce");
			}
			
		}
	}
	
}
function showImages ($clicked,switcher,goingBack) {
	hidePaneTools();
	

	if (!$("#rightPaneImages").hasClass("shownOnce")) {
		$("#imagesPaneInner .insertTarget").html($("#bpe_images").html());

	}
	$("#imagesPaneInner").css("width","auto");
	$(".assetPane").hide();

	if (!switcher) {
		$("body").attr("previous-pane",$("body").attr("pane"));	
		showPane($("#rightPaneImages"),true,false,goingBack,false);
	} else {
		showPane($("#rightPaneImages"),false,false,goingBack,false);
	}
	if ($("body").hasClass("storageDraggable")) {
		if (currentTooltip) {
			interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
			clearTimeout(toolTipTimeout);
		}
		currentTooltipItem=0;
		currentTooltip="dragItemsToPage";
		tooltip();
	}
	logTrainingClick("clickImagesTab");
	
	assignListLasso($("#imagesPaneInner"));
	assignListPane($("#imagesPaneInner"),renamePageImage);
	if (!($("body").hasClass("storageDraggable"))) {
		assignSortableListItems($("#imagesPaneInner"),"listItemHighlight","contentImage");		
	}
	prepFancyLabelForms($("#rightPaneImages .filterBox"));
	assignPaneSearch($("#rightPaneImages .searchList"),"pageActions.php","pageAction=showFilteredImages&search=","image");
	assignImagesKeys();
	$("#loadingMask").hide();
	assignDragAssets($("#imagesPaneInner .insertTarget"));
	setTimeout(function() {
		$("#imagesPaneInner").lovelyScroll(scrollImagesBottom);
	}, 400);
	
}
$(document).ready(function(){
	
	if (window.screen.availWidth>=1300 && $(window).width()<1300) {
		if (currentTooltip) {
			interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
			clearTimeout(toolTipTimeout);
		}
		currentTooltipItem=0;
		currentTooltip="makeScreenBigger";
		toolTipTimeout = setTimeout(tooltip, 1000);	

	}

	$(".rightPane").hide();
	$(".showOnLoadRightPane").show();
	
	$("#rightPane").show();
	var flag1=false;

	$("#assetMenu li a").click(function(e){
		e.preventDefault();
	})
	$("#assetMenu li,#level1Switcher li,#level2Switcher li,#lpContent .lpBoxBig,#lpContent .lpBoxSmall,#dragInsertIndex .lpBoxSmall").click(function(e){
		$(".dragInsertTab.current").removeClass("current");
		$(".dragInsertTabStorage").addClass("current");

		if (e.target.nodeName=="A") {
			$target=$(e.target).parent();
		} else {
			$target=$(e.target);
		}
		
		if ($(e.target).hasClass("lpBoxBigInner")||$(e.target).hasClass("lbBoxIcon")) {
	
			$target=$(e.target).parents(".lpBoxBig");
		}

		if ($target.parents("#dragInsertIndex").length) {
			$("#dragInsert").hide();
		}
		hidePanes();
		$("input").unbind();
		
		if ($(this).parent().attr("id")=="level1Switcher" || $(this).hasClass("lpBoxBig")|| ( $(this).hasClass("lpBoxSmall")&&!$(this).parents("#dragInsertIndex").length)) {
			$(".rightPane").hide();	
		}
		

		

		
		hide_iconbar_menus();
		if ($target.parents("#level1Switcher").length) {
			$("#level1Switcher li.current").removeClass("current");
			$target.addClass("current");	
		}
		
			$("#level2Switcher li.current").removeClass("current");
			var id=$target.attr("id");
			$("#level2Switcher #"+id).addClass("current");	
		
		
		
		if ($target.attr("id")=="tab2MainMenuPages" || $target.attr("id")=="lpWebpages") {
			$("body").attr("pane","mainMenuPages");
			showPagesStep1();
			$("#pagesMoreLangs").show();
			var toShow = "showTop";
		}
		if ($target.attr("id")=="tab2NonMenuPages") {
			$("body").attr("pane","nonMenuPages");
			showPagesStep1Sep();
			$("#iconbarLanguagePages,#pagesMoreLangs").hide();	
			var toShow = "showNonLinkers";
		}
		if ($target.attr("id")=="tab2MainMenuPages" || $target.attr("id")=="tab2NonMenuPages" || $target.attr("id")=="lpWebpages") {
			showPagesStep2(toShow);
			
		}
		if ($target.attr("id")=="tab2Images") {
			if (!$(this).parents("#level2Switcher").length) {
				$("body").attr("previous-pane",$("body").attr("pane"));	
				showImages($target,true,false);
			} else {
				showImages($target,false,false);
			}
			$("body").attr("pane","images");

			
			return false;

		}
		
		if ($target.attr("id")=="tab2Videos") {
			hidePaneTools();
			if (!$("#rightPaneVideos").hasClass("shownOnce")) {
				$("#videosPaneInner .insertTarget").html($("#videoList").html());
			
			}
			$(".assetPane").hide();	
			if (!$(this).parents("#level2Switcher").length) {
				$("body").attr("previous-pane",$("body").attr("pane"));	
				showPane($("#rightPaneVideos"),true);
			} else {
				showPane($("#rightPaneVideos"),false);
			}
			$("body").attr("pane","videos");

			if ($("body").hasClass("storageDraggable")) {
				if (currentTooltip) {
					interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
					clearTimeout(toolTipTimeout);
				}
				currentTooltipItem=0;
				currentTooltip="dragItemsToPage";
				tooltip();
			}

	

			$("#videosPaneInner").lovelyScroll();
			assignListLasso($("#videosPaneInner"));
			assignListPane($("#videosPaneInner"),doNothing);
			assignVideosKeys();
			assignDragAssets($("#videosPaneInner .insertTarget"));
		


			$("#loadingMask").hide();
			return false;
		}
		
		if ($target.attr("id")=="tab2Galleries") {
			
			
			if (!$(this).parents("#level2Switcher").length) {
				switchToGallery(false);
			} else {
				switchToGallery(true);
			}
			
			$("body").attr("pane","galleries");
			return false;
		}
		if ($target.attr("id")=="tab2Forms") {
			
			
			if (!$(this).parents("#level2Switcher").length) {
				switchToForm(false);
			} else {
				switchToForm(true);
			}
		
			return false;
		}
		if ($target.attr("id")=="tab2Products") {
			
			if (!$(this).parents("#level2Switcher").length) {
				switchToProducts(true,false);
			} else {
				switchToProducts(true,true);
			}
		
			return false;
		}
		if ($target.attr("id")=="tab2Booking") {
			
			if (!$(this).parents("#level2Switcher").length) {
				switchToBookingProducts(true,false);
			} else {
				switchToBookingProducts(true,true);
			}
		
			return false;
		}
		if ($target.attr("id")=="tab2Calendars") {

			if (!$(this).parents("#level2Switcher").length) {
				switchToCalendars(true,false);
			} else {
				switchToCalendars(true,true);
			}
			
			return false;
		}
		if ($target.attr("id")=="tab2Snippets") {
			pinnedSnippet=false;

			if (!$(this).parents("#level2Switcher").length) {
				switchToSnippets(true,false);
			} else {
				switchToSnippets(true,true);
			}
			
			return false;
		}
		if ($target.attr("id")=="tab2Tables") {
			pinnedSnippet=false;

			if (!$(this).parents("#level2Switcher").length) {
				switchToTables(true,false);
			} else {
				switchToTables(true,true);
			}
			
			return false;
		}
		if ($target.hasClass("pinnedSnippetCat")) {
			pinnedSnippet=$target.attr("data-snippet-cat");
			switchToSnippets(true,false);
			return false;
		}
		if ($target.attr("id")=="tab2Files") {
			hidePaneTools();

			$("#filesPaneInner .pagesScroll").css("width","auto");
			if (!$(this).parents("#level2Switcher").length) {
				$("body").attr("previous-pane",$("body").attr("pane"));	
				showPane($("#rightPaneFiles"),true);
			} else {
				showPane($("#rightPaneFiles"),false);
			}

			$("body").attr("pane","files");
			$("#filesPane .searchList").val(LangVars.Search);
			$("#filesPane .clearSearch").remove();
			working();
			if ($("body").hasClass("storageDraggable")) {
				if (currentTooltip) {
					interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
					clearTimeout(toolTipTimeout);
				}
				currentTooltipItem=0;
				currentTooltip="dragItemsToPage";
				tooltip();
			}
			


			$("#filesPaneInner").html($("#downloads").html());
			if (!window.uploadFilePaneInnerDone) {
				window.uploadFilePaneInnerDone = new Dropzone("div#filesPaneInner", uploadFilePaneDZOptions($("#filesPaneInner .uploadFile")[0]))

			} else {
				window.uploadFilePaneInnerDone.disable();
				window.uploadFilePaneInnerDone = new Dropzone("div#filesPaneInner", uploadFilePaneDZOptions($("#filesPaneInner .uploadFile")[0]))

			}
			

			prepFancyLabelForms($(".filterBox",$("#filesPaneInner")));
			assignHeaderMenus();
			assignFilesMenus($("#filesPaneInner"));


			saved();
			assignListLasso($("#filesPaneInner .pagesScroll"));
			assignListPane($("#filesPaneInner .insertTarget"),downloadFile);

			assignFilesKeys();
			assignPaneSearch($("#rightPaneFiles .searchList"),"pageActions.php","pageAction=showMoreFiles&firstSearch=yes&ajax=true&start=0&search=","file");
			assignDragAssets($("#filesPaneInner .insertTarget"));
			
			setTimeout(function() {
				$("#filesPaneInner .pagesScroll").lovelyScroll(pagesScrollBottomDownloadsFiles);
			}, 400);
			$("#loadingMask").hide();	

			return false;
		}
		if ($target.attr("id")=="tab2Newsletter"||$target.parent().attr("id")=="tab2Newsletter") {
			logTrainingClick("clickMailingListTab");
			if (!$(this).parents("#level2Switcher").length) {
				switchToMailingLists(true,false);
			} else {
				switchToMailingLists(true,true);
			}
			return false;
		}
		if ($target.attr("id")=="tab2Blog"||$target.parent().attr("id")=="tab2Blog" || $target.attr("id")=="lpBlog") {
			$("body").attr("pane","blog");
			logTrainingClick("blogTab");
			switchToBlog(true,false);
			return false;
		}
		if ($target.attr("id")=="tab2Checkout"||$target.parent().attr("id")=="tab2Checkout"||$target.attr("id")=="lpCheckout") {
			$("body").attr("pane","checkout");
			switchToCheckout(true);
			return false;
		}
		if ($target.attr("id")=="tab2Bookings"||$target.parent().attr("id")=="tab2Bookings"||$target.attr("id")=="lpBookings") {
			$("body").attr("pane","bookings");
			switchToBookings(true);
			return false;
		}
		
		if ($target.attr("id")=="tab2Livechat"||$target.parent().attr("id")=="tab2Livechat"||$target.attr("id")=="lpLivechat") {
			$(".topBar,.cleverFilterBar").show();
			$("#level1Target .text").html(LangVars.Livechat);
			$("body").attr("pane","livechat");

			livechat_init();
			$("#rightPaneLivechat").show();
			$(window).trigger("resize");
			assignListLasso($("#livechatPaneInner"));
			$("#livechatPaneInner").lovelyScroll();
			assignListPane($("#livechatPaneInner"),openChat);
			assignLivechatKeys();
			$("#loadingMask").hide();

			return false;
		}
		if ($target.attr("id")=="tab2EmbedCodes") {
			hidePaneTools();

			$("#embedCodesPaneInner").css("width","auto");
			if (!$(this).parents("#level2Switcher").length) {
				$("body").attr("previous-pane",$("body").attr("pane"));	
				showPane($("#rightPaneEmbedCodes"),true);
			} else {
				showPane($("#rightPaneEmbedCodes"),false);
			}
			$("body").attr("pane","embedCodes");
			livechat_init();
		
			assignListLasso($("#embedCodesPaneInner"));
			assignListPane($("#embedCodesPaneInner .insertTarget"),editEmbedCode);
			assignDragAssets($("#embedCodesPaneInner .insertTarget"));
			assignEmbedCodesKeys();
			$("#loadingMask").hide();
			setTimeout(function() {
				$("#embedCodesPaneInner").lovelyScroll();
			}, 400);
			if ($("body").hasClass("storageDraggable")) {
				if (currentTooltip) {
					interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
					clearTimeout(toolTipTimeout);
				}
				currentTooltipItem=0;
				currentTooltip="dragItemsToPage";
				tooltip();
			}

			return false;
		}



	});
	$("#statsWrapper").hide();
	

	if (window.location.pathname=="/admin/") {
		if (window.location.search!="?stats") {
		
			$("#launchPad").removeClass("hidden");
			initLP();
		
			
		} else {
			$("#statsWrapper").show();
			$("#systemMenuStats").addClass("current");

			setTimeout(function() {
				$(window).trigger("resize");
				$("#statsWrapper .pagesScroll").lovelyScroll();
			}, 300);
			$("#level1Target .text").html(LangVars.Statistics);
			$("#systemMenuStats").addClass("current");
			
			
		}
	}
	$("#systemMenuStaff,#systemMenuStaffPopin").click(function(){
		
		showStaff();
	
		return false;
	});
	$("#backToSnippets").click(function(){
		$("body").attr("pane","lp");
		$("#tab2Snippets").trigger("click");
		return false;
	});
	$("#backToStaffFromGroups").click(function(){
		hide_header_menus(true);
		showStaff();
		return false;
	});
	$("#backToMailingLists").click(function(){
		logTrainingClick("backToMailingLists");
		
		$("#rightPaneNewsletterSubscribers").hide();
		$("input").unbind();
		$("#loadingMask").show();
		switchToMailingLists(true,true,true);
		return false;
	});	
	$("#backToGallery").click(function(){
		hidePanes();
		$("input").unbind();
		$("#rightPaneGalleryImages").hide();
		$("#loadingMask").show();
		switchToGallery(true,true);
		return false;
	});
	$("#backToForm").click(function(){
		hidePanes();
		$("input").unbind();
		$("#rightPaneFormInputs").hide();
		$("#loadingMask").show();
		switchToForm(true,true);
	});
	$("#backToProducts").click(function(){
		$(".listItemHighlight").removeClass("listItemHighlight");
		$("#rightPaneProductOptions").hide();
		$("input").unbind();
		$("#loadingMask").show();
		switchToProducts(false,true,true);

		setTimeout(function() {
			$("#rightPaneProducts #prod"+$("#editProductName").attr("product-id")).addClass("listItemHighlight");
			selectionTools();
		}, 10);
		return false;		
	});
	$("#backToProductsFromCategories").click(function(){
			
			$("#rightPaneProductCategories").hide();
			$("input").unbind();
			$("#loadingMask").show();
			switchToProducts(true,true,true);

			setTimeout(function() {
				$("#rightPaneProducts #prod"+$("#editProductName").attr("product-id")).addClass("listItemHighlight");
				selectionTools();
			}, 10);
		
		
	});
	$("#backToSnippetsFromCategories").click(function(){
		$("#rightPaneSnippetsCategories").hide();
		$("input").unbind();
		$("#loadingMask").show();
		switchToSnippets(true,true,true);

		
	});
	$("#backToSubscribersFromCategories").click(function(){
		hidePanes();
		$("input").unbind();
		$("#loadingMask").show();
		$("#rightPaneSubscriberCategories").hide();

		selectionTools();
		loadSubscribers();		
		hide_header_menus(true);

		return false;
	});
	$("#backToEventsFromCategories").click(function(){
		hidePanes();
		$("input").unbind();
		$("#loadingMask").show();
		$("#rightPaneEventsGroups").hide();
		selectionTools();
		showCalendarEvents($("#calCat-"+$("#calendarEventsDateFilter #showing_cat").val()));
		hide_header_menus(true);

		return false;
	});
	$("#backToImagesFromCategories").click(function(){
		hidePanes();
		$("input").unbind();
		$("#loadingMask").show();
		$("#rightPaneImagesCategories").hide();
		selectionTools();
		showImages($(this),true,true);
		hide_header_menus(true);

		return false;
	});
	$("#backToCalendars").click(function(){
		
		$("input").unbind();
		$("#loadingMask").show();
		$("#rightPaneCalendarEvents").hide();
		switchToCalendars(false,true,true);
	});
	$("#backToBlog").click(function(){
		$("body").attr("pane","blog");
		switchToBlog(true,false);
		return false;
	});
	$("#backToBlogFromAuthors,#backToBlogFromCategories,#backToBlogFromComments").click(function(){
		if ($(this).attr("id")=="backToBlogFromAuthors") {
			logTrainingClick("backFromBlogAuthors");
		}
		hidePanes();
		$("input").unbind();
		$("#loadingMask").show();
		$(".rightPane,#dragInsert").hide();
		switchToBlog(false,false);
	});
});

/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
 * in FIPS 180-1
 * Version 2.2 Copyright Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for details.
 */
var hexcase=0;var b64pad="";function hex_sha1(a){return rstr2hex(rstr_sha1(str2rstr_utf8(a)))}function hex_hmac_sha1(a,b){return rstr2hex(rstr_hmac_sha1(str2rstr_utf8(a),str2rstr_utf8(b)))}function sha1_vm_test(){return hex_sha1("abc").toLowerCase()=="a9993e364706816aba3e25717850c26c9cd0d89d"}function rstr_sha1(a){return binb2rstr(binb_sha1(rstr2binb(a),a.length*8))}function rstr_hmac_sha1(c,f){var e=rstr2binb(c);if(e.length>16){e=binb_sha1(e,c.length*8)}var a=Array(16),d=Array(16);for(var b=0;b<16;b++){a[b]=e[b]^909522486;d[b]=e[b]^1549556828}var g=binb_sha1(a.concat(rstr2binb(f)),512+f.length*8);return binb2rstr(binb_sha1(d.concat(g),512+160))}function rstr2hex(c){try{hexcase}catch(g){hexcase=0}var f=hexcase?"0123456789ABCDEF":"0123456789abcdef";var b="";var a;for(var d=0;d<c.length;d++){a=c.charCodeAt(d);b+=f.charAt((a>>>4)&15)+f.charAt(a&15)}return b}function str2rstr_utf8(c){var b="";var d=-1;var a,e;while(++d<c.length){a=c.charCodeAt(d);e=d+1<c.length?c.charCodeAt(d+1):0;if(55296<=a&&a<=56319&&56320<=e&&e<=57343){a=65536+((a&1023)<<10)+(e&1023);d++}if(a<=127){b+=String.fromCharCode(a)}else{if(a<=2047){b+=String.fromCharCode(192|((a>>>6)&31),128|(a&63))}else{if(a<=65535){b+=String.fromCharCode(224|((a>>>12)&15),128|((a>>>6)&63),128|(a&63))}else{if(a<=2097151){b+=String.fromCharCode(240|((a>>>18)&7),128|((a>>>12)&63),128|((a>>>6)&63),128|(a&63))}}}}}return b}function rstr2binb(b){var a=Array(b.length>>2);for(var c=0;c<a.length;c++){a[c]=0}for(var c=0;c<b.length*8;c+=8){a[c>>5]|=(b.charCodeAt(c/8)&255)<<(24-c%32)}return a}function binb2rstr(b){var a="";for(var c=0;c<b.length*32;c+=8){a+=String.fromCharCode((b[c>>5]>>>(24-c%32))&255)}return a}function binb_sha1(v,o){v[o>>5]|=128<<(24-o%32);v[((o+64>>9)<<4)+15]=o;var y=Array(80);var u=1732584193;var s=-271733879;var r=-1732584194;var q=271733878;var p=-1009589776;for(var l=0;l<v.length;l+=16){var n=u;var m=s;var k=r;var h=q;var f=p;for(var g=0;g<80;g++){if(g<16){y[g]=v[l+g]}else{y[g]=bit_rol(y[g-3]^y[g-8]^y[g-14]^y[g-16],1)}var z=safe_add(safe_add(bit_rol(u,5),sha1_ft(g,s,r,q)),safe_add(safe_add(p,y[g]),sha1_kt(g)));p=q;q=r;r=bit_rol(s,30);s=u;u=z}u=safe_add(u,n);s=safe_add(s,m);r=safe_add(r,k);q=safe_add(q,h);p=safe_add(p,f)}return Array(u,s,r,q,p)}function sha1_ft(e,a,g,f){if(e<20){return(a&g)|((~a)&f)}if(e<40){return a^g^f}if(e<60){return(a&g)|(a&f)|(g&f)}return a^g^f}function sha1_kt(a){return(a<20)?1518500249:(a<40)?1859775393:(a<60)?-1894007588:-899497514}function safe_add(a,d){var c=(a&65535)+(d&65535);var b=(a>>16)+(d>>16)+(c>>16);return(b<<16)|(c&65535)}function bit_rol(a,b){return(a<<b)|(a>>>(32-b))};

function initEllipsis (els) {
	els.each(function(){
		$(".titleNotHover:not(.proccessed)",this).each(function(){
			if ($(this).is(":visible")) {
				$(this).addClass("elipTemp2");
				t = $("span:first",this).html();
			 	w = $(this).width();
				while (t.length > 0 && $("span",this).width() >= w) {
				t = t.substr(0, t.length - 1);
				$("span",this).html(t + "&hellip;");
				}
				$(this).addClass("proccessed");
				$(this).removeClass("elipTemp2");
				if (!$(this).next().length) {
					if (!$(this).next().hasClass("titleHover")) {
						if ($(this).parent().hasClass("renameItem")) {

							subtract = 20;

							scope = $(this).parent().parent();
						} else {
							subtract = 10;

							scope = $(this).parent();
						}
						if ($(".onlineMenu",scope).length) {
							subtract = subtract+65;
						}
						if ($(".dropDownMenu",scope).length) {
							subtract = subtract+97;
						}
						if ($(".inputType",scope).length) {
							subtract = subtract+97;
						}
						if ($(".bpe_remove_menu_item",scope).length) {
							subtract = subtract+19;
						}
						if ($(".buttonMenu",scope).length) {
							subtract = subtract+112;
						}
						if ($(".languageMenu",scope).length) {
							subtract = subtract+81;
						}
						t = $("span:first",this).html();
						$(this).after('<span class="elipTemp" title="'+$(this).attr("title")+'" style="margin-right:'+subtract+'px"><span>'+t+'</span></span>');
						w = $(this).next().width();
						while (t.length > 0 && $("span",$(this).next()).width() >= w) {
						t = t.substr(0, t.length - 1);
						$("span",$(this).next()).html(t + "&hellip;");
						}
						$(this).next().addClass("titleHover").removeClass("elipTemp").css("margin-right","0px");
					}
				}
			}
		});


	});
}
function ellipsis (outer) {
	subtract = 0;
	$("div.menu_options,div.buttonMenu,div.bpe_remove_menu_item",outer).each(function(){
	subtract = subtract+$(this).width();
	});

	subtract=subtract+5;
	$(".ellipsis",outer).css("margin-right",subtract+"px");
	t = $("span",$(".ellipsis",outer)).html();
 	w = $(".ellipsis",outer).width();
	while (t.length > 0 && $(".ellipsis span",outer).width() >= w) {
	t = t.substr(0, t.length - 1);
	$(".ellipsis span",outer).html(t + "&hellip;");
	}
}
function clickToEdit (clickedEl,formEl,inputText, hideClicked,newGraphic) {
	if (newGraphic) {
		var newGraphic = "newGraphic";
	} else {
		var newGraphic = "";
	}
	$("#renamePallet").remove();

	if (clickedEl.attr("title")!="") {
		var text = clickedEl.attr("title");
	} else {
		var text = clickedEl.html();
	}
	$('body').append("<div id='renamePallet' class='"+newGraphic+"'><div id='renamePalletInner'><textarea>"+text+"</textarea></div></div>");
	$("textarea",$("#renamePallet")).select().focus();
	$("textarea",$("#renamePallet")).TextAreaExpander();
	var t = clickedEl.offset();
	var w = clickedEl.width();
	$("#renamePallet").css({
		left:t.left+w+"px",
		top:t.top+"px"
	});
	$(document).unbind("click");
	$(document).click(function(e){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		if ($(e.target).parents("#renamePallet").length==0) {
			$("#renamePallet").remove();
			$(document).unbind("keypress");
			$(document).unbind("keydown");
			$(document).unbind("click");
			assignSaveListener();

			$(document).click(function(){
				if (justScrolled) {return false;}
				if (ignoreClickCatchup) {return false;}
				hide_menus();
				$.fn.bpeditor.assign_toggler();
			});
		}
	});
	$(document).unbind("keypress");
	$(document).unbind("keydown");

	$(document).keydown(function(e){
			if (e.keyCode==13) { // enter
				if ($("textarea",$("#renamePallet")).val()!="") {
					$(".focus",formEl).val($("textarea",$("#renamePallet")).val());
					$(formEl).submit();
					$("#renamePallet").remove();
					$(document).unbind("keypress");
					$(document).unbind("keydown");
					$(document).unbind("click");
					assignSaveListener();
					$(document).click(function(){
						if (justScrolled) {return false;}
						if (ignoreClickCatchup) {return false;}
						hide_menus();
						$.fn.bpeditor.assign_toggler();
					});
				} else {
					$("textarea",$("#renamePallet")).keyup(function(){
						$("textarea",$("#renamePallet")).unbind("keyup");
						$("textarea",$("#renamePallet")).val("");
						$("textarea",$("#renamePallet")).TextAreaExpander();

					});
				}

			}
			if (e.keyCode==27) { // esc
				$("#renamePallet").remove();
				$(document).unbind("keypress");
				$(document).unbind("keydown");
				$(document).unbind("click");
				assignSaveListener();

				$(document).click(function(){
					if (justScrolled) {return false;}
					if (ignoreClickCatchup) {return false;}
					hide_menus();
					$.fn.bpeditor.assign_toggler();
				});

			}
		});
}
function clickToAddNew (clickedEl,formEl,inputText, hideClicked) {
	$(".menuForm").hide();
	$(".menuFormLink").show();
	formEl.addClass("menuForm");
	formEl.show();
	$(".hideForRename").removeClass("hideForRename");
	if (hideClicked==true) {
		clickedEl.addClass("menuFormLink");
		clickedEl.hide();
		clickedEl.parents(".menu_with_options").addClass("hideForRename");
	}
	$(document).unbind("keypress");
	$(document).unbind("keydown");
	formEl.fadeIn();
	$(".focus",formEl).addClass("greyedOut");
	$(".focus",formEl).val(inputText);
	$(".focus",formEl).each(function(){
		this.setSelectionRange(1,0);
	});
	$(".focus",formEl).focus();
	$(".focus",formEl).keydown(function(e){
		if (e.keyCode==27) {
				$(".hideForRename").removeClass("hideForRename");
				$(".menuForm").hide();
				$(".menuFormLink").show();
				assignSaveListener();
		} else {
			if ($(this).val()==inputText) {
				$(this).val("");
			}
			$(this).removeClass("greyedOut");
		}
	});
}
function options_start (obj) {
	obj.parents(".choices").prev().html("<img src='graphics/bpeditor/option_loader.gif' class='options_loader' />");
	obj.parents(".choices3").prev().html("<img src='graphics/bpeditor/option_loader.gif' class='options_loader' />");
	$("a",obj.parent()).removeClass("choice_selected");
	obj.addClass("choice_selected");
	$(".choices,.choices3").hide();

}
function option_end (obj) {
	if (obj.html().length>10){
		replace = obj.html().substr(0,10)+"&hellip;";
	} else {
		replace = obj.html();
	}
	obj.parents(".choices").prev().html(replace);
	obj.parents(".choices3").prev().html(replace);
}
function hidePaneTools () {
	$(".paneToolTextItem").text("");
	$(".paneTools").addClass("disabled");
	if ($(window).width()<500) {
		paneTools=false;
	} else {
		return false;
	}


	$(".topBar:not(#lightPagesList .topBar),.cleverFilterBar").show();
	$("#header").removeClass("withBottomBorder");
	//$(".itemTag").stop(false,true).animate({right:"0px"},150);
	$(".Right_Image img").stop(true,true).animate({marginRight:"0px"},150);
	if ($("body").attr("pane")=="editContent") {
		var $p = $("#rightPane");
	}
	if ($("body").attr("pane")=="mainMenuPages"||$("body").attr("pane")=="nonMenuPages") {
		var $p = $("#rightPanePages");
	}
	if ($("body").attr("pane")=="staff") {
		var $p = $("#rightPaneStaff");
	}
	$(".paneTools",$p).stop(false,true).animate({right:"-300px"},150,function(){
		$(".paneTools",$p).hide().removeClass("visible");
	});
	/*
	$("#checkoutPane .responsiveListItem").stop(true,true).animate({marginRight:"0px"},150);
	$("#embedCodesPane .responsiveListItem").stop(true,true).animate({marginRight:"0px"},150);
	$("#filesPane .responsiveListItem,#videosPane .responsiveListItem").stop(true,true).animate({marginRight:"0px"},150);
	$("#calendarsPane .responsiveListItem").stop(true,true).animate({marginRight:"0px"},150);
	$("#calendarEventsPane .responsiveListItem").stop(true,true).animate({marginRight:"0px"},150);
	$("#livechatPane .responsiveListItem").stop(true,true).animate({marginRight:"0px"},150);
	$("#imagesPane .responsiveListItem").stop(true,true).animate({marginRight:"0px"},150);
	$("#rightPaneProductOptions .responsiveListItem").stop(true,true).animate({marginRight:"0px"},150);
	$("#rightPaneProductCategories .responsiveListItem").stop(true,true).animate({marginRight:"0px"},150);
	$("#rightPaneSnippets .responsiveListItem").stop(true,true).animate({marginRight:"0px"},150);
	$("#rightPaneSnippetCategories .responsiveListItem").stop(true,true).animate({marginRight:"0px"},150);
	$("#rightPaneProductCategories .responsiveListItem,#rightPaneProductCategories .fakeAddFormItem").stop(true,true).animate({marginRight:"50px"},150);
	$("#rightPaneProducts .responsiveListItem,#rightPaneProducts .fakeAddFormItem").stop(true,true).animate({marginRight:"0px"},150);
	$("#formInputsPaneInner .responsiveListItem,#formInputOptionsPaneInner .responsiveListItem").stop(true,true).animate({marginRight:"0px"},150);
	$("#rightPaneForms .responsiveListItem,#rightPaneForms .fakeAddFormItem").stop(true,true).animate({marginRight:"0px"},150);
	$("#rightPaneGalleries .responsiveListItem,#rightPaneGalleryImages .responsiveListItem,#rightPaneGalleries .fakeAddFormItem").stop(true,true).animate({marginRight:"0px"},150);
	$("#rightPaneStaff .responsiveListItem,#rightPaneStaff .fakeAddFormItem").stop(true,true).animate({marginRight:"0px"},150);
	$("#rightPaneBlog .responsiveListItem.withComments,#rightPaneBlog .fakeAddFormItem").stop(true,true).animate({marginRight:"50px"},150);
	$("#rightPaneBlogCategories .responsiveListItem,#rightPaneBlogAuthors .responsiveListItem").stop(true,true).animate({marginRight:"0px"},150);
	$("#rightPaneBlog .responsiveListItem:not(.withComments),#rightPaneBlogComments .responsiveListItem,#rightPaneBlogComments .fakeAddFormItem").stop(true,true).animate({marginRight:"0px"},150);
	$("#rightPanePages .responsiveListItem.type_topLevel:not(.breadcrumbPage),#rightPanePages .responsiveListItem.type_subLevel:not(.breadcrumbPage),#rightPanePages .responsiveListItem.type_subSubLevel:not(.breadcrumbPage)").stop(true,true).animate({marginRight:"0px"},150);
	$("#rightPanePages .responsiveListItem.type_nonLinking:not(.breadcrumbPage),#rightPanePages .responsiveListItem.type_subSubSubLevel,#rightPanePages .responsiveListAddForm").stop(true,true).animate({marginRight:"0px"},150);
	$("#rightPanePages .responsiveListItem.breadcrumbPage.type_topLevel").stop(true,true).animate({marginRight:"70px"},150);
	$("#rightPanePages .responsiveListItem.hasSubs.type_topLevel,#rightPanePages .responsiveListItem.hasSubs.type_subLevel,#rightPanePages .responsiveListItem.hasSubs.type_subSubLevel").stop(true,true).animate({marginRight:"50px"},150);
	$("#rightPanePages .responsiveListItem.breadcrumbPage.type_subLevel").stop(true,true).animate({marginRight:"50px"},150);
	$("#rightPanePages .responsiveListItem.breadcrumbPage.type_subSubLevel").stop(true,true).animate({marginRight:"40px"},150);
	$("#rightPanePages .responsiveListItem.breadcrumbPage.type_subSubSubLevel").stop(true,true).animate({marginRight:"0px"},150);
	$("#rightPaneNewsletter .responsiveListItem,#rightPaneNewsletter .responsiveListAddForm").stop(true,true).animate({marginRight:"0px"},150);
	$("#rightPaneNewsletterSubscribers .responsiveListItem,#rightPaneNewsletterSubscribers .fakeAddFormItem").stop(true,true).animate({marginRight:"0px"},150);*/
}
var modDown = false;
var metaDown = false;
var altDown = false;
var ctrlDown=false;
var shiftDown = false;
function onFocus(){
	if (!$("textarea:focus").length) {
		modDown = false;
 		shiftDown = false;
	}
};


window.onfocus = onFocus;
var lastScrollTop = 0;
var scrollingDown=true;
$(window).scroll(function(){
	var st = $(this).scrollTop();
	   if (st > lastScrollTop){
			scrollingDown=true;
	   } else {
	      scrollingDown=false;
	   }
	   lastScrollTop = st;
});
function scrollToEl ($el,$scrollingDiv) {

	if ($el.length) {

		if ($scrollingDiv.hasClass("textEditingArea")) {
			if ($el.hasClass("CMS_Component_ObsZones")) {

							
				if ($(".bpe_highlight",$el).length) {
					$el = $(".bpe_highlight:last",$el);
				}
				
			}
			var elTop = $el.offset().top - 86;

			var scrollTop = $("body").scrollTop();
			var windowHeight = $(window).height();
			var bottomEdge = windowHeight+documentTop ;
			
			var elBottom =elTop+$el.outerHeight();
			

//			alert("elTop:"+elTop+" scrollTop:"+scrollTop+" elBottom:"+elBottom+" windowHeight:"+windowHeight);
			if ($el.outerHeight()>windowHeight) {
				if (elTop > scrollTop && elTop < scrollTop+windowHeight) {
					
				} else {
					$("html,body").scrollTop(elTop-86);
				}
				
			} else {
				if (elTop > scrollTop && elBottom < scrollTop+windowHeight-86) {
					
				} else {
					if (scrollingDown) {
						$("html,body").scrollTop(elTop-$(window).height()+110+$el.outerHeight());						
					} else {
						$("html,body").scrollTop(elTop-86);						
					}
				}
				
			}


		} else {
			var documentTop = $scrollingDiv.scrollTop();
			var windowHeight = $scrollingDiv.height();
		
			var elTop = $el.position().top;

			if ($el.parent("ul").length) {
				elTop = elTop+$el.parent("ul").position().top;
			}

			var elHeight = $el.height()+25;

			var bottomVisible = documentTop+windowHeight;
			var bottomOfEl = elTop+elHeight;

			var topVisible = documentTop;
			if (bottomOfEl>bottomVisible) {
				$scrollingDiv.scrollTop(bottomOfEl-windowHeight);
			}
			if (elTop-10<topVisible) {
				$scrollingDiv.scrollTop($el.position().top-30);
			}
		}

	}
}
var securityJustChanged=false;

function setPaneItems ($items,$menus,$tools) {
	$menus.each(function(){
		$menu=$(this);
		$target = $(".target",$menu);

		var testValue = $menu.attr("data-test-value");
		$("a",$menu).removeClass("bpe_current").removeClass("bpe_some_current");

		if ($menu.attr("data-test-type")=="csv") {
			var firstItemValue = $items.first().attr(testValue).split(",");
			var allTheSame=true;
			$items.each(function(){
				if ($(this).attr(testValue)!=firstItemValue) {
					allTheSame=false;
				}
			});
			if (allTheSame) {
				$target.text("");
				var i = 0;
				var u = 0;
				while (i < firstItemValue.length) {
					$("a[data-item-value="+firstItemValue[i]+"]",$menu).addClass("bpe_current");
					if (!$("a[data-item-value="+firstItemValue[i]+"]",$menu).hasClass("empty") && $("a[data-item-value="+firstItemValue[i]+"]",$menu).attr("data-lang")!="" && $("a[data-item-value="+firstItemValue[i]+"]",$menu).length) {
						if (u!==0) {
						var sep=$target.text()+", ";
						} else {
							var sep ="";
						}
						$target.text(sep+$("a[data-item-value="+firstItemValue[i]+"]",$menu).attr("data-lang"));
						u++;
					}
					i++;
				};
				if (!$("a.allTickCandidate:not(.bpe_current)",$menu).length) {
					$("a[data-item-value=allTicked]",$menu).addClass("bpe_current");
				}

				if ($items.first().attr(testValue)=="") {
					$target.text($("a[data-item-value=]",$menu).attr("data-lang"));
				}
			} else {
				$items.each(function(){
					var some = $(this).attr(testValue).split(",");
					for (var i = 0; i < some.length; i++) {
						$("a[data-item-value="+some[i]+"]",$menu).addClass("bpe_some_current");
					};
				});

				$target.text("("+LangVars.Multiple_Selected+") ");
			}


		} else {
			var firstItemValue = $items.first().attr(testValue);
			var allTheSame=true;
			$items.each(function(){
				if ($(this).attr(testValue)!=firstItemValue) {
					allTheSame=false;
				}
			});
			if (allTheSame) {

				$target.text("");
				$("a[data-item-value="+firstItemValue+"],a[data-item-value-2="+firstItemValue+"],a[data-item-value-3="+firstItemValue+"],a[data-item-value-4="+firstItemValue+"],a[data-item-value-5="+firstItemValue+"]",$menu).each(function(){
					if ($target.text()!="") {
						$target.text($target.text()+", ");
					}
					if (!$(this).hasClass("dontIncludeInPreview")) {
						$target.text($target.text()+" "+$(this).attr("data-lang"));
					}

					if ($("ul",$(this).parent()).length&&$("ul",$(this).parent()).attr("data-test-value")!=undefined) {
						var $ul = $("ul",$(this).parent());
						var subsAllTheSame = true;
						var subsFirstItemValue = $items.first().attr($ul.attr("data-test-value"));

						$items.each(function(){
							if ($(this).attr($ul.attr("data-test-value"))!=subsFirstItemValue) {
								subsAllTheSame=false;
							}
						});
						if (subsAllTheSame) {
							$("a[data-item-value="+subsFirstItemValue+"]",$ul).addClass("bpe_current");
						} else {
							$items.each(function(){
								$("a[data-item-value="+$(this).attr($ul.attr("data-test-value"))+"]",$ul).addClass("bpe_some_current");
							});
						}
					}
				});

				$("a[data-item-value="+firstItemValue+"]",$menu).addClass("bpe_current");
				$("a[data-item-value-2="+firstItemValue+"]",$menu).addClass("bpe_current");
				$("a[data-item-value-3="+firstItemValue+"]",$menu).addClass("bpe_current");
				$("a[data-item-value-4="+firstItemValue+"]",$menu).addClass("bpe_current");
				$("a[data-item-value-5="+firstItemValue+"]",$menu).addClass("bpe_current");

			} else {
				$items.each(function(){
					$("a[data-item-value="+$(this).attr(testValue)+"]",$menu).addClass("bpe_some_current");
					$("a[data-item-value-2="+$(this).attr(testValue)+"]",$menu).addClass("bpe_some_current");
					$("a[data-item-value-3="+$(this).attr(testValue)+"]",$menu).addClass("bpe_some_current");
					$("a[data-item-value-4="+$(this).attr(testValue)+"]",$menu).addClass("bpe_some_current");
					$("a[data-item-value-5="+$(this).attr(testValue)+"]",$menu).addClass("bpe_some_current");
				});
				$target.text("("+LangVars.Multiple_Selected+")");
			}
		}
	});
	$(".paneToolTextItemUpdate,.buttonToolToUpdate",$tools).each(function(){
		$(this).removeClass("greyedOut");
		if (!$(this).hasClass("buttonToolToUpdate")) {
			$(this).prev().removeClass("greyedOut");
		}
		var ok = true;

		if ($(this).attr("data-valid-attr-test")!=undefined) {

			$(this).addClass("greyedOut");
			if (!$(this).hasClass("buttonToolToUpdate")) {
				$(this).text($(this).attr("data-if-disabled"));
				$(this).prev().addClass("greyedOut");
			}
			var validValues = $(this).attr("data-valid-test-values").split(",");
			var validTestAttr = $(this).attr("data-valid-attr-test");
			var allValid=true;
			$items.each(function(){
				var itemIsValid=false;
				for (var i = 0; i < validValues.length; i++) {
					if ($(this).attr(validTestAttr)==validValues[i]) {
						itemIsValid=true;
					}
				};
				if (!itemIsValid) {
					allValid=false;
				}
			});
			if (allValid) {
				$(this).removeClass("greyedOut");
				if (!$(this).hasClass("buttonToolToUpdate")) {
					$(this).prev().removeClass("greyedOut");
				}
			} else {
				var ok=false;
			}

		}
		if (ok) {
			if (typeof $(this).attr("data-test-value") != 'undefined') {

				var testValue = $(this).attr("data-test-value");

				var allTheSame=true;
				var firstItemValue = $items.first().attr(testValue);

				$items.each(function(){
					if ($(this).attr(testValue)!=firstItemValue) {
						allTheSame=false;
					}
				});
				if (allTheSame) {
					if (firstItemValue=="") {
						$(this).text($(this).attr("data-if-empty-val"));
					} else {
						$(this).text(firstItemValue);
					}

				} else {
					$(this).text("("+LangVars.Multiple_Selected+")");
				}
			}

		}


	});
	$(".paneToolToggleItem",$tools).each(function(){
		$(this).removeClass("bpe_current");
		$(this).removeClass("multiple");
		var ok = true;
		if ($(this).attr("data-valid-attr-test")!=undefined) {
			$(this).addClass("greyedOut");
			var validValues = $(this).attr("data-valid-test-values").split(",");
			var validTestAttr = $(this).attr("data-valid-attr-test");
			var allValid=true;
			$items.each(function(){
				var itemIsValid=false;
				for (var i = 0; i < validValues.length; i++) {
					if ($(this).attr(validTestAttr)==validValues[i]) {
						itemIsValid=true;
					}
				};
				if (!itemIsValid) {
					allValid=false;
				}
			});
			if (allValid) {
				$(this).removeClass("greyedOut");
			} else {
				var ok=false;
			}
		}
		if (ok) {
			var testValue = $(this).attr("data-test-value");
			var allTheSame=true;
			var firstItemValue = $items.first().attr(testValue);
			$items.each(function(){
				if ($(this).attr(testValue)!=firstItemValue) {
					allTheSame=false;
				}
			});
			if (allTheSame) {
				if (firstItemValue==$(this).attr("data-test-value-checked")) {
					$(this).addClass("bpe_current");
				}
			} else {
				$(this).addClass("multiple");
			}
		}
	});
}
function standardPaneTools (wrap,item,form,extra){
	if (!$("#"+wrap+" .paneTools").length) {
		return false;
	}
	if (extra==undefined) {
		extra="";
	}


	if ($("#"+wrap+" .listItemHighlight").length) {

		$("#"+wrap+" .listItemHighlight").css("width","auto");
		hide_header_menus();
		if ($("#dragBoundry").width()>500) {
			/*
			$("#"+wrap+" ."+item).each(function(){
				if (
				( ($(this).hasClass("hasSubs") && !$(this).hasClass("breadcrumbPage"))||$(this).hasClass("prodCatItem") )
				) {
					$(this).stop(false,true).animate({marginRight:"290px"},150);
					$("#"+wrap+" ."+form+"").stop(false,true).animate({marginRight:"250px"},150);
				} else {
					$(this).filter(":not(.withComments)").stop(false,true).animate({marginRight:"240px"},150);
					$(this).filter(".withComments").stop(false,true).animate({marginRight:"290px"},150);
				}
			});

			*/
		}
		if (!$("#"+wrap+" .paneTools").hasClass("visible")){
		//	hide_header_menus(true);
			if ($(window).width()<500) {
			$("#"+wrap+" .paneTools").stop(false,true).css("right","-300px").show().animate({right:"0px"},150,function(){
				$("#"+wrap+" .paneTools").addClass("visible")
			});
			}
			paneTools=true;

		};
	}
	if (wrap=="formInputsPane") {
		$(".editFieldOptions").hide();
		$(".editFieldRename").show();
	}
	if (wrap=="adminPages") {
		$("#viewAddSubpageText").show();
		$("#addSubpageText").hide();
		$(".withSubPagesOnly").removeClass("unavailable");
	}
	if (wrap=="productsPane"||wrap=="productOptionsPane") {
		$(".editProductOptions").hide();
		$(".editProductRename").show();
		$("#addVolumeDiscount,#addVolumeDiscountOptions").show();
		var discount1PriceFirst = $("#"+wrap+" .listItemHighlight:first").attr("data-discount-1-price");
		var discount1ThresholdFirst = $("#"+wrap+" .listItemHighlight:first").attr("data-discount-1-threshold");
		var discount2PriceFirst = $("#"+wrap+" .listItemHighlight:first").attr("data-discount-2-price");
		var discount2ThresholdFirst = $("#"+wrap+" .listItemHighlight:first").attr("data-discount-2-threshold");
		var discount1PriceFirstSame = true;
		var discount1ThresholdFirstSame = true;
		var discount2PriceFirstSame = true;
		var discount2ThresholdFirstSame = true;
		$("#"+wrap+" .listItemHighlight").each(function(){
			if ($(this).attr("data-discount-1-price")!=discount1PriceFirst) {
				discount1PriceFirstSame=false;
			}
			if ($(this).attr("data-discount-1-threshold")!=discount1ThresholdFirst) {
				discount1ThresholdFirstSame=false;
			}
			if ($(this).attr("data-discount-2-price")!=discount2PriceFirst) {
				discount2PriceFirstSame=false;
			}
			if ($(this).attr("data-discount-2-threshold")!=discount2ThresholdFirst) {
				discount2ThresholdFirstSame=false;
			}
		});
		if (discount1PriceFirstSame===true) {
			var discount1PriceValue = discount1PriceFirst;
		} else {
			var discount1PriceValue = LangVars.Multiple_Selected;
		}
		if (discount1ThresholdFirstSame===true) {
			var discount1ThresholdValue = discount1ThresholdFirst;
		} else {
			var discount1ThresholdValue = LangVars.Multiple_Selected;
		}
		if (discount2PriceFirstSame===true) {
			var discount2PriceValue = discount2PriceFirst;
		} else {
			var discount2PriceValue = LangVars.Multiple_Selected;
		}
		if (discount2ThresholdFirstSame===true) {
			var discount2ThresholdValue = discount2ThresholdFirst;
		} else {
			var discount2ThresholdValue = LangVars.Multiple_Selected;
		}
		if (discount1ThresholdValue!='0') {
			$("#hasVolumeDiscounts,#hasVolumeDiscountsOptions").show();
			$("#productVolumeDiscount1Wrap,#productOptionsVolumeDiscount1Wrap").show();
			$("#productVolumeDiscount1ThresholdVal,#productOptionsVolumeDiscount1ThresholdVal").text(discount1ThresholdValue);
			$("#addVolumeDiscount,#addVolumeDiscountOptions").hide();
			$("#addVolumeDiscount2,#addVolumeDiscount2Options").show();
		}
		if (discount2ThresholdValue!='0') {
			$("#hasVolumeDiscounts,#hasVolumeDiscountsOptions").show();
			$("#productVolumeDiscount2Wrap,#productOptionsVolumeDiscount2Wrap").show();
			$("#productVolumeDiscount2ThresholdVal,#productOptionsVolumeDiscount2ThresholdVal").text(discount2ThresholdValue);
			$("#addVolumeDiscount2,#addVolumeDiscount2Options").hide();
		}
	}
	if (wrap=="bookingProductsPane") {


		var $paneTools = $("#bookingProductsPane").find(".paneTools");
		$paneTools.find(".toolset-with-dependency").hide();
		$paneTools.find(".subHeaderLeftMenuItem").find("a.bpe_current").removeClass("bpe_current");
		$paneTools.find(".item-tool-properties-checkbox").removeClass("bpe_current multiple");
		$paneTools.find(".multiple-types-selected").show()

		function replaceStrings(plural,$this,$a) {
			var strings = $this.data("replace-label-string"+plural).split(",");
			for (var i = 0; i < strings.length; i++) {
				var $item = $paneTools.find("."+strings[i]);
				var lang = $a.data("lang"+plural).toLowerCase();
				$item.text($item.data("original-string").replace("{*}",lang));
			}
		}

		$paneTools.find(".item-tool-properties").each(function(){
			var testdata = $(this).data("test-data");
			var firstValue = $("#"+wrap+" .listItemHighlight:first").data(testdata);
			var allTheSame = true;
			var $a=false;
			$("#"+wrap+" .listItemHighlight").each(function(){
				if ($(this).data(testdata)!=firstValue) {
					allTheSame=false;
				}
			});
			if (allTheSame) {
				if ($(this).hasClass("item-tool-properties-menu")) {
					$a = $('li a[data-test-data-value="'+firstValue+'"]',$(this));
					$a.addClass("bpe_current");
					$(".target",$(this)).text($a.data("lang"));
					if (typeof $(this).data("replace-label-string")!='undefined') {
						replaceStrings("-plural",$(this),$a);
						replaceStrings("",$(this),$a);
					}
				}
				if ($(this).hasClass("item-tool-properties-checkbox")) {
					if (firstValue===1) {
						$(this).addClass("bpe_current");
						$a = $(this);
					}
				}
				if ($(this).hasClass("item-tool-properties-text")) {
					$(this).text(firstValue);
				}
				if ($a && typeof $a.data("dependents")!='undefined') {
					var dependents = $a.data("dependents").split(",");
					for (var i = 0; i < dependents.length; i++) {
						$paneTools.find("."+dependents[i]).show();
					}
				}

				if (testdata=="item-type") {
					$paneTools.find(".multiple-types-selected").hide();
				}
			} else {

				if ($(this).hasClass("item-tool-properties-menu")) {
					$(".target",$(this)).text("("+LangVars.Multiple_Selected+")");
					if (typeof $(this).data("replace-label-string")!='undefined') {
						$a = $('li a.default-lang-item',$(this));
						replaceStrings("-plural",$(this),$a);
						replaceStrings("",$(this),$a);
					}
				}
				if ($(this).hasClass("item-tool-properties-checkbox")) {
					$(this).addClass("multiple");
				}
				if ($(this).hasClass("item-tool-properties-text")) {
					$(this).text("("+LangVars.Multiple_Selected+")");
				}

			}
			if ( testdata=="item-type" && (!allTheSame || $("body").hasClass("selectingAll") )) {

			}

		});
	}
	
	$("#privsMenu").show();

	if ($("#"+wrap+" .listItemHighlight").length==1) {

		$("#"+wrap+" .paneTools .paneToolsPrimary:not(#createGalleryFromSelection,resetStaffPassword)").css("opacity","1").removeClass("unavailable");
		$("#"+wrap+" .paneTools .paneToolsOnlyOne").css("opacity","1").removeClass("unavailable");
		$("#"+wrap+" .paneTools .onlyWithoutOptions").css("opacity","1").removeClass("unavailable");
		$("#"+wrap+" .paneTools .paneToolsDelete").css("opacity","1").removeClass("unavailable");

		if (wrap=="adminPages") {
			if ($("#"+wrap+" .listItemHighlight").attr("data-page-redirect-to")=="yes") {
				$("#"+wrap+" .paneTools .paneToolsPrimary").css("opacity","0.3").addClass("unavailable");
			}
			if (!$("#"+wrap+" .listItemHighlight").hasClass("hasSubs")) {
				$("#viewAddSubpageText").hide();
				$(".withSubPagesOnly").addClass("unavailable");
				$("#addSubpageText").show();
			}
			if ($("#"+wrap+" .listItemHighlight.type_subSubSubLevel").length) {
				$(".addSubpagePT").css("opacity","0.3").addClass("unavailable");
			} else {
				$(".addSubpagePT").css("opacity","1").removeClass("unavailable");
			}
		}
		if (wrap=="formInputsPane") {
			if (!$("#"+wrap+" .listItemHighlight").hasClass("withOptions")) {
				$("#"+wrap+" .paneTools .paneToolsPrimary.onlyWithOptions").css("opacity","0.3").addClass("unavailable");

			}
		}
		if (wrap=="productsPane") {
			if (!$(".type_simple_multi,.type_gallery_multi,.type_form_multi","#"+wrap+" .listItemHighlight").length) {
				$("#"+wrap+" .paneTools .paneToolsPrimary.onlyWithOptions").css("opacity","0.3").addClass("unavailable");
			} else {
				$("#"+wrap+" .paneTools .onlyWithoutOptions").css("opacity","0.3").addClass("unavailable");
			}
		}
		if (wrap=="rightPaneStaff") {
			if ($("#"+wrap+" .listItemHighlight").data("master")) {
				$("#"+wrap+" .paneTools .paneToolsDelete").css("opacity","0.3").addClass("unavailable");
				$("#privsMenu").hide();
			}
		
		}
	} else {
		$("#"+wrap+" .paneTools .paneToolsPrimary:not(#addNewsletterCustomField,#createGalleryFromSelection)").css("opacity","0.3").addClass("unavailable");
		$("#"+wrap+" .paneTools .paneToolsOnlyOne").css("opacity","0.3").addClass("unavailable");

		if (wrap=="rightPaneStaff") {
			if ($("#"+wrap+" .listItemHighlight").data("master")) {
				$("#"+wrap+" .paneTools .paneToolsDelete").css("opacity","0.3").addClass("unavailable");
				$("#privsMenu").hide();
			}
		}

	}

	if (wrap!="bookingProductsPane") {
		setPaneItems($("#"+wrap+" .listItemHighlight"+extra),$("#"+wrap+" .paneTools .subHeaderLeftMenuItem"),$("#"+wrap+" .paneTools"));
	}
	$("#"+wrap+" .paneTools").lovelyScroll();
};
paneTools=false;
function focusCutCopyPaste () {
	if ($("body").attr("pane")=="editContent") {
		if (isMouseBased&&!isTouchBased) {
			$("#cutCopyPasteCapture").val("");
			$("#cutCopyPasteCapture").val(" ").focus();
		}
		var textItems = ".textareaWrapper.bpe_highlight";
		if ($(textItems+",.bpe_image.bpe_highlight,.CMS_Component_Obs.bpe_highlight").length) {
			if (isMouseBased&&!isTouchBased) {
				$("#cutCopyPasteCapture").val(" ").select();
			}
		}
	}
	if ($("body").attr("pane")=="mainMenuPages") {
		if (isMouseBased&&!isTouchBased) {
			$("#cutCopyPasteCapture").val("");
			$("#cutCopyPasteCapture").val(" ").focus();
		}
		if ($("#adminPages .listItemHighlight").length) {
			if (isMouseBased&&!isTouchBased) {
				$("#cutCopyPasteCapture").val(" ").select();
			}
		}
	}
}
function selectionTools () {

	$("#header").css("z-index","1");
	//hideDragInsert();
	$("iframe").blur();
	if (!$(".textareaWrapper textarea:focus").length) {
		focusCutCopyPaste();
	}
	$("#addVolumeDiscount2,#productVolumeDiscount1Wrap,#productVolumeDiscount2Wrap,#hasVolumeDiscounts,#addVolumeDiscount2Options,#productOptionsVolumeDiscount1Wrap,#productOptionsVolumeDiscount2Wrap,#hasVolumeDiscountsOptions,#editGalleryImagesButton,#galleryShowFromTagPaneTools").hide();
	if ($(".bpe_highlight,.listItemHighlight,.imageItemHighlight").length) {
		$(".paneTools").removeClass("disabled");
		$(".bpe_selection_tool").removeClass("greyedOut");
		$(".showIfMultiple,.showIfOne").hide();
		if ($(".bpe_highlight,.listItemHighlight,.imageItemHighlight").length===1) {
			$(".showIfOne").show();
		} else {
			$(".showIfMultiple").show();
		};

		if ($("body").attr("pane")=="galleries"&&!$("#rightPaneGalleryImages:visible").length) {
			if ($("#galleriesPane .galleryItem.listItemHighlight:not(.dynamic.galleryItem)").length) {
				if ($("#galleriesPane .galleryItem.listItemHighlight.dynamic").length===0) {				
					$("#editGalleryImagesButton").show();
				}
			}
			if ($("#galleriesPane .galleryItem.listItemHighlight.dynamic").length) {
				if ($("#galleriesPane .galleryItem.listItemHighlight:not(.dynamic.galleryItem)").length===0) {				
					$("#galleryShowFromTagPaneTools").show();
				}
			}
		}
		
		if ($("body").attr("pane")=="products" && !$("#rightPaneProductCategories:visible").length && !$("#rightPaneProductOptions:visible").length ) {
			standardPaneTools("productsPane","productItemMain","fakeAddFormItem");
		}
		if ($("body").attr("pane")=="bookingproducts") {
			standardPaneTools("bookingProductsPane","bookingProductItemMain","fakeAddFormItem");
		}
		if ($("body").attr("pane")=="images") {
			$("#imagesPane .paneTools .imagePreview").remove();
			standardPaneTools("imagesPane","imageItem","fakeAddFormItem");
			$("#createGalleryFromSelection").css("opacity","0.3").addClass("unavailable");
			if ($("#imagesPane .listItemHighlight").length==1) {
				$("#imagesPane .paneTools").append("<img src='"+$("#imagesPane .listItemHighlight").data("thumb")+"&d="+(new Date).getTime()+"' class='imagePreview' />");
			} 
			if ($("#imagesPane .listItemHighlight").length>1) {
				$("#createGalleryFromSelection").css("opacity","1").removeClass("unavailable");
			}
		}
		if ($("body").attr("pane")=="embedCodes") {
			standardPaneTools("embedCodesPane","responsiveListItem","fakeAddFormItem");
		}
		if ($("body").attr("pane")=="files") {
			standardPaneTools("filesPane","responsiveListItem","fakeAddFormItem");
		}
		if ($("body").attr("pane")=="videos") {

			standardPaneTools("videosPane","responsiveListItem","fakeAddFormItem");
			if ($("#videosPane .listItemHighlight").length===1) {
				selectedVidId=$("#videosPane .listItemHighlight").attr("playlist-id");
			}
		}
		if ($("body").attr("pane")=="products" && !$("#rightPaneProductCategories:visible").length && $("#rightPaneProductOptions:visible").length ) {
			standardPaneTools("productOptionsPane","responsiveListItem","fakeAddFormItem");
		}
		if ($("body").attr("pane")=="products" && $("#rightPaneProductCategories:visible").length && !$("#rightPaneProductOptions:visible").length ) {
			standardPaneTools("productCategoriesPane","responsiveListItem","fakeAddFormItem");
		}
		if ($("body").attr("pane")=="mainMenuPages"||$("body").attr("pane")=="nonMenuPages") {
			standardPaneTools("adminPages","responsiveListItem","responsiveListAddForm");
		}
		if ($("body").attr("pane")=="galleries"&&!$("#rightPaneGalleryImages:visible").length) {
			standardPaneTools("galleriesPane","responsiveListItem","fakeAddFormItem");
		}
		if ($("body").attr("pane")=="galleries"&&$("#rightPaneGalleryImages:visible").length) {
			$("#galleryImagesPane .paneTools .imagePreview").remove();
			standardPaneTools("galleryImagesPane","responsiveListItem","fakeAddFormItem");
			if ($("#galleryImagesPane .listItemHighlight").length==1) {
				$("#galleryImagesPane .paneTools").append("<img src='/images/galleries/"+$("#galleryImagesPane .listItemHighlight").attr("title")+"?width=190&d="+(new Date).getTime()+"' class='imagePreview' />");
			}
		}
		if ($("body").attr("pane")=="checkout") {
			standardPaneTools("checkoutPane","responsiveListItem","fakeAddFormItem");
		}
		if ($("body").attr("pane")=="snippets"&& !$("#rightPaneSnippetCategories:visible").length) {
			standardPaneTools("snippetsPane","responsiveListItem","fakeAddFormItem");
		}
		if ($("body").attr("pane")=="tables") {
			standardPaneTools("tablesPane","responsiveListItem","fakeAddFormItem");
		}
		if ($("body").attr("pane")=="snippets"&& $("#rightPaneSnippetCategories:visible").length) {
			standardPaneTools("snippetCategoriesPane","responsiveListItem","fakeAddFormItem");
		}
		if ($("body").attr("pane")=="calendars"&& !$("#rightPaneCalendarEvents:visible").length) {
			standardPaneTools("calendarsPane","responsiveListItem","fakeAddFormItem");
		}
		if ($("body").attr("pane")=="calendars"&& $("#rightPaneCalendarEvents:visible").length) {
			standardPaneTools("calendarEventsPane","responsiveListItem","fakeAddFormItem");
		}
		if ($("body").attr("pane")=="forms"&&!$("#rightPaneFormInputs:visible").length&&!$("#rightPaneFormInputOptions:visible").length) {
			standardPaneTools("formsPane","responsiveListItem","fakeAddFormItem");
		}
		if ($("body").attr("pane")=="forms"&&$("#rightPaneFormInputs:visible").length&&!$("#rightPaneFormInputOptions:visible").length) {
			standardPaneTools("formInputsPane","responsiveListItem","fakeAddFormItem");
		}
		if ($("body").attr("pane")=="forms"&&!$("#rightPaneFormInputs:visible").length&&$("#rightPaneFormInputOptions:visible").length) {
			standardPaneTools("formInputOptionsPane","responsiveListItem","fakeAddFormItem");
		}
		if ($("body").attr("pane")=="livechat") {
			standardPaneTools("livechatPane","responsiveListItem","fakeAddFormItem");
		}

		if ($("body").attr("pane")=="editContent") {

			var textItems = ".textareaWrapper.bpe_highlight";
//			$("#editText,#editImage").hide();
			$("#editText").show();
			$("#indentTools").hide();
			$("#editTextImage").addClass("unavailable").css("opacity","0.3");
			$("#components,#cores").hide();
//			$("#nonComponent").show();
			if ($(textItems+",.bpe_image.bpe_highlight,.CMS_Component_Obs.bpe_highlight").length) {

				if ($(textItems).length) {
					if ($(textItems).length==1 && $(".bpe_image.bpe_highlight").length===0) {
						$("#editText").show();
						$("#editTextImage").removeClass("unavailable").css("opacity","1");
					}
					$("#changeTextAlign a").removeClass("bpe_current");
					var firstTextAlignment = $(textItems).first().css("text-align");
					var allTextSameAlignment = true;
					$(textItems).each(function(){
						if ($(this).css("text-align")!=firstTextAlignment) {
							allTextSameAlignment=false;
						}
					});
					if (allTextSameAlignment) {
						$("#changeTextAlign a[rel="+firstTextAlignment+"]").addClass("bpe_current");
						$("#selectedTextAlignment").text($("#changeTextAlign a[rel="+firstTextAlignment+"]").attr("data-lang"));
					} else {
						$("#selectedTextAlignment").text("("+LangVars.Multiple_Selected+") ");
					}
					//
					var firstSelectedText = $(textItems).first().attr("data-el");
					var allSelectedTextTheSame = true;

					var firstSelectedClass="";
					var classes = options.block_classes.split(",");
					for (var i=0; i < classes.length; i++) {
						if ($(textItems).first().hasClass(classes[i])) {
							firstSelectedClass = classes[i];
						}
					};
					var allSelectedTextClassesTheSame = true;

					if (firstSelectedText=="li") {
						var firstSelectedTextParent=$(textItems).first().parent()[0].nodeName.toLowerCase()
						firstSelectedText=firstSelectedTextParent;
					}
					$(textItems).each(function(){
						if (this.nodeName.toLowerCase()=="li") {
							var itemParent=$(this).parent()[0].nodeName.toLowerCase()
							var test=itemParent;
						} else {
							var test = $(this).attr("data-el");
						}
						if (test!=firstSelectedText)  {
							allSelectedTextTheSame=false;
						}
						if (!$(this).hasClass(firstSelectedClass) && firstSelectedClass!="") {
							allSelectedTextClassesTheSame=false;
						}
						if (firstSelectedClass=="") {
							for (var i=0; i < classes.length; i++) {
								if ($(this).hasClass(classes[i])) {
									allSelectedTextClassesTheSame=false;
								}
							};
						}
					});
					$("#changeStyleP,#changeStyleH1,#changeStyleH2,#changeStyleH3,#changeStyleH4,#changeStyleUL,#changeStyleOL,#changeStylePre,#changeStyleTable").removeClass("bpe_current").removeClass("bpe_some_current");

					if (allSelectedTextTheSame) {
						if (firstSelectedText=="p") {
							$("#selectedTextFormat").text($("#changeStyleP").attr("data-lang")+" ");
							$("#changeStyleP").addClass("bpe_current");
						}
						if (firstSelectedText=="h1") {
							$("#selectedTextFormat").text($("#changeStyleH1").attr("data-lang")+" ");
							$("#changeStyleH1").addClass("bpe_current");
						}
						if (firstSelectedText=="h2") {
							$("#selectedTextFormat").text($("#changeStyleH2").attr("data-lang")+" ");
							$("#changeStyleH2").addClass("bpe_current");
						}
						if (firstSelectedText=="h3") {
							$("#selectedTextFormat").text($("#changeStyleH3").attr("data-lang")+" ");
							$("#changeStyleH3").addClass("bpe_current");
						}
						if (firstSelectedText=="h4") {
							$("#selectedTextFormat").text($("#changeStyleH4").attr("data-lang")+" ");
							$("#changeStyleH4").addClass("bpe_current");
						}
						if (firstSelectedText=="table") {
							$("#selectedTextFormat").text($("#changeStyleTable").attr("data-lang")+" ");
							$("#changeStyleTable").addClass("bpe_current");
						}
						function setIndentButtons() {
							var prevLevel = parseInt($(".bpe_highlight").prev().prev().attr("data-level"));
							var thisLevel = parseInt($(".bpe_highlight").attr("data-level"));
							if (prevLevel>=thisLevel && thisLevel<3) {
								$("#indentListItem").removeClass("faded");
							}
							if (thisLevel>1) {
								$("#removeIndentListItem").removeClass("faded");
							}
						}
						if (firstSelectedText=="ul") {
							$("#selectedTextFormat").text($("#changeStyleUL").attr("data-lang")+" ");
							$("#changeStyleUL").addClass("bpe_current");
							$("#indentTools").show();
							$("#indentListItem,#removeIndentListItem").addClass("faded");
							if ($(".bpe_highlight").length==1) {
								if ($(".bpe_highlight").prev().prev().attr("data-el")=="ul"||$(".bpe_highlight").prev().prev().attr("data-el")=="ol") {
									setIndentButtons();
								}
							}
						}
						if (firstSelectedText=="ol") {
							$("#selectedTextFormat").text($("#changeStyleOL").attr("data-lang")+" ");
							$("#changeStyleOL").addClass("bpe_current");
							$("#indentTools").show();
							$("#indentListItem,#removeIndentListItem").addClass("faded");
							if ($(".bpe_highlight").length==1) {
								if ($(".bpe_highlight").prev().prev().attr("data-el")=="ul"||$(".bpe_highlight").prev().prev().attr("data-el")=="ol") {
									setIndentButtons();
								}
							}

						}
						if (firstSelectedText=="pre") {
							$("#selectedTextFormat").text($("#changeStylePre").attr("data-lang")+" ");
							$("#changeStylePre").addClass("bpe_current");
						}
					} else {
						$("#selectedTextFormat").text("("+LangVars.Multiple_Selected+") ");
						if ($("p.bpe_highlight").length) {
							$("#changeStyleP").addClass("bpe_some_current");
						}
						if ($("h1.bpe_highlight").length) {
							$("#changeStyleH1").addClass("bpe_some_current");
						}
						if ($("h2.bpe_highlight").length) {
							$("#changeStyleH2").addClass("bpe_some_current");
						}
						if ($("h3.bpe_highlight").length) {
							$("#changeStyleH3").addClass("bpe_some_current");
						}
						if ($("h4.bpe_highlight").length) {
							$("#changeStyleH4").addClass("bpe_some_current");
						}
						if ($("li.bpe_highlight").length) {
							$("li.bpe_highlight").each(function(){
								if ($(this).parent()[0].tagName.toLowerCase()=="ul") {
									$("#changeStyleUL").addClass("bpe_some_current");
								}
								if ($(this).parent()[0].tagName.toLowerCase()=="ol") {
									$("#changeStyleOL").addClass("bpe_some_current");
								}
							});
						}
						if ($("pre.bpe_highlight").length) {
							$("#changeStyleP").addClass("bpe_some_current");
						}

					}
					$("#iconbarBlockClasses a").removeClass('bpe_current').removeClass('bpe_some_current');
					if (allSelectedTextClassesTheSame) {
						if (firstSelectedClass=="") {
							$("#selectedTextClass").text($("#iconbarBlockClasses a[rel=]").attr("data-lang")+" ");
							$("#iconbarBlockClasses a[rel=]").addClass('bpe_current');
						} else {

							var friendlyname = $("#iconbarBlockClasses a[rel="+firstSelectedClass+"] .friendlyname").text();
							$("#selectedTextClass").text(friendlyname+" ");
							$("#iconbarBlockClasses a[rel="+firstSelectedClass+"]").addClass('bpe_current');
						}

					} else {
						$("p.bpe_highlight,h1.bpe_highlight,h2.bpe_highlight,h3.bpe_highlight,h4.bpe_highlight,li.bpe_highlight,pre.bpe_highlight").each(function(){
							var noClasses=true;
							for (var i=0; i < classes.length; i++) {
								if ($(this).hasClass(classes[i])) {
									noClasses=false;
									$("#iconbarBlockClasses a[rel="+classes[i]+"]").addClass('bpe_some_current');
								}
							};
							if (noClasses===true) {
								$("#iconbarBlockClasses a[rel=]").addClass('bpe_some_current');
							}
						});
						$("#selectedTextClass").text("("+LangVars.Multiple_Selected+") ");
					}
				} else {
					$("#selectedTextFormat").text(LangVars.None_Selected+" ");
					$("#selectedTextClass").text(LangVars.None_Selected+" ");
					$("#selectedTextAlignment").text(LangVars.None_Selected+" ");
				}
				if ($(".bpe_image.bpe_highlight:not(.bpe_image.bpe_video.bpe_highlight)").length) {
					if ($(textItems).length===0 && $(".bpe_image.bpe_highlight").length==1) {
						$("#editImage").show();
						$("#editText").hide();
						$("#editTextImage").removeClass("unavailable").css("opacity","1");
					}

					var firstSelectedClass="";
					var classes = options.img_classes.split(",");
					for (var i=0; i < classes.length; i++) {
						if ($(".bpe_image.bpe_highlight").first().hasClass(classes[i])) {
							firstSelectedClass = classes[i];
						}
					};
					var allSelectedImageClassesTheSame = true;
					$(".bpe_image.bpe_highlight").each(function(){
						if (!$(this).hasClass(firstSelectedClass) && firstSelectedClass!="") {
							allSelectedImageClassesTheSame=false;
						}
						if (firstSelectedClass=="") {
							for (var i=0; i < classes.length; i++) {
								if ($(this).hasClass(classes[i])) {
									allSelectedImageClassesTheSame=false;
								}
							};
						}
					});
					$("#iconbarImageClasses a").removeClass("bpe_current").removeClass("bpe_some_current");
					if (allSelectedImageClassesTheSame) {
						if (firstSelectedClass=="") {

							$("#selectedImageClass").text($("#iconbarImageClasses a[rel=]").attr("data-lang")+" ");
							$("#iconbarImageClasses a[rel=]").addClass("bpe_current");
						} else {
							$("#iconbarImageClasses a[rel="+firstSelectedClass+"]").addClass("bpe_current");
							var friendlyname = $("#iconbarImageClasses a[rel="+firstSelectedClass+"] .friendlyname").text();
							$("#selectedImageClass").text(friendlyname+" ");
						}
					} else {

						$(".bpe_image.bpe_highlight").each(function(){
							var noClasses=true;
							for (var i=0; i < classes.length; i++) {
								if ($(this).hasClass(classes[i])) {
									noClasses=false;
									$("#iconbarImageClasses a[rel="+classes[i]+"]").addClass('bpe_some_current');
								}
							};
							if (noClasses===true) {
								$("#iconbarImageClasses a[rel=]").addClass('bpe_some_current');
							}
						});
						$("#selectedImageClass").text("("+LangVars.Multiple_Selected+") ");
					}

					var firstSelectedAlignmnet="";
					var classes = ["Left_Image","Right_Image","Centered"];
					for (var i=0; i < classes.length; i++) {
						if ($(".bpe_image.bpe_highlight").first().hasClass(classes[i])) {
							firstSelectedAlignmnet = classes[i];
						}
					};
					var allSelectedImageAlignmentTheSame = true;
					$(".bpe_image.bpe_highlight").each(function(){
						if (!$(this).hasClass(firstSelectedAlignmnet) && firstSelectedAlignmnet!="") {
							allSelectedImageAlignmentTheSame=false;
						}
						if (firstSelectedAlignmnet=="") {
							for (var i=0; i < classes.length; i++) {
								if ($(this).hasClass(classes[i])) {
									allSelectedImageAlignmentTheSame=false;
								}
							};
						}
					});
					$("#iconbarImagePrimary a").removeClass("bpe_current").removeClass("bpe_some_current");
					if (allSelectedImageAlignmentTheSame) {
						if (firstSelectedAlignmnet=="") {
							$("#selectedImageAlignment").text($("#iconbarImagePrimary a[rel=Image_Default]").attr("data-lang")+" ");
							$("#iconbarImagePrimary a[rel=Image_Default]").addClass("bpe_current");
						} else {
							$("#selectedImageAlignment").text($("#iconbarImagePrimary a[rel="+firstSelectedAlignmnet+"]").attr("data-lang")+" ");
							$("#iconbarImagePrimary a[rel="+firstSelectedAlignmnet+"]").addClass("bpe_current");
						}
					} else {
						$(".bpe_image.bpe_highlight").each(function(){
							var noClasses=true;
							for (var i=0; i < classes.length; i++) {
								if ($(this).hasClass(classes[i])) {
									noClasses=false;
									$("#iconbarImagePrimary a[rel="+classes[i]+"]").addClass('bpe_some_current');
								}
							};
							if (noClasses===true) {
								$("#iconbarImagePrimary a[rel=Image_Default]").addClass('bpe_some_current');
							}
						});
						$("#selectedImageAlignment").text("("+LangVars.Multiple_Selected+") ");
					}

					var firstSelectedSize="";
					var sizes = new Array();
					$("#changeImageSize li").each(function(){
						sizes.push($("a",$(this)).attr("string"));
					})

					var size= $(".bpe_image.bpe_highlight:first img").attr("src").split("?");
					size=size[1];
					firstSelectedSize=size;


					var allSelectedImageSizesTheSame = true;
					$(".bpe_image.bpe_highlight").each(function(){
						var size= $("img",$(this)).attr("src").split("?");
						size=size[1];

						if (size!=firstSelectedSize && size!=firstSelectedSize+"&" && firstSelectedSize!="") {
							allSelectedImageSizesTheSame=false;
						}
						if (firstSelectedSize=="") {
							for (var i=0; i < sizes.length; i++) {
								if ((size==sizes[i] || size==sizes[i]+"&") && size!="") {
									allSelectedImageSizesTheSame=false;
								}
							};
						}
					});

					$("#changeImageSize a").removeClass("bpe_current").removeClass("bpe_some_current");
					if (allSelectedImageSizesTheSame) {

						if (firstSelectedSize=="") {

							$("#selectedImageSize").text($("#changeImageSize a[string=]").attr("data-lang")+" ");
							$("#changeImageSize a[string=]").addClass("bpe_current")
						} else {
							$("#changeImageSize a").each(function(){
								if ($(this).attr("string")==firstSelectedSize||$(this).attr("string")+"&"==firstSelectedSize) {
									$("#selectedImageSize").text($(this).attr("data-lang")+" ");
									$(this).addClass("bpe_current")
								}
							});
						}
					} else {

						$("#selectedImageSize").text("("+LangVars.Multiple_Selected+") ");
						$(".bpe_image.bpe_highlight").each(function(){
							var original=true;
							var size= $("img",$(this)).attr("src").split("?");
							size=size[1];
							for (var i=0; i < sizes.length; i++) {
								if (size == sizes[i] || size == sizes[i]+"&") {
									original=false;
									$("#changeImageSize a").each(function(){
										if ($(this).attr("string")==size||$(this).attr("string")+"&"==size) {
											$(this).addClass("bpe_some_current")
										}
									});
								}
							};
							if (original===true) {
								$("#changeImageSize a[string=]").addClass("bpe_some_current")
							}
						});
					}



				} else {


					$("#selectedImageAlignment").text(LangVars.None_Selected+" ");
					$("#selectedImageClass").text(LangVars.None_Selected+" ");
					$("#selectedImageSize").text(LangVars.None_Selected+" ");
				}

				if ($(".CMS_Component_Obs.bpe_highlight").length && $(textItems+",.bpe_image.bpe_highlight:not(.bpe_image.bpe_video.bpe_highlight)").length==0) {
					var comps=false;
					$(".bpe_highlight").each(function(){
						if ($(this).attr("class").match(/ComponentGallery/g)
						||$(this).attr("class").match(/ComponentMailingList/g)
						||$(this).attr("class").match(/ComponentForm/g)
						||$(this).attr("class").match(/ComponentProduct/g)
						||$(this).attr("class").match(/ComponentCalendar/g)
						||$(this).attr("class").match(/ComponentSnippet/g)
						||$(this).attr("class").match(/ComponentEmbed/g)
						) {
							comps=true;
						}
					});

					if (comps) {
						//$("#components").show();
						//$("#nonComponent,#cores").hide();
					} else {
						//$("#cores").show();
						//$("#nonComponent,#components").hide();
					}
				}

				$("#stylesMenuImage,#stylesMenuText").addClass("faded");
				if ($(".bpe_highlight.bpe_image:not(.bpe_video.bpe_image.bpe_highlight)").length) {
					$("#stylesMenuImage").removeClass("faded");
				}
				if ($(".textareaWrapper.bpe_highlight").length) {
					$("#stylesMenuText").removeClass("faded");
				}
				if (!$("#rightPane .paneTools").hasClass("visible")){
					hide_header_menus(true);
					//$(".itemTag").stop(true,true).animate({right:"+=230px"},150);
//					$(".Right_Image img").stop(true,true).animate({marginRight:"+=230px"},150);
					if ($(window).width()<500) {
						paneTools=true;
						$("#rightPane .paneTools").stop(true,true).addClass("visible").css("right","-300px").show().animate({right:"0px"},150);
					}
//					$("#contentWrapper .paneTools").stop(true,true).addClass("visible").css("right","-300px").show().animate({right:"0px"},150);


				}
				$("#rightPane .paneTools").lovelyScroll();

			} else {
				hidePaneTools();
			}


		}
		if ($("body").attr("pane")=="newsletter"&&!$("#rightPaneNewsletterSubscribers:visible").length&&$("#rightPaneSubscriberCategories:visible").length) {
			standardPaneTools("rightPaneSubscriberCategories","responsiveListItem","fakeAddFormItem");

		}
		if ($("body").attr("pane")=="newsletter"&&$("#rightPaneNewsletterSubscribers:visible").length&&!$("#rightPaneSubscriberCategories:visible").length) {
			standardPaneTools("rightPaneNewsletterSubscribers","responsiveListItem","fakeAddFormItem");

		}
		if ($("body").attr("pane")=="newsletter"&&!$("#rightPaneNewsletterSubscribers:visible").length&&!$("#rightPaneSubscriberCategories:visible").length) {
			standardPaneTools("rightPaneNewsletter","responsiveListItem","responsiveListAddForm");
		}
		if ($("body").attr("pane")=="blog"&&!$("#rightPaneBlogAuthors:visible").length&&!$("#rightPaneBlogCategories:visible").length&&!$("#rightPaneBlogComments:visible").length) {
			standardPaneTools("rightPaneBlog","responsiveListItem","fakeAddFormItem",".editBlogBar");

		}
		if ($("body").attr("pane")=="blog"&&!$("#rightPaneBlogAuthors:visible").length&&!$("#rightPaneBlogCategories:visible").length&&$("#rightPaneBlogComments:visible").length) {
			standardPaneTools("rightPaneBlogComments","responsiveListItem","fakeAddFormItem",".blogComment");
		}
		if ($("body").attr("pane")=="blog"&&!$("#rightPaneBlogAuthors:visible").length&&$("#rightPaneBlogCategories:visible").length&&!$("#rightPaneBlogComments:visible").length) {
			standardPaneTools("rightPaneBlogCategories","responsiveListItem","fakeAddFormItem");
		}
		if ($("body").attr("pane")=="blog"&&$("#rightPaneBlogAuthors:visible").length&&!$("#rightPaneBlogCategories:visible").length&&!$("#rightPaneBlogComments:visible").length) {
				standardPaneTools("rightPaneBlogAuthors","responsiveListItem","fakeAddFormItem");
		}
		if ($("body").attr("pane")=="staff" && !$("#rightPanePermissionGroups:visible").length) {
			standardPaneTools("rightPaneStaff","responsiveListItem","fakeAddFormItem");
		}
		if ($("body").attr("pane")=="staff" && $("#rightPanePermissionGroups:visible").length) {
			standardPaneTools("rightPanePermissionGroups","responsiveListItem","fakeAddFormItem");

		}

	} else {
		$("#selectedTextFormat").text(LangVars.None_Selected+" ");
		$("#selectedTextClass").text(LangVars.None_Selected+" ");
		$("#selectedTextAlignment").text(LangVars.None_Selected+" ");
		$("#selectedImageAlignment").text(LangVars.None_Selected+" ");
		$("#selectedImageClass").text(LangVars.None_Selected+" ");
		$("#selectedImageSize").text(LangVars.None_Selected+" ");

		$("#indentTools").hide();
		hidePaneTools();
		$(".previewImage").remove();
		$("#stylesMenuImage,#stylesMenuText").removeClass("faded");
		$(".bpe_selection_tool").addClass("greyedOut");

		$("#editText,#editImage").hide();
		$("#editText").show();
		$("#editTextImage").addClass("unavailable").css("opacity","0.3");
		$("#components,#cores").hide();
		$("#nonComponent").show();

	}
	if ($("p.bpe_highlight,h1.bpe_highlight,h2.bpe_highlight,h3.bpe_highlight,h4.bpe_highlight,h5.bpe_highlight,pre.bpe_highlight,li.bpe_highlight,.bpe_table.bpe_highlight,.bpe_image.bpe_highlight").length) {
		$("#iconbarStyles").removeClass("greyedOut");
	} else {
		$("#iconbarStyles").addClass("greyedOut");
	}

	if ($("#adminPages .movePageDestinaiton").length) {
		var movePageDest = $("#adminPages .movePageDestinaiton").attr("id");
		movePageDest = movePageDest.split("|");
		if (movePageDest[0]!="") {
			$("#iconbarLanguagePages").addClass("greyedOut");
		}
	}
}
function changeStyleP () {
	if ($(".bpe_highlight").length) {
		if (!$(".bpe_highlight").parent().parents("ul,ol").length) {
			$("#bpe_area").css("height",$("#bpe_area").height()+"px");

			$(".bpe_highlight").each(function(){
				var parent = this.parentNode.tagName.toLowerCase();

				/*if (
					$(this).attr("data-el")=="p"
					|| $(this).attr("data-el")=="h1"
					|| $(this).attr("data-el")=="h2"
					|| $(this).attr("data-el")=="h3"
					|| $(this).attr("data-el")=="h4"
					|| $(this).attr("data-el")=="li"
					|| $(this).attr("data-el")=="pre"
				) {*/
					changeEl($(this),this.tagName.toLowerCase(),"p",false,parent);
					//}
			});

			//$.fn.bpeditor.clean(true);
			autosave(true);
			$("#bpe_area").css("height","auto");

			$(".bpe_toggler").css("display","none");
		}
	}
}
function changeStyleH (level) {
	if ($(".bpe_highlight").length) {
		if (!$(".bpe_highlight").parent().parents("ul,ol").length) {
			$("#bpe_area").css("height",$("#bpe_area").height()+"px");

			$(".bpe_highlight").each(function(){
				var parent = this.parentNode.tagName.toLowerCase();

				if (
					$(this).attr("data-el")=="ul"
				) {
					if (level=="cycle") {
						changeEl($(this),"ul","h1",false,parent);
					} else {
						changeEl($(this),"ul",level,false,parent);
					}
				} else
				if (
					$(this).attr("data-el")=="ol"
				) {
					if (level=="cycle") {
						changeEl($(this),"ol","h1",false,parent);
					} else {
						changeEl($(this),"ol",level,false,parent);
					}
				}else
				if (
					$(this).attr("data-el")=="pre"
				) {
					if (level=="cycle") {
						changeEl($(this),"pre","h1",false,parent);
					} else {
						changeEl($(this),"pre",level,false,parent);
					}
				}else
				if (
					$(this).attr("data-el")=="table"
				) {
					if (level=="cycle") {
						changeEl($(this),"table","h1",false,parent);
					} else {
						changeEl($(this),"tavke",level,false,parent);
					}
				}else
				if (
					$(this).attr("data-el")=="p"
				) {
					if (level=="cycle") {
						changeEl($(this),"p","h1",false,parent);
					} else {
						changeEl($(this),"p",level,false,parent);
					}

				} else if (
					$(this).attr("data-el")=="h1"
				) {
					if (level=="cycle") {
						changeEl($(this),"h1","h2",false,parent);
					} else {
						changeEl($(this),"h1",level,false,parent);
					}
				} else if (
					$(this).attr("data-el")=="h2"
				) {
					if (level=="cycle") {
						changeEl($(this),"h2","h3",false,parent);
					} else {
						changeEl($(this),"h2",level,false,parent);
					}
				} else if (
					$(this).attr("data-el")=="h3"
				) {
					if (level=="cycle") {
						changeEl($(this),"h3","h4",false,parent);
					} else {
						changeEl($(this),"h3",level,false,parent);
					}
				} else if (
					$(this).attr("data-el")=="h4"
				) {
					if (level=="cycle") {
						changeEl($(this),"h4","h1",false,parent);
					} else {
						changeEl($(this),"h4",level,false,parent);
					}
				}
			});
//			$.fn.bpeditor.clean(true);
			autosave(true);
			$("#bpe_area").css("height","auto");
			$(".bpe_toggler").css("display","none");
		}

	}
}
function changeStyleUL () {
	if ($(".bpe_highlight").length) {

			$("#bpe_area").css("height",$("#bpe_area").height()+"px");

			$(".bpe_highlight").each(function(){
				var parent = this.parentNode.tagName.toLowerCase();

				/*if (
					$(this).attr("data-el")=="p"
					|| $(this).attr("data-el")=="h1"
					|| $(this).attr("data-el")=="h2"
					|| $(this).attr("data-el")=="h3"
					|| $(this).attr("data-el")=="h4"
					|| $(this).attr("data-el")=="li"
					|| $(this).attr("data-el")=="pre"
				) {*/
					changeEl($(this),this.tagName.toLowerCase(),"ul",false,parent);
					//}
			});

			//$.fn.bpeditor.clean(true);
			autosave(true);
			$("#bpe_area").css("height","auto");

			$(".bpe_toggler").css("display","none");

	}
}
function changeStyleOL () {
	if ($(".bpe_highlight").length) {

			$("#bpe_area").css("height",$("#bpe_area").height()+"px");

			$(".bpe_highlight").each(function(){
				var parent = this.parentNode.tagName.toLowerCase();

				/*if (
					$(this).attr("data-el")=="p"
					|| $(this).attr("data-el")=="h1"
					|| $(this).attr("data-el")=="h2"
					|| $(this).attr("data-el")=="h3"
					|| $(this).attr("data-el")=="h4"
					|| $(this).attr("data-el")=="li"
					|| $(this).attr("data-el")=="pre"
				) {*/
					changeEl($(this),this.tagName.toLowerCase(),"ol",false,parent);
					//}
			});

			//$.fn.bpeditor.clean(true);
			autosave(true);
			$("#bpe_area").css("height","auto");

			$(".bpe_toggler").css("display","none");

	}
}
function changeStylePre () {
	if ($(".bpe_highlight").length) {

		if (!$(".bpe_highlight").parent().parents("ul,ol").length) {
			$("#bpe_area").css("height",$("#bpe_area").height()+"px");

			$(".bpe_highlight").each(function(){
				var parent = this.parentNode.tagName.toLowerCase();

				if (
					$(this).attr("data-el")=="p"
					|| $(this).attr("data-el")=="h1"
					|| $(this).attr("data-el")=="h2"
					|| $(this).attr("data-el")=="h3"
					|| $(this).attr("data-el")=="h4"
					|| $(this).attr("data-el")=="ul"
					|| $(this).attr("data-el")=="ol"
					|| $(this).attr("data-el")=="pre"
				) {
					changeEl($(this),this.tagName.toLowerCase(),"pre",false,parent);
				}
			});

			//$.fn.bpeditor.clean(true);
			autosave();
			$("#bpe_area").css("height","auto");

			$(".bpe_toggler").css("display","none");
		}
	}
}
function changeStyleTable() {
	if ($(".bpe_highlight").length) {

		if (!$(".bpe_highlight").parent().parents("ul,ol").length) {
			$("#bpe_area").css("height",$("#bpe_area").height()+"px");

			$(".bpe_highlight").each(function(){

					changeEl($(this),this.tagName.toLowerCase(),"table",false,parent);
					$(this).addClass("changed");
			});

			//$.fn.bpeditor.clean(true);
			autosave();
			$("#bpe_area").css("height","auto");

			$(".bpe_toggler").css("display","none");
		}
	}
}
function changeTextAlignment (style) {
	if ($(".bpe_highlight").length) {
		$(".bpe_highlight").each(function(){
			$(this).css("text-align",style);
		});
		selectionTools();
		autosave(true);
//		$.fn.bpeditor.clean(true);
	}
}
function changeAdvancedStyle (value,blockOrImg) {
	if ($("div.textareaWrapper.bpe_highlight,.bpe_image.bpe_highlight").length) {
		$("div.textareaWrapper.bpe_highlight,.bpe_image.bpe_highlight").each(function(){
			$("#bpe_area").css("height",$("#bpe_area").height()+"px");

			var parent = this.parentNode.tagName.toLowerCase();
			if (
				this.tagName.toLowerCase()!="ul"
				&& this.tagName.toLowerCase()!="ol"
				&& !$(this).hasClass("CMS_Component_Obs")
				&& !$(this).hasClass("bpe_image")
			) {
				var classes = options.block_classes.split(",");

			}
			if ($(this).hasClass("bpe_image")) {
				var classes = options.img_classes.split(",");
			}

			var toRemove = false;
			var toAdd = false;
			if (value=="cms_cycle_***") {
				for (var i=0; i < classes.length; i++) {
					if ( $(this).hasClass(classes[i]) ) {
						toRemove = classes[i];
						if (i+1<classes.length) {
							toAdd = classes[i+1]
						}
					}
				};
			} else {
				for (var i=0; i < classes.length; i++) {
					if ( $(this).hasClass(classes[i]) ) {
						toRemove = classes[i];
					}
				};
				if (value=="Image_Default" || value=="Left_Image" || value=="Right_Image" || value=="Centered") {
					toRemove=false;
					var toRemoves = ["Left_Image","Right_Image","Centered"];
					for (var i=0; i < toRemoves.length; i++) {
						if ( $(this).hasClass(toRemoves[i]) ) {
							toRemove = toRemoves[i];
						}
					};
				}
				toAdd=value;
			}
			var okcontinue = true;
			if (blockOrImg=="block"&&$(this).hasClass("bpe_image")) {
				okcontinue=false;
			}
			if (blockOrImg=="image"&&!$(this).hasClass("bpe_image")) {
				okcontinue=false;
			}
			if (okcontinue) {
				if (toRemove==false) {

					if (value=="Left_Image" || value=="Right_Image" || value=="Centered") {
						$(this).addClass(value);
					} else {
						if (value!="Image_Default") {
							if (toAdd!="") {
								$(this).addClass(toAdd);
								$(".textAreaClassLabel,.itemTag",$(this)).remove();
								$("img",$(this)).after('<span class="itemTag itemTagClass" title='+toAdd.replace(/_/g," ")+'>'+toAdd.replace(/_/g," ")+'</span>');
								$(".dragTextArea",$(this)).before('<div class="textAreaClassLabel" title='+toAdd.replace(/_/g," ")+'>'+toAdd.replace(/_/g," ")+'</div>');
							} else {
								$(this).addClass(classes[0]);
								$("img",$(this)).after('<span class="itemTag itemTagClass" title='+classes[0].replace(/_/g," ")+'>'+classes[0].replace(/_/g," ")+'</span>');
								$(".dragTextArea",$(this)).before('<div class="textAreaClassLabel" title='+classes[0].replace(/_/g," ")+'>'+classes[0].replace(/_/g," ")+'</div>');
							}

						}
					}
				} else {
					if (toAdd!=false) {
						$(this).removeClass(toRemove);
						if (toAdd!="Image_Default") {
							$(this).addClass(toAdd);
							$(".textAreaClassLabel,.itemTag",$(this)).html(toAdd.replace(/_/g," ")).attr("title",toAdd.replace(/_/g," "));
						}
					} else {

						$(this).removeClass(toRemove);
						$(".textAreaClassLabel,.itemTag",$(this)).remove();
					}
				}
			}



//			$.fn.bpeditor.clean(true);
			selectionTools();
			autosave(true);
			$("#bpe_area").css("height","auto");

			$(".bpe_toggler").css("display","none");
		});
	}
}
function assignBookingCaledarKeys() {
	$(document).unbind("keydown");
	$(document).unbind("keyup");
	$(document).unbind("keypress");
	assignSelectionKeys();
	$(document).keydown(function (e) {
		if (e.keyCode==27) { // esc
			$(".availabilityHighlight,.availabilityDragASealed,availabilityDragBSealed").removeClass("availabilityHighlight availabilityDragASealed availabilityDragBSealed");
			selectAvailabilityDays();
		}
	});
}
function assignSelectionKeys () {
	$(document).keydown(function(e) {
	    if (/*e.metaKey || e.ctrlKey ||*/ e.altKey) {
			modDown = true;

		}
	    if (e.metaKey || e.ctrlKey) {
			metaDown = true;
			if (isMouseBased&&!$("input:focus,textarea:focus").length&&!chatting) {
				isTouchBased=false;
				focusCutCopyPaste();
			}
		}
		if (e.ctrlKey) {
			ctrlDown=true;
		}
		if (e.shiftKey) {
			shiftDown = true;
		}
    }).keyup(function(e) {
	    if (/*!e.metaKey || !e.ctrlKey || */!e.altKey) {
			modDown = false;
		}
	    if (!e.metaKey && !e.ctrlKey) {
			metaDown = false;
		}
		if (!e.ctrlKey) {
			ctrlDown=false;
		}
		if (!e.shiftKey) {
			shiftDown = false;
		}
    });
	$(document).keydown(function (e) {

		if (e.keyCode==27) { // esc
			$(".bpe_toggler").css("display","none")
			$(".bpe_highlight").each(function(){
				if (!$(this).hasClass("stayhighlighted")) {
					$(this).removeClass("bpe_highlight");
				}

			});
			$(".multi_highlight").removeClass("multi_highlight");
			$(".listItemHighlight").removeClass("listItemHighlight");
			$(".imageItemHighlight").removeClass("imageItemHighlight");
			$("body").removeClass("selectingAll");
			selectionTools();
		}
		if (e.keyCode==65) { // a
			if (metaDown) {
				$("body").addClass("selectingAll");
				if ($("body").attr("pane")=="editContent") {
					$("div.CMS_Component_Obs,.bpe_image",$("#bpe_area")).filter(":visible").addClass("bpe_highlight");
					$(".textareaWrapper",$("#bpe_area")).filter(":visible").addClass("bpe_highlight multi_highlight");
				}

				if ($("body").attr("pane")=="mainMenuPages"||$("body").attr("pane")=="nonMenuPages") {
					if ($("#adminPages #mainMenuPagesMain").css("display")=="block") {
						$("#adminPages #mainMenuPagesMain .responsiveListItem:not(.breadcrumbPage):not(.notokperms)").addClass("listItemHighlight");
					}
					if ($("#adminPages #nonLinkingPagesMain").css("display")=="block") {
						$("#adminPages #nonLinkingPagesMain .responsiveListItem:not(.notokperms)").addClass("listItemHighlight");
					}
				}
				if ($("body").attr("pane")=="images"&&!$("#rightPaneImagesCategories:visible").length) {
					$(".responsiveListItem",$("#rightPaneImages")).addClass("listItemHighlight");
				}
				if ($("body").attr("pane")=="images"&&$("#rightPaneImagesCategories:visible").length) {
					$(".responsiveListItem",$("#rightPaneImagesCategories")).addClass("listItemHighlight");
				}
				if ($("body").attr("pane")=="videos") {
					$(".responsiveListItem",$("#rightPaneVideos")).addClass("listItemHighlight");
				}
				if ($("body").attr("pane")=="galleries"&&!$("#rightPaneGalleryImages:visible").length) {
					$(".galleryItem",$("#rightPaneGalleries")).addClass("listItemHighlight");
				}
				if ($("body").attr("pane")=="galleries"&&$("#rightPaneGalleryImages:visible").length) {
					$(".responsiveListItem",$("#rightPaneGalleryImages")).addClass("listItemHighlight");
				}
				if ($("body").attr("pane")=="forms"&&!$("#rightPaneFormInputs:visible").length&&!$("#rightPaneFormInputOptions:visible").length) {
					$(".formItem",$("#rightPaneForms")).addClass("listItemHighlight");
				}
				if ($("body").attr("pane")=="forms"&&$("#rightPaneFormInputs:visible").length) {
					$(".formInputItem",$("#rightPaneFormInputs")).addClass("listItemHighlight");
				}
				if ($("body").attr("pane")=="forms"&&$("#rightPaneFormInputOptions:visible").length) {
					$(".responsiveListItem",$("#rightPaneFormInputOptions")).addClass("listItemHighlight");
				}
				if ($("body").attr("pane")=="products"&&!$("#rightPaneProductOptions:visible").length&&!$("#rightPaneProductCategories:visible").length) {
					$(".productItemMain",$("#rightPaneProducts")).addClass("listItemHighlight");
				}
				if ($("body").attr("pane")=="products"&&$("#rightPaneProductOptions:visible").length&&!$("#rightPaneProductCategories:visible").length) {
					$(".responsiveListItem",$("#rightPaneProductOptions")).addClass("listItemHighlight");
				}
				if ($("body").attr("pane")=="products"&&$("#rightPaneProductCategories:visible").length&&!$("#rightPaneProductOptions:visible").length) {
					$(".responsiveListItem",$("#rightPaneProductCategories")).addClass("listItemHighlight");
				}
				if ($("body").attr("pane")=="bookingproducts") {
					$(".responsiveListItem",$("#rightPaneBookingProducts")).addClass("listItemHighlight");
				}
				if ($("body").attr("pane")=="calendars"&&!$("#rightPaneCalendarEvents:visible").length) {
					$(".calendarItem",$("#rightPaneCalendars")).addClass("listItemHighlight");
				}
				if ($("body").attr("pane")=="calendars"&&$("#rightPaneCalendarEvents:visible").length) {
					$(".eventItem",$("#rightPaneCalendarEvents")).addClass("listItemHighlight");
				}
				if ($("body").attr("pane")=="calendars"&&$("#rightPaneEventsGroups:visible").length) {
					$(".eventGroupItem",$("#rightPaneEventsGroups")).addClass("listItemHighlight");
				}
				if ($("body").attr("pane")=="snippets"&&!$("#rightPaneSnippetCategories:visible").length) {
					$(".snippetItem",$("#rightPaneSnippets")).addClass("listItemHighlight");
				}
				if ($("body").attr("pane")=="snippets"&&$("#rightPaneSnippetCategories:visible").length) {
					$(".snippetCategoryItem",$("#rightPaneSnippetCategories")).addClass("listItemHighlight");
				}
				if ($("body").attr("pane")=="tables") {
					$(".tableItem",$("#rightPaneTables")).addClass("listItemHighlight");
				}
				if ($("body").attr("pane")=="files") {
					$(".responsiveListItem",$("#rightPaneFiles")).addClass("listItemHighlight");
				}
				if ($("body").attr("pane")=="newsletter"&&!$("#rightPaneNewsletterSubscribers:visible").length&&!$("#rightPaneSubscriberCategories:visible").length) {
					$(".responsiveListItem",$("#rightPaneNewsletter")).addClass("listItemHighlight");
				}
				if ($("body").attr("pane")=="newsletter"&&!$("#rightPaneNewsletterSubscribers:visible").length&&$("#rightPaneSubscriberCategories:visible").length) {
					$(".responsiveListItem",$("#rightPaneSubscriberCategories")).addClass("listItemHighlight");
				}
				if ($("body").attr("pane")=="newsletter"&&$("#rightPaneNewsletterSubscribers:visible").length&&!$("#rightPaneSubscriberCategories:visible").length) {
					$(".responsiveListItem",$("#rightPaneNewsletterSubscribers")).addClass("listItemHighlight");
				}
				if ($("body").attr("pane")=="blog"&&!$("#rightPaneBlogAuthors:visible").length) {
					$(".editBlogBar",$("#rightPaneBlog")).addClass("listItemHighlight");
				}
				if ($("body").attr("pane")=="blog"&&$("#rightPaneBlogAuthors:visible").length) {
					$(".responsiveListItem",$("#rightPaneBlogAuthors")).addClass("listItemHighlight");
				}
				if ($("body").attr("pane")=="blog"&&$("#rightPaneBlogCategories:visible").length) {
					$(".responsiveListItem",$("#rightPaneBlogCategories")).addClass("listItemHighlight");
				}
				if ($("body").attr("pane")=="blog"&&$("#rightPaneBlogComments:visible").length) {
					$(".responsiveListItem",$("#rightPaneBlogComments")).addClass("listItemHighlight");
				}

				if ($("body").attr("pane")=="checkout") {
					$(".responsiveListItem",$("#rightPaneCheckout")).addClass("listItemHighlight");
				}
				if ($("body").attr("pane")=="livechat") {
					$(".responsiveListItem",$("#rightPaneLivechat")).addClass("listItemHighlight");
				}
				if ($("body").attr("pane")=="staff"&&!$("#rightPanePermissionGroups:visible").length) {
					$(".responsiveListItem",$("#rightPaneStaff")).addClass("listItemHighlight");
				}
				if ($("body").attr("pane")=="staff"&&$("#rightPanePermissionGroups:visible").length) {
					$(".responsiveListItem",$("#rightPanePermissionGroups")).addClass("listItemHighlight");
				}
				
				if ($("body").attr("pane")=="embedCodes") {
					$(".responsiveListItem",$("#rightPaneEmbedCodes")).addClass("listItemHighlight");
				}


				selectionTools();
				return false;
			}
		}
		if (e.keyCode==40) { // down
			if ($("body").attr("pane")=="editContent") {

				$(".bpe_toggler").css("display","none");

				var selectedIsZones = false;
				var zonesHasChildren = false;
				var $elementAfterSelected = false
				var selectedIsListWithChildren = false
				var $current = false;
				var isListItem = false;
				var nextIsList = false;

				if ($(".bpe_highlight:last").length) {
					$current = $(".bpe_highlight:last");
					if ($(".bpe_highlight:last").hasClass("CMS_Component_ObsZones")) {
						selectedIsZones = true;
						if ($(".bpe_highlight:last").find("div.CMS_Component_Obs,.bpe_image,.textareaWrapper").filter(":visible").length ) {
							zonesHasChildren = true;
						}
					} else {
						if ($("ul",$(".bpe_highlight:last")).length) {
							selectedIsListWithChildren = true;
						}
					}
					if ($current.parent("ul").length || $current.parent("ol").length) {
						isListItem = true;
					}
					if ($(".bpe_highlight:last").nextAll("div.CMS_Component_Obs,.bpe_image,.textareaWrapper").filter(":visible").length ) {
						$elementAfterSelected = $(".bpe_highlight:last").nextAll("div.CMS_Component_Obs,.bpe_image,.textareaWrapper").filter(":visible").first();
/*						if ($elementAfterSelected[0].attr("data-el")=="ul" || $elementAfterSelected[0].attr("data-el")=="ol") {
							$elementAfterSelected = $(".bpe_highlight:last").next();
							nextIsList = true;
						}*/
					} else {
						// no next item, check if there are zones after this one.
						if ($(".bpe_highlight:last").parents(".zonesDropBox").next(".zonesDropBox").length) {
							$elementAfterSelected = $(".bpe_highlight:last").parents(".zonesDropBox").next(".zonesDropBox").find("div.CMS_Component_Obs,.bpe_image,.textareaWrapper").first();
						}
					}


				}

				if (!shiftDown) {
					$(".bpe_highlight").removeClass("bpe_highlight");
				}

				if ($current) {
					/*
					if (!$elementAfterSelected && isListItem && !selectedIsListWithChildren) {
						var foundListNextUp = false;

						if ($current.parent().parent().nextAll("li").length) {
							$current.parent().parent().nextAll("li").first().addClass("bpe_highlight");
							foundListNextUp=true;
						}
						if ($current.parent().parent().parent().parent().nextAll("li").length && !foundListNextUp) {
							$current.parent().parent().parent().parent().nextAll("li").first().addClass("bpe_highlight");
							foundListNextUp=true;
						}
						if ($current.parent().parent().parent().parent().parent().parent().nextAll("li").length && !foundListNextUp) {
							$current.parent().parent().parent().parent().parent().parent().nextAll("li").first().addClass("bpe_highlight");
							foundListNextUp=true;
						}
						if (!foundListNextUp) {
							var breakOut = false;
							if (!$current.parent().parents("ul").length) { // top level list item
								if ($current.parent().nextAll("p,h1,h2,h3,h4,h5,pre,ul,ol,div.CMS_Component_Obs,.bpe_table,.bpe_image,.textareaWrapper").first().length) {
									$elementAfterSelected = $current.parent().nextAll("p,h1,h2,h3,h4,h5,pre,ul,ol,div.CMS_Component_Obs,.bpe_table,.bpe_image,.textareaWrapper").first();
									if ($elementAfterSelected.get(0).nodeName.toLowerCase()=="ul" || $elementAfterSelected.get(0).nodeName.toLowerCase()=="ol") {
										nextIsList = true;
									}
									breakOut=true;
								}
							}
							if (!$current.parent().parent().parent().parents("ul").length && !breakOut) { // second level list item
								if ($current.parent().parent().parent().nextAll("p,h1,h2,h3,h4,h5,pre,ul,ol,div.CMS_Component_Obs,.bpe_table,.bpe_image,.textareaWrapper").first().length) {
									$elementAfterSelected = $current.parent().parent().parent().nextAll("p,h1,h2,h3,h4,h5,pre,ul,ol,div.CMS_Component_Obs,.bpe_table,.bpe_image,.textareaWrapper").first();
									if ($elementAfterSelected.get(0).nodeName.toLowerCase()=="ul" || $elementAfterSelected.get(0).nodeName.toLowerCase()=="ol") {
										nextIsList = true;
									}
									breakOut=true;
								}
							}
							if (!$current.parent().parent().parent().parent().parent().parents("ul").length && !breakOut) { // third level list item
								if ($current.parent().parent().parent().parent().parent().nextAll("p,h1,h2,h3,h4,h5,pre,ul,ol,div.CMS_Component_Obs,.bpe_table,.bpe_image,.textareaWrapper").first().length) {
									$elementAfterSelected = $current.parent().parent().parent().parent().parent().nextAll("p,h1,h2,h3,h4,h5,pre,ul,ol,div.CMS_Component_Obs,.bpe_table,.bpe_image,.textareaWrapper").first();
									if ($elementAfterSelected.get(0).nodeName.toLowerCase()=="ul" || $elementAfterSelected.get(0).nodeName.toLowerCase()=="ol") {
										nextIsList = true;
									}
									breakOut=true;
								}
							}
						}


					}*/

					if (!$elementAfterSelected && !isListItem) {

						if ($current.parents(".CMS_Component_Obs").nextAll("div.CMS_Component_Obs,.bpe_image,.textareaWrapper").filter(":visible").first().length) {
							$next = $current.parents(".CMS_Component_Obs").nextAll("div.CMS_Component_Obs,.bpe_image,.textareaWrapper").filter(":visible").first();
							if ($("li",$next).length) {
								$("li:first",$next).addClass("bpe_highlight").removeClass("stopSelectDownUntilHere");
							} else {
								$next.addClass("bpe_highlight").removeClass("stopSelectDownUntilHere");
							}

						}
					}

					if (selectedIsZones) {
						if (zonesHasChildren) {
							$next = $current.find("div.CMS_Component_Obs,.bpe_image,.textareaWrapper").filter(":visible").first();
							if ($("li",$next).length) {
								$("li:first",$next).addClass("bpe_highlight").removeClass("stopSelectDownUntilHere");
							} else {
								$next.addClass("bpe_highlight").removeClass("stopSelectDownUntilHere");
							}
						}
					}

					if (selectedIsListWithChildren) {
						$("li:first",$current).addClass("bpe_highlight").removeClass("stopSelectDownUntilHere");
					}
					if ($elementAfterSelected && !zonesHasChildren && !selectedIsListWithChildren && !nextIsList) {
							$elementAfterSelected.addClass("bpe_highlight").removeClass("stopSelectDownUntilHere");
					}
					if (nextIsList && !selectedIsListWithChildren && !zonesHasChildren) {
						$("li",$elementAfterSelected).first().addClass("bpe_highlight").removeClass("stopSelectDownUntilHere");
					}



				} else {
					$next = $("#bpe_area").find("div.CMS_Component_Obs,.bpe_image,.textareaWrapper").filter(":visible").first();
					if ($("li",$next).length && !$next.hasClass("CMS_Component_Obs")) {
						$("li:first",$next).addClass("bpe_highlight").removeClass("stopSelectDownUntilHere");
					} else {
						$next.addClass("bpe_highlight").removeClass("stopSelectDownUntilHere");
					}
				}
				scrollToEl($(".bpe_highlight:last"),$(".textEditingArea"));
				selectionTools();

			}

			if ($("body").attr("pane")=="mainMenuPages"||$("body").attr("pane")=="nonMenuPages") {
				if ($("#adminPages #mainMenuPagesMain").css("display")=="block") {
					var scope = "#adminPages #mainMenuPagesMain";
				} else {
					var scope = "#adminPages #nonLinkingPagesMain";
				}
				if ($(scope+" .listItemHighlight").length) {
					var next = $(scope+" .listItemHighlight:last").nextAll(".responsiveListItem:not(.notokperms)").first();
					if (!shiftDown) {
						$(scope+" .listItemHighlight").removeClass("listItemHighlight");
					}
					next.addClass("listItemHighlight");

				} else {
					$(scope+" .responsiveListItem:not(.notokperms):first").addClass("listItemHighlight");
					logTrainingClick("highlightFirstPage");
				}
				scrollToEl($(scope+" .listItemHighlight:last"),$(scope+" .pagesScroll"));
				selectionTools();
				return false;
			}
			var thumbs=false;
			
			if ($("body").attr("pane")=="images"&&!$("#rightPaneImagesCategories:visible").length) {
				var scope = "#rightPaneImages";
			}
			if ($("body").attr("pane")=="images"&&$("#rightPaneImagesCategories:visible").length) {
				var scope = "#rightPaneImagesCategories";
			}
			if ($("body").attr("pane")=="videos") {
				var scope = "#rightPaneVideos";
			}
			if ($("body").attr("pane")=="galleries"&&!$("#rightPaneGalleryImages:visible").length) {
				var scope = "#rightPaneGalleries";
			}
			if ($("body").attr("pane")=="galleries"&&$("#rightPaneGalleryImages:visible").length) {
				var scope = "#rightPaneGalleryImages";
			}
			if ($("body").attr("pane")=="forms"&&!$("#rightPaneFormInputs:visible").length) {
				var scope = "#rightPaneForms";
			}
			if ($("body").attr("pane")=="forms"&&$("#rightPaneFormInputs:visible").length) {
				var scope = "#rightPaneFormInputs";
			}
			if ($("body").attr("pane")=="forms"&&$("#rightPaneFormInputOptions:visible").length) {
				var scope = "#rightPaneFormInputOptions";
			}
			if ($("body").attr("pane")=="products"&&!$("#rightPaneProductOptions:visible").length&&!$("#rightPaneProductCategories:visible").length) {
				var scope = "#rightPaneProducts";
			}
			if ($("body").attr("pane")=="products"&&$("#rightPaneProductOptions:visible").length&&!$("#rightPaneProductCategories:visible").length) {
				var scope = "#rightPaneProductOptions";
			}
			if ($("body").attr("pane")=="products"&&$("#rightPaneProductCategories:visible").length&&!$("#rightPaneProductOptions:visible").length) {
				var scope = "#rightPaneProductCategories";
			}
			if ($("body").attr("pane")=="bookingproducts") {
				var scope = "#rightPaneBookingProducts";
			}
			if ($("body").attr("pane")=="calendars"&&!$("#rightPaneCalendarEvents:visible").length) {
				var scope = "#rightPaneCalendars";

			}
			if ($("body").attr("pane")=="calendars"&&$("#rightPaneCalendarEvents:visible").length) {
				var scope = "#calendarEventsPaneInner";

			}
			if ($("body").attr("pane")=="calendars"&&$("#rightPaneEventsGroups:visible").length) {
				var scope = "#eventsGroupsPaneInner";				
			}
			
			if ($("body").attr("pane")=="snippets"&&!$("#rightPaneSnippetCategories:visible").length) {
				var scope = "#rightPaneSnippets";
			}
			if ($("body").attr("pane")=="snippets"&&$("#rightPaneSnippetCategories:visible").length) {
				var scope = "#rightPaneSnippetCategories";
			}
			if ($("body").attr("pane")=="tables") {
				var scope = "#rightPaneTables";
			}
			if ($("body").attr("pane")=="files") {
				var scope = "#rightPaneFiles";
			}
			if ($("body").attr("pane")=="newsletter"&&!$("#rightPaneNewsletterSubscribers:visible").length&&!$("#rightPaneSubscriberCategories:visible").length) {
				var scope = "#rightPaneNewsletter";
			}
			if ($("body").attr("pane")=="newsletter"&&!$("#rightPaneNewsletterSubscribers:visible").length&&$("#rightPaneSubscriberCategories:visible").length) {
				var scope = "#rightPaneSubscriberCategories";
			}
			if ($("body").attr("pane")=="newsletter"&&$("#rightPaneNewsletterSubscribers:visible").length&&!$("#rightPaneSubscriberCategories:visible").length) {
				var scope = "#rightPaneNewsletterSubscribers";
			}
			if ($("body").attr("pane")=="blog"&&!$("#rightPaneBlogAuthors:visible").length) {
				var scope = "#rightPaneBlog";
			}
			if ($("body").attr("pane")=="blog"&&$("#rightPaneBlogAuthors:visible").length) {
				var scope = "#rightPaneBlogAuthors";
			}
			if ($("body").attr("pane")=="blog"&&$("#rightPaneBlogCategories:visible").length) {
				var scope = "#rightPaneBlogCategories";
			}
			if ($("body").attr("pane")=="blog"&&$("#rightPaneBlogComments:visible").length) {
				var scope = "#rightPaneBlogComments";
			}
			if ($("body").attr("pane")=="checkout") {
				var scope = "#rightPaneCheckout";
			}
			if ($("body").attr("pane")=="livechat") {
				var scope = "#rightPaneLivechat";
			}
			if ($("body").attr("pane")=="staff"&&!$("#rightPanePermissionGroups:visible").length) {
				var scope = "#rightPaneStaff";
			}
			if ($("body").attr("pane")=="staff"&&$("#rightPanePermissionGroups:visible").length) {
				var scope = "#rightPanePermissionGroups";
			}
			if ($("body").attr("pane")=="embedCodes") {
				var scope = "#rightPaneEmbedCodes";
			}


			if (thumbs) {
				if ($(scope+" .imageItemHighlight").length) {
					var next = $(scope+" .imageItemHighlight:last").nextAll(".thumbItem").first();
					if (!shiftDown) {
						$(scope+" .imageItemHighlight").removeClass("imageItemHighlight");
					}
					next.addClass("imageItemHighlight");

				} else {
					$(scope+" .thumbItem:first").addClass("imageItemHighlight");
				}
				scrollToEl($(scope+" .imageItemHighlight:last"),$(scope+" .pagesScroll"));
				selectionTools();
			} else {
				if ($(scope+" .listItemHighlight").length) {
					var next = $(scope+" .listItemHighlight:last").nextAll(".responsiveListItem:not(.notokperms)").first();
					if (!shiftDown) {
						$(scope+" .listItemHighlight").removeClass("listItemHighlight");
					}
					next.addClass("listItemHighlight");

				} else {
					$(scope+" .responsiveListItem:not(.notokperms):first").addClass("listItemHighlight");
				}
				scrollToEl($(scope+" .listItemHighlight:last"),$(scope+" .pagesScroll"));
				selectionTools();
			}
			return false;
		}
		if (e.keyCode==38) { // up
			if ($("body").attr("pane")=="editContent") {
				$(".bpe_toggler").css("display","none");
				var selectedIsZones = false;
				var zonesHasChildren = false;
				var $elementAfterSelected = false;
				var selectedIsListWithChildren = false;
				var nextIsListWithChildren = false;
				var $current = false;
				var isListItem = false;
				var nextIsList = false;
				var nextIsZones = false;

				if ($(".bpe_highlight:first").length) {
					$current = $(".bpe_highlight:first");
					/*
					if ($(".bpe_highlight:first").hasClass("CMS_Component_ObsZones")) {
						selectedIsZones = true;
						if ($(".bpe_highlight:first").find("p,h1,h2,h3,h4,h5,pre,li,div.CMS_Component_Obs,.bpe_table,.bpe_image,.textareaWrapper").length ) {
							zonesHasChildren = true;
						}
					} else {
						if ($("ul",$(".bpe_highlight:first")).length) {
							selectedIsListWithChildren = true;
						}
					}
					if ($current.parent("ul").length || $current.parent("ol").length) {
						isListItem = true;
					}*/
					if ($(".bpe_highlight:first").prevAll("div.CMS_Component_Obs,.bpe_image,.textareaWrapper").filter(":visible").length) {
						$elementAfterSelected = $(".bpe_highlight:first").prevAll("div.CMS_Component_Obs,.bpe_image,.textareaWrapper").filter(":visible").first();
/*						if ($elementAfterSelected[0].tagName.toLowerCase()=="ul" || $elementAfterSelected[0].tagName.toLowerCase()=="ol") {
							$elementAfterSelected = $(".bpe_highlight:first").prevAll("ul,ol").first();
							nextIsList = true;
						}*/
						if ($elementAfterSelected.hasClass("CMS_Component_ObsZones")) {
							nextIsZones = true;
							if ($elementAfterSelected.find("p,h1,h2,h3,h4,h5,pre,li,div.CMS_Component_Obs,.bpe_table,.bpe_image,.textareaWrapper").filter(":visible").length ) {
								zonesHasChildren = true;
							}
						}
						/*if ($("ul",$elementAfterSelected[0]).length) {
							nextIsListWithChildren = true;
						}*/
					} else {
						if ($(".bpe_highlight:first").parents(".zonesDropBox").prev(".zonesDropBox").length) {
							$elementAfterSelected = $(".bpe_highlight:first").parents(".zonesDropBox").prev(".zonesDropBox").find("div.CMS_Component_Obs,.bpe_image,.textareaWrapper").first();
						}
					}


				}

				if (!shiftDown) {
					$(".bpe_highlight").removeClass("bpe_highlight");
				}

				if ($current) {
					/*
					if (!$elementAfterSelected && isListItem) {
						var foundListNextUp = false;
						if ($current.parent().prevAll("p,h1,h2,h3,h4,h5,pre,ul,ol,div.CMS_Component_Obs,.bpe_table,.bpe_image,.textareaWrapper").length) {
							$elementAfterSelected = $current.parent().prevAll("p,h1,h2,h3,h4,h5,pre,ul,ol,div.CMS_Component_Obs,.bpe_table,.bpe_image,.textareaWrapper").first();
							if ($elementAfterSelected.get(0).nodeName.toLowerCase()=="ul" || $elementAfterSelected.get(0).nodeName.toLowerCase()=="ol") {
								nextIsList = true;
							}
							foundListNextUp=true;
						}

						if (!foundListNextUp) {

							var breakOut = false;


							if (!$current.parent().parents("ul").length) { // top level list item
								if ($current.parents(".CMS_Component_Obs").length) {
									$current.parents(".CMS_Component_Obs").addClass("bpe_highlight");
									breakOut=true;
								}
							}
							if (!$current.parent().parent().parent().parents("ul").length && !breakOut) { // second level list item
								if ($current.parent().parent().parent().prevAll("p,h1,h2,h3,h4,h5,pre,ul,ol,div.CMS_Component_Obs,.bpe_table,.bpe_image,.textareaWrapper").first().length) {
									$current.parent().parent().addClass("bpe_highlight");
									breakOut=true;
								}
							}
							if (!$current.parent().parent().parent().parent().parent().parents("ul").length && !breakOut) { // third level list item
								$current.parent().parent().addClass("bpe_highlight");
								breakOut=true;
							}
						}


					}*/

					if (!$elementAfterSelected && !isListItem) {
						if ($current.parents(".CMS_Component_Obs").length) {
							$current.parents(".CMS_Component_Obs").addClass("bpe_highlight");
						}
					}
					/*
					if (selectedIsZones && !nextIsListWithChildren) {
						$elementAfterSelected.addClass("bpe_highlight");
					}
					if (selectedIsZones && nextIsList) {
						$("li",$elementAfterSelected).last().addClass("bpe_highlight");
					}*/
					if ($elementAfterSelected && nextIsZones && !zonesHasChildren) {
						$elementAfterSelected.addClass("bpe_highlight");
					}
					if ($elementAfterSelected && !nextIsZones && !zonesHasChildren) {
						$elementAfterSelected.addClass("bpe_highlight");
					}
					if (nextIsZones && zonesHasChildren) {
						$elementAfterSelected.find("div.CMS_Component_Obs,.bpe_image,.textareaWrapper").filter(":visible").last().addClass("bpe_highlight");
					}
					/*
					if (nextIsZones && zonesHasChildren) {
						$elementAfterSelected.find("p,h1,h2,h3,h4,h5,pre,li,div.CMS_Component_Obs,.bpe_table,.bpe_image,.textareaWrapper").last().addClass("bpe_highlight");
					}/*
					if (nextIsListWithChildren && !nextIsZones && !zonesHasChildren) {
						$("li:last",$elementAfterSelected).addClass("bpe_highlight");
					}
					if (nextIsList && !selectedIsListWithChildren && !zonesHasChildren) {
						$("li",$elementAfterSelected).last().addClass("bpe_highlight");
					}*/



				} else {
					$next = $("#bpe_area").find("div.CMS_Component_Obs,.bpe_image,.textareaWrapper").filter(":visible").last();
					if ($("li",$next).length && !$next.hasClass("CMS_Component_Obs")) {
						$("li:last",$next).addClass("bpe_highlight");
					} else {
						$next.addClass("bpe_highlight");
					}
				}

				scrollToEl($(".bpe_highlight:first"),$(".textEditingArea"));
				selectionTools();
			}

			if ($("body").attr("pane")=="mainMenuPages"||$("body").attr("pane")=="nonMenuPages") {
				if ($("#adminPages #mainMenuPagesMain").css("display")=="block") {
					var scope = "#adminPages #mainMenuPagesMain";
				} else {
					var scope = "#adminPages #nonLinkingPagesMain";
				}
				if ($(scope+" .listItemHighlight").length) {
					var next = $(scope+" .listItemHighlight:first").prevAll(".responsiveListItem:not(.responsiveListItem.notokperms)").first();
					if (!shiftDown) {
						$(scope+" .listItemHighlight").removeClass("listItemHighlight");
					}
					next.addClass("listItemHighlight");

				} else {
					$(scope+" .responsiveListItem:not(.responsiveListItem.notokperms):last").addClass("listItemHighlight");
				}
				scrollToEl($(scope+" .listItemHighlight:first"),$(scope+" .pagesScroll"));
				selectionTools();
				return false;
			}
			var thumbs = false;
			var extraClass = "";
			if ($("body").attr("pane")=="images"&&!$("#rightPaneImagesCategories:visible").length) {
				var scope = "#rightPaneImages";
			}
			if ($("body").attr("pane")=="images"&&$("#rightPaneImagesCategories:visible").length) {
				var scope = "#rightPaneImagesCategories";
			}
			if ($("body").attr("pane")=="videos") {
				var scope = "#rightPaneVideos";
			}
			if ($("body").attr("pane")=="galleries"&&!$("#rightPaneGalleryImages:visible").length) {
				var scope = "#rightPaneGalleries";
				extraClass=".galleryItem";
			}
			if ($("body").attr("pane")=="galleries"&&$("#rightPaneGalleryImages:visible").length) {
				var scope = "#rightPaneGalleryImages";
			}
			if ($("body").attr("pane")=="forms"&&!$("#rightPaneFormInputs:visible").length) {
				var scope = "#rightPaneForms";
				extraClass=".formItem";
			}
			if ($("body").attr("pane")=="forms"&&$("#rightPaneFormInputs:visible").length) {
				var scope = "#rightPaneFormInputs";
				extraClass=".formInputItem";
			}
			if ($("body").attr("pane")=="forms"&&$("#rightPaneFormInputOptions:visible").length) {
				var scope = "#rightPaneFormInputOptions";
			}
			if ($("body").attr("pane")=="products"&&!$("#rightPaneProductOptions:visible").length&&!$("#rightPaneProductCategories:visible").length) {
				var scope = "#rightPaneProducts";
				extraClass=".productItemMain";
			}
			if ($("body").attr("pane")=="products"&&$("#rightPaneProductOptions:visible").length&&!$("#rightPaneProductCategories:visible").length) {
				var scope = "#rightPaneProductOptions";
			}
			if ($("body").attr("pane")=="products"&&$("#rightPaneProductCategories:visible").length&&!$("#rightPaneProductOptions:visible").length) {
				var scope = "#rightPaneProductCategories";
			}
			if ($("body").attr("pane")=="bookingproducts") {
				var scope = "#rightPaneBookingProducts";
			}
			if ($("body").attr("pane")=="calendars"&&!$("#rightPaneCalendarEvents:visible").length) {
				var scope = "#rightPaneCalendars";
				extraClass=".calendarItem";
			}
			if ($("body").attr("pane")=="calendars"&&$("#rightPaneCalendarEvents:visible").length) {
				var scope = "#calendarEventsPaneInner";
				extraClass=".eventItem";
			}
			if ($("body").attr("pane")=="calendars"&&$("#rightPaneEventsGroups:visible").length) {
				var scope = "#eventsGroupsPaneInner";				
				extraClass=".eventGroupItem";
			}
			if ($("body").attr("pane")=="snippets"&&!$("#rightPaneSnippetCategories:visible").length) {
				var scope = "#rightPaneSnippets";
				extraClass=".snippetItem";
			}
			if ($("body").attr("pane")=="tables") {
				var scope = "#rightPaneTables";
				extraClass=".tableItem";
			}
			if ($("body").attr("pane")=="snippets"&&$("#rightPaneSnippetCategories:visible").length) {
				var scope = "#rightPaneSnippetCategories";
				extraClass=".snippetCategoryItem";
			}
			if ($("body").attr("pane")=="files") {
				var scope = "#rightPaneFiles";
			}
			if ($("body").attr("pane")=="newsletter"&&!$("#rightPaneNewsletterSubscribers:visible").length&&!$("#rightPaneSubscriberCategories:visible").length) {
				var scope = "#rightPaneNewsletter";
			}
			if ($("body").attr("pane")=="newsletter"&&!$("#rightPaneNewsletterSubscribers:visible").length&&$("#rightPaneSubscriberCategories:visible").length) {
				var scope = "#rightPaneSubscriberCategories";
			}
			if ($("body").attr("pane")=="newsletter"&&$("#rightPaneNewsletterSubscribers:visible").length&&!$("#rightPaneSubscriberCategories:visible").length) {
				var scope = "#rightPaneNewsletterSubscribers";
			}
			if ($("body").attr("pane")=="blog") {
				var scope = "#rightPaneBlog";
				extraClass=".editBlogBar";
			}
			if ($("body").attr("pane")=="blog"&&$("#rightPaneBlogAuthors:visible").length) {
				var scope = "#rightPaneBlogAuthors";
				extraClass="";
			}
			if ($("body").attr("pane")=="blog"&&$("#rightPaneBlogCategories:visible").length) {
				var scope = "#rightPaneBlogCategories";
				extraClass="";
			}
			if ($("body").attr("pane")=="blog"&&$("#rightPaneBlogComments:visible").length) {
				var scope = "#rightPaneBlogComments";
				extraClass="";
			}

			if ($("body").attr("pane")=="checkout") {
				var scope = "#rightPaneCheckout";
			}
			if ($("body").attr("pane")=="livechat") {
				var scope = "#rightPaneLivechat";
			}
			if ($("body").attr("pane")=="staff"&&!$("#rightPanePermissionGroups:visible").length) {
				var scope = "#rightPaneStaff";
			}
			
			if ($("body").attr("pane")=="staff"&&$("#rightPanePermissionGroups:visible").length) {
				var scope = "#rightPanePermissionGroups";
			}
			
			if ($("body").attr("pane")=="embedCodes") {
				var scope = "#rightPaneEmbedCodes";
			}

			if (thumbs) {
				if ($(scope+" .imageItemHighlight").length) {
					var next = $(scope+" .imageItemHighlight:first").prevAll(".thumbItem").first();
					if (!shiftDown) {
						$(scope+" .imageItemHighlight").removeClass("imageItemHighlight");
					}
					next.addClass("imageItemHighlight");

				} else {
					$(scope+" .thumbItem:last").addClass("imageItemHighlight");
				}
				scrollToEl($(scope+" .imageItemHighlight:last"),$(scope+" .pagesScroll"));
				selectionTools();
			} else {
				if ($(scope+" .listItemHighlight").length) {
					var next = $(scope+" .listItemHighlight:first").prevAll(".responsiveListItem:not(.notokperms)").first();
					if (!shiftDown) {
						$(scope+" .listItemHighlight").removeClass("listItemHighlight");
					}
					next.addClass("listItemHighlight");

				} else {
					$(scope+" "+extraClass+".responsiveListItem:not(.notokperms):last").addClass("listItemHighlight");
				}
				scrollToEl($(scope+" .listItemHighlight:last"),$(scope+" .pagesScroll"));
				selectionTools();
			}
			return false;
		}
		if (e.keyCode==33) { // pageup
			if ($("body").attr("pane")=="editContent") {
				var pageH = $(".textEditingArea").height();
				$(".textEditingArea").lovelyScrollMove(pageH,scrollImagesBottom);
				return false;
			}
		}
		if (e.keyCode==34) { // pagedown
			if ($("body").attr("pane")=="editContent") {
				var pageH = $(".textEditingArea").height();
				$(".textEditingArea").lovelyScrollMove(-pageH,scrollImagesBottom);
				return false;
			}
		}
	});
	
	
		
}
function assignImagesKeys () {
	$(document).unbind("keydown");
	$(document).unbind("keyup");
	$(document).unbind("keypress");
	assignSelectionKeys();

	$(document).keyup(function (e) {
		if (e.keyCode==13) { // enter

			if ($("#imagesPane .listItemHighlight").length==1) {
				renamePageImage($("#imagesPane .listItemHighlight"));
			}
			return false;
		}
		if (e.keyCode==8) { // backspace

			if ($("#imagesPane .listItemHighlight").length) {
	prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Image_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteImages,false,true);
			}
			return false;
		}
		if (e.keyCode==33) { // pageup
			var pageH = $("#imagesPaneInner").height();
			$("#imagesPaneInner").lovelyScrollMove(pageH,scrollImagesBottom);
			return false;
		}
		if (e.keyCode==34) { // pagedown
			var pageH = $("#imagesPaneInner").height();
			$("#imagesPaneInner").lovelyScrollMove(-pageH,scrollImagesBottom);
			return false;
		}
	});
}
function assignProductsKeys () {
	$(document).unbind("keydown");
	$(document).unbind("keyup");
	$(document).unbind("keypress");
	assignSelectionKeys();
	$(document).keyup(function (e) {
		if (e.keyCode==13) { // enter
			if ($("#rightPaneProducts .listItemHighlight.productItemMain").length==1) {
				editProduct($("#rightPaneProducts .listItemHighlight.productItemMain"));
			}
			return false;
		}
	});
	$(document).keydown(function (e) {
		if (e.keyCode==8) { // backspace
			if ($("#productsPaneInner .listItemHighlight.productItemMain").length) {
	prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Product_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteProducts,false,true);
			}
			return false;
		}
		if (e.keyCode==33) { // pageup
			var pageH = $("#productsPaneInner").height();
			$("#productsPaneInner").lovelyScrollMove(pageH,pagesScrollBottomProducts);
			return false;
		}
		if (e.keyCode==34) { // pagedown
			var pageH = $("#productsPaneInner").height();
			$("#productsPaneInner").lovelyScrollMove(-pageH,pagesScrollBottomProducts);
			return false;
		}
		if (e.keyCode==68) { // D
			if (modDown) {
				duplicateProducts();
			}
			return false;
		}
		if (e.keyCode==78) { // N
			if (!modDown) {
				addProduct();
			}
			return false;
		}
		if (e.keyCode==83) { // S
			if (!$("#productChangeStock").hasClass("greyedOut")) {
			prepDialogue("<h2>"+LangVars.Change_Product_Stock_Heading+"</h2><p>"+LangVars.Change_Product_Stock_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Save,changeProductStock,false,true,true,"productStock");
			}

			return false;
		}
		if (e.keyCode==80) { // P

			if ($("#rightPaneProducts .listItemHighlight").length) {
				if (!$("#iconbarProductPrice").hasClass("greyedOut")) {

					var someHaveOptions=false;
					$("#rightPaneProducts .productItemMain.listItemHighlight").each(function(){
						if ($(this).attr("product-type")=="simple_multi"||$(this).attr("product-type")=="gallery_multi") {
							someHaveOptions=true;
						}
					});
					if (!someHaveOptions) {
					prepDialogue("<h2>"+LangVars.Change_Product_Price_Heading+"</h2><p>"+LangVars.Change_Product_Price_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Save,changeProductPrice,false,true,true,"productPrice");
					}
				}
			}

			return false;
		}
	});
}
function assignBookingProductsKeys () {
	$(document).unbind("keydown");
	$(document).unbind("keyup");
	$(document).unbind("keypress");
	assignSelectionKeys();
	$(document).keyup(function (e) {
		if (e.keyCode==13) { // enter
			if ($("#rightPaneBookingProducts .listItemHighlight.bookingProductItemMain").length==1) {
				editBookingProduct($("#rightPaneBookingProducts .listItemHighlight.bookingProductItemMain"));
			}
			return false;
		}
	});
	$(document).keydown(function (e) {
		if (e.keyCode==8) { // backspace
			if ($("#bookingProductsPaneInner .listItemHighlight.bookingProductItemMain").length) {
	prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Product_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteBookingProducts,false,true);
			}
			return false;
		}
		if (e.keyCode==33) { // pageup
			var pageH = $("#bookingProductsPaneInner").height();
			$("#bookingProductsPaneInner").lovelyScrollMove(pageH,pagesScrollBottomBookingProducts);
			return false;
		}
		if (e.keyCode==34) { // pagedown
			var pageH = $("#bookingProductsPaneInner").height();
			$("#bookingProductsPaneInner").lovelyScrollMove(-pageH,pagesScrollBottomBookingProducts);
			return false;
		}
		if (e.keyCode==68) { // D
			if (modDown) {
				duplicateBookingProducts();
			}
			return false;
		}
		if (e.keyCode==78) { // N
			if (!modDown) {
				addBookingProduct();
			}
			return false;
		}
	});
}

function assignProductCategoriesKeys () {
	$(document).unbind("keydown");
	$(document).unbind("keyup");
	$(document).unbind("keypress");
	assignSelectionKeys();
	$(document).keyup(function (e) {
		if (e.keyCode==13) { // enter
			if ($("#rightPaneProductCategories .listItemHighlight").length==1) {
				editProductCategory($("#rightPaneProductCategories .listItemHighlight"));
			}
			return false;
		}
	});
	$(document).keydown(function (e) {
		if (e.keyCode==8) { // backspace
			if ($("#rightPaneProductCategories .listItemHighlight").length) {
	prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Product_Category_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteProductCategories,false,true);
			}
			return false;
		}
		if (e.keyCode==78) { // N
			if (!modDown) {
				addProductCategory();
			}
			return false;
		}
		if (e.keyCode==33) { // pageup
			var pageH = $("#productCategoriesPaneInner").height();
			$("#productCategoriesPaneInner").lovelyScrollMove(pageH);
			return false;
		}
		if (e.keyCode==34) { // pagedown
			var pageH = $("#productCategoriesPaneInner").height();
			$("#productCategoriesPaneInner").lovelyScrollMove(-pageH);
			return false;
		}
	});
}
function assignCalendarsKeys () {
	$(document).unbind("keydown");
	$(document).unbind("keyup");
	$(document).unbind("keypress");
	assignSelectionKeys();
	$(document).keyup(function (e) {
		if (e.keyCode==13) { // enter
			if ($("#rightPaneCalendars .listItemHighlight.calendarItem").length==1) {
				editCalendar($("#rightPaneCalendars .listItemHighlight.calendarItem"));
			}
			return false;
		}
	});
	$(document).keydown(function (e) {
		if (e.keyCode==8) { // backspace
			if ($("#calendarsPaneInner .listItemHighlight").length) {
	prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Calendar_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteCalendars,false,true);
			}
			return false;
		}
		if (e.keyCode==68) { // D
			if (modDown) {
				duplicateCalendars();
			}
			return false;
		}
		if (e.keyCode==78) { // N
			addCalendar();
			return false;
		}
		if (e.keyCode==33) { // pageup
			var pageH = $("#calendarsPaneInner").height();
			$("#calendarsPaneInner").lovelyScrollMove(pageH);
			return false;
		}
		if (e.keyCode==34) { // pagedown
			var pageH = $("#calendarsPaneInner").height();
			$("#calendarsPaneInner").lovelyScrollMove(-pageH);
			return false;
		}
	});
}
function assignCalendarEventsKeys () {
	$(document).unbind("keydown");
	$(document).unbind("keyup");
	$(document).unbind("keypress");
	assignSelectionKeys();
	$(document).keyup(function (e) {
		if (e.keyCode==13) { // enter
			if ($("#rightPaneCalendarEvents .listItemHighlight.eventItem").length==1) {
				editCalendarEvents($("#rightPaneCalendarEvents .listItemHighlight.eventItem"));
			}
			return false;
		}
	});
	$(document).keydown(function (e) {
		if (e.keyCode==8) { // backspace
			if ($("#rightPaneCalendarEvents .listItemHighlight").length) {
	prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Calendar_Event_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteCalendarEvents,false,true);
			}
			return false;
		}
		if (e.keyCode==68) { // D
			if (modDown) {
				duplicateCalendars();
			}
			return false;
		}
		if (e.keyCode==78) { // N
			addEvent();
			return false;
		}
		if (e.keyCode==33) { // pageup
			var pageH = $("#calendarEventsPaneInner").height();
			$("#calendarEventsPaneInner").lovelyScrollMove(pageH);
			return false;
		}
		if (e.keyCode==34) { // pagedown
			var pageH = $("#calendarEventsPaneInner").height();
			$("#calendarEventsPaneInner").lovelyScrollMove(-pageH);
			return false;
		}
		

		if (e.keyCode==67) { // c
			if (e.metaKey || e.ctrlKey) {
				$("#eventsCopy").trigger("click");
				e.preventDefault();
			}
				return false;
		}
		if (e.keyCode==88) { // x
			if (e.metaKey || e.ctrlKey) {
				$("#eventsCut").trigger("click");
				e.preventDefault();
			}
				return false;
		}
		if (e.keyCode==86) { // v
			if (e.metaKey || e.ctrlKey) {
				if (!$("#eventsPaste").hasClass("greyedOut")) {
					$("#eventsPaste").trigger("click");
				}
			}
			return false;
		}
		
		
	});
}
function assignGalleryImagesKeys () {
	$(document).unbind("keydown");
	$(document).unbind("keyup");
	$(document).unbind("keypress");
	assignSelectionKeys();
	$(document).keyup(function (e) {
		if (e.keyCode==13) { // enter
			if ($("#rightPaneGalleryImages .listItemHighlight").length==1) {
			//editThumbItem($("#rightPaneGalleryImages .imageItemHighlight"));
			editMeListItem($("#rightPaneGalleryImages .listItemHighlight"));
			}
			return false;
		}
	});
	$(document).keydown(function (e) {
		if (e.keyCode==8) { // backspace
			if ($("#rightPaneGalleryImages .listItemHighlight").length) {
	prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Image_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteGalleryImages,false,true);
			}
			return false;
		}
		if (e.keyCode==33) { // pageup
			var pageH = $("#galleryImagesPaneInner").height();
			$("#galleryImagesPaneInner").lovelyScrollMove(pageH);
			return false;
		}
		if (e.keyCode==34) { // pagedown
			var pageH = $("#galleryImagesPaneInner").height();
			$("#galleryImagesPaneInner").lovelyScrollMove(-pageH);
			return false;
		}

	});
}
function assignFormsKeys () {
	$(document).unbind("keydown");
	$(document).unbind("keyup");
	$(document).unbind("keypress");
	assignSelectionKeys();
	$(document).keyup(function (e) {
		if (e.keyCode==13) { // Enter
			if ($("#rightPaneForms .listItemHighlight").length==1) {
				showFormInputs($("#rightPaneForms .listItemHighlight"));
			}
			return false;
		}
	});
	$(document).keydown(function (e) {
		if (e.keyCode==8) { // backspace
			if ($("#rightPaneForms .listItemHighlight").length) {
				prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Forms_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteForms,false,true);
			}
			return false;
		}
		if (e.keyCode==68) { // D
			if (modDown) {
				duplicateForms();
			}
			return false;
		}
		if (e.keyCode==78) { // N
			addForm();
			return false;
		}
		if (e.keyCode==33) { // pageup
			var pageH = $("#formsPaneInner").height();
			$("#formsPaneInner").lovelyScrollMove(pageH);
			return false;
		}
		if (e.keyCode==34) { // pagedown
			var pageH = $("#formsPaneInner").height();
			$("#formsPaneInner").lovelyScrollMove(-pageH);
			return false;
		}

	});
}
function assignFormInputsKeys () {
	$(document).unbind("keydown");
	$(document).unbind("keyup");
	$(document).unbind("keypress");
	assignSelectionKeys();
	$(document).keydown(function (e) {
		if (e.keyCode==8) { // backspace
			if ($("#rightPaneFormInputs .listItemHighlight").length) {
	prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Inputs_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteInput,false,true);
			}
			return false;
		}
		if (e.keyCode==68) { // D
			duplicateFormInputs();
			return false;
		}
		if (e.keyCode==78) { // N
			addInput();

			return false;
		}
		if (e.keyCode==33) { // pageup
			var pageH = $("#formInputsPaneInner").height();
			$("#formInputsPaneInner").lovelyScrollMove(pageH);
			return false;
		}
		if (e.keyCode==34) { // pagedown
			var pageH = $("#formInputsPaneInner").height();
			$("#formInputsPaneInner").lovelyScrollMove(-pageH);
			return false;
		}
	});
	$(document).keyup(function (e) {


		if (e.keyCode==13) { // Enter
			if ($("#rightPaneFormInputs .listItemHighlight").length==1) {
				if ($("#rightPaneFormInputs .listItemHighlight").hasClass("withOptions")) {
					showInputOptions($("#rightPaneFormInputs .listItemHighlight"));
				} else {
					editMeListItem($("#rightPaneFormInputs .listItemHighlight"));
				}

			}
			return false;
		}
	});
}
function assignFormInputOptionsKeys () {
	$(document).unbind("keydown");
	$(document).unbind("keyup");
	$(document).unbind("keypress");
	assignSelectionKeys();
	$(document).keydown(function (e) {
		if (e.keyCode==8) { // backspace
			if ($("#rightPaneFormInputOptions .listItemHighlight").length) {
	prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Input_Options_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteInputOption,false,true);
			}
			return false;
		}
	});
	$(document).keyup(function (e) {
		if (e.keyCode==68) { // D

			return false;
		}
		if (e.keyCode==78) { // N
			addInputOption();
			return false;
		}
		if (e.keyCode==13) { // Enter
			if ($("#rightPaneFormInputOptions .listItemHighlight").length==1) {

				editMeListItem($("#rightPaneFormInputOptions .listItemHighlight"));

			}
			return false;
		}
		if (e.keyCode==33) { // pageup
			var pageH = $("#formInputOptionsPaneInner").height();
			$("#formInputOptionsPaneInner").lovelyScrollMove(pageH);
			return false;
		}
		if (e.keyCode==34) { // pagedown
			var pageH = $("#formInputOptionsPaneInner").height();
			$("#formInputOptionsPaneInner").lovelyScrollMove(-pageH);
			return false;
		}
	});
}

function assignEmbedCodesKeys () {
	$(document).unbind("keydown");
	$(document).unbind("keyup");
	$(document).unbind("keypress");
	assignSelectionKeys();
	$(document).keydown(function (e) {
		if (e.keyCode==8) { // backspace
			prepDeleteEmbedCodes();
			return false;
		}
	});
	$(document).keyup(function (e) {

		if (e.keyCode==78) { // N
			addEmbedCodes();
			return false;
		}
		if (e.keyCode==13) { // Enter
			if ($("#rightPaneEmbedCodes .listItemHighlight").length==1) {
				editMeListItemMultiple($("#rightPaneEmbedCodes .listItemHighlight"));

			}
			return false;
		}
		if (e.keyCode==33) { // pageup
			var pageH = $("#embedCodesPaneInner").height();
			$("#embedCodesPaneInner").lovelyScrollMove(pageH);
			return false;
		}
		if (e.keyCode==34) { // pagedown
			var pageH = $("#embedCodesPaneInner").height();
			$("#embedCodesPaneInner").lovelyScrollMove(-pageH);
			return false;
		}
	});
}
function assignProductOptionsKeys () {
	$(document).unbind("keydown");
	$(document).unbind("keyup");
	$(document).unbind("keypress");
	assignSelectionKeys();
	$(document).keydown(function (e) {
		if (e.keyCode==8) { // backspace
			if ($("#rightPaneProductOptions .listItemHighlight").length) {
	prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Product_Options_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteProductOption,false,true);
			}
			return false;
		}
	});
	$(document).keyup(function (e) {
		if (e.keyCode==68) { // D

			return false;
		}
		if (e.keyCode==78) { // N
			addProductOption();
			return false;
		}
		if (e.keyCode==80) { // P
		prepDialogue("<h2>"+LangVars.Change_Product_Price_Heading+"</h2><p>"+LangVars.Change_Product_Price_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Save,changeProductOptionPrice,false,true,true,"productOptionPrice");
			return false;
		}
		if (e.keyCode==83) { // S
			if (!$("#productOptionChangeStock").hasClass("greyedOut")) {
				prepDialogue("<h2>"+LangVars.Change_Product_Stock_Heading+"</h2><p>"+LangVars.Change_Product_Stock_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Save,changeProductOptionStock,false,true,true,"productOptionStock");				}
			return false;
		}

		if (e.keyCode==13) { // Enter
			if ($("#rightPaneProductOptions .listItemHighlight").length==1) {

				editMeListItem($("#rightPaneProductOptions .listItemHighlight"));

			}
			return false;
		}
		if (e.keyCode==33) { // pageup
			var pageH = $("#productOptionsPaneInner").height();
			$("#productOptionsPaneInner").lovelyScrollMove(pageH);
			return false;
		}
		if (e.keyCode==34) { // pagedown
			var pageH = $("#productOptionsPaneInner").height();
			$("#productOptionsPaneInner").lovelyScrollMove(-pageH);
			return false;
		}
	});
}
function assignVideosKeys () {
	$(document).unbind("keydown");
	$(document).unbind("keyup");
	$(document).unbind("keypress");
	assignSelectionKeys();
	$(document).keydown(function (e) {
		if (e.keyCode==8) { // backspace
			if ($("#videosPane .listItemHighlight").length) {
	prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Video_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteVideos,false,true);
			}
			return false;
		}
		if (e.keyCode==33) { // pageup
			var pageH = $("#videosPaneInner").height();
			$("#videosPaneInner").lovelyScrollMove(pageH);
			return false;
		}
		if (e.keyCode==34) { // pagedown
			var pageH = $("#videosPaneInner").height();
			$("#videosPaneInner").lovelyScrollMove(-pageH);
			return false;
		}
	});
}
function assignGalleriesKeys () {
	$(document).unbind("keydown");
	$(document).unbind("keyup");
	$(document).unbind("keypress");
	assignSelectionKeys();
	$(document).keyup(function (e) {
		if (e.keyCode==13) { // enter
			if ($("#galleriesPaneInner .listItemHighlight").length==1) {
//				showGalleryImages($("#galleriesPaneInner .listItemHighlight"));	
				renameGallery($("#galleriesPaneInner .listItemHighlight"));

			}
			return false;
		}
	});
	$(document).keydown(function (e) {
		if (e.keyCode==8) { // backspace
			if ($("#galleriesPaneInner .listItemHighlight").length) {
	prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Gallery_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteGalleries,false,true);
			}
			return false;
		}
		if (e.keyCode==78) { // n
			if (!modDown) {
			addGallery();
			e.preventDefault();
			}

			return false;
		}
		
		if (e.keyCode==33) { // pageup
			var pageH = $("#galleriesPaneInner").height();
			$("#galleriesPaneInner").lovelyScrollMove(pageH);
			return false;
		}
		if (e.keyCode==34) { // pagedown
			var pageH = $("#galleriesPaneInner").height();
			$("#galleriesPaneInner").lovelyScrollMove(-pageH);
			return false;
		}
	});
}
function unassignKeys () {
	$(document).unbind("keydown");
	$(document).unbind("keyup");
	$(document).unbind("keypress");

	$(document).keydown(function (e) {
		if (e.keyCode==8) { // backspace
			return false;
		}
	});
}
function assignPagesKeys () {
	$(document).unbind("keydown");
	$(document).unbind("keyup");

	assignSelectionKeys();


	$(document).keydown(function (e) {

		if (e.keyCode==13) { // enter
			if ($("#adminPages .listItemHighlight").length==1) {
				if ($("#adminPages .listItemHighlight").attr("data-page-redirect-to")=="") {
					$("#adminPages .listItemHighlight").each(function(){
						$("#loadingMask").show();
						window.location="pagesEditPage.php?viewVersion="+$(this).attr("id");
					});
				}

			}
		}
		if (e.keyCode==8) { // backspace
			if ($("#adminPages .listItemHighlight").length) {
				prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Page_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deletePages,false,true);
			}
			return false;

		}
		if (e.keyCode==68) { // d
			if (metaDown) {
				pastePages("duplicate_pages");
				e.preventDefault();
			}
		}
		/*
		if (e.keyCode==67) { // c
			if (modDown) {
				pagesCutCopy("copy_page");
				e.preventDefault();
			}
		}
		if (e.keyCode==88) { // x
			if (modDown) {
				pagesCutCopy("cut_page");
				e.preventDefault();
			}
		}
		if (e.keyCode==86) { // v
			if (modDown) {
				if (!$("#iconbarPastePages").hasClass("greyedOut")) {
					pastePages("paste_page");
				}
			}
			return false;
		}
		*/
		if (e.keyCode==76) { // l
			//if (metaDown) {
				if ($("#adminPages .listItemHighlight").length>0) {
					toggleLive("yes");
				}
				//}
			return false;
		}
		if (e.keyCode==79) { // o
			//if (metaDown) {
			if ($("#adminPages .listItemHighlight").length>0) {
				toggleLive("");
			}
			//}
			return false;
		}
		if (e.keyCode==78) { // n
			if (!metaDown) {
				addPage();
				e.preventDefault();
				return false;
			}


		}
		if (e.keyCode==33) { // pageup
			var pageH = $("#adminPages .pagesScroll").height();
			$("#adminPages .pagesScroll").lovelyScrollMove(pageH,pagesScrollBottomPane);
			return false;
		}
		if (e.keyCode==34) { // pagedown
			var pageH = $("#adminPages .pagesScroll").height();
			$("#adminPages .pagesScroll").lovelyScrollMove(-pageH,pagesScrollBottomPane);
			return false;
		}

	});
}
function assignSaveListener () {
	$(document).unbind("keydown");
	$(document).unbind("keyup");
	$(document).unbind("keypress");

	assignSelectionKeys();

	$(document).keydown(function (e) {
		//alert(e.keyCode);
		if (e.keyCode==90) { // z
			if (metaDown&&!shiftDown) {
				undo();
			}
			if (metaDown&&shiftDown) {
				redo();
			}
			return false;
		}
		if (e.keyCode==78) { // n
			changeStyleOL();
		}
		if (e.keyCode==66) { // b
			changeStyleUL();
		}
		/*
		if (e.keyCode==88) { // x
			if (modDown) {
				cut();
				e.preventDefault();
			}
		}*/
		if (e.keyCode==68) { // d
			if (metaDown) {
				duplicate();
				e.preventDefault();
				return false;
			}
		}
		/*if (e.keyCode==86) { // v
			if (modDown) {
				paste();
				e.preventDefault();
			}
		}*/
		if (e.keyCode==67) { // c
			if (metaDown) {
				//copy();
				//e.preventDefault();ch
			} else {
				changeStylePre();
			}

		}

		if (e.keyCode==80) { // p
			changeStyleP();
		}

		if (e.keyCode==81) { // q
			changeTextAlignment("left");
			changeAdvancedStyle("Left_Image","image");
		}
		if (e.keyCode==87) { // w
			changeTextAlignment("center");			
			changeAdvancedStyle("Centered","image");
		}
		if (e.keyCode==69) { // e
			changeTextAlignment("right");
			changeAdvancedStyle("Right_Image","image");
		}
		
		
		if (e.keyCode==83) { // s (styles)
			changeAdvancedStyle("cms_cycle_***",false);
		}
		if (e.keyCode==72) { // h
			changeStyleH("cycle");
		}

		if (e.keyCode==13) { // enter
			if ($(".bpe_highlight").length==1) {
				$(".bpe_highlight").each(function(){
					if ($(this).hasClass("textareaWrapper")) {
						$("textarea",$(this)).trigger("click").focus();
						return false;
					}
					if ($(this).hasClass("bpe_image")) {
						editImage($(this));
					}
				});
			}
		}
		if (e.keyCode==8) { // backspace
			if (!$(".textareaWrapper textarea:focus").length) {
				removeEls();
				return false;
			}


		}

    });

//	assignSaveBlogListener();
}
function assignSaveBlogListener () {
	$(document).keypress(function (e) {
		if ($("#editBlogForm").length>0) {
		}
    });
}
function assignSnippetsKeys () {
	$(document).unbind("keydown");
	$(document).unbind("keyup");
	$(document).unbind("keypress");
	assignSelectionKeys();
	$(document).keydown(function (e) {
		if (e.keyCode==8) { // backspace
			if ($("#snippetsPaneInner .listItemHighlight").length) {
	prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Snippets_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteSnippets,false,true);
			}
			return false;
		}
		if (e.keyCode==68) { // d
			if (modDown) {
				if ($("#snippetsPaneInner .listItemHighlight").length) {
					duplicateSnippets();
				}
				e.preventDefault();
			}
		}
		if (e.keyCode==78) { // n
			if (!modDown) {
				addSnippet();
				e.preventDefault();
			}

			return false;
		}
		if (e.keyCode==13) { // enter
			if ($("#snippetsPaneInner .listItemHighlight").length==1) {
				window.location="/admin/editSnippet.php?id="+$("#snippetsPaneInner .listItemHighlight").attr("id");
			}
			return false;
		}
		if (e.keyCode==33) { // pageup
			var pageH = $("#snippetsPaneInner").height();
			$("#snippetsPaneInner").lovelyScrollMove(pageH,pagesScrollBottomSnippets);
			return false;
		}
		if (e.keyCode==34) { // pagedown
			var pageH = $("#snippetsPaneInner").height();
			$("#snippetsPaneInner").lovelyScrollMove(-pageH,pagesScrollBottomSnippets);
			return false;
		}
	});
}
function assignTablesKeys () {
	$(document).unbind("keydown");
	$(document).unbind("keyup");
	$(document).unbind("keypress");
	assignSelectionKeys();
	
	$(document).keydown(function (e) {
		if (e.keyCode==13) { // enter
			if ($("#tablesPaneInner .listItemHighlight").length==1) {
				prepDialogue("<h2>"+LangVars.Add_Table_Data+"</h2><p>"+LangVars.Add_Table_Data_Text+"</p>",LangVars.Cancel,cancelDialogue,LangVars.Import,addTableData,false,true,true,"tableData");
			
			}
			return false;
		}
		if (e.keyCode==8) { // backspace
			if ($("#tablesPaneInner .listItemHighlight").length) {
	prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Tables_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteTables,false,true);
			}
			return false;
		}
		if (e.keyCode==68) { // d
			if (modDown) {
				if ($("#snippetsPaneInner .listItemHighlight").length) {
					duplicateSnippets();
				}
				e.preventDefault();
			}
		}
		if (e.keyCode==78) { // n
			if (!modDown) {
				addTable();
				e.preventDefault();
			}

			return false;
		}
		
		if (e.keyCode==33) { // pageup
			var pageH = $("#snippetsPaneInner").height();
			$("#snippetsPaneInner").lovelyScrollMove(pageH,pagesScrollBottomSnippets);
			return false;
		}
		if (e.keyCode==34) { // pagedown
			var pageH = $("#snippetsPaneInner").height();
			$("#snippetsPaneInner").lovelyScrollMove(-pageH,pagesScrollBottomSnippets);
			return false;
		}
	});
}
function assignSnippetCategoriesKeys () {
	$(document).unbind("keydown");
	$(document).unbind("keyup");
	$(document).unbind("keypress");
	assignSelectionKeys();
	$(document).keyup(function (e) {
		if (e.keyCode==13) { // enter
			if ($("#rightPaneSnippetCategories .listItemHighlight").length==1) {
				editSnippetCategory($("#snippetCategoriesPaneInner .listItemHighlight"));
			}
			return false;
		}
	});
	$(document).keydown(function (e) {
		if (e.keyCode==8) { // backspace
			deleteSnippetCategoriesPrep();
			return false;
		}
		if (e.keyCode==78) { // n
			if (!modDown) {
				addSnippetCategory();
				e.preventDefault();
			}

			return false;
		}
		if (e.keyCode==33) { // pageup
			var pageH = $("#productCategoriesPaneInner").height();
			$("#productCategoriesPaneInner").lovelyScrollMove(pageH);
			return false;
		}
		if (e.keyCode==34) { // pagedown
			var pageH = $("#productCategoriesPaneInner").height();
			$("#productCategoriesPaneInner").lovelyScrollMove(-pageH);
			return false;
		}
	});
}
function assignFilesKeys () {
	$(document).unbind("keydown");
	$(document).unbind("keyup");
	$(document).unbind("keypress");
	assignSelectionKeys();
	$(document).keydown(function (e) {
		if (e.keyCode==8) { // backspace
			if ($("#filesPaneInner .listItemHighlight").length) {
	prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Files_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteFiles,false,true);
			}
			return false;
		}
		if (e.keyCode==78) { // n
			if (!modDown) {
				showUploadFile();
				e.preventDefault();
			}

			return false;
		}
		if (e.keyCode==13) { // enter
			if ($("#filesPaneInner .listItemHighlight").length==1) {
				downloadFile();
			}
			return false;
		}
		if (e.keyCode==33) { // pageup
			var pageH = $("#filesPaneInner .pagesScroll").height();
			$("#filesPaneInner .pagesScroll").lovelyScrollMove(pageH,pagesScrollBottomDownloadsFiles);
			return false;
		}
		if (e.keyCode==34) { // pagedown
			var pageH = $("#filesPaneInner .pagesScroll").height();
			$("#filesPaneInner .pagesScroll").lovelyScrollMove(-pageH,pagesScrollBottomDownloadsFiles);
			return false;
		}
	});
}
function assignNewsletterKeys () {
	$(document).unbind("keydown");
	$(document).unbind("keyup");
	$(document).unbind("keypress");
	assignSelectionKeys();
	$(document).keydown(function (e) {
		if (e.keyCode==8) { // backspace
			deleteMailingListPrep();
			return false;
		}
		if (e.keyCode==78) { // n
			if (!modDown) {
				addMailingList();
				e.preventDefault();
			}

			return false;
		}
		if (e.keyCode==13) { // enter
			if ($("#newsletterPaneInner .listItemHighlight").length==1) {
				showSubscribers($("#newsletterPaneInner .listItemHighlight"));
			}
			return false;
		}
		if (e.keyCode==33) { // pageup
			var pageH = $("#newsletterPaneInner").height();
			$("#newsletterPaneInner").lovelyScrollMove(pageH);
			return false;
		}
		if (e.keyCode==34) { // pagedown
			var pageH = $("#newsletterPaneInner").height();
			$("#newsletterPaneInner").lovelyScrollMove(-pageH);
			return false;
		}
	});
}
function assignNewsletterSubscribersKeys () {
	$(document).unbind("keydown");
	$(document).unbind("keyup");
	$(document).unbind("keypress");
	assignSelectionKeys();
	$(document).keyup(function (e) {
		if (e.keyCode==13) { // enter
			if ($("#rightPaneNewsletterSubscribers .listItemHighlight").length==1) {
				editSubscriber($("#rightPaneNewsletterSubscribers .listItemHighlight"));
			}
			return false;
		}
	});
	$(document).keydown(function (e) {
		if (e.keyCode==8) { // backspace
			deleteSubscribersPrep();
			return false;
		}
		if (e.keyCode==78) { // n
			if (!modDown) {
			newSubscriber();
			e.preventDefault();
			}

			return false;
		}
		if (e.keyCode==76) { // l
			//if (metaDown) {
				if ($("#newsletterSubscribersPaneInner .listItemHighlight").length>0) {
					toggleSubInactive("");
				}
			//}
			return false;
		}
		if (e.keyCode==79) { // o
			//if (metaDown) {
				if ($("#newsletterSubscribersPaneInner .listItemHighlight").length>0) {
					toggleSubInactive("yes");
				}
			//}
			return false;
		}
		if (e.keyCode==33) { // pageup
			var pageH = $("#newsletterSubscribersPaneInner").height();
			$("#newsletterSubscribersPaneInner").lovelyScrollMove(pageH,pagesScrollMailingListSubs);
			return false;
		}
		if (e.keyCode==34) { // pagedown
			var pageH = $("#newsletterSubscribersPaneInner").height();
			$("#newsletterSubscribersPaneInner").lovelyScrollMove(-pageH,pagesScrollMailingListSubs);
			return false;
		}
	});
}
function assignSubscriberCategoriesKeys () {
	$(document).unbind("keydown");
	$(document).unbind("keyup");
	$(document).unbind("keypress");
	assignSelectionKeys();
	$(document).keyup(function (e) {
		if (e.keyCode==13) { // enter
			if ($("#rightPaneSubscriberCategories .listItemHighlight").length==1) {
				editSubscriberCategory($("#subscriberCategoriesPaneInner .listItemHighlight"));
			}
			return false;
		}
	});
	$(document).keydown(function (e) {
		if (e.keyCode==8) { // backspace
			deleteSubscriberCategoriesPrep();
			return false;
		}
		if (e.keyCode==78) { // n
			if (!metaDown) {
				addSubscriberCategory();
				e.preventDefault();
			}

			return false;
		}
		if (e.keyCode==33) { // pageup
			var pageH = $("#subscriberCategoriesPaneInner").height();
			$("#subscriberCategoriesPaneInner").lovelyScrollMove(pageH);
			return false;
		}
		if (e.keyCode==34) { // subscriberCategoriesPaneInner
			var pageH = $("#productCategoriesPaneInner").height();
			$("#subscriberCategoriesPaneInner").lovelyScrollMove(-pageH);
			return false;
		}
	});
}
function assignEventGroupKeys () {
	$(document).unbind("keydown");
	$(document).unbind("keyup");
	$(document).unbind("keypress");
	assignSelectionKeys();
	$(document).keyup(function (e) {
		if (e.keyCode==13) { // enter
			if ($("#rightPaneEventsGroups .listItemHighlight").length==1) {
				editEventGroup($("#eventsGroupsPaneInner .listItemHighlight"));
			}
			return false;
		}
	});
	$(document).keydown(function (e) {
		if (e.keyCode==8) { // backspace
			deleteEventGroupPrep();
			return false;
		}
		if (e.keyCode==78) { // n
			if (!metaDown) {
				addEventGroup();
				e.preventDefault();
			}

			return false;
		}
		if (e.keyCode==33) { // pageup
			var pageH = $("#eventsGroupsPaneInner").height();
			$("#eventsGroupsPaneInner").lovelyScrollMove(pageH);
			return false;
		}
		if (e.keyCode==34) { // subscriberCategoriesPaneInner
			var pageH = $("#eventsGroupsPaneInner").height();
			$("#eventsGroupsPaneInner").lovelyScrollMove(-pageH);
			return false;
		}
	});
}
function assignBlogKeys () {
	$(document).unbind("keydown");
	$(document).unbind("keyup");
	$(document).unbind("keypress");
	assignSelectionKeys();
	$(document).keyup(function (e) {
		if (e.keyCode==13) { // enter
			if ($("#rightPaneBlog .listItemHighlight").length==1) {
				editBlog($("#rightPaneBlog .listItemHighlight"));
			}
			return false;
		}
	});
	$(document).keydown(function (e) {
		if (e.keyCode==8) { // backspace
			deleteBlogPrep();
			return false;
		}
		if (e.keyCode==78) { // n
			if (!modDown){
			addBlog();
			e.preventDefault();
			}

			return false;
		}
		if (e.keyCode==76) { // l
			//if (modDown) {
				if ($("#rightPaneBlog .listItemHighlight").length>0) {
					toggleBlogLive("yes");
				}
			//}
			return false;
		}
		if (e.keyCode==79) { // o
			//if (modDown) {
				if ($("#rightPaneBlog .listItemHighlight").length>0) {
					toggleBlogLive("");
				}
			//}
			return false;
		}
		if (e.keyCode==33) { // pageup
			var pageH = $("#blogPaneInner").height();
			$("#blogPaneInner").lovelyScrollMove(pageH,pagesScrollBottomBlog);
			return false;
		}
		if (e.keyCode==34) { // pagedown
			var pageH = $("#blogPaneInner").height();
			$("#blogPaneInner").lovelyScrollMove(-pageH,pagesScrollBottomBlog);
			return false;
		}
	});
}
function assignBlogAuthorsKeys () {
	$(document).unbind("keydown");
	$(document).unbind("keyup");
	$(document).unbind("keypress");
	assignSelectionKeys();
	$(document).keyup(function (e) {
		if (e.keyCode==13) { // enter
			if ($("#rightPaneBlogAuthors .listItemHighlight").length==1) {
				editBlogAuthor($("#blogAuthorsPaneInner .listItemHighlight"));
			}
			return false;
		}
	});
	$(document).keydown(function (e) {
		if (e.keyCode==8) { // backspace
			deleteBlogAuthorsPrep();
			return false;
		}
		if (e.keyCode==78) { // n
			if (!modDown) {
			addBlogAuthor();
			e.preventDefault();
			}

			return false;
		}
		if (e.keyCode==33) { // pageup
			var pageH = $("#blogAuthorsPaneInner").height();
			$("#blogAuthorsPaneInner").lovelyScrollMove(pageH);
			return false;
		}
		if (e.keyCode==34) { // pagedown
			var pageH = $("#blogAuthorsPaneInner").height();
			$("#blogAuthorsPaneInner").lovelyScrollMove(-pageH);
			return false;
		}
	});
}
function assignBlogCategoriesKeys () {
	$(document).unbind("keydown");
	$(document).unbind("keyup");
	$(document).unbind("keypress");
	assignSelectionKeys();
	$(document).keyup(function (e) {
		if (e.keyCode==13) { // enter
			if ($("#rightPaneBlogCategories .listItemHighlight").length==1) {
				editBlogCategory($("#blogCategoriesPaneInner .listItemHighlight"));
			}
			return false;
		}
	});
	$(document).keydown(function (e) {
		if (e.keyCode==8) { // backspace
			deleteBlogCategoriesPrep();
			return false;
		}
		if (e.keyCode==78) { // n
			if (!modDown) {
				addBlogCategory();
				e.preventDefault();
			}

			return false;
		}
		if (e.keyCode==33) { // pageup
			var pageH = $("#blogCategoriesPaneInner").height();
			$("#blogCategoriesPaneInner").lovelyScrollMove(pageH);
			return false;
		}
		if (e.keyCode==34) { // pagedown
			var pageH = $("#blogCategoriesPaneInner").height();
			$("#blogCategoriesPaneInner").lovelyScrollMove(-pageH);
			return false;
		}
	});
}
function assignBlogCommentsKeys () {
	$(document).unbind("keydown");
	$(document).unbind("keyup");
	$(document).unbind("keypress");
	assignSelectionKeys();
	$(document).keyup(function (e) {
		if (e.keyCode==13) { // enter
			if ($("#rightPaneBlogComments .listItemHighlight").length==1) {
				editBlogComment($("#blogCategoriesPaneInner .listItemHighlight"));
			}
			return false;
		}
	});
	$(document).keydown(function (e) {
		if (e.keyCode==8) { // backspace
			deleteBlogCommentsPrep();
			return false;
		}
		if (e.keyCode==78) { // n
			if (!modDown) {
				addCommentReply();
				e.preventDefault();
			}

			return false;
		}
		if (e.keyCode==76) { // l
			if (modDown) {
				if ($("#rightPaneBlogComments .listItemHighlight").length>0) {
							blogCommentApproval("approve");
				}
			}
			return false;
		}
		if (e.keyCode==79) { // o
			if (modDown) {
				if ($("#rightPaneBlogComments .listItemHighlight").length>0) {
							blogCommentApproval("unapprove");
				}
			}
			return false;
		}
		if (e.keyCode==33) { // pageup
			var pageH = $("#blogCommentsPaneInner").height();
			$("#blogCommentsPaneInner").lovelyScrollMove(pageH);
			return false;
		}
		if (e.keyCode==34) { // pagedown
			var pageH = $("#blogCommentsPaneInner").height();
			$("#blogCommentsPaneInner").lovelyScrollMove(-pageH);
			return false;
		}
	});
}
function assignCheckoutKeys () {
	$(document).unbind("keydown");
	$(document).unbind("keyup");
	$(document).unbind("keypress");
	assignSelectionKeys();
	$(document).keyup(function (e) {
		if (e.keyCode==13) { // enter
			if ($("#rightPaneCheckout .listItemHighlight").length==1) {
				editCheckoutOrder($("#rightPaneCheckout .listItemHighlight"));
			}
			return false;
		}
	});
	$(document).keydown(function (e) {
		if (e.keyCode==8) { // backspace
			deleteOrdersPrep();
			return false;
		}
		if (e.keyCode==33) { // pageup
			var pageH = $("#checkoutPaneInner").height();
			$("#checkoutPaneInner").lovelyScrollMove(pageH);
			return false;
		}
		if (e.keyCode==34) { // pagedown
			var pageH = $("#checkoutPaneInner").height();
			$("#checkoutPaneInner").lovelyScrollMove(-pageH);
			return false;
		}
	});
}
function assignLivechatKeys () {
	$(document).unbind("keydown");
	$(document).unbind("keyup");
	$(document).unbind("keypress");
	assignSelectionKeys();
	$(document).keyup(function (e) {
		if (e.keyCode==13) { // enter
			if ($("#rightPaneLivechat .listItemHighlight").length==1) {
				openChat($("#rightPaneLivechat .listItemHighlight"));
			}
			return false;
		}
	});
	$(document).keydown(function (e) {
		if (e.keyCode==8) { // backspace
			prepDeleteLivechats();
			return false;
		}
		if (e.keyCode==33) { // pageup
			var pageH = $("#livechatPaneInner").height();
			$("#livechatPaneInner").lovelyScrollMove(pageH);
			return false;
		}
		if (e.keyCode==34) { // pagedown
			var pageH = $("#livechatPaneInner").height();
			$("#livechatPaneInner").lovelyScrollMove(-pageH);
			return false;
		}
	});
}
function assignStaffKeys () {
	$(document).unbind("keydown");
	$(document).unbind("keyup");
	$(document).unbind("keypress");
	assignSelectionKeys();
	$(document).keyup(function (e) {
		if (e.keyCode==13) { // enter
			if ($("#rightPaneStaff .listItemHighlight").length==1) {
				editStaff($("#rightPaneStaff .listItemHighlight"));
			}
			return false;
		}
	});
	$(document).keydown(function (e) {
		if (e.keyCode==8) { // backspace
			prepDeleteStaff();
			return false;
		}
		if (e.keyCode==78) { // n
			if (!modDown) {
				addStaff();
				e.preventDefault();
			}

			return false;
		}
		if (e.keyCode==33) { // pageup
			var pageH = $("#staffPaneInner").height();
			$("#staffPaneInner").lovelyScrollMove(pageH);
			return false;
		}
		if (e.keyCode==34) { // pagedown
			var pageH = $("#staffPaneInner").height();
			$("#staffPaneInner").lovelyScrollMove(-pageH);
			return false;
		}
	});
}
function softPagination (obj) {
	windowH = $(window).height()-230;
	lines = windowH / 23;
	lines = Math.floor(lines);
	items = $("a",obj).length;
	pages = items / lines;
	pages = parseInt(Math.floor(pages));
	page = pages;
	obj.prepend("<div class=\"filterBox\"><div class=\"clear\"><!-- --></div></div>");
	for (var i=0; i <= pages; i++) {
		p = page+1;
		if (i==pages) {
			$(".filterBox",obj).prepend("<a href=\""+p+"\" class=\"filterPage currentFilterPage\">"+p+"</a>");
		} else {
			$(".filterBox",obj).prepend("<a href=\""+p+"\" class=\"filterPage\">"+p+"</a>");
		}

		page = page-1;
	};

	 for(var i=0;i<=pages;i++)
	    {
	        $("a:not(.filterBox a)",obj).slice(i*lines,(i+1)*lines).wrapAll('<div class="softPage" />');
	    }
	$(".softPage",obj).hide();
	$(".softPage:first",obj).show();
	$(".filterBox a",obj).click(function(){
		$(".softPage",obj).hide();
		num = parseInt($(this).attr("href"));
		num = num-1;
		$(".softPage:eq("+num+")",obj).show();
		$(".filterBox a.currentFilterPage",obj).removeClass("currentFilterPage");
		$(this).addClass("currentFilterPage");
	});
}
var darkScrollCount = 0;
function darkScroll (obj) {
	if ($(".darkMenuSubWrapper .darkSubMenuOuter",obj).length>0) {
		var height = obj.height();
		var ofTop = obj.offset();
		ofTop = ofTop.top-$(document).scrollTop();
		var wHeight = $(window).height();
		var occ = ofTop+height;
		occ = occ + 10;
		wHeight = wHeight - 68;
		if (occ>wHeight)
		{
			var sub = occ-wHeight;

			if (sub<ofTop)
			{
				sub = sub-45;
				// just need to move it up
				obj.css("top","-"+sub+"px");
			}
			else
			{
				obj.css("padding","0");
				ofTop = ofTop-50;
				obj.css("top","-"+ofTop+"px");
				tHeight = wHeight-23;
				var items = tHeight / 23;
				items = Math.floor(items);
				var i = 1;

				var parent = $("#convos,#openOrders",obj);
				var scrolling = 0;
				function scrollDown () {
					if (parent.children("a:not(.scrollDown,.scrollUp):visible,.darkMenuSubWrapper:visible").last().next("a:hidden,.darkMenuSubWrapper:hidden").length>0) {

						$(".darkSubMenuOuter").hide();

						if ($(".scrollUp.hidden").length) {
							$(".scrollUp").removeClass("hidden");
						}
						parent.children("a:not(.scrollDown,.scrollUp):visible,.darkMenuSubWrapper:visible").last().next("a:hidden,.darkMenuSubWrapper:hidden").show();

						parent.children("a:not(.scrollDown,.scrollUp):visible,.darkMenuSubWrapper:visible").first().hide();
						darkScrollCount++;

						if ($("#convos .darkMenuMessage").nextAll("a:visible").length==0) {
							$("#convos .darkMenuMessage").hide();
							$("#convos .darkMenuMessage").prev().hide();
						} else {
							$("#convos .darkMenuMessage").show();
							$("#convos .darkMenuMessage").prev().show();
						}


					} else {
						clearInterval(scrolling);
						$(".scrollDown",obj).addClass("hidden");
					}


				}
				function catchUp () {
					if (parent.children("a:not(.scrollDown,.scrollUp):visible,.darkMenuSubWrapper:visible").last().next("a:hidden,.darkMenuSubWrapper:hidden").length>0) {
						if ($(".scrollUp.hidden").length) {
							$(".scrollUp").removeClass("hidden");
						}				parent.children("a:not(.scrollDown,.scrollUp):visible,.darkMenuSubWrapper:visible").last().next("a:hidden,.darkMenuSubWrapper:hidden").show();
						parent.children("a:not(.scrollDown,.scrollUp):visible,.darkMenuSubWrapper:visible").first().hide();
						if ($("#convos .darkMenuMessage").nextAll("a:visible").length==0) {
							$("#convos .darkMenuMessage").hide();
							$("#convos .darkMenuMessage").prev().hide();
						} else {
							$("#convos .darkMenuMessage").show();
							$("#convos .darkMenuMessage").prev().show();
						}
					} else {
						clearInterval(scrolling);
						$(".scrollDown",obj).addClass("hidden");
					}
				}
				function scrollUp () {
					$(".darkSubMenuOuter").hide();

					if (parent.children("a:not(.scrollDown,.scrollUp):visible,.darkMenuSubWrapper:visible").first().prevAll("a:hidden,.darkMenuSubWrapper:hidden").length>0 || $("#convos").children("a:not(.scrollDown,.scrollUp):hidden").length>0) {
						if ($(".scrollDown.hidden").length) {
							$(".scrollDown").removeClass("hidden");
						}

						if (parent.children("a:not(.scrollDown,.scrollUp):visible,.darkMenuSubWrapper:visible").first().prevAll("a:hidden,.darkMenuSubWrapper:hidden").length>0) {
							parent.children("a:not(.scrollDown,.scrollUp):visible,.darkMenuSubWrapper:visible").first().prevAll("a:hidden,.darkMenuSubWrapper:hidden").first().show();
						} else {
						$("#convos").children("a:not(.scrollDown,.scrollUp):hidden").last().show();
						}
						parent.children("a:not(.scrollDown,.scrollUp):visible,.darkMenuSubWrapper:visible").last().hide();
						darkScrollCount--;
						if ($("#convos .darkMenuMessage").nextAll("a:visible").length==0) {
							$("#convos .darkMenuMessage").hide();
							$("#convos .darkMenuMessage").prev().hide();
						} else {
							$("#convos .darkMenuMessage").show();
							$("#convos .darkMenuMessage").prev().show();
						}
					} else {
						clearInterval(scrolling);
						$(".scrollUp",obj).addClass("hidden");
					}


				}
				parent.children("a,.darkMenuSubWrapper").hide().each(function(){
					if (i < items) {
						$(this).show();
						if ($(this).prev().hasClass("bpe_rule")) {
							$(this).prev().show();
						}
					}
					if (i==items) {
						if ($(".scrollDown",obj).length==0) {
							obj.append("<a class='scrollDown'></a>");
							obj.prepend("<a class='scrollUp hidden'></a>");
						}


						$(".scrollDown",obj).unbind().hoverIntent(function(){
							scrolling = setInterval(scrollDown,100);
						},function(){
							clearInterval(scrolling);
						});
						$(".scrollUp",obj).unbind().hoverIntent(function(){
							scrolling = setInterval(scrollUp,100);
						},function(){
							clearInterval(scrolling);
						});
					}
					i++;
				});
				if (darkScrollCount!=0) {
					for (var i=0; i < darkScrollCount; i++) {
						catchUp();
					};
				}
			}
		}
	} else {
		obj.css("top","-5px");
		$(".darkSubMenuInner",obj).css("height","auto");
		height = obj.height();
		ofTop = obj.offset();
		ofTop = ofTop.top-$(document).scrollTop(); // distance from top edge
		wHeight = $(window).height();
		occ = ofTop+height;
		occ = occ + 10;
		wHeight = wHeight - 68;
		if (occ>wHeight) {
			sub = occ-wHeight;

			if (sub<ofTop) {
				sub = sub-45;
				// just need to move it up
				obj.css("top","-"+sub+"px");
			} else {
				ofTop = ofTop-50;
				obj.css("top","-"+ofTop+"px");
				tHeight = wHeight-15;
				$(".darkSubMenuInner",obj).css("height",tHeight+"px");
				$(".darkSubMenuInner",obj).css("overflow-y","scroll");
				// need to move it up and apply scrolling
			}
		}
	}

}
function menuScroll (obj,dontMove) {
	if (!obj.hasClass("menuScrollDone")) {
		if (typeof(dontMove)=="undefined") {
			if ($(".bpe_menu_bottom .bpe_menu_bottom",obj).length>0) { // has flyouts, use up/down buttons
				var height = obj.height();
				var ofTop = obj.offset();
				ofTop = ofTop.top-$(document).scrollTop();
				var wHeight = $(window).height();
				var occ = ofTop+height;
				occ = occ + 10;
				wHeight = wHeight - 68;
				if (occ>wHeight)
				{
					var sub = occ-wHeight;

					if (sub<ofTop)
					{
						sub = sub-45;
						// just need to move it up
						obj.css("top","-"+sub+"px").addClass("menuScrollDone");
					}
					else
					{
						obj.css("padding","0");
						ofTop = ofTop-50;
						obj.css("top","-"+ofTop+"px").addClass("menuScrollDone");;
						tHeight = wHeight-23;
						var items = tHeight / 23;
						items = Math.floor(items);
						var i = 1;
						if ($(".bpe_menu_bottom",obj).first().children("a,.bpe_menu_sub").length==0) {
							var parent = $(".bpe_menu_bottom",obj).first().children().first();
						} else {
							var parent = $(".bpe_menu_bottom",obj).first();
						}
						parent.children("a,.bpe_menu_sub").hide().each(function(){
							if (i < items) {
								$(this).show();
								if ($(this).prev().hasClass("bpe_rule")) {
									$(this).prev().show();
								}
							}
							if (i==items) {
								$(this).nextAll().last().after("<a class='scrollDown'></a>");
								$(this).prevAll().last().before("<a class='scrollUp hidden'></a>");
								var scrolling = 0;
								function scrollDown () {
									if (parent.children("a:not(.scrollDown,.scrollUp):visible,.bpe_menu_sub:visible").last().next("a:hidden,.bpe_menu_sub:hidden").length>0) {
										$(".bpe_sub_hilite2",obj).removeClass("bpe_sub_hilite2");
										$(".bpe_menu_sub_items2:visible").hide();
										if ($(".scrollUp.hidden").length) {
											$(".scrollUp").removeClass("hidden");
										}
										parent.children("a:not(.scrollDown,.scrollUp):visible,.bpe_menu_sub:visible").last().next("a:hidden,.bpe_menu_sub:hidden").show();
										if (parent.children("a:not(.scrollDown,.scrollUp):visible,.bpe_menu_sub:visible").first().next().hasClass("bpe_rule")) {
											parent.children("a:not(.scrollDown,.scrollUp):visible,.bpe_menu_sub:visible").first().next().hide();
										}
										parent.children("a:not(.scrollDown,.scrollUp):visible,.bpe_menu_sub:visible").first().hide();
									} else {
										clearInterval(scrolling);
										$(".scrollDown",obj).addClass("hidden");
									}


								}
								function scrollUp () {
									if (parent.children("a:not(.scrollDown,.scrollUp):visible,.bpe_menu_sub:visible").first().prevAll("a:hidden,.bpe_menu_sub:hidden").length>0) {
										$(".bpe_sub_hilite2",obj).removeClass("bpe_sub_hilite2");
										$(".bpe_menu_sub_items2:visible").hide();
										if ($(".scrollDown.hidden").length) {
											$(".scrollDown").removeClass("hidden");
										}
										parent.children("a:not(.scrollDown,.scrollUp):visible,.bpe_menu_sub:visible").first().prevAll("a:hidden,.bpe_menu_sub:hidden").first().show();
										if (parent.children("a:not(.scrollDown,.scrollUp):visible,.bpe_menu_sub:visible").first().next().hasClass("bpe_rule")) {
											parent.children("a:not(.scrollDown,.scrollUp):visible,.bpe_menu_sub:visible").first().next().show();
										}
									parent.children("a:not(.scrollDown,.scrollUp):visible,.bpe_menu_sub:visible").last().hide();
									} else {
										clearInterval(scrolling);
										$(".scrollUp",obj).addClass("hidden");
									}


								}
								$(".scrollDown",obj).hoverIntent(function(){
									scrolling = setInterval(scrollDown,100);
								},function(){
									clearInterval(scrolling);
								});
								$(".scrollUp",obj).hoverIntent(function(){
									scrolling = setInterval(scrollUp,100);
								},function(){
									clearInterval(scrolling);
								});
							}
							i++;
						});
					}
				}
			} else { // no flyouts,
				obj.css("top","-5px");
				$(".bpe_menu_bottom,.choices_inner_inner",obj).first().css("height","auto");
				height = obj.height();
				ofTop = obj.offset();
				ofTop = ofTop.top-$(document).scrollTop(); // distance from top edge
				wHeight = $(window).height();
				occ = ofTop+height;
				occ = occ + 10;
				if (obj.parents("#editPageTop").length) {
					wHeight = wHeight - 100;
				} else if (obj.parents(".bpe_toggler").length) {
					wHeight = wHeight - 150;
				} else {
					wHeight = wHeight - 68;
				}
				if (occ>wHeight) {
					sub = occ-wHeight;

					if (sub<ofTop) {
						if (obj.parents("#editPageTop").length) {
							sub = sub-70;
						} else if (obj.parents(".bpe_toggler").length) {
							sub = sub-120;
						} else {
							sub = sub-45;
						}

						// just need to move it up
						obj.css("top","-"+sub+"px");
					} else {
						if (obj.parents("#editPageTop").length) {
							ofTop = ofTop-78;
						} else if (obj.parents(".bpe_toggler").length) {
							ofTop = ofTop-128;
						} else {
							ofTop = ofTop-50;
						}
						obj.css("top","-"+ofTop+"px");
						tHeight = wHeight-15;
						$(".bpe_menu_bottom,.choices_inner_inner",obj).first().css("height",tHeight+"px");
						$(".bpe_menu_bottom,.choices_inner_inner",obj).first().css("overflow-y","scroll");
						// need to move it up and apply scrolling
					}
				}
			}
		} else {
			height = obj.height();
			ofTop = obj.offset();
			ofTop = ofTop.top-$(document).scrollTop(); // distance from top edge
			ofTop = ofTop+20;
			wHeight = $(window).height();
			occ = ofTop+height;
			occ = occ;
			if (occ>wHeight) {

				tHeight = wHeight-ofTop;
				$(obj).css("height",tHeight+"px");
				$(obj).css("overflow-y","scroll");
				// need to move it up and apply scrolling

			}
		}

	}


}
var ignoreClickCatchup=false;
var isMouseBased=true;
var isTouchBased=true;
function hidePanes () {
	$(".bpe_selection_tool").addClass("greyedOut");
	$(".listItemHighlight").removeClass("listItemHighlight");
	$("body").removeClass("selectingAll");
	$(".bpe_highlight").removeClass("bpe_highlight");
	$(".imageItemHighlight").removeClass("imageItemHighlight");
	/*
	if ($("body").hasClass("slideoverLeftPane")) {
		$("#leftPaneMask").fadeOut(100);
		$("#fixedMenus").animate({left:"-180px"},100,function(){
			hideTraining(true);
			showTraining(true);
		});
		$("body").removeClass("slideoverLeftPane");
	}
	if ($("body").hasClass("slideoverRightPane")) {
		$("#rightPaneMask").fadeOut(100);
		$("#dragInsert").animate({right:"-180px"},100,function(){
			hideTraining(true);
			showTraining(true);
			$("#dragInsert").hide();
		});
		$("body").removeClass("slideoverRightPane");
	}*/
}
var doubletap=false;
var touchdown = 0;
var dragging=false;
var dragScrolling = false;
var justSlidOne = false;
var cutting = false;
var mouseX =false;
var mouseY =false;
function showRightClick () {
		if ($("body").attr("pane")=="products" && !$("#rightPaneProductCategories:visible").length && !$("#rightPaneProductOptions:visible").length ) {
			$("#productsContextMenu").trigger("click");
		}
		if ($("body").attr("pane")=="embedCodes") {
			$("#embedCodesContextMenu").trigger("click");
		}
		if ($("body").attr("pane")=="files") {
			$(".filesContextMenu").trigger("click");
		}
		if ($("body").attr("pane")=="images"&&!$("#rightPaneImagesCategories").length) {
			$("#imagesContextMenu").trigger("click");
		}
		if ($("body").attr("pane")=="images"&&$("#rightPaneImagesCategories").length) {
			$("#imagesCategoriesContextMenu").trigger("click");
		}
		if ($("body").attr("pane")=="images") {
			$("#imagesContextMenu").trigger("click");
		}
		if ($("body").attr("pane")=="videos") {
			$("#videoContextMenu").trigger("click");
		}
		if ($("body").attr("pane")=="products" && !$("#rightPaneProductCategories:visible").length && $("#rightPaneProductOptions:visible").length ) {
			$("#productOptionsContextMenu").trigger("click");
		}
		if ($("body").attr("pane")=="products" && $("#rightPaneProductCategories:visible").length && !$("#rightPaneProductOptions:visible").length ) {
			$("#productCategoriesContextMenu").trigger("click");
		}
		if ($("body").attr("pane")=="mainMenuPages"||$("body").attr("pane")=="nonMenuPages") {
			$("#pagesContextMenu").trigger("click");
		}
		if ($("body").attr("pane")=="galleries"&&!$("#rightPaneGalleryImages:visible").length) {
			$("#galleriesContextMenu").trigger("click");
		}
		if ($("body").attr("pane")=="galleries"&&$("#rightPaneGalleryImages:visible").length) {
			$("#galleryImagesContextMenu").trigger("click");
		}
		if ($("body").attr("pane")=="checkout") {
			$("#ordersContextMenu").trigger("click");
		}
		if ($("body").attr("pane")=="snippets") {
			$("#snippetsContextMenu").trigger("click");
		}
		if ($("body").attr("pane")=="calendars"&& !$("#rightPaneCalendarEvents:visible").length) {
			$("#calendarsContextMenu").trigger("click");
		}
		if ($("body").attr("pane")=="calendars"&& $("#rightPaneCalendarEvents:visible").length) {
			$("#calendarEventsContextMenu").trigger("click");
		}
		if ($("body").attr("pane")=="forms"&&!$("#rightPaneFormInputs:visible").length&&!$("#rightPaneFormInputOptions:visible").length) {
			$("#formsContextMenu").trigger("click");
		}
		if ($("body").attr("pane")=="forms"&&$("#rightPaneFormInputs:visible").length&&!$("#rightPaneFormInputOptions:visible").length) {
			$("#formInputContextMenu").trigger("click");
		}
		if ($("body").attr("pane")=="forms"&&!$("#rightPaneFormInputs:visible").length&&$("#rightPaneFormInputOptions:visible").length) {
			$("#formInputOptionsContextMenu").trigger("click");
		}
		if ($("body").attr("pane")=="livechat") {
			$("#livechatContextMenu").trigger("click");
		}
		if ($("body").attr("pane")=="editContent") {
			$("#editPageContextMenu").trigger("click");
		}
		if ($("body").attr("pane")=="newsletter"&&$("#rightPaneNewsletterSubscribers:visible").length) {
			$("#newsletterSubscribersContextMenu").trigger("click");
		}
		if ($("body").attr("pane")=="newsletter"&&!$("#rightPaneNewsletterSubscribers:visible").length) {
			$("#newsletterContextMenu").trigger("click");
		}
		if ($("body").attr("pane")=="blog"&&!$("#rightPaneBlogAuthors:visible").length&&!$("#rightPaneBlogCategories:visible").length&&!$("#rightPaneBlogComments:visible").length) {
			$("#blogContextMenu").trigger("click");
		}
		if ($("body").attr("pane")=="blog"&&!$("#rightPaneBlogAuthors:visible").length&&!$("#rightPaneBlogCategories:visible").length&&$("#rightPaneBlogComments:visible").length) {
			$("#blogCommentsContextMenu").trigger("click");
		}
		if ($("body").attr("pane")=="blog"&&!$("#rightPaneBlogAuthors:visible").length&&$("#rightPaneBlogCategories:visible").length&&!$("#rightPaneBlogComments:visible").length) {
			$("#blogCategoriesContextMenu").trigger("click");
		}
		if ($("body").attr("pane")=="blog"&&$("#rightPaneBlogAuthors:visible").length&&!$("#rightPaneBlogCategories:visible").length&&!$("#rightPaneBlogComments:visible").length) {
			$("#blogAuthorsContextMenu").trigger("click");
		}
		if ($("body").attr("pane")=="staff"&&!$("#rightPanePermissionGroups").length) {
			$("#staffContextMenu").trigger("click");
		}
		if ($("body").attr("pane")=="staff"&&!$("#permissionGroupsContextMenu").length) {
			$("#permissionGroupsContextMenu").trigger("click");
		}
}
$(document).ready(function(){
	document.oncontextmenu = function(e) {

		if (!$("input:focus,textarea:focus:not(textarea#cutCopyPasteCapture:focus)").length) {
			return false;
		}
	};
	$(document).mousedown(function(e){
	    if( (e.button == 2) || (e.button==0&&ctrlDown) ) {
    		mouseX=e.pageX;
      		mouseY=e.pageY;
	      	$(".hideIfMouseBased").hide();
	      	if (!$("input:focus,textarea:focus:not(textarea#cutCopyPasteCapture:focus)").length) {
				e.preventDefault();
				showRightClick();


				return false;
	      	}
	    }
	  });
	$(window).mousemove(function(){
		if (isMouseBased&&!$("input:focus,textarea:focus").length&&!chatting) {
			isTouchBased=false;
			focusCutCopyPaste();
		}
	});
	$("#cutCopyPasteCapture").keydown(function(e){
		if (!metaDown) {
			e.preventDefault();
		}
	});
	$("#cutCopyPasteCapture").bind("input propertychange",function(){
		if (!cutting) {
			if ($("#cutCopyPasteCapture").val()=="") {
				if ($("body").attr("pane")=="editContent") {
					removeEls();
				}
				if ($("body").attr("pane")=="mainMenuPages") {
					prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Page_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deletePages,false,true,false,"");
				}
			}
		}
	});
	$("#cutCopyPasteCapture").bind("cut",function(){
		cutting=true;
		setTimeout(function() {
			cutting=false;
		}, 1000);
		if ($("body").attr("pane")=="editContent") {
			cut();
		}
		if ($("body").attr("pane")=="mainMenuPages") {
			pagesCutCopy("cut_page");
		}
	});
	$("#cutCopyPasteCapture").bind("copy",function(){
		if ($("body").attr("pane")=="editContent") {
			copy();
		}
		if ($("body").attr("pane")=="mainMenuPages") {
			pagesCutCopy("copy_page");
		}

	});
	$("#cutCopyPasteCapture").bind("paste",function(){
		$("#cutCopyPasteCapture").val(" ");
		if ($("body").attr("pane")=="editContent") {
			setTimeout(function() {

				if ($("#cutCopyPasteCapture").val()!="" && $("#cutCopyPasteCapture").val()!=" " && $("#cutCopyPasteCapture").val()!="  ") {

					var text = $("#cutCopyPasteCapture").val().split("\n\n");
					if ($(".bpe_highlight",$("#bpe_area")).length) {
						text=text.reverse();
					}

					for (var i=0; i < text.length; i++) {

						var str_text = $.trim(text[i]);
						str_text = toHTML(htmlentities(str_text).replace(/\n/,"<br />"));
						if ($(".bpe_highlight",$("#bpe_area")).length) {
							var editingtarget = $(".bpe_highlight",$("#bpe_area")).first();
							editingtarget.after("<p class=\"bpe_highlight_new\">"+str_text+"</p>");
						} else {
							$("#bpe_area").append("<p class=\"bpe_highlight_new\">"+str_text+"</p>");
							scrollDown = true;
						}
					};
					$(".bpe_highlight_new").addClass("bpe_highlight").removeClass("bpe_highlight_new");
					$(".bpe_mask").remove();
					$("#bpe_text_dropship").remove();
					$(".bpe_curently_editing").removeClass("bpe_curently_editing");
					$.fn.bpeditor.clean(true);
					assignSaveListener();
					assign_sort();
				} else {
					paste();
				}

				$("#cutCopyPasteCapture").val(" ").focus();
			}, 10);

		}
		if ($("body").attr("pane")=="mainMenuPages") {
			pastePages("paste_page");
		}

	});
	$("body").addClass("mousebased");
	var flag2=false;


	$("#leftPaneMask,#rightPaneMask").click(function(e){
		if ($(e.target).attr("id")=="leftPaneMask" || $(e.target).attr("id")=="rightPaneMask") {
			hidePanes();
		}
	});
	$(".buttonGroup,.showLeftPane,.showRightPane").bind('touchstart',function(event){
		event.preventDefault();
	});

	var touchTimer;
	var tap1;
	var startCoords;
	var curScroll;
	function touchHandler(event)
	{
	 var touches = event.changedTouches,
	    first = touches[0],
	    type = "";

	     switch(event.type)
	{
	    case "touchstart":
	    	startCoords=new Array(first.screenX,first.screenY);
			isMouseBased=false;
			isTouchBased=true;
			$("body").addClass("touchbased").removeClass("mousebased");
			type = "mousedown";
			touchdown++;



			function fireClick (args) {


				var first = args[0];
				var simulatedEvent = args[1]
				var event = args[2];
				mouseX=first.screenX;
	      		mouseY=first.screenY;
	      		if (!$("input:focus,textarea:focus").length) {
	      			showRightClick();
	      		}




				dragging=true;
				first.target.dispatchEvent(simulatedEvent);
				$target = $(first.target);
				if ($target.parents(".dragInsertItem").length)  {
					$target=$target.parents(".dragInsertItem");
				}
				if ($target.parents(".responsiveListItem").length)  {
					$target=$target.parents(".responsiveListItem");
				} else {
					if($target[0].tagName.toLowerCase()=="div") {
						if (!$target.hasClass("CMS_Component_Obs")) {
							if (!$target.hasClass("bpe_image")) {
							if (!$target.hasClass("dragTextArea")) {
								$target=$target.parents(".CMS_Component_Obs").first();
							}
							}

						}
					}
				}

				if ($target.hasClass("dragTextArea")) {
					$target=$target.parent();
				}

				$target.addClass("pickedUp");
			}
			var simulatedEvent = document.createEvent("MouseEvent");
			simulatedEvent.initMouseEvent(type, true, true, window, 1,
			                          first.screenX, first.screenY,
			                          first.clientX, first.clientY, false,
			                          false, false, false, 0/*left*/, null);
			$target=$(first.target);

			if (tap1===true) {
				event.preventDefault();
				touchTimer = setTimeout(fireClick, 400, [first,simulatedEvent,event]);
			}

			tap1=true;
			setTimeout(function () {
				tap1=false;
			}, 500);






		/*
			if ($target.parents(".dragInsertItem").length || $target.hasClass("dragInsertItem"))  {
				dragging=true;

				if ($target.parents(".dragInsertItem").length) {
					$target=$target.parents(".dragInsertItem");
				}
				$target.addClass("pickedUp");
				first.target.dispatchEvent(simulatedEvent);
				event.preventDefault();

			} else {*/

			//touchTimer = setTimeout(fireClick, 400, [first,simulatedEvent,event]);


		//	}

		break;
	    case "touchmove":
			tap1=false;
			type="mousemove";
			var endCoords=new Array(first.screenX,first.screenY);
			if (startCoords[0] > $(window).width()/30*2) {
				if ( (endCoords[1] >  startCoords[1]-10) && (endCoords[1] <  startCoords[1]+10) && (endCoords[0]>startCoords[0])) {

					if (paneTools && $(window).width()<500) {
						var dist = endCoords[0]-startCoords[0];
						$(".paneTools:visible").css("right","-"+dist+"px");
					}
					if (dragInsert) {
						var dist = endCoords[0]-startCoords[0];
						$("#dragInsert:visible").css("right","-"+dist+"px");
					}

					if (!paneTools && $("body").hasClass("storageDraggable") && !justSlidOne) {
						$(".assetPane:visible").css("right","-"+dist+"px");
					}
					if (endCoords[0]-startCoords[0]>50) {
						if ($("body").hasClass("storageDraggable") && !paneTools  && !justSlidOne) {
							if ($(".assetPane:visible").length) {
								$("body").attr("drag-pane",$("body").attr("pane"));
							}
							setTimeout(function() {
								$("body").removeAttr("previous-pane");
								$("body").attr("pane","editContent");
								$("body").removeClass("storageDraggable");

							}, 300);

							hideAssetPanes();

							$.fn.bpeditor.assign_toggler();
							assignSaveListener();
						}

						justSlidOne=true;

						hidePaneTools();
						hideDragInsert();


					}
				}
			}
			if (startCoords[0] > $(window).width()/2) {
				if (startCoords[0]-endCoords[0]>50) {
					if (!dragging) {
						selectionTools();
					}
				}

			}
			if (dragging===false) {
				dragScrolling = true;
				clearTimeout(touchTimer);
			} else {
				hide_header_menus();

				var simulatedEvent = document.createEvent("MouseEvent");
				simulatedEvent.initMouseEvent(type, true, true, window, 1,
				                          first.screenX, first.screenY,
				                          first.clientX, first.clientY, false,
				                          false, false, false, 0/*left*/, null);

				first.target.dispatchEvent(simulatedEvent);

			}
			if (!$("body").hasClass("noscroll")) {
				event.preventDefault();
			}

		break;
	    case "touchend":
	    	justSlidOne=false;

	    	if (paneTools && $(".paneTools:visible").css("right")!="0px") {
	    		$(".paneTools:visible").animate({right:0},100);
	    	}
	    	if (dragInsert && $("#dragInsert:visible").css("right")!="0px") {
	    		$("#dragInsert:visible").animate({right:0},100);
	    	}
	    	if ($("body").hasClass("storageDraggable") && $(".assetPane:visible").css("right")!="0px") {
	    		$(".assetPane:visible").animate({right:0},100);
	    	}
			type="mouseup";
			clearTimeout(touchTimer);

			if (dragging) {
				var simulatedEvent = document.createEvent("MouseEvent");
				simulatedEvent.initMouseEvent(type, true, true, window, 1,
				                          first.screenX, first.screenY,
				                          first.clientX, first.clientY, false,
				                          false, false, false, 0/*left*/, null);

				first.target.dispatchEvent(simulatedEvent);

			} else {
				if (!justScrolled && !dragScrolling) {

					type="click";
					var simulatedEvent = document.createEvent("MouseEvent");
					simulatedEvent.initMouseEvent(type, true, true, window, 1,
					                          first.screenX, first.screenY,
					                          first.clientX, first.clientY, false,
					                          false, false, false, 0, null);
					first.target.dispatchEvent(simulatedEvent);

				}
			}
			ignoreClickCatchup=true;
				setTimeout(function() {
				ignoreClickCatchup=false;
				}, 500);

			dragScrolling=false;
			dragging=false;
			$(".pickedUp").removeClass("pickedUp");
			if (first.target.tagName.toLowerCase()!="input"&&first.target.tagName.toLowerCase()!="textarea") {
				event.preventDefault();
			}


		break;
		case "touchcancel":
		clearTimeout(touchTimer);
 			$(".pickedUp").removeClass("pickedUp");
			dragging=false;
			event.preventDefault();
			ignoreClickCatchup=true;
			setTimeout(function() {
			ignoreClickCatchup=false;
			}, 1000);
		break;

	    default: return;
	}


	}

	document.addEventListener("touchstart", touchHandler, true);
   document.addEventListener("touchmove", touchHandler, true);
   document.addEventListener("touchend", touchHandler, true);
   document.addEventListener("touchcancel", touchHandler, true);

	$(".showMainMenu").click(function(){
		if (!$(this).hasClass("selected")) { // show
			hide_menus();

			$(this).addClass("selected");

			$("#darkMenuOuter,.darkSubMenuOuter").fadeOut();
			$("p,h1,h2,h3,h4,h5,pre,li,ul,ol,.bpe_image img,.bpe_table",".bpe_area").unbind();
			$(this).next().show();
			$("#statsWrapper").fadeTo("slow","0.33");

		} else { // hide
			hide_menus();
		}
		return false;
	})
	$(".showMenu").click(function(){
		$("#renamePallet").remove();
		if (!$(this).hasClass("faded")) {
			hide_menus();
			$("#darkMenuOuter,.darkSubMenuOuter").fadeOut();
			$("p,h1,h2,h3,h4,h5,pre,li,ul,ol,.bpe_image img,.bpe_table",".bpe_area").unbind();
			$(this).next().show();
			if ($(this).next().hasClass("menuScroll")) {
				menuScroll($(this).next());
			}

			$("#statsWrapper").fadeTo("slow","0.33");

		}
		return false;
	});

	$(".menu_with_options:not(#themeOptions .menu_with_options)").click(function(){
		return false;
	});

});


/* SWFObject v2.1 <http://code.google.com/p/swfobject/>
	Copyright (c) 2007-2008 Geoff Stearns, Michael Williams, and Bobby van der Sluis
	This software is released under the MIT License <http://www.opensource.org/licenses/mit-license.php>
*/
var swfobject=function(){var b="undefined",Q="object",n="Shockwave Flash",p="ShockwaveFlash.ShockwaveFlash",P="application/x-shockwave-flash",m="SWFObjectExprInst",j=window,K=document,T=navigator,o=[],N=[],i=[],d=[],J,Z=null,M=null,l=null,e=false,A=false;var h=function(){var v=typeof K.getElementById!=b&&typeof K.getElementsByTagName!=b&&typeof K.createElement!=b,AC=[0,0,0],x=null;if(typeof T.plugins!=b&&typeof T.plugins[n]==Q){x=T.plugins[n].description;if(x&&!(typeof T.mimeTypes!=b&&T.mimeTypes[P]&&!T.mimeTypes[P].enabledPlugin)){x=x.replace(/^.*\s+(\S+\s+\S+$)/,"$1");AC[0]=parseInt(x.replace(/^(.*)\..*$/,"$1"),10);AC[1]=parseInt(x.replace(/^.*\.(.*)\s.*$/,"$1"),10);AC[2]=/r/.test(x)?parseInt(x.replace(/^.*r(.*)$/,"$1"),10):0}}else{if(typeof j.ActiveXObject!=b){var y=null,AB=false;try{y=new ActiveXObject(p+".7")}catch(t){try{y=new ActiveXObject(p+".6");AC=[6,0,21];y.AllowScriptAccess="always"}catch(t){if(AC[0]==6){AB=true}}if(!AB){try{y=new ActiveXObject(p)}catch(t){}}}if(!AB&&y){try{x=y.GetVariable("$version");if(x){x=x.split(" ")[1].split(",");AC=[parseInt(x[0],10),parseInt(x[1],10),parseInt(x[2],10)]}}catch(t){}}}}var AD=T.userAgent.toLowerCase(),r=T.platform.toLowerCase(),AA=/webkit/.test(AD)?parseFloat(AD.replace(/^.*webkit\/(\d+(\.\d+)?).*$/,"$1")):false,q=false,z=r?/win/.test(r):/win/.test(AD),w=r?/mac/.test(r):/mac/.test(AD);/*@cc_on q=true;@if(@_win32)z=true;@elif(@_mac)w=true;@end@*/return{w3cdom:v,pv:AC,webkit:AA,ie:q,win:z,mac:w}}();var L=function(){if(!h.w3cdom){return }f(H);if(h.ie&&h.win){try{K.write("<script id=__ie_ondomload defer=true src=//:><\/script>");J=C("__ie_ondomload");if(J){I(J,"onreadystatechange",S)}}catch(q){}}if(h.webkit&&typeof K.readyState!=b){Z=setInterval(function(){if(/loaded|complete/.test(K.readyState)){E()}},10)}if(typeof K.addEventListener!=b){K.addEventListener("DOMContentLoaded",E,null)}R(E)}();function S(){if(J.readyState=="complete"){J.parentNode.removeChild(J);E()}}function E(){if(e){return }if(h.ie&&h.win){var v=a("span");try{var u=K.getElementsByTagName("body")[0].appendChild(v);u.parentNode.removeChild(u)}catch(w){return }}e=true;if(Z){clearInterval(Z);Z=null}var q=o.length;for(var r=0;r<q;r++){o[r]()}}function f(q){if(e){q()}else{o[o.length]=q}}function R(r){if(typeof j.addEventListener!=b){j.addEventListener("load",r,false)}else{if(typeof K.addEventListener!=b){K.addEventListener("load",r,false)}else{if(typeof j.attachEvent!=b){I(j,"onload",r)}else{if(typeof j.onload=="function"){var q=j.onload;j.onload=function(){q();r()}}else{j.onload=r}}}}}function H(){var t=N.length;for(var q=0;q<t;q++){var u=N[q].id;if(h.pv[0]>0){var r=C(u);if(r){N[q].width=r.getAttribute("width")?r.getAttribute("width"):"0";N[q].height=r.getAttribute("height")?r.getAttribute("height"):"0";if(c(N[q].swfVersion)){if(h.webkit&&h.webkit<312){Y(r)}W(u,true)}else{if(N[q].expressInstall&&!A&&c("6.0.65")&&(h.win||h.mac)){k(N[q])}else{O(r)}}}}else{W(u,true)}}}function Y(t){var q=t.getElementsByTagName(Q)[0];if(q){var w=a("embed"),y=q.attributes;if(y){var v=y.length;for(var u=0;u<v;u++){if(y[u].nodeName=="DATA"){w.setAttribute("src",y[u].nodeValue)}else{w.setAttribute(y[u].nodeName,y[u].nodeValue)}}}var x=q.childNodes;if(x){var z=x.length;for(var r=0;r<z;r++){if(x[r].nodeType==1&&x[r].nodeName=="PARAM"){w.setAttribute(x[r].getAttribute("name"),x[r].getAttribute("value"))}}}t.parentNode.replaceChild(w,t)}}function k(w){A=true;var u=C(w.id);if(u){if(w.altContentId){var y=C(w.altContentId);if(y){M=y;l=w.altContentId}}else{M=G(u)}if(!(/%$/.test(w.width))&&parseInt(w.width,10)<310){w.width="310"}if(!(/%$/.test(w.height))&&parseInt(w.height,10)<137){w.height="137"}K.title=K.title.slice(0,47)+" - Flash Player Installation";var z=h.ie&&h.win?"ActiveX":"PlugIn",q=K.title,r="MMredirectURL="+j.location+"&MMplayerType="+z+"&MMdoctitle="+q,x=w.id;if(h.ie&&h.win&&u.readyState!=4){var t=a("div");x+="SWFObjectNew";t.setAttribute("id",x);u.parentNode.insertBefore(t,u);u.style.display="none";var v=function(){u.parentNode.removeChild(u)};I(j,"onload",v)}U({data:w.expressInstall,id:m,width:w.width,height:w.height},{flashvars:r},x)}}function O(t){if(h.ie&&h.win&&t.readyState!=4){var r=a("div");t.parentNode.insertBefore(r,t);r.parentNode.replaceChild(G(t),r);t.style.display="none";var q=function(){t.parentNode.removeChild(t)};I(j,"onload",q)}else{t.parentNode.replaceChild(G(t),t)}}function G(v){var u=a("div");if(h.win&&h.ie){u.innerHTML=v.innerHTML}else{var r=v.getElementsByTagName(Q)[0];if(r){var w=r.childNodes;if(w){var q=w.length;for(var t=0;t<q;t++){if(!(w[t].nodeType==1&&w[t].nodeName=="PARAM")&&!(w[t].nodeType==8)){u.appendChild(w[t].cloneNode(true))}}}}}return u}function U(AG,AE,t){var q,v=C(t);if(v){if(typeof AG.id==b){AG.id=t}if(h.ie&&h.win){var AF="";for(var AB in AG){if(AG[AB]!=Object.prototype[AB]){if(AB.toLowerCase()=="data"){AE.movie=AG[AB]}else{if(AB.toLowerCase()=="styleclass"){AF+=' class="'+AG[AB]+'"'}else{if(AB.toLowerCase()!="classid"){AF+=" "+AB+'="'+AG[AB]+'"'}}}}}var AD="";for(var AA in AE){if(AE[AA]!=Object.prototype[AA]){AD+='<param name="'+AA+'" value="'+AE[AA]+'" />'}}v.outerHTML='<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"'+AF+">"+AD+"</object>";i[i.length]=AG.id;q=C(AG.id)}else{if(h.webkit&&h.webkit<312){var AC=a("embed");AC.setAttribute("type",P);for(var z in AG){if(AG[z]!=Object.prototype[z]){if(z.toLowerCase()=="data"){AC.setAttribute("src",AG[z])}else{if(z.toLowerCase()=="styleclass"){AC.setAttribute("class",AG[z])}else{if(z.toLowerCase()!="classid"){AC.setAttribute(z,AG[z])}}}}}for(var y in AE){if(AE[y]!=Object.prototype[y]){if(y.toLowerCase()!="movie"){AC.setAttribute(y,AE[y])}}}v.parentNode.replaceChild(AC,v);q=AC}else{var u=a(Q);u.setAttribute("type",P);for(var x in AG){if(AG[x]!=Object.prototype[x]){if(x.toLowerCase()=="styleclass"){u.setAttribute("class",AG[x])}else{if(x.toLowerCase()!="classid"){u.setAttribute(x,AG[x])}}}}for(var w in AE){if(AE[w]!=Object.prototype[w]&&w.toLowerCase()!="movie"){F(u,w,AE[w])}}v.parentNode.replaceChild(u,v);q=u}}}return q}function F(t,q,r){var u=a("param");u.setAttribute("name",q);u.setAttribute("value",r);t.appendChild(u)}function X(r){var q=C(r);if(q&&(q.nodeName=="OBJECT"||q.nodeName=="EMBED")){if(h.ie&&h.win){if(q.readyState==4){B(r)}else{j.attachEvent("onload",function(){B(r)})}}else{q.parentNode.removeChild(q)}}}function B(t){var r=C(t);if(r){for(var q in r){if(typeof r[q]=="function"){r[q]=null}}r.parentNode.removeChild(r)}}function C(t){var q=null;try{q=K.getElementById(t)}catch(r){}return q}function a(q){return K.createElement(q)}function I(t,q,r){t.attachEvent(q,r);d[d.length]=[t,q,r]}function c(t){var r=h.pv,q=t.split(".");q[0]=parseInt(q[0],10);q[1]=parseInt(q[1],10)||0;q[2]=parseInt(q[2],10)||0;return(r[0]>q[0]||(r[0]==q[0]&&r[1]>q[1])||(r[0]==q[0]&&r[1]==q[1]&&r[2]>=q[2]))?true:false}function V(v,r){if(h.ie&&h.mac){return }var u=K.getElementsByTagName("head")[0],t=a("style");t.setAttribute("type","text/css");t.setAttribute("media","screen");if(!(h.ie&&h.win)&&typeof K.createTextNode!=b){t.appendChild(K.createTextNode(v+" {"+r+"}"))}u.appendChild(t);if(h.ie&&h.win&&typeof K.styleSheets!=b&&K.styleSheets.length>0){var q=K.styleSheets[K.styleSheets.length-1];if(typeof q.addRule==Q){q.addRule(v,r)}}}function W(t,q){var r=q?"visible":"hidden";if(e&&C(t)){C(t).style.visibility=r}else{V("#"+t,"visibility:"+r)}}function g(s){var r=/[\\\"<>\.;]/;var q=r.exec(s)!=null;return q?encodeURIComponent(s):s}var D=function(){if(h.ie&&h.win){window.attachEvent("onunload",function(){var w=d.length;for(var v=0;v<w;v++){d[v][0].detachEvent(d[v][1],d[v][2])}var t=i.length;for(var u=0;u<t;u++){X(i[u])}for(var r in h){h[r]=null}h=null;for(var q in swfobject){swfobject[q]=null}swfobject=null})}}();return{registerObject:function(u,q,t){if(!h.w3cdom||!u||!q){return }var r={};r.id=u;r.swfVersion=q;r.expressInstall=t?t:false;N[N.length]=r;W(u,false)},getObjectById:function(v){var q=null;if(h.w3cdom){var t=C(v);if(t){var u=t.getElementsByTagName(Q)[0];if(!u||(u&&typeof t.SetVariable!=b)){q=t}else{if(typeof u.SetVariable!=b){q=u}}}}return q},embedSWF:function(x,AE,AB,AD,q,w,r,z,AC){if(!h.w3cdom||!x||!AE||!AB||!AD||!q){return }AB+="";AD+="";if(c(q)){W(AE,false);var AA={};if(AC&&typeof AC===Q){for(var v in AC){if(AC[v]!=Object.prototype[v]){AA[v]=AC[v]}}}AA.data=x;AA.width=AB;AA.height=AD;var y={};if(z&&typeof z===Q){for(var u in z){if(z[u]!=Object.prototype[u]){y[u]=z[u]}}}if(r&&typeof r===Q){for(var t in r){if(r[t]!=Object.prototype[t]){if(typeof y.flashvars!=b){y.flashvars+="&"+t+"="+r[t]}else{y.flashvars=t+"="+r[t]}}}}f(function(){U(AA,y,AE);if(AA.id==AE){W(AE,true)}})}else{if(w&&!A&&c("6.0.65")&&(h.win||h.mac)){A=true;W(AE,false);f(function(){var AF={};AF.id=AF.altContentId=AE;AF.width=AB;AF.height=AD;AF.expressInstall=w;k(AF)})}}},getFlashPlayerVersion:function(){return{major:h.pv[0],minor:h.pv[1],release:h.pv[2]}},hasFlashPlayerVersion:c,createSWF:function(t,r,q){if(h.w3cdom){return U(t,r,q)}else{return undefined}},removeSWF:function(q){if(h.w3cdom){X(q)}},createCSS:function(r,q){if(h.w3cdom){V(r,q)}},addDomLoadEvent:f,addLoadEvent:R,getQueryParamValue:function(v){var u=K.location.search||K.location.hash;if(v==null){return g(u)}if(u){var t=u.substring(1).split("&");for(var r=0;r<t.length;r++){if(t[r].substring(0,t[r].indexOf("="))==v){return g(t[r].substring((t[r].indexOf("=")+1)))}}}return""},expressInstallCallback:function(){if(A&&M){var q=C(m);if(q){q.parentNode.replaceChild(M,q);if(l){W(l,true);if(h.ie&&h.win){M.style.display="block"}}M=null;l=null;A=false}}}}}();

function prepForSave (addToUndo) {
//	$(".bpe_highlight").removeClass("bpe_highlight");
	// undo stack
	if (addToUndo) {
		if ($("#undoStack .viewing").length) {
			var e = $( document.createElement('input') ).data("content",$("#finalRedo").data("content"));  
			$("#undoStack").append(e);
		}
		$("#undoStack .viewing").removeClass("viewing");
		$("#bpe_redo").addClass("greyedOut");
		if ($("#entryTextAreaVal").val()!="") {
			var e = $( document.createElement('input') ).data("content",$("#entryTextAreaVal").val());  
			$("#undoStack").append(e);		
		}
		if ($("#undoStack").children().length) {
			$("#bpe_undo").removeClass("greyedOut");
		}
	}

	
	
	$area = $("#bpe_area");
	$("#temp").remove();
	var $temp = $("<div style=\"display:none;\" id=\"temp\"/>");
	$("body").append($temp);
	$temp.append($area.html());
	$(".tooltipTarget",$temp).removeClass("tooltipTarget");
	$(".bound",$temp).removeClass("bound");
	$(".drag,.dropzone,.itemTag,#bpe_invisbile_dropship,#bpe_text_dropship",$temp).remove();
	$(".ui-draggable",$temp).removeClass("ui-draggable");
	$(".ui-selectee",$temp).removeClass("ui-selectee");
	$(".ui-selected",$temp).removeClass("ui-selected");
	$(".ui-selectable",$temp).removeClass("ui-selectable");
	$(".dont_remove_highlight",$temp).removeClass("dont_remove_highlight");
	$(".bpe_highlight",$temp).removeClass("bpe_highlight");
	$(".bpe_stop",$temp).removeClass("bpe_stop");
	$("img,.bpe_split_divider,.CMS_Component_Obs,.bpe_image",$temp).removeAttr("style");
	$(".zonesDropBox",$temp).each(function(){
		$("*:first",$(this)).unwrap();
	});
	$(".textareaWrapper.el_table",$temp).each(function(){
		$(this).removeClass("el_table textareaWrapper notEmpty editing changed");
		var classes = $(this).attr("class");
		$(".bpe_table",$(this)).addClass(classes).insertAfter($(this));
		$(this).remove();
	});	
	$(".textareaWrapper:not(.el_table)",$temp).each(function(){
		var ta = $("textarea",$(this));
//	    ta.text(ta.val());
		$(this).removeClass("el_h1 el_h2 el_h3 el_h4 el_pre el_p el_ul el_ol textareaWrapper notEmpty level-1 level-2 level-3 stayhighlighted");
		var el = $(this).attr("data-el");
		var classes = $(this).attr("class");
		var align = $(this).css("text-align");
		var text = $("textarea",$(this)).val();
		var editingtarget = $(this);
		var idstring="";
		if ($(this).hasClass("editing")) {
			idstring = ' id="CMSLIVEUPDATE"';
		}
		$(this).removeClass("editing");
		if (el!="pre") {
			text = text.split("\n\n");						
		} else {
			var t2 = text;
			text = new Array();
			text[0] = t2;
		}
		if (align=="left") {
			textAlign = " style='text-align:left'";
		} else if (align=="center") {
			textAlign = " style='text-align:center'";
		} else if (align=="right") {
			textAlign = " style='text-align:right'";
		} else if (align=="justify") {
			textAlign = " style='text-align:justify'";
		} else {
			textAlign = "";
		}
		for (var i=0; i < text.length; i++) {
			if (el!="pre") {
			str_text = $.trim(text[i]);
			str_text = toHTML(htmlentities(str_text).replace(/(?:\r\n|\r|\n)/g,"<br/>"));
			} else {
			str_text = htmlentities(text[i]).replace(/(?:\r\n|\r|\n)/g,"<br/>");							
			}
			if (el=="ul"||el=="ol") {
				var htmlEl = "<li"+idstring+""+textAlign+" class=\""+classes+"\">"+str_text+"</li>";
			
				if (editingtarget.attr("data-level")=='1'){	
					if (editingtarget.prev().length && editingtarget.prev()[0].tagName.toLowerCase()==el) {					
						editingtarget.prev().append(htmlEl);
					} else {
						editingtarget.before("<"+el+">"+htmlEl+"</"+el+">");
					}
				}
			
				if (editingtarget.attr("data-level")=='2'){
					var lastL = $("> "+el+":last", $("> li:last",editingtarget.prev()) );
					if (lastL.length && !lastL.next().length) {
						lastL.append(htmlEl);
					} else {
						$("> li:last",editingtarget.prev()).append("<"+el+">"+htmlEl+"</"+el+">");
					}
				}
			
				if (editingtarget.attr("data-level")=='3'){
					var lastL = $("> "+el+":last", $("> li:last",$("> ul,> ol", $("> li:last",editingtarget.prev()) ).last()) );
					if (lastL.length && !lastL.next().length) {
						lastL.append(htmlEl);
					} else {
						$("> li:last",$("> ul,> ol", $("> li:last",editingtarget.prev() )).last()).append("<"+el+">"+htmlEl+"</"+el+">");
					}
				}
			
			} else {
				editingtarget.before("<"+el+""+textAlign+" class=\""+classes+"\" "+idstring+">"+str_text+"</"+el+">");
			}


		};
		editingtarget.remove();
	});
	var code = $temp.html();

	var reg = / class=""/g;
	code = code.replace(reg,"");

	reg = / id=""/g;
	code = code.replace(reg,"");

	reg = / class="undefined"/g;
	code = code.replace(reg,"");

	reg = / id="undefined"/g;
	code = code.replace(reg,"");

	reg = / class="undefined "/g;
	code = code.replace(reg,"");


	reg = / style="text-align: ([^"]*?);(.*?)"/g;
	code = code.replace(reg," style=\"text-align: $1;\"");

	reg = /opacity:1;/g;
	code = code.replace(reg,"");

	reg = / style=""/g;
	code = code.replace(reg,"");

	reg = / style="position: (.*?)"/g;
	code = code.replace(reg,"");

	reg = / style="opacity: (.*?)"/g;
	code = code.replace(reg,"");

	reg = / class="ui-sortable"/g;
	code = code.replace(reg,"");

	reg = / id="bpe_highlight"/g;
	code = code.replace(reg,"");

	reg = /<\/table>/g;
	code = code.replace(reg,"</table>\n");

	reg = /<\/td>/g;
	code = code.replace(reg,"</td>\n");

	reg = /<\/th>/g;
	code = code.replace(reg,"</th>\n");

	reg = /<\/thead>/g;
	code = code.replace(reg,"</thead>\n");

	reg = /<\/tbody>/g;
	code = code.replace(reg,"</tbody>\n");

	reg = /<\/p>/g;
	code = code.replace(reg,"</p>\n");

	reg = /<\/h1>/g;
	code = code.replace(reg,"</h1>\n");

	reg = /<\/h2>/g;
	code = code.replace(reg,"</h2>\n");

	reg = /<\/h3>/g;
	code = code.replace(reg,"</h3>\n");

	reg = /<\/h4>/g;
	code = code.replace(reg,"</h4>\n");

	reg = /<\/h5>/g;
	code = code.replace(reg,"</h5>\n");

	reg = /<\/ul>/g;
	code = code.replace(reg,"</ul>\n");

	reg = /<\/ol>/g;
	code = code.replace(reg,"</ol>\n");

	reg = /<\/li>/g;
	code = code.replace(reg,"</li>\n");

	reg = /<img(.*?)>/g;
	code = code.replace(reg,"<img$1 />\n");

	reg = /<img(.*?)>/g;
	code = code.replace(reg,"<img$1 />\n");

//	$area.empty().append(code);


//	code = $temp.html();

	reg = /bpe_highlight/g;
	code = code.replace(reg,"");

	reg = /(\r\n|\n|\r)/gm;
	code = code.replace(reg,"");

//	reg = /<div class="bpe_split_divider (.*?)" alt="(.*?)">(.*?)<\/div>/g;
//	code2 = code.replace(reg,"<div class=\"bpe_split_divider $1\" alt=\"$2\"></div>\n");

	$("#entryTextAreaVal").val(code);
	$("#temp2").remove();
	var $temp2 = $("<div style=\"display:none;\" id=\"temp2\"/>");
	$("body").append($temp2);
	$temp2.append($area.html());
	$("textarea",$temp2).removeAttr("style");
	$(".bound",$temp2).removeClass("bound");
	$(".editing",$temp2).removeClass("editing");
	$(".bpe_highlight",$temp2).removeClass("bpe_highlight");
	$(".dont_remove_highlight",$temp2).removeClass("dont_remove_highlight");
	$(".ui-draggable",$temp2).removeClass("ui-draggable");
	$(".ui-selectee",$temp2).removeClass("ui-selectee");
	$(".ui-selected",$temp2).removeClass("ui-selected");
	$(".ui-selectable",$temp2).removeClass("ui-selectable");
	$(".stayhighlighted",$temp2).removeClass("stayhighlighted");
	$(".dropshipToolbarBottom,.format_mttri,.format_triShadow,.format_second_block",$temp2).hide();
	$("#entryTextAreaValEditor").val($temp2.html());
	
}
var livepreviewToggle=1;
function toggleLivepreviews() {
	$("#livepreview:visible iframe").css("left","-100%");
	$("#iframe"+livepreviewToggle).css('left','0');
}
function livepreview () {
		
		$("#previewSite,#previewSiteDouble,#previewDraft,#previewDraftDouble,#previewLive,#previewLiveDouble,#previewUpdatedOffline,#previewUpdatedOfflineDouble,#saveEditPage,#publishInPreview,#blogPreviewUnavailable").hide();
		$("#livePreviewHeader").removeClass("draft").removeClass("updated_live").removeClass("live_website").removeClass("updated_offline");
		var ifst = $("#iframe"+livepreviewToggle).contents().scrollTop();

		if (livepreviewToggle==2) {
			livepreviewToggle=1;
		} else {
			livepreviewToggle=2;
		}
		$("#livepreview:visible iframe").unbind("load").load(function(){
			toggleLivepreviews();
			$(this).contents().scrollTop(ifst);
		});
		$("#shareMenuPopup").hide();
		$("#shareMenu a").unbind().click(function(){
				window.open($(this).attr("href"));
		});
		if ($("body").attr("pane")=="editContent"||($(".assetPane:visible").length&&$("body").attr("previous-pane")=="editContent")) {
			//$("#saveEditPage").show();
			$(".previewPageText,.previewChangesText").hide();
			if ($("#saveEditPage").hasClass("unavailable")) {
				if ($("#pageStatus").val()=="yes") {
					$("#previewLive,#previewLiveDouble").show();
					$("#livePreviewHeader").addClass("updated_live");
					$("#shareMenuPopup,#shareMenu").show();

				} else {
					$("#shareMenuPopup,#shareMenu").hide();

					$("#previewUpdatedOffline,#previewUpdatedOfflineDouble").show();	
					$("#livePreviewHeader").addClass("updated_offline");
				}
				$(".previewPageText").show();
			} else {
				$("#shareMenuPopup,#shareMenu").hide();
				if ($(window).width()>1260) {
					$("#previewArrow").show();	
				}
				
				$("#saveEditPage,#publishInPreview").show();
				$("#previewDraft,#previewDraftDouble").show();
				$(".previewChangesText").show();
				$("#livePreviewHeader").addClass("draft");
			}
			if ($("#livepreview:visible").length) {
				if ($("#previewPage").attr("href")=="noblogset") {
					$("#blogPreviewUnavailable").show();
					if ($("#publishInPreview:visible").length===0) {
						$("#previewArrow").hide();
					}
					
				} else {

					if ($("#previewPage").attr("href")=="refresh") {

						var href = $("#livepreview:visible iframe:visible").contents().get(0).location.href;

						if (href=="about:blank") {
							$("#iframe"+livepreviewToggle).attr("src","/");
						} else {
							$("#iframe"+livepreviewToggle).attr("src",href);	
						}
						
					} else {
						$("#iframe"+livepreviewToggle).attr("src",$("#previewPage").attr("href"));		
					}
					
				}
				
			}
			
		} else {
			$("#previewSite,#previewSiteDouble").show();
			$("#livePreviewHeader").addClass("live_website");
//			$("#livepreview iframe").show();
//			$("#blogPreviewUnavailable").show();
			if ($("#livepreview:visible").length) {
				var href = $("#livepreview:visible iframe:visible").contents().get(0).location.href;

				if (href=="about:blank"||href.match(/preview/)||$("body").attr("pane")=="lp") {
					
					href="/";
				}
				$("#iframe"+livepreviewToggle).attr("src",href);	
			}

		}

		
		if ($("#saveEditPage:visible").length) {
			if (currentTooltip) {
				interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
				clearTimeout(toolTipTimeout);
			}
			currentTooltipItem=0;
			currentTooltip="publish";
			toolTipTimeout = setTimeout(tooltip, 10);
		}
		
	
	
}

function autosave (addToUndo) {

	function autosaveMain() {
		prepForSave(addToUndo);
		if ($('#addEntryForm input[name=autosave]').length>0) {

			$("#saveEditPage.unavailable,#publishInPreview.unavailable").removeClass("unavailable").attr("title",LangVars.Publish_Draft);
			/*
			if (!$("body").hasClass("hideTips")) {
				$("#publishDraft").show();
				$("#pageIsLive").hide();
				var h = $("#publishDraft").height()+26+55;
				$("#contentWrapper").css("bottom",h+"px");
			}
			*/
	//		working();

			function showResponse (responseText, statusText) {
			
				$("#versions,#versionsTiny").html(responseText);
				//$("#versions").show();
			
				if ($("#showingOnly").length) {
					if ($("#addEntryForm").hasClass("editingSnippet")) {
						window.location="/admin/editSnippet.php?id="+responseText;
					} else if ($("#addEntryForm").hasClass("editingBlog")) {
						window.location="/admin/blogActions.php?blogAction=viewVersion&id="+responseText;
					}	else if ($("#addEntryForm").hasClass("editingSitewide")) {
							window.location="/admin/editSitewideContent.php?name="+responseText;
						} else {
						window.location="/admin/pagesEditPage.php?viewVersion="+responseText;					
					}
				}
				$(".noBackups").hide();
				$(".latestVersion").show();
				$("#loadBackup").show();
				saved("Page autosaved");

				if (currentTooltip) {
					interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
					clearTimeout(toolTipTimeout);
				}
				currentTooltipItem=0;
				currentTooltip="publish";
				toolTipTimeout = setTimeout(tooltip, 10);
			}		
			var options = { 
		        success:       showResponse  // post-submit callback 
		        ,type:"POST"
		    };
			if ($("#entryrightWrapper").css("display")=="none"){
				$("#entryright").val("");
			} 
			if ($("#entryleftWrapper").css("display")=="none"){
				$("#entryleft").val("");
			}
			if ($("#entry2leftWrapper").css("display")=="none"){
				$("#entry2left").val("");
			}
			if ($("#entry2rightWrapper").css("display")=="none"){
				$("#entry2right").val("");
			}
		
			$('#addEntryForm').ajaxSubmit(options);
		} else {
			$('#addEntryForm').append("<input type='hidden' name='autosave' value=''/>");
		}
	}
	if ($(".textareaWrapper.el_table.changed",$("#bpe_area")).length) {
		$(".textareaWrapper.el_table.changed",$("#bpe_area")).each(function(){
			var str_text = $("textarea",$(this)).val();
			str_text = toHTML(str_text);
			
			var editingtarget = $(this);
			$.ajax({
			  type: "POST",
			  url: "pageActions.php",
			  data: "pageAction=csv2html&text="+encodeURIComponent(str_text),
			  success: function(msg){
				if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

						editingtarget.removeClass("changed");
						$(".bpe_table",editingtarget).remove();
						editingtarget.append("<div class=\"bpe_table\">"+msg+"</div>");
						setTimeout(function () {
						autosaveMain();
					}, 10);

			  }
			});
		
		});
	} else {
		autosaveMain();
	}
	

}
function saveChanges () {
	logTrainingClick("clickPublishPage");
	prepForSave(false);
	cancelDialogue();
	$("#saveEditPage,#publishInPreview").addClass("unavailable").attr("title",LangVars.Page_Is_Published);
	/*
	if (!$("body").hasClass("hideTips")) {
		$("#publishDraft").hide();
		$("#pageIsLive").show();
		var h = $("#pageIsLive").height()+26+55;
		$("#contentWrapper").css("bottom",h+"px");
	}
	*/
	$("#selectedMailingListPage").attr("page-id","").attr("data-static-pages-versions-id","").html(LangVars.Choose_page).parent().addClass("empty");
	$('#addEntryForm input[name=autosave]').remove();
	working();
	function showResponse (responseText, statusText) {
		if (responseText=="already_exists") {
			error(LangVars.Misc_Error);
		} else {
			$("#pageStatus").val("yes");
			saved("Page saved");
			$("#versions,#versionsTiny").html(responseText);
			//$("#versions").show();
			
			/*if ($("#showingOnly").is(":visible")) {
				window.location="/admin/pagesEditPage.php?title="+$("#kbid").val();
			}*/
			$(".noBackups").hide();
			$(".latestVersion").show();
			$("#loadBackup").show();
			$('#addEntryForm').append("<input type='hidden' name='autosave' value=''/>");

			assign_sort();
		}
	}		
	var options = { 
        success:       showResponse  // post-submit callback 
        ,type:"POST"
    };
	if ($("#entryrightWrapper").css("display")=="none"){
		$("#entryright").val("");
	} 
	if ($("#entryleftWrapper").css("display")=="none"){
		$("#entryleft").val("");
	}
	if ($("#entry2leftWrapper").css("display")=="none"){
		$("#entry2left").val("");
	}
	if ($("#entry2rightWrapper").css("display")=="none"){
		$("#entry2right").val("");
	}
	$('#addEntryForm').ajaxSubmit(options);
//	$("#pageTitleTitle").html($("#shortTitleValue").val());
//	$("#pageTitleURL").html($("#urlValue").val());
//	$("#pageTitleURLspan a").attr("href","/"+$("#urlValue").val()+"/");
	//hide_menus();
}
 var myScroll = new Array();
 function refreshScrollHeights() {
	 $(".scrollWrapper:visible:not(.textEditingArea)").lovelyScroll();
	 if (!$(".textareaWrapper textarea:focus").length) {
		 // Removed 9 Jan
		 //$(".textEditingArea").lovelyScroll();	 	
	 }
	 setTimeout(function () {
		 $(".textareaWrapper:visible textarea").trigger('autosize.resize');
	 }, 10);

 }
var afterResizingVideoTimer;
var windowwidth;
$(document).ready(function(){
	windowwidth=$(window).width();
});

$(window).resize(function(){
	if ($(window).width()!=windowwidth) {
		windowwidth=$(window).width();			
	
		if ($("body").hasClass("playingHelp")) {
			if (!$(".jp-video-full").length) {
				clearTimeout(afterResizingVideoTimer);
				afterResizingVideoTimer = setTimeout(function () {
					var video = $("#helpVideoPlayer").data("playing");
					var dim = getVideoSize();
					makeVideo("helpVideoPlayer",dim[0],dim[1],"/admin/graphics/play.png",video,true,false);						
				}, 1000);
			
			}
		}
	}

	if ($("body").hasClass("showingResize")) {
		if ($(window).width()>=1260) {
			hideToolTips(true);
		}
	}
	if ($("#dragBoundry").width()<700) { 
		$("body").addClass("under700");
	} else {
		$("body").removeClass("under700");			
	}
	if ($("#dragBoundry").width()<590) { 
		$("body").addClass("under590");
	} else {
		$("body").removeClass("under590");
	}
	if ($(window).width()<1260) { 
		$("#loadingPNGWrap,#dragBoundry,#launchPad,#popupDialogue,#lightPagesOuter,#contentWrapper,#editPageTop,#rightPane .cleverFilterBar,.rightPane:visible:not(.storageDraggable .rightPane),#campaigns").css("width","100%").css("right","0");
		$("#livepreview").css("left","0");
		var left = $(window).width();
		var di = left-80;
		$("#dragInsert,.storageDraggable .rightPane:visible").css("width",di+"px").css("right","0px");
	} else {
		
		var avail = $(window).width()-320;
		if (livepreviewresize<avail && !$("body").hasClass("livepreviewDisabled")) {
			var left = livepreviewresize;
		} else {

			var left = 847+16;

		}
		
		$("#livepreviewmask").hide();
		$("#editPageTop,#rightPane .cleverFilterBar").css("right","auto");
		var cw = left;
		$("#dragBoundry,#launchPad,#popupDialogue,#lightPagesOuter,#downloadsPopdownOuter,#orderPopdownOuter,#loadingPNGWrap,#contentWrapper,#editPageTop,#rightPane .cleverFilterBar,#campaigns").css("width",cw+"px");
		var di = left-80;
		$(".cleverFilterBar:not(#rightPane .cleverFilterBar)").width("width",di+"px");
		var lpw = $("#dragBoundry").width();
		var tw = $(window).width();
		tw = tw-lpw;
		var r = tw+"px";
		$("#dragInsert,.storageDraggable .rightPane:visible").css("width",di+"px").css("right",r);
		$(".rightPane:visible:not(.storageDraggable .rightPane)").css("width",lpw).css("right",r);
		$("#livepreviewResize").css("left",left+"px");
		left = parseFloat(left)+17;
		$("#livepreview,#livepreviewmask").css("left",left+"px");

		
	}
//	if (typeof left != 'undefined') {
		
		
//	}
	setDragPreviewLimits();
	$.fn.bpeditor.makeTabsOneLine();
//	$("#leftPaneMask").fadeOut();
//	$("#fixedMenus,#dragInsert").removeAttr("style");
	var iconbarMenuMaxHeight=$(document).height()-140;
	$(".iconbarMenuScroll").css("max-height",iconbarMenuMaxHeight+"px");
	$("#fixedMenus").removeAttr("style");
	if (!$("#rightPane:visible").length) {
//		$("#dragInsert").hide();
	}
	$("body").removeClass("slideoverLeftPane");
	$("body").removeClass("slideoverRightPane");	
	$("#leftPaneMask,#rightPaneMask").fadeOut();
	hideTraining(true);
	showTraining(true);

	refreshScrollHeights();
	initLP();
	dragInsertButtons();
	
});
window.onorientationchange = function() {
	setTimeout(function(){
		window.scrollTo(0, 1);
		window.scrollTo(0, 0);
	}, 10);
	var iconbarMenuMaxHeight=$(document).height()-140;
	$(".iconbarMenuScroll").css("max-height",iconbarMenuMaxHeight+"px");
	$("#fixedMenus").removeAttr("style");
	$("body").removeClass("slideoverLeftPane");
	$("#leftPaneMask").fadeOut();	
	hideTraining(true);
	showTraining(true);
}
$(window).load(function(){
	$(window).trigger("resize");
	$(".textareaWrapper textarea").trigger('autosize.resize');
	var iconbarMenuMaxHeight=$(document).height()-140;
	$(".iconbarMenuScroll").css("max-height",iconbarMenuMaxHeight+"px");	
	//$("#loadingMask").hide();
	//saved();	
});
$(document).ready(function(){
//		width = $("#editMenu .showMenu span").width();
//		width  = width+40;
//		$("#editMenu").css("width",width+"px").addClass("centered");
		
/*		assignSaveListener();*/	
			$("a.returnTrue").click(function(){
				
				if (justScrolled) {return false;}
				if (ignoreClickCatchup) {return false;}
				window.location=$(this).attr("href");
				//return true;
			});
		$(".iconbarMenuScroll").scroll(function(){
			justScrolled=true;
			if (scrollTimeout) {
				clearTimeout(scrollTimeout);
			}
			scrollTimeout = setTimeout(function() {
				justScrolled=false;
			},500);
		});
		
		$(".iconbarRule,.iconbarMenuScroll:not(#trashMenuPages .iconbarMenuScroll)").click(function(){
			return false;
		});
		$("#bpe_copy").unbind().click(function(){
			if (justScrolled) {return false;}
			copy();
			$(".iconbarMenu").hide();
			$(".bpe_menu_contents").hide();
			hide_header_menus();
			return false;
		});
		$("#bpe_cut").unbind().click(function(){
			if (justScrolled) {return false;}
			cut();
			$(".iconbarMenu").hide();
			$(".bpe_menu_contents").hide();
			hide_header_menus();
			return false;
		});
		$("#bpe_paste").unbind().click(function(){
			if (justScrolled) {return false;}
			paste();
			$(".iconbarMenu").hide();
			$(".bpe_menu_contents").hide();
			hide_header_menus();
			return false;
		});
		$(".bpe_duplicate").unbind().click(function(){
			if (justScrolled) {return false;}
			duplicate();
			$(".iconbarMenu").hide();
			$(".bpe_menu_contents").hide();
			hide_header_menus();
			return false;
		});
		$("#bpe_undo").unbind().click(function(){
			if (justScrolled) {return false;}
			logTrainingClick("clickUndoInPagesEditPage");
			undo();	
			$(".iconbarMenu").hide();
			$(".bpe_menu_contents").hide();
			hide_header_menus();
			return false;
		});
		$("#bpe_redo").unbind().click(function(){
			if (justScrolled) {return false;}
			redo();	
			$(".iconbarMenu").hide();
			$(".bpe_menu_contents").hide();
			hide_header_menus();
			return false;
		});
		$("#bpe_select_all").unbind().click(function(){
			if (justScrolled) {return false;}
			$("p,h1,h2,h3,h4,h5,pre,li,.bpe_table,div.CMS_Component_Obs,.bpe_image",$("#bpe_area")).addClass("bpe_highlight");
			if ($(".bpe_highlight").length) {
				$(".bpe_selection_tool").removeClass("greyedOut");
			}
			$(".iconbarMenu").hide();
			selectionTools();
			hide_header_menus();
			return false;
		});
		$("#bpe_deselect_all").unbind().click(function(){
			if (justScrolled) {return false;}
			$(".bpe_toggler").css("display","none")
			$(".bpe_highlight").removeClass("bpe_highlight");
			if ($(".bpe_highlight").length) {
				$(".bpe_selection_tool").removeClass("greyedOut");
			} else {
				$(".bpe_selection_tool").addClass("greyedOut");
			}
			$(".iconbarMenu").hide();
			selectionTools();
			hide_header_menus();
			return false;
		});
		$(".bpe_delete").unbind().click(function(){
			if (justScrolled) {return false;}
			logTrainingClick("clickDeleteInPagesEditMenu");
			removeEls();
			
			$(".bpe_menu_contents").hide();
			$(".iconbarMenu").hide();
			hide_header_menus();
			return false;
		});
		
		setModKeys();		
		$(".option_change_gallery a").click(function(){
			var obj = $(this);
			options_start(obj);
			$.ajax({
			  type: "POST",
			  url: "pageActions.php",
			  data: "pageAction=change&action=gallery&id="+$("#kbid").val()+"&gallery="+$(this).attr("href"),
			  success: function(msg){
				option_end(obj);
			  }
			});
			if ($(this).attr("href")!="") {
				$("#secondSection").fadeIn(100);
				$("#assignListGallery").fadeIn(100);
			} else {
				$("#assignListGallery").fadeOut(100);
			}
			return false;
		});
		$(".option_change_playlist a").click(function(){
			var obj = $(this);
			var id = $("#kbid").val();
			options_start(obj);
			$.ajax({
			  type: "POST",
			  url: "pageActions.php",
			  data: "pageAction=change&action=playlist&id="+id+"&playlist="+$(this).attr("href"),
			  success: function(msg){
				option_end(obj);	
			  }
			});
			if ($(this).attr("href")!="") {
				$("#secondSection").fadeIn(100);
				$("#assignListPlaylist").fadeIn(100);
			} else {
				$("#assignListPlaylist").fadeOut(100);
			}
			return false;
		});
		$(".option_change_form a").click(function(){
			var obj = $(this);
			var id = $("#kbid").val();
			options_start(obj);
			$.ajax({
			  type: "POST",
			  url: "pageActions.php",
			  data: "pageAction=change&action=form&id="+id+"&form="+$(this).attr("href"),
			  success: function(msg){
				option_end(obj);	
			  }
			});
			if ($(this).attr("href")=="newsletter") {
				$("#secondSection").fadeIn(100);
				$("#assignListForm").fadeOut(100);

				$("#assignListNewsletter").fadeIn(100);

			} else if ($(this).attr("href")!=""){
					$("#secondSection").fadeIn(100);
					$("#assignListNewsletter").fadeOut(100);
					$("#assignListForm").fadeIn(100);

			} else {
				$("#assignListNewsletter").fadeOut(100);
				$("#assignListForm").fadeOut(100);

			}
			return false;
		});
		$(".option_change_calendar a").click(function(){
			var obj = $(this);
			var id = $("#kbid").val();
			options_start(obj);
			$.ajax({
			  type: "POST",
			  url: "pageActions.php",
			  data: "pageAction=change&action=calendar&calendar="+$(this).attr("href")+"&id="+id,
			  success: function(msg){
				option_end(obj);	
			  }
			});
			if ($(this).attr("href")!="") {
				$("#secondSection").fadeIn(100);
				$("#assignListCal").fadeIn(100);
			} else {
				$("#assignListCal").fadeOut(100);
			}
			return false;
		});
		$(".option_change_blog a").click(function(){
			var obj = $(this);
			var id = $("#kbid").val();
			options_start(obj);
			$.ajax({
			  type: "POST",
			  url: "pageActions.php",
			  data: "pageAction=change&action=blog&blog="+$(this).attr("href")+"&id="+id,
			  success: function(msg){
				option_end(obj);	
			  }
			});
			if ($(this).attr("href")!="") {
				$("#secondSection").fadeIn(100);
				$("#assignListBlog").fadeIn(100);
			} else {
				$("#assignListBlog").fadeOut(100);
			}
			return false;
		});
		$(".option_change_shop a").click(function(){
			var obj = $(this);
			var id = $("#kbid").val();
			options_start(obj);
			$.ajax({
			  type: "POST",
			  url: "pageActions.php",
				data: "pageAction=change&action=shop&id="+id+"&shop_action="+$(this).attr("href"),
			  success: function(msg){
				option_end(obj);	
			  }
			});
			if ($(this).attr("href")!="") {
				$("#secondSection").fadeIn(100);
				$("#assignListShop").fadeIn(100);
			} else {
				$("#assignListShop").fadeOut(100);
			}
			return false;
		});
		$(".option_change_sitemap a").click(function(){
			var obj = $(this);
			var id = $("#kbid").val();
			options_start(obj);
			$.ajax({
			  type: "POST",
			  url: "pageActions.php",
			  data: "pageAction=change&action=sitemap&sitemap="+$(this).attr("href")+"&id="+id,
			  success: function(msg){
				option_end(obj);	
			  }
			});
			if ($(this).attr("href")!="") {
				$("#secondSection").fadeIn(100);
				$("#assignListSitemap").fadeIn(100);
			} else {
				$("#assignListSitemap").fadeOut(100);
			}
			return false;
		});
		$("#addEntryForm").submit(function(){
			saveChanges();
			return false;
		});
		$("#saveEditPage,#publishInPreview").click(function(){
			if (!$(this).hasClass("unavailable") && !$(this).hasClass("faded")) {
				if ($("#pageStatus").val()=="yes") {
					dismissEditors();
					saveChanges();
				} else {
					prepDialogue("<h2>"+LangVars.Page_Offline+"</h2><p>"+LangVars.Page_Offline_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Yes,saveChanges,false,true,false,"");
				}
			}
			 if ($(this).hasClass("faded")) {
			 	error(LangVars.Publish_No_Privileges);
			 }
			return false;
		});
		$("#backToPages").click(function(){
			
			hidePanes();
			$("input").unbind();
			$("#loadingMask").show();
			$("body").attr("pane","mainMenuPages");
//			$("#mainMenuNew li.selected").removeClass("selected");
			hide_iconbar_menus();
			$("#iconbarAddPage").removeClass("subMenuPages");
			$("#iconbarAddPage").removeClass("mainMenuPages");
			$("#iconbarAddPage").addClass("nonMenuPages");
			$("#rightPanePages").show();
//			$("#adminPages #mainMenuPagesMain").hide();
//			$("#adminPages #nonLinkingPagesMain").show();
			working();
			$("#loadingMask").show();
			var toShow = "showNonLinkers";
			$("#iconbarLanguagePages,#pagesMoreLangs").hide();
			$("#dragBoundry").droppable("destroy");
			$("#adminPages").load("pages.php?to_prevent_cache="+(new Date).getTime(),function(){
				$("#rightPane,#dragInsert").hide();
				$("body").removeClass("noscroll");
				$("#loadingMask").hide();
				$("#level1Switcher li.current").removeClass("current");
				if ($("#adminPages #mainMenuPagesMain:visible").length){
					$("body").attr("pane","mainMenuPages");
					$("#tab2MainMenuPages").addClass("current");
					$("#pagesMoreLangs").show();
					if (currentTooltip) {
						interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
						clearTimeout(toolTipTimeout);
					}
					currentTooltipItem=0;
					currentTooltip="mainmenupages";
					toolTipTimeout = setTimeout(tooltip, 1000);
				} else {
					$("#level1Target span").html(LangVars.Non_Menu_Pages);
					$("#tab2NonMenuPages").addClass("current");
					$("body").attr("pane","nonMenuPages");
				}
				assignPages();
				assign_page_filter();
				saved();
				$(window).trigger("resize");

				
			});
			return false;
		});
		
		/* end edit page */
});

/*! iScroll v5.1.1 ~ (c) 2008-2014 Matteo Spinelli ~ http://cubiq.org/license */
(function (window, document, Math) {
var rAF = window.requestAnimationFrame	||
	window.webkitRequestAnimationFrame	||
	window.mozRequestAnimationFrame		||
	window.oRequestAnimationFrame		||
	window.msRequestAnimationFrame		||
	function (callback) { window.setTimeout(callback, 1000 / 60); };

var utils = (function () {
	var me = {};

	var _elementStyle = document.createElement('div').style;
	var _vendor = (function () {
		var vendors = ['t', 'webkitT', 'MozT', 'msT', 'OT'],
			transform,
			i = 0,
			l = vendors.length;

		for ( ; i < l; i++ ) {
			transform = vendors[i] + 'ransform';
			if ( transform in _elementStyle ) return vendors[i].substr(0, vendors[i].length-1);
		}

		return false;
	})();

	function _prefixStyle (style) {
		if ( _vendor === false ) return false;
		if ( _vendor === '' ) return style;
		return _vendor + style.charAt(0).toUpperCase() + style.substr(1);
	}

	me.getTime = Date.now || function getTime () { return new Date().getTime(); };

	me.extend = function (target, obj) {
		for ( var i in obj ) {
			target[i] = obj[i];
		}
	};

	me.addEvent = function (el, type, fn, capture) {
		el.addEventListener(type, fn, !!capture);
	};

	me.removeEvent = function (el, type, fn, capture) {
		el.removeEventListener(type, fn, !!capture);
	};

	me.momentum = function (current, start, time, lowerMargin, wrapperSize, deceleration) {
		var distance = current - start,
			speed = Math.abs(distance) / time,
			destination,
			duration;

		deceleration = deceleration === undefined ? 0.0006 : deceleration;

		destination = current + ( speed * speed ) / ( 2 * deceleration ) * ( distance < 0 ? -1 : 1 );
		duration = speed / deceleration;

		if ( destination < lowerMargin ) {
			destination = wrapperSize ? lowerMargin - ( wrapperSize / 2.5 * ( speed / 8 ) ) : lowerMargin;
			distance = Math.abs(destination - current);
			duration = distance / speed;
		} else if ( destination > 0 ) {
			destination = wrapperSize ? wrapperSize / 2.5 * ( speed / 8 ) : 0;
			distance = Math.abs(current) + destination;
			duration = distance / speed;
		}

		return {
			destination: Math.round(destination),
			duration: duration
		};
	};

	var _transform = _prefixStyle('transform');

	me.extend(me, {
		hasTransform: _transform !== false,
		hasPerspective: _prefixStyle('perspective') in _elementStyle,
		hasTouch: 'ontouchstart' in window,
		hasPointer: navigator.msPointerEnabled,
		hasTransition: _prefixStyle('transition') in _elementStyle
	});

	// This should find all Android browsers lower than build 535.19 (both stock browser and webview)
	me.isBadAndroid = /Android /.test(window.navigator.appVersion) && !(/Chrome\/\d/.test(window.navigator.appVersion));

	me.extend(me.style = {}, {
		transform: _transform,
		transitionTimingFunction: _prefixStyle('transitionTimingFunction'),
		transitionDuration: _prefixStyle('transitionDuration'),
		transitionDelay: _prefixStyle('transitionDelay'),
		transformOrigin: _prefixStyle('transformOrigin')
	});

	me.hasClass = function (e, c) {
		var re = new RegExp("(^|\\s)" + c + "(\\s|$)");
		return re.test(e.className);
	};

	me.addClass = function (e, c) {
		if ( me.hasClass(e, c) ) {
			return;
		}

		var newclass = e.className.split(' ');
		newclass.push(c);
		e.className = newclass.join(' ');
	};

	me.removeClass = function (e, c) {
		if ( !me.hasClass(e, c) ) {
			return;
		}

		var re = new RegExp("(^|\\s)" + c + "(\\s|$)", 'g');
		e.className = e.className.replace(re, ' ');
	};

	me.offset = function (el) {
		var left = -el.offsetLeft,
			top = -el.offsetTop;

		// jshint -W084
		while (el = el.offsetParent) {
			left -= el.offsetLeft;
			top -= el.offsetTop;
		}
		// jshint +W084

		return {
			left: left,
			top: top
		};
	};

	me.preventDefaultException = function (el, exceptions) {
		for ( var i in exceptions ) {
			if ( exceptions[i].test(el[i]) ) {
				return true;
			}
		}

		return false;
	};

	me.extend(me.eventType = {}, {
		touchstart: 1,
		touchmove: 1,
		touchend: 1,

		mousedown: 2,
		mousemove: 2,
		mouseup: 2,

		MSPointerDown: 3,
		MSPointerMove: 3,
		MSPointerUp: 3
	});

	me.extend(me.ease = {}, {
		quadratic: {
			style: 'cubic-bezier(0.25, 0.46, 0.45, 0.94)',
			fn: function (k) {
				return k * ( 2 - k );
			}
		},
		circular: {
			style: 'cubic-bezier(0.1, 0.57, 0.1, 1)',	// Not properly "circular" but this looks better, it should be (0.075, 0.82, 0.165, 1)
			fn: function (k) {
				return Math.sqrt( 1 - ( --k * k ) );
			}
		},
		back: {
			style: 'cubic-bezier(0.175, 0.885, 0.32, 1.275)',
			fn: function (k) {
				var b = 4;
				return ( k = k - 1 ) * k * ( ( b + 1 ) * k + b ) + 1;
			}
		},
		bounce: {
			style: '',
			fn: function (k) {
				if ( ( k /= 1 ) < ( 1 / 2.75 ) ) {
					return 7.5625 * k * k;
				} else if ( k < ( 2 / 2.75 ) ) {
					return 7.5625 * ( k -= ( 1.5 / 2.75 ) ) * k + 0.75;
				} else if ( k < ( 2.5 / 2.75 ) ) {
					return 7.5625 * ( k -= ( 2.25 / 2.75 ) ) * k + 0.9375;
				} else {
					return 7.5625 * ( k -= ( 2.625 / 2.75 ) ) * k + 0.984375;
				}
			}
		},
		elastic: {
			style: '',
			fn: function (k) {
				var f = 0.22,
					e = 0.4;

				if ( k === 0 ) { return 0; }
				if ( k == 1 ) { return 1; }

				return ( e * Math.pow( 2, - 10 * k ) * Math.sin( ( k - f / 4 ) * ( 2 * Math.PI ) / f ) + 1 );
			}
		}
	});

	me.tap = function (e, eventName) {
		var ev = document.createEvent('Event');
		ev.initEvent(eventName, true, true);
		ev.pageX = e.pageX;
		ev.pageY = e.pageY;
		e.target.dispatchEvent(ev);
	};

	me.click = function (e) {
		var target = e.target,
			ev;

		if ( !(/(SELECT|INPUT|TEXTAREA)/i).test(target.tagName) ) {
			ev = document.createEvent('MouseEvents');
			ev.initMouseEvent('click', true, true, e.view, 1,
				target.screenX, target.screenY, target.clientX, target.clientY,
				e.ctrlKey, e.altKey, e.shiftKey, e.metaKey,
				0, null);

			ev._constructed = true;
			target.dispatchEvent(ev);
		}
	};

	return me;
})();

function IScroll (el, options) {
	this.wrapper = typeof el == 'string' ? document.querySelector(el) : el;
	this.scroller = this.wrapper.children[0];
	this.scrollerStyle = this.scroller.style;		// cache style for better performance

	this.options = {

		resizeScrollbars: true,

		mouseWheelSpeed: 20,

		snapThreshold: 0.334,

// INSERT POINT: OPTIONS 

		startX: 0,
		startY: 0,
		scrollY: true,
		directionLockThreshold: 5,
		momentum: true,

		bounce: true,
		bounceTime: 600,
		bounceEasing: '',

		preventDefault: true,
		preventDefaultException: { tagName: /^(INPUT|TEXTAREA|BUTTON|SELECT)$/ },

		HWCompositing: true,
		useTransition: true,
		useTransform: true
	};

	for ( var i in options ) {
		this.options[i] = options[i];
	}

	// Normalize options
	this.translateZ = this.options.HWCompositing && utils.hasPerspective ? ' translateZ(0)' : '';

	this.options.useTransition = utils.hasTransition && this.options.useTransition;
	this.options.useTransform = utils.hasTransform && this.options.useTransform;

	this.options.eventPassthrough = this.options.eventPassthrough === true ? 'vertical' : this.options.eventPassthrough;
	this.options.preventDefault = !this.options.eventPassthrough && this.options.preventDefault;

	// If you want eventPassthrough I have to lock one of the axes
	this.options.scrollY = this.options.eventPassthrough == 'vertical' ? false : this.options.scrollY;
	this.options.scrollX = this.options.eventPassthrough == 'horizontal' ? false : this.options.scrollX;

	// With eventPassthrough we also need lockDirection mechanism
	this.options.freeScroll = this.options.freeScroll && !this.options.eventPassthrough;
	this.options.directionLockThreshold = this.options.eventPassthrough ? 0 : this.options.directionLockThreshold;

	this.options.bounceEasing = typeof this.options.bounceEasing == 'string' ? utils.ease[this.options.bounceEasing] || utils.ease.circular : this.options.bounceEasing;

	this.options.resizePolling = this.options.resizePolling === undefined ? 60 : this.options.resizePolling;

	if ( this.options.tap === true ) {
		this.options.tap = 'tap';
	}

	if ( this.options.shrinkScrollbars == 'scale' ) {
		this.options.useTransition = false;
	}

	this.options.invertWheelDirection = this.options.invertWheelDirection ? -1 : 1;

	if ( this.options.probeType == 3 ) {
		this.options.useTransition = false;	}

// INSERT POINT: NORMALIZATION

	// Some defaults	
	this.x = 0;
	this.y = 0;
	this.directionX = 0;
	this.directionY = 0;
	this._events = {};

// INSERT POINT: DEFAULTS

	this._init();
	this.refresh();

	this.scrollTo(this.options.startX, this.options.startY);
	this.enable();
}

IScroll.prototype = {
	version: '5.1.1',

	_init: function () {
		this._initEvents();

		if ( this.options.scrollbars || this.options.indicators ) {
			this._initIndicators();
		}

		if ( this.options.mouseWheel ) {
			this._initWheel();
		}

		if ( this.options.snap ) {
			this._initSnap();
		}

		if ( this.options.keyBindings ) {
			this._initKeys();
		}

// INSERT POINT: _init

	},

	destroy: function () {
		this._initEvents(true);

		this._execEvent('destroy');
	},

	_transitionEnd: function (e) {
		if ( e.target != this.scroller || !this.isInTransition ) {
			return;
		}

		this._transitionTime();
		if ( !this.resetPosition(this.options.bounceTime) ) {
			this.isInTransition = false;
			this._execEvent('scrollEnd');
		}
	},

	_start: function (e) {
		// React to left mouse button only
		if ( utils.eventType[e.type] != 1 ) {
			if ( e.button !== 0 ) {
				return;
			}
		}

		if ( !this.enabled || (this.initiated && utils.eventType[e.type] !== this.initiated) ) {
			return;
		}

		if ( this.options.preventDefault && !utils.isBadAndroid && !utils.preventDefaultException(e.target, this.options.preventDefaultException) ) {
			e.preventDefault();
		}

		var point = e.touches ? e.touches[0] : e,
			pos;

		this.initiated	= utils.eventType[e.type];
		this.moved		= false;
		this.distX		= 0;
		this.distY		= 0;
		this.directionX = 0;
		this.directionY = 0;
		this.directionLocked = 0;

		this._transitionTime();

		this.startTime = utils.getTime();

		if ( this.options.useTransition && this.isInTransition ) {
			this.isInTransition = false;
			pos = this.getComputedPosition();
			this._translate(Math.round(pos.x), Math.round(pos.y));
			this._execEvent('scrollEnd');
		} else if ( !this.options.useTransition && this.isAnimating ) {
			this.isAnimating = false;
			this._execEvent('scrollEnd');
		}

		this.startX    = this.x;
		this.startY    = this.y;
		this.absStartX = this.x;
		this.absStartY = this.y;
		this.pointX    = point.pageX;
		this.pointY    = point.pageY;

		this._execEvent('beforeScrollStart');
	},

	_move: function (e) {
		if ( !this.enabled || utils.eventType[e.type] !== this.initiated ) {
			return;
		}

		if ( this.options.preventDefault ) {	// increases performance on Android? TODO: check!
			e.preventDefault();
		}

		var point		= e.touches ? e.touches[0] : e,
			deltaX		= point.pageX - this.pointX,
			deltaY		= point.pageY - this.pointY,
			timestamp	= utils.getTime(),
			newX, newY,
			absDistX, absDistY;

		this.pointX		= point.pageX;
		this.pointY		= point.pageY;

		this.distX		+= deltaX;
		this.distY		+= deltaY;
		absDistX		= Math.abs(this.distX);
		absDistY		= Math.abs(this.distY);

		// We need to move at least 10 pixels for the scrolling to initiate
		if ( timestamp - this.endTime > 300 && (absDistX < 10 && absDistY < 10) ) {
			return;
		}

		// If you are scrolling in one direction lock the other
		if ( !this.directionLocked && !this.options.freeScroll ) {
			if ( absDistX > absDistY + this.options.directionLockThreshold ) {
				this.directionLocked = 'h';		// lock horizontally
			} else if ( absDistY >= absDistX + this.options.directionLockThreshold ) {
				this.directionLocked = 'v';		// lock vertically
			} else {
				this.directionLocked = 'n';		// no lock
			}
		}

		if ( this.directionLocked == 'h' ) {
			if ( this.options.eventPassthrough == 'vertical' ) {
				e.preventDefault();
			} else if ( this.options.eventPassthrough == 'horizontal' ) {
				this.initiated = false;
				return;
			}

			deltaY = 0;
		} else if ( this.directionLocked == 'v' ) {
			if ( this.options.eventPassthrough == 'horizontal' ) {
				e.preventDefault();
			} else if ( this.options.eventPassthrough == 'vertical' ) {
				this.initiated = false;
				return;
			}

			deltaX = 0;
		}

		deltaX = this.hasHorizontalScroll ? deltaX : 0;
		deltaY = this.hasVerticalScroll ? deltaY : 0;

		newX = this.x + deltaX;
		newY = this.y + deltaY;

		// Slow down if outside of the boundaries
		if ( newX > 0 || newX < this.maxScrollX ) {
			newX = this.options.bounce ? this.x + deltaX / 3 : newX > 0 ? 0 : this.maxScrollX;
		}
		if ( newY > 0 || newY < this.maxScrollY ) {
			newY = this.options.bounce ? this.y + deltaY / 3 : newY > 0 ? 0 : this.maxScrollY;
		}

		this.directionX = deltaX > 0 ? -1 : deltaX < 0 ? 1 : 0;
		this.directionY = deltaY > 0 ? -1 : deltaY < 0 ? 1 : 0;

		if ( !this.moved ) {
			this._execEvent('scrollStart');
		}

		this.moved = true;

		this._translate(newX, newY);

/* REPLACE START: _move */
		if ( timestamp - this.startTime > 300 ) {
			this.startTime = timestamp;
			this.startX = this.x;
			this.startY = this.y;

			if ( this.options.probeType == 1 ) {
				this._execEvent('scroll');
			}
		}

		if ( this.options.probeType > 1 ) {
			this._execEvent('scroll');
		}
/* REPLACE END: _move */

	},

	_end: function (e) {
		if ( !this.enabled || utils.eventType[e.type] !== this.initiated ) {
			return;
		}

		if ( this.options.preventDefault && !utils.preventDefaultException(e.target, this.options.preventDefaultException) ) {
			e.preventDefault();
		}

		var point = e.changedTouches ? e.changedTouches[0] : e,
			momentumX,
			momentumY,
			duration = utils.getTime() - this.startTime,
			newX = Math.round(this.x),
			newY = Math.round(this.y),
			distanceX = Math.abs(newX - this.startX),
			distanceY = Math.abs(newY - this.startY),
			time = 0,
			easing = '';

		this.isInTransition = 0;
		this.initiated = 0;
		this.endTime = utils.getTime();

		// reset if we are outside of the boundaries
		if ( this.resetPosition(this.options.bounceTime) ) {
			return;
		}

		this.scrollTo(newX, newY);	// ensures that the last position is rounded

		// we scrolled less than 10 pixels
		if ( !this.moved ) {
			if ( this.options.tap ) {
				utils.tap(e, this.options.tap);
			}

			if ( this.options.click ) {
				utils.click(e);
			}

			this._execEvent('scrollCancel');
			return;
		}

		if ( this._events.flick && duration < 200 && distanceX < 100 && distanceY < 100 ) {
			this._execEvent('flick');
			return;
		}

		// start momentum animation if needed
		if ( this.options.momentum && duration < 300 ) {
			momentumX = this.hasHorizontalScroll ? utils.momentum(this.x, this.startX, duration, this.maxScrollX, this.options.bounce ? this.wrapperWidth : 0, this.options.deceleration) : { destination: newX, duration: 0 };
			momentumY = this.hasVerticalScroll ? utils.momentum(this.y, this.startY, duration, this.maxScrollY, this.options.bounce ? this.wrapperHeight : 0, this.options.deceleration) : { destination: newY, duration: 0 };
			newX = momentumX.destination;
			newY = momentumY.destination;
			time = Math.max(momentumX.duration, momentumY.duration);
			this.isInTransition = 1;
		}


		if ( this.options.snap ) {
			var snap = this._nearestSnap(newX, newY);
			this.currentPage = snap;
			time = this.options.snapSpeed || Math.max(
					Math.max(
						Math.min(Math.abs(newX - snap.x), 1000),
						Math.min(Math.abs(newY - snap.y), 1000)
					), 300);
			newX = snap.x;
			newY = snap.y;

			this.directionX = 0;
			this.directionY = 0;
			easing = this.options.bounceEasing;
		}

// INSERT POINT: _end

		if ( newX != this.x || newY != this.y ) {
			// change easing function when scroller goes out of the boundaries
			if ( newX > 0 || newX < this.maxScrollX || newY > 0 || newY < this.maxScrollY ) {
				easing = utils.ease.quadratic;
			}

			this.scrollTo(newX, newY, time, easing);
			return;
		}

		this._execEvent('scrollEnd');
	},

	_resize: function () {
		var that = this;

		clearTimeout(this.resizeTimeout);

		this.resizeTimeout = setTimeout(function () {
			that.refresh();
		}, this.options.resizePolling);
	},

	resetPosition: function (time) {
		var x = this.x,
			y = this.y;

		time = time || 0;

		if ( !this.hasHorizontalScroll || this.x > 0 ) {
			x = 0;
		} else if ( this.x < this.maxScrollX ) {
			x = this.maxScrollX;
		}

		if ( !this.hasVerticalScroll || this.y > 0 ) {
			y = 0;
		} else if ( this.y < this.maxScrollY ) {
			y = this.maxScrollY;
		}

		if ( x == this.x && y == this.y ) {
			return false;
		}

		this.scrollTo(x, y, time, this.options.bounceEasing);

		return true;
	},

	disable: function () {
		this.enabled = false;
	},

	enable: function () {
		this.enabled = true;
	},

	refresh: function () {
		var rf = this.wrapper.offsetHeight;		// Force reflow

		this.wrapperWidth	= this.wrapper.clientWidth;
		this.wrapperHeight	= this.wrapper.clientHeight;

/* REPLACE START: refresh */

		this.scrollerWidth	= this.scroller.offsetWidth;
		this.scrollerHeight	= this.scroller.offsetHeight;

		this.maxScrollX		= this.wrapperWidth - this.scrollerWidth;
		this.maxScrollY		= this.wrapperHeight - this.scrollerHeight;

/* REPLACE END: refresh */

		this.hasHorizontalScroll	= this.options.scrollX && this.maxScrollX < 0;
		this.hasVerticalScroll		= this.options.scrollY && this.maxScrollY < 0;

		if ( !this.hasHorizontalScroll ) {
			this.maxScrollX = 0;
			this.scrollerWidth = this.wrapperWidth;
		}

		if ( !this.hasVerticalScroll ) {
			this.maxScrollY = 0;
			this.scrollerHeight = this.wrapperHeight;
		}

		this.endTime = 0;
		this.directionX = 0;
		this.directionY = 0;

		this.wrapperOffset = utils.offset(this.wrapper);

		this._execEvent('refresh');

		this.resetPosition();

// INSERT POINT: _refresh

	},

	on: function (type, fn) {
		if ( !this._events[type] ) {
			this._events[type] = [];
		}

		this._events[type].push(fn);
	},

	off: function (type, fn) {
		if ( !this._events[type] ) {
			return;
		}

		var index = this._events[type].indexOf(fn);

		if ( index > -1 ) {
			this._events[type].splice(index, 1);
		}
	},

	_execEvent: function (type) {
		if ( !this._events[type] ) {
			return;
		}

		var i = 0,
			l = this._events[type].length;

		if ( !l ) {
			return;
		}

		for ( ; i < l; i++ ) {
			this._events[type][i].apply(this, [].slice.call(arguments, 1));
		}
	},

	scrollBy: function (x, y, time, easing) {
		x = this.x + x;
		y = this.y + y;
		time = time || 0;

		this.scrollTo(x, y, time, easing);
	},

	scrollTo: function (x, y, time, easing) {
		easing = easing || utils.ease.circular;

		this.isInTransition = this.options.useTransition && time > 0;

		if ( !time || (this.options.useTransition && easing.style) ) {
			this._transitionTimingFunction(easing.style);
			this._transitionTime(time);
			this._translate(x, y);
		} else {
			this._animate(x, y, time, easing.fn);
		}
	},

	scrollToElement: function (el, time, offsetX, offsetY, easing) {
		el = el.nodeType ? el : this.scroller.querySelector(el);

		if ( !el ) {
			return;
		}

		var pos = utils.offset(el);

		pos.left -= this.wrapperOffset.left;
		pos.top  -= this.wrapperOffset.top;

		// if offsetX/Y are true we center the element to the screen
		if ( offsetX === true ) {
			offsetX = Math.round(el.offsetWidth / 2 - this.wrapper.offsetWidth / 2);
		}
		if ( offsetY === true ) {
			offsetY = Math.round(el.offsetHeight / 2 - this.wrapper.offsetHeight / 2);
		}

		pos.left -= offsetX || 0;
		pos.top  -= offsetY || 0;

		pos.left = pos.left > 0 ? 0 : pos.left < this.maxScrollX ? this.maxScrollX : pos.left;
		pos.top  = pos.top  > 0 ? 0 : pos.top  < this.maxScrollY ? this.maxScrollY : pos.top;

		time = time === undefined || time === null || time === 'auto' ? Math.max(Math.abs(this.x-pos.left), Math.abs(this.y-pos.top)) : time;

		this.scrollTo(pos.left, pos.top, time, easing);
	},

	_transitionTime: function (time) {
		time = time || 0;

		this.scrollerStyle[utils.style.transitionDuration] = time + 'ms';

		if ( !time && utils.isBadAndroid ) {
			this.scrollerStyle[utils.style.transitionDuration] = '0.001s';
		}


		if ( this.indicators ) {
			for ( var i = this.indicators.length; i--; ) {
				this.indicators[i].transitionTime(time);
			}
		}


// INSERT POINT: _transitionTime

	},

	_transitionTimingFunction: function (easing) {
		this.scrollerStyle[utils.style.transitionTimingFunction] = easing;


		if ( this.indicators ) {
			for ( var i = this.indicators.length; i--; ) {
				this.indicators[i].transitionTimingFunction(easing);
			}
		}


// INSERT POINT: _transitionTimingFunction

	},

	_translate: function (x, y) {
		if ( this.options.useTransform ) {

/* REPLACE START: _translate */

			this.scrollerStyle[utils.style.transform] = 'translate(' + x + 'px,' + y + 'px)' + this.translateZ;

/* REPLACE END: _translate */

		} else {
			x = Math.round(x);
			y = Math.round(y);
			this.scrollerStyle.left = x + 'px';
			this.scrollerStyle.top = y + 'px';
		}

		this.x = x;
		this.y = y;


	if ( this.indicators ) {
		for ( var i = this.indicators.length; i--; ) {
			this.indicators[i].updatePosition();
		}
	}


// INSERT POINT: _translate

	},

	_initEvents: function (remove) {
		var eventType = remove ? utils.removeEvent : utils.addEvent,
			target = this.options.bindToWrapper ? this.wrapper : window;

		eventType(window, 'orientationchange', this);
		eventType(window, 'resize', this);

		if ( this.options.click ) {
			eventType(this.wrapper, 'click', this, true);
		}

		if ( !this.options.disableMouse ) {
			eventType(this.wrapper, 'mousedown', this);
			eventType(target, 'mousemove', this);
			eventType(target, 'mousecancel', this);
			eventType(target, 'mouseup', this);
		}

		if ( utils.hasPointer && !this.options.disablePointer ) {
			eventType(this.wrapper, 'MSPointerDown', this);
			eventType(target, 'MSPointerMove', this);
			eventType(target, 'MSPointerCancel', this);
			eventType(target, 'MSPointerUp', this);
		}

		if ( utils.hasTouch && !this.options.disableTouch ) {
			eventType(this.wrapper, 'touchstart', this);
			eventType(target, 'touchmove', this);
			eventType(target, 'touchcancel', this);
			eventType(target, 'touchend', this);
		}

		eventType(this.scroller, 'transitionend', this);
		eventType(this.scroller, 'webkitTransitionEnd', this);
		eventType(this.scroller, 'oTransitionEnd', this);
		eventType(this.scroller, 'MSTransitionEnd', this);
	},

	getComputedPosition: function () {
		var matrix = window.getComputedStyle(this.scroller, null),
			x, y;

		if ( this.options.useTransform ) {
			matrix = matrix[utils.style.transform].split(')')[0].split(', ');
			x = +(matrix[12] || matrix[4]);
			y = +(matrix[13] || matrix[5]);
		} else {
			x = +matrix.left.replace(/[^-\d.]/g, '');
			y = +matrix.top.replace(/[^-\d.]/g, '');
		}

		return { x: x, y: y };
	},

	_initIndicators: function () {
		var interactive = this.options.interactiveScrollbars,
			customStyle = typeof this.options.scrollbars != 'string',
			indicators = [],
			indicator;

		var that = this;

		this.indicators = [];

		if ( this.options.scrollbars ) {
			// Vertical scrollbar
			if ( this.options.scrollY ) {
				indicator = {
					el: createDefaultScrollbar('v', interactive, this.options.scrollbars),
					interactive: interactive,
					defaultScrollbars: true,
					customStyle: customStyle,
					resize: this.options.resizeScrollbars,
					shrink: this.options.shrinkScrollbars,
					fade: this.options.fadeScrollbars,
					listenX: false
				};

				this.wrapper.appendChild(indicator.el);
				indicators.push(indicator);
			}

			// Horizontal scrollbar
			if ( this.options.scrollX ) {
				indicator = {
					el: createDefaultScrollbar('h', interactive, this.options.scrollbars),
					interactive: interactive,
					defaultScrollbars: true,
					customStyle: customStyle,
					resize: this.options.resizeScrollbars,
					shrink: this.options.shrinkScrollbars,
					fade: this.options.fadeScrollbars,
					listenY: false
				};

				this.wrapper.appendChild(indicator.el);
				indicators.push(indicator);
			}
		}

		if ( this.options.indicators ) {
			// TODO: check concat compatibility
			indicators = indicators.concat(this.options.indicators);
		}

		for ( var i = indicators.length; i--; ) {
			this.indicators.push( new Indicator(this, indicators[i]) );
		}

		// TODO: check if we can use array.map (wide compatibility and performance issues)
		function _indicatorsMap (fn) {
			for ( var i = that.indicators.length; i--; ) {
				fn.call(that.indicators[i]);
			}
		}

		if ( this.options.fadeScrollbars ) {
			this.on('scrollEnd', function () {
				_indicatorsMap(function () {
					this.fade();
				});
			});

			this.on('scrollCancel', function () {
				_indicatorsMap(function () {
					this.fade();
				});
			});

			this.on('scrollStart', function () {
				_indicatorsMap(function () {
					this.fade(1);
				});
			});

			this.on('beforeScrollStart', function () {
				_indicatorsMap(function () {
					this.fade(1, true);
				});
			});
		}


		this.on('refresh', function () {
			_indicatorsMap(function () {
				this.refresh();
			});
		});

		this.on('destroy', function () {
			_indicatorsMap(function () {
				this.destroy();
			});

			delete this.indicators;
		});
	},

	_initWheel: function () {
		utils.addEvent(this.wrapper, 'wheel', this);
		utils.addEvent(this.wrapper, 'mousewheel', this);
		utils.addEvent(this.wrapper, 'DOMMouseScroll', this);

		this.on('destroy', function () {
			utils.removeEvent(this.wrapper, 'wheel', this);
			utils.removeEvent(this.wrapper, 'mousewheel', this);
			utils.removeEvent(this.wrapper, 'DOMMouseScroll', this);
		});
	},

	_wheel: function (e) {
		if ( !this.enabled ) {
			return;
		}

		e.preventDefault();
		e.stopPropagation();

		var wheelDeltaX, wheelDeltaY,
			newX, newY,
			that = this;

		if ( this.wheelTimeout === undefined ) {
			that._execEvent('scrollStart');
		}

		// Execute the scrollEnd event after 400ms the wheel stopped scrolling
		clearTimeout(this.wheelTimeout);
		this.wheelTimeout = setTimeout(function () {
			that._execEvent('scrollEnd');
			that.wheelTimeout = undefined;
		}, 400);

		if ( 'deltaX' in e ) {
			wheelDeltaX = -e.deltaX;
			wheelDeltaY = -e.deltaY;
		} else if ( 'wheelDeltaX' in e ) {
			wheelDeltaX = e.wheelDeltaX / 120 * this.options.mouseWheelSpeed;
			wheelDeltaY = e.wheelDeltaY / 120 * this.options.mouseWheelSpeed;
		} else if ( 'wheelDelta' in e ) {
			wheelDeltaX = wheelDeltaY = e.wheelDelta / 120 * this.options.mouseWheelSpeed;
		} else if ( 'detail' in e ) {
			wheelDeltaX = wheelDeltaY = -e.detail / 3 * this.options.mouseWheelSpeed;
		} else {
			return;
		}

		wheelDeltaX *= this.options.invertWheelDirection;
		wheelDeltaY *= this.options.invertWheelDirection;

		if ( !this.hasVerticalScroll ) {
			wheelDeltaX = wheelDeltaY;
			wheelDeltaY = 0;
		}

		if ( this.options.snap ) {
			newX = this.currentPage.pageX;
			newY = this.currentPage.pageY;

			if ( wheelDeltaX > 0 ) {
				newX--;
			} else if ( wheelDeltaX < 0 ) {
				newX++;
			}

			if ( wheelDeltaY > 0 ) {
				newY--;
			} else if ( wheelDeltaY < 0 ) {
				newY++;
			}

			this.goToPage(newX, newY);

			return;
		}

		newX = this.x + Math.round(this.hasHorizontalScroll ? wheelDeltaX : 0);
		newY = this.y + Math.round(this.hasVerticalScroll ? wheelDeltaY : 0);

		if ( newX > 0 ) {
			newX = 0;
		} else if ( newX < this.maxScrollX ) {
			newX = this.maxScrollX;
		}

		if ( newY > 0 ) {
			newY = 0;
		} else if ( newY < this.maxScrollY ) {
			newY = this.maxScrollY;
		}

		this.scrollTo(newX, newY, 0);

		if ( this.options.probeType > 1 ) {
			this._execEvent('scroll');
		}

// INSERT POINT: _wheel
	},

	_initSnap: function () {
		this.currentPage = {};

		if ( typeof this.options.snap == 'string' ) {
			this.options.snap = this.scroller.querySelectorAll(this.options.snap);
		}

		this.on('refresh', function () {
			var i = 0, l,
				m = 0, n,
				cx, cy,
				x = 0, y,
				stepX = this.options.snapStepX || this.wrapperWidth,
				stepY = this.options.snapStepY || this.wrapperHeight,
				el;

			this.pages = [];

			if ( !this.wrapperWidth || !this.wrapperHeight || !this.scrollerWidth || !this.scrollerHeight ) {
				return;
			}

			if ( this.options.snap === true ) {
				cx = Math.round( stepX / 2 );
				cy = Math.round( stepY / 2 );

				while ( x > -this.scrollerWidth ) {
					this.pages[i] = [];
					l = 0;
					y = 0;

					while ( y > -this.scrollerHeight ) {
						this.pages[i][l] = {
							x: Math.max(x, this.maxScrollX),
							y: Math.max(y, this.maxScrollY),
							width: stepX,
							height: stepY,
							cx: x - cx,
							cy: y - cy
						};

						y -= stepY;
						l++;
					}

					x -= stepX;
					i++;
				}
			} else {
				el = this.options.snap;
				l = el.length;
				n = -1;

				for ( ; i < l; i++ ) {
					if ( i === 0 || el[i].offsetLeft <= el[i-1].offsetLeft ) {
						m = 0;
						n++;
					}

					if ( !this.pages[m] ) {
						this.pages[m] = [];
					}

					x = Math.max(-el[i].offsetLeft, this.maxScrollX);
					y = Math.max(-el[i].offsetTop, this.maxScrollY);
					cx = x - Math.round(el[i].offsetWidth / 2);
					cy = y - Math.round(el[i].offsetHeight / 2);

					this.pages[m][n] = {
						x: x,
						y: y,
						width: el[i].offsetWidth,
						height: el[i].offsetHeight,
						cx: cx,
						cy: cy
					};

					if ( x > this.maxScrollX ) {
						m++;
					}
				}
			}

			this.goToPage(this.currentPage.pageX || 0, this.currentPage.pageY || 0, 0);

			// Update snap threshold if needed
			if ( this.options.snapThreshold % 1 === 0 ) {
				this.snapThresholdX = this.options.snapThreshold;
				this.snapThresholdY = this.options.snapThreshold;
			} else {
				this.snapThresholdX = Math.round(this.pages[this.currentPage.pageX][this.currentPage.pageY].width * this.options.snapThreshold);
				this.snapThresholdY = Math.round(this.pages[this.currentPage.pageX][this.currentPage.pageY].height * this.options.snapThreshold);
			}
		});

		this.on('flick', function () {
			var time = this.options.snapSpeed || Math.max(
					Math.max(
						Math.min(Math.abs(this.x - this.startX), 1000),
						Math.min(Math.abs(this.y - this.startY), 1000)
					), 300);

			this.goToPage(
				this.currentPage.pageX + this.directionX,
				this.currentPage.pageY + this.directionY,
				time
			);
		});
	},

	_nearestSnap: function (x, y) {
		if ( !this.pages.length ) {
			return { x: 0, y: 0, pageX: 0, pageY: 0 };
		}

		var i = 0,
			l = this.pages.length,
			m = 0;

		// Check if we exceeded the snap threshold
		if ( Math.abs(x - this.absStartX) < this.snapThresholdX &&
			Math.abs(y - this.absStartY) < this.snapThresholdY ) {
			return this.currentPage;
		}

		if ( x > 0 ) {
			x = 0;
		} else if ( x < this.maxScrollX ) {
			x = this.maxScrollX;
		}

		if ( y > 0 ) {
			y = 0;
		} else if ( y < this.maxScrollY ) {
			y = this.maxScrollY;
		}

		for ( ; i < l; i++ ) {
			if ( x >= this.pages[i][0].cx ) {
				x = this.pages[i][0].x;
				break;
			}
		}

		l = this.pages[i].length;

		for ( ; m < l; m++ ) {
			if ( y >= this.pages[0][m].cy ) {
				y = this.pages[0][m].y;
				break;
			}
		}

		if ( i == this.currentPage.pageX ) {
			i += this.directionX;

			if ( i < 0 ) {
				i = 0;
			} else if ( i >= this.pages.length ) {
				i = this.pages.length - 1;
			}

			x = this.pages[i][0].x;
		}

		if ( m == this.currentPage.pageY ) {
			m += this.directionY;

			if ( m < 0 ) {
				m = 0;
			} else if ( m >= this.pages[0].length ) {
				m = this.pages[0].length - 1;
			}

			y = this.pages[0][m].y;
		}

		return {
			x: x,
			y: y,
			pageX: i,
			pageY: m
		};
	},

	goToPage: function (x, y, time, easing) {
		easing = easing || this.options.bounceEasing;

		if ( x >= this.pages.length ) {
			x = this.pages.length - 1;
		} else if ( x < 0 ) {
			x = 0;
		}

		if ( y >= this.pages[x].length ) {
			y = this.pages[x].length - 1;
		} else if ( y < 0 ) {
			y = 0;
		}

		var posX = this.pages[x][y].x,
			posY = this.pages[x][y].y;

		time = time === undefined ? this.options.snapSpeed || Math.max(
			Math.max(
				Math.min(Math.abs(posX - this.x), 1000),
				Math.min(Math.abs(posY - this.y), 1000)
			), 300) : time;

		this.currentPage = {
			x: posX,
			y: posY,
			pageX: x,
			pageY: y
		};

		this.scrollTo(posX, posY, time, easing);
	},

	next: function (time, easing) {
		var x = this.currentPage.pageX,
			y = this.currentPage.pageY;

		x++;

		if ( x >= this.pages.length && this.hasVerticalScroll ) {
			x = 0;
			y++;
		}

		this.goToPage(x, y, time, easing);
	},

	prev: function (time, easing) {
		var x = this.currentPage.pageX,
			y = this.currentPage.pageY;

		x--;

		if ( x < 0 && this.hasVerticalScroll ) {
			x = 0;
			y--;
		}

		this.goToPage(x, y, time, easing);
	},

	_initKeys: function (e) {
		// default key bindings
		var keys = {
			pageUp: 33,
			pageDown: 34,
			end: 35,
			home: 36,
			left: 37,
			up: 38,
			right: 39,
			down: 40
		};
		var i;

		// if you give me characters I give you keycode
		if ( typeof this.options.keyBindings == 'object' ) {
			for ( i in this.options.keyBindings ) {
				if ( typeof this.options.keyBindings[i] == 'string' ) {
					this.options.keyBindings[i] = this.options.keyBindings[i].toUpperCase().charCodeAt(0);
				}
			}
		} else {
			this.options.keyBindings = {};
		}

		for ( i in keys ) {
			this.options.keyBindings[i] = this.options.keyBindings[i] || keys[i];
		}

		utils.addEvent(window, 'keydown', this);

		this.on('destroy', function () {
			utils.removeEvent(window, 'keydown', this);
		});
	},

	_key: function (e) {
		if ( !this.enabled ) {
			return;
		}

		var snap = this.options.snap,	// we are using this alot, better to cache it
			newX = snap ? this.currentPage.pageX : this.x,
			newY = snap ? this.currentPage.pageY : this.y,
			now = utils.getTime(),
			prevTime = this.keyTime || 0,
			acceleration = 0.250,
			pos;

		if ( this.options.useTransition && this.isInTransition ) {
			pos = this.getComputedPosition();

			this._translate(Math.round(pos.x), Math.round(pos.y));
			this.isInTransition = false;
		}

		this.keyAcceleration = now - prevTime < 200 ? Math.min(this.keyAcceleration + acceleration, 50) : 0;

		switch ( e.keyCode ) {
			case this.options.keyBindings.pageUp:
				if ( this.hasHorizontalScroll && !this.hasVerticalScroll ) {
					newX += snap ? 1 : this.wrapperWidth;
				} else {
					newY += snap ? 1 : this.wrapperHeight;
				}
				break;
			case this.options.keyBindings.pageDown:
				if ( this.hasHorizontalScroll && !this.hasVerticalScroll ) {
					newX -= snap ? 1 : this.wrapperWidth;
				} else {
					newY -= snap ? 1 : this.wrapperHeight;
				}
				break;
			case this.options.keyBindings.end:
				newX = snap ? this.pages.length-1 : this.maxScrollX;
				newY = snap ? this.pages[0].length-1 : this.maxScrollY;
				break;
			case this.options.keyBindings.home:
				newX = 0;
				newY = 0;
				break;
			case this.options.keyBindings.left:
				newX += snap ? -1 : 5 + this.keyAcceleration>>0;
				break;
			case this.options.keyBindings.up:
				newY += snap ? 1 : 5 + this.keyAcceleration>>0;
				break;
			case this.options.keyBindings.right:
				newX -= snap ? -1 : 5 + this.keyAcceleration>>0;
				break;
			case this.options.keyBindings.down:
				newY -= snap ? 1 : 5 + this.keyAcceleration>>0;
				break;
			default:
				return;
		}

		if ( snap ) {
			this.goToPage(newX, newY);
			return;
		}

		if ( newX > 0 ) {
			newX = 0;
			this.keyAcceleration = 0;
		} else if ( newX < this.maxScrollX ) {
			newX = this.maxScrollX;
			this.keyAcceleration = 0;
		}

		if ( newY > 0 ) {
			newY = 0;
			this.keyAcceleration = 0;
		} else if ( newY < this.maxScrollY ) {
			newY = this.maxScrollY;
			this.keyAcceleration = 0;
		}

		this.scrollTo(newX, newY, 0);

		this.keyTime = now;
	},

	_animate: function (destX, destY, duration, easingFn) {
		var that = this,
			startX = this.x,
			startY = this.y,
			startTime = utils.getTime(),
			destTime = startTime + duration;

		function step () {
			var now = utils.getTime(),
				newX, newY,
				easing;

			if ( now >= destTime ) {
				that.isAnimating = false;
				that._translate(destX, destY);
				
				if ( !that.resetPosition(that.options.bounceTime) ) {
					that._execEvent('scrollEnd');
				}

				return;
			}

			now = ( now - startTime ) / duration;
			easing = easingFn(now);
			newX = ( destX - startX ) * easing + startX;
			newY = ( destY - startY ) * easing + startY;
			that._translate(newX, newY);

			if ( that.isAnimating ) {
				rAF(step);
			}

			if ( that.options.probeType == 3 ) {
				that._execEvent('scroll');
			}
		}

		this.isAnimating = true;
		step();
	},

	handleEvent: function (e) {
		switch ( e.type ) {
			case 'touchstart':
			case 'MSPointerDown':
			case 'mousedown':
				this._start(e);
				break;
			case 'touchmove':
			case 'MSPointerMove':
			case 'mousemove':
				this._move(e);
				break;
			case 'touchend':
			case 'MSPointerUp':
			case 'mouseup':
			case 'touchcancel':
			case 'MSPointerCancel':
			case 'mousecancel':
				this._end(e);
				break;
			case 'orientationchange':
			case 'resize':
				this._resize();
				break;
			case 'transitionend':
			case 'webkitTransitionEnd':
			case 'oTransitionEnd':
			case 'MSTransitionEnd':
				this._transitionEnd(e);
				break;
			case 'wheel':
			case 'DOMMouseScroll':
			case 'mousewheel':
				this._wheel(e);
				break;
			case 'keydown':
				this._key(e);
				break;
			case 'click':
				if ( !e._constructed ) {
					e.preventDefault();
					e.stopPropagation();
				}
				break;
		}
	}
};
function createDefaultScrollbar (direction, interactive, type) {
	var scrollbar = document.createElement('div'),
		indicator = document.createElement('div');

	if ( type === true ) {
		scrollbar.style.cssText = 'position:absolute;z-index:9999';
		indicator.style.cssText = '-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;position:absolute;background:rgba(0,0,0,0.5);border:1px solid rgba(255,255,255,0.9);border-radius:3px';
	}

	indicator.className = 'iScrollIndicator';

	if ( direction == 'h' ) {
		if ( type === true ) {
			scrollbar.style.cssText += ';height:7px;left:2px;right:2px;bottom:0';
			indicator.style.height = '100%';
		}
		scrollbar.className = 'iScrollHorizontalScrollbar';
	} else {
		if ( type === true ) {
			scrollbar.style.cssText += ';width:7px;bottom:2px;top:2px;right:1px';
			indicator.style.width = '100%';
		}
		scrollbar.className = 'iScrollVerticalScrollbar';
	}

	scrollbar.style.cssText += ';overflow:hidden';

	if ( !interactive ) {
		scrollbar.style.pointerEvents = 'none';
	}

	scrollbar.appendChild(indicator);

	return scrollbar;
}

function Indicator (scroller, options) {
	this.wrapper = typeof options.el == 'string' ? document.querySelector(options.el) : options.el;
	this.wrapperStyle = this.wrapper.style;
	this.indicator = this.wrapper.children[0];
	this.indicatorStyle = this.indicator.style;
	this.scroller = scroller;

	this.options = {
		listenX: true,
		listenY: true,
		interactive: false,
		resize: true,
		defaultScrollbars: false,
		shrink: false,
		fade: false,
		speedRatioX: 0,
		speedRatioY: 0
	};

	for ( var i in options ) {
		this.options[i] = options[i];
	}

	this.sizeRatioX = 1;
	this.sizeRatioY = 1;
	this.maxPosX = 0;
	this.maxPosY = 0;

	if ( this.options.interactive ) {
		if ( !this.options.disableTouch ) {
			utils.addEvent(this.indicator, 'touchstart', this);
			utils.addEvent(window, 'touchend', this);
		}
		if ( !this.options.disablePointer ) {
			utils.addEvent(this.indicator, 'MSPointerDown', this);
			utils.addEvent(window, 'MSPointerUp', this);
		}
		if ( !this.options.disableMouse ) {
			utils.addEvent(this.indicator, 'mousedown', this);
			utils.addEvent(window, 'mouseup', this);
		}
	}

	if ( this.options.fade ) {
		this.wrapperStyle[utils.style.transform] = this.scroller.translateZ;
		this.wrapperStyle[utils.style.transitionDuration] = utils.isBadAndroid ? '0.001s' : '0ms';
		this.wrapperStyle.opacity = '0';
	}
}

Indicator.prototype = {
	handleEvent: function (e) {
		switch ( e.type ) {
			case 'touchstart':
			case 'MSPointerDown':
			case 'mousedown':
				this._start(e);
				break;
			case 'touchmove':
			case 'MSPointerMove':
			case 'mousemove':
				this._move(e);
				break;
			case 'touchend':
			case 'MSPointerUp':
			case 'mouseup':
			case 'touchcancel':
			case 'MSPointerCancel':
			case 'mousecancel':
				this._end(e);
				break;
		}
	},

	destroy: function () {
		if ( this.options.interactive ) {
			utils.removeEvent(this.indicator, 'touchstart', this);
			utils.removeEvent(this.indicator, 'MSPointerDown', this);
			utils.removeEvent(this.indicator, 'mousedown', this);

			utils.removeEvent(window, 'touchmove', this);
			utils.removeEvent(window, 'MSPointerMove', this);
			utils.removeEvent(window, 'mousemove', this);

			utils.removeEvent(window, 'touchend', this);
			utils.removeEvent(window, 'MSPointerUp', this);
			utils.removeEvent(window, 'mouseup', this);
		}

		if ( this.options.defaultScrollbars ) {
			this.wrapper.parentNode.removeChild(this.wrapper);
		}
	},

	_start: function (e) {
		var point = e.touches ? e.touches[0] : e;

		e.preventDefault();
		e.stopPropagation();

		this.transitionTime();

		this.initiated = true;
		this.moved = false;
		this.lastPointX	= point.pageX;
		this.lastPointY	= point.pageY;

		this.startTime	= utils.getTime();

		if ( !this.options.disableTouch ) {
			utils.addEvent(window, 'touchmove', this);
		}
		if ( !this.options.disablePointer ) {
			utils.addEvent(window, 'MSPointerMove', this);
		}
		if ( !this.options.disableMouse ) {
			utils.addEvent(window, 'mousemove', this);
		}

		this.scroller._execEvent('beforeScrollStart');
	},

	_move: function (e) {
		var point = e.touches ? e.touches[0] : e,
			deltaX, deltaY,
			newX, newY,
			timestamp = utils.getTime();

		if ( !this.moved ) {
			this.scroller._execEvent('scrollStart');
		}

		this.moved = true;

		deltaX = point.pageX - this.lastPointX;
		this.lastPointX = point.pageX;

		deltaY = point.pageY - this.lastPointY;
		this.lastPointY = point.pageY;

		newX = this.x + deltaX;
		newY = this.y + deltaY;

		this._pos(newX, newY);


		if ( this.scroller.options.probeType == 1 && timestamp - this.startTime > 300 ) {
			this.startTime = timestamp;
			this.scroller._execEvent('scroll');
		} else if ( this.scroller.options.probeType > 1 ) {
			this.scroller._execEvent('scroll');
		}


// INSERT POINT: indicator._move

		e.preventDefault();
		e.stopPropagation();
	},

	_end: function (e) {
		if ( !this.initiated ) {
			return;
		}

		this.initiated = false;

		e.preventDefault();
		e.stopPropagation();

		utils.removeEvent(window, 'touchmove', this);
		utils.removeEvent(window, 'MSPointerMove', this);
		utils.removeEvent(window, 'mousemove', this);

		if ( this.scroller.options.snap ) {
			var snap = this.scroller._nearestSnap(this.scroller.x, this.scroller.y);

			var time = this.options.snapSpeed || Math.max(
					Math.max(
						Math.min(Math.abs(this.scroller.x - snap.x), 1000),
						Math.min(Math.abs(this.scroller.y - snap.y), 1000)
					), 300);

			if ( this.scroller.x != snap.x || this.scroller.y != snap.y ) {
				this.scroller.directionX = 0;
				this.scroller.directionY = 0;
				this.scroller.currentPage = snap;
				this.scroller.scrollTo(snap.x, snap.y, time, this.scroller.options.bounceEasing);
			}
		}

		if ( this.moved ) {
			this.scroller._execEvent('scrollEnd');
		}
	},

	transitionTime: function (time) {
		time = time || 0;
		this.indicatorStyle[utils.style.transitionDuration] = time + 'ms';

		if ( !time && utils.isBadAndroid ) {
			this.indicatorStyle[utils.style.transitionDuration] = '0.001s';
		}
	},

	transitionTimingFunction: function (easing) {
		this.indicatorStyle[utils.style.transitionTimingFunction] = easing;
	},

	refresh: function () {
		this.transitionTime();

		if ( this.options.listenX && !this.options.listenY ) {
			this.indicatorStyle.display = this.scroller.hasHorizontalScroll ? 'block' : 'none';
		} else if ( this.options.listenY && !this.options.listenX ) {
			this.indicatorStyle.display = this.scroller.hasVerticalScroll ? 'block' : 'none';
		} else {
			this.indicatorStyle.display = this.scroller.hasHorizontalScroll || this.scroller.hasVerticalScroll ? 'block' : 'none';
		}

		if ( this.scroller.hasHorizontalScroll && this.scroller.hasVerticalScroll ) {
			utils.addClass(this.wrapper, 'iScrollBothScrollbars');
			utils.removeClass(this.wrapper, 'iScrollLoneScrollbar');

			if ( this.options.defaultScrollbars && this.options.customStyle ) {
				if ( this.options.listenX ) {
					this.wrapper.style.right = '8px';
				} else {
					this.wrapper.style.bottom = '8px';
				}
			}
		} else {
			utils.removeClass(this.wrapper, 'iScrollBothScrollbars');
			utils.addClass(this.wrapper, 'iScrollLoneScrollbar');

			if ( this.options.defaultScrollbars && this.options.customStyle ) {
				if ( this.options.listenX ) {
					this.wrapper.style.right = '2px';
				} else {
					this.wrapper.style.bottom = '2px';
				}
			}
		}

		var r = this.wrapper.offsetHeight;	// force refresh

		if ( this.options.listenX ) {
			this.wrapperWidth = this.wrapper.clientWidth;
			if ( this.options.resize ) {
				this.indicatorWidth = Math.max(Math.round(this.wrapperWidth * this.wrapperWidth / (this.scroller.scrollerWidth || this.wrapperWidth || 1)), 8);
				this.indicatorStyle.width = this.indicatorWidth + 'px';
			} else {
				this.indicatorWidth = this.indicator.clientWidth;
			}

			this.maxPosX = this.wrapperWidth - this.indicatorWidth;

			if ( this.options.shrink == 'clip' ) {
				this.minBoundaryX = -this.indicatorWidth + 8;
				this.maxBoundaryX = this.wrapperWidth - 8;
			} else {
				this.minBoundaryX = 0;
				this.maxBoundaryX = this.maxPosX;
			}

			this.sizeRatioX = this.options.speedRatioX || (this.scroller.maxScrollX && (this.maxPosX / this.scroller.maxScrollX));	
		}

		if ( this.options.listenY ) {
			this.wrapperHeight = this.wrapper.clientHeight;
			if ( this.options.resize ) {
				this.indicatorHeight = Math.max(Math.round(this.wrapperHeight * this.wrapperHeight / (this.scroller.scrollerHeight || this.wrapperHeight || 1)), 8);
				this.indicatorStyle.height = this.indicatorHeight + 'px';
			} else {
				this.indicatorHeight = this.indicator.clientHeight;
			}

			this.maxPosY = this.wrapperHeight - this.indicatorHeight;

			if ( this.options.shrink == 'clip' ) {
				this.minBoundaryY = -this.indicatorHeight + 8;
				this.maxBoundaryY = this.wrapperHeight - 8;
			} else {
				this.minBoundaryY = 0;
				this.maxBoundaryY = this.maxPosY;
			}

			this.maxPosY = this.wrapperHeight - this.indicatorHeight;
			this.sizeRatioY = this.options.speedRatioY || (this.scroller.maxScrollY && (this.maxPosY / this.scroller.maxScrollY));
		}

		this.updatePosition();
	},

	updatePosition: function () {
		var x = this.options.listenX && Math.round(this.sizeRatioX * this.scroller.x) || 0,
			y = this.options.listenY && Math.round(this.sizeRatioY * this.scroller.y) || 0;

		if ( !this.options.ignoreBoundaries ) {
			if ( x < this.minBoundaryX ) {
				if ( this.options.shrink == 'scale' ) {
					this.width = Math.max(this.indicatorWidth + x, 8);
					this.indicatorStyle.width = this.width + 'px';
				}
				x = this.minBoundaryX;
			} else if ( x > this.maxBoundaryX ) {
				if ( this.options.shrink == 'scale' ) {
					this.width = Math.max(this.indicatorWidth - (x - this.maxPosX), 8);
					this.indicatorStyle.width = this.width + 'px';
					x = this.maxPosX + this.indicatorWidth - this.width;
				} else {
					x = this.maxBoundaryX;
				}
			} else if ( this.options.shrink == 'scale' && this.width != this.indicatorWidth ) {
				this.width = this.indicatorWidth;
				this.indicatorStyle.width = this.width + 'px';
			}

			if ( y < this.minBoundaryY ) {
				if ( this.options.shrink == 'scale' ) {
					this.height = Math.max(this.indicatorHeight + y * 3, 8);
					this.indicatorStyle.height = this.height + 'px';
				}
				y = this.minBoundaryY;
			} else if ( y > this.maxBoundaryY ) {
				if ( this.options.shrink == 'scale' ) {
					this.height = Math.max(this.indicatorHeight - (y - this.maxPosY) * 3, 8);
					this.indicatorStyle.height = this.height + 'px';
					y = this.maxPosY + this.indicatorHeight - this.height;
				} else {
					y = this.maxBoundaryY;
				}
			} else if ( this.options.shrink == 'scale' && this.height != this.indicatorHeight ) {
				this.height = this.indicatorHeight;
				this.indicatorStyle.height = this.height + 'px';
			}
		}

		this.x = x;
		this.y = y;

		if ( this.scroller.options.useTransform ) {
			this.indicatorStyle[utils.style.transform] = 'translate(' + x + 'px,' + y + 'px)' + this.scroller.translateZ;
		} else {
			this.indicatorStyle.left = x + 'px';
			this.indicatorStyle.top = y + 'px';
		}
	},

	_pos: function (x, y) {
		if ( x < 0 ) {
			x = 0;
		} else if ( x > this.maxPosX ) {
			x = this.maxPosX;
		}

		if ( y < 0 ) {
			y = 0;
		} else if ( y > this.maxPosY ) {
			y = this.maxPosY;
		}

		x = this.options.listenX ? Math.round(x / this.sizeRatioX) : this.scroller.x;
		y = this.options.listenY ? Math.round(y / this.sizeRatioY) : this.scroller.y;

		this.scroller.scrollTo(x, y);
	},

	fade: function (val, hold) {
		if ( hold && !this.visible ) {
			return;
		}

		clearTimeout(this.fadeTimeout);
		this.fadeTimeout = null;

		var time = val ? 250 : 500,
			delay = val ? 0 : 300;

		val = val ? '1' : '0';

		this.wrapperStyle[utils.style.transitionDuration] = time + 'ms';

		this.fadeTimeout = setTimeout((function (val) {
			this.wrapperStyle.opacity = val;
			this.visible = +val;
		}).bind(this, val), delay);
	}
};

IScroll.utils = utils;

if ( typeof module != 'undefined' && module.exports ) {
	module.exports = IScroll;
} else {
	window.IScroll = IScroll;
}

})(window, document, Math);

var livepreviewresize;
function setDragPreviewLimits() {
	var w = $(window).width();
	var x = w - 320 - 17;
	$( "#livepreviewResize" ).draggable( "option", "containment", [500,0,x,0] );
}
$(document).ready(function(){
	if (readCookie("livepreviewresize"))
	{
		livepreviewresize = readCookie("livepreviewresize");
		var avail = $(window).width()-320-17;
		if (livepreviewresize<avail) {
			var left = livepreviewresize;
		} else {
			if ($(window).width()>1260) {
				var left = avail;
			}
		}
		if (typeof left != 'undefined') {
			$("#livepreviewmask").hide();
			$("#contentWrapper,#editPageTop,#rightPane .cleverFilterBar,#campaigns,#dragBoundry,#launchPad,#popupDialogue,#lightPagesOuter,#downloadsPopdownOuter,#orderPopdownOuter,#loadingPNGWrap").css("width",left+"px");

			var di = left-80;
			$(".cleverFilterBar:not(#rightPane .cleverFilterBar)").width("width",di+"px");
			$("#dragInsert").css("width",di+"px");
			$("#livepreviewResize").css("left",left+"px");
			left = parseFloat(left)+17;
			$("#livepreview,#livepreviewmask").css("left",left+"px");
			if (typeof refreshScrollHeights !== 'undefined') {
				refreshScrollHeights();
				initLP();
			}
		
			
		}
	} else {
		if ($(window).width()>1260) {
			var left = $("#contentWrapper").width();
			var cw = left;
			$("#contentWrapper").css("width",cw+"px");
		}
	}
	function dragLP(e,ui) {
		var l = ui.helper.offset().left;
		$("#popupDialogue,#lightPagesOuter,#downloadsPopdownOuter,#orderPopdownOuter,#loadingPNGWrap,#dragBoundry,#contentWrapper,#editPageTop,#rightPane .cleverFilterBar,#campaigns,#launchPad").css("width",l+"px");

		var di = l-80;
		var lpw = $("#dragBoundry").width();
		var tw = $(window).width();
		tw = tw-lpw;
		var r = tw+"px";
		$("#dragInsert,.storageDraggable .rightPane:visible").css("width",di+"px").css("right",r);
		$(".rightPane:visible:not(.storageDraggable .rightPane)").css("width",lpw+"px").css("right",r);
		$(".cleverFilterBar:not(#rightPane .cleverFilterBar)").width("width",di+"px");
		var lpl = ui.helper.offset().left+17;
		$("#livepreview,#livepreviewmask").css("left",lpl+"px");
		$("#livepreviewResize").css("left",ui.helper.offset().left);
		if (typeof refreshScrollHeights !== 'undefined') {
			refreshScrollHeights();
			$.fn.bpeditor.makeTabsOneLine();
			initLP();
		}
		if ($("#dragBoundry").width()<700) { 
			$("body").addClass("under700");
		} else {
			$("body").removeClass("under700");			
		}
		if ($("#dragBoundry").width()<590) { 
			$("body").addClass("under590");
		} else {
			$("body").removeClass("under590");
		}
		if (typeof dragInsertButtons != 'undefined') {
		dragInsertButtons();			
		}

	}
	$('#livepreviewResize').draggable({
		containment:$("html")
		,axis:"x"
		,helper:function(){
			return $("<div></div>");
		}
		,start:function(){
			$("#livepreviewmask").show();
		}
		,stop:function(e,ui){
			$("#livepreviewmask").hide();

			dragLP(e,ui);
			createCookie("livepreviewresize",ui.helper.offset().left,365);
		}
		,drag:function(e,ui){

			dragLP(e,ui);
		}
	});
	setDragPreviewLimits();	
});

var swfu;
var swfu_vid;
var filterProductsByCategory="";
var filterSnippetsByCategory="";
var filterSubscribersByCategory="";
var filterSubscribersByCategoryMatchAll="&matchAll=false";
var filterSubscribersByStatus="";
function htmlentities( string ){
    // http://kevin.vanzonneveld.net
    // +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
    // +    revised by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
    // +   improved by: nobbler
    // +    tweaked by: Jack
    // %          note: table from http://www.the-art-of-web.com/html/character-codes/
    // *     example 1: htmlentities('Kevin & van Zonneveld');
    // *     returns 1: 'Kevin &amp; van Zonneveld'

    var histogram = {}, code = 0, tmp_arr = [], i = 0;
    var stringl = 0;

    histogram['34'] = 'quot';
    histogram['38'] = 'amp';
    histogram['60'] = 'lt';
    histogram['62'] = 'gt';
    histogram['160'] = 'nbsp';
    histogram['161'] = 'iexcl';
    histogram['162'] = 'cent';
    histogram['163'] = 'pound';
    histogram['164'] = 'curren';
    histogram['165'] = 'yen';
    histogram['166'] = 'brvbar';
    histogram['167'] = 'sect';
    histogram['168'] = 'uml';
    histogram['169'] = 'copy';
    histogram['170'] = 'ordf';
    histogram['171'] = 'laquo';
    histogram['172'] = 'not';
    histogram['173'] = 'shy';
    histogram['174'] = 'reg';
    histogram['175'] = 'macr';
    histogram['176'] = 'deg';
    histogram['177'] = 'plusmn';
    histogram['178'] = 'sup2';
    histogram['179'] = 'sup3';
    histogram['180'] = 'acute';
    histogram['181'] = 'micro';
    histogram['182'] = 'para';
    histogram['183'] = 'middot';
    histogram['184'] = 'cedil';
    histogram['185'] = 'sup1';
    histogram['186'] = 'ordm';
    histogram['187'] = 'raquo';
    histogram['188'] = 'frac14';
    histogram['189'] = 'frac12';
    histogram['190'] = 'frac34';
    histogram['191'] = 'iquest';
    histogram['192'] = 'Agrave';
    histogram['193'] = 'Aacute';
    histogram['194'] = 'Acirc';
    histogram['195'] = 'Atilde';
    histogram['196'] = 'Auml';
    histogram['197'] = 'Aring';
    histogram['198'] = 'AElig';
    histogram['199'] = 'Ccedil';
    histogram['200'] = 'Egrave';
    histogram['201'] = 'Eacute';
    histogram['202'] = 'Ecirc';
    histogram['203'] = 'Euml';
    histogram['204'] = 'Igrave';
    histogram['205'] = 'Iacute';
    histogram['206'] = 'Icirc';
    histogram['207'] = 'Iuml';
    histogram['208'] = 'ETH';
    histogram['209'] = 'Ntilde';
    histogram['210'] = 'Ograve';
    histogram['211'] = 'Oacute';
    histogram['212'] = 'Ocirc';
    histogram['213'] = 'Otilde';
    histogram['214'] = 'Ouml';
    histogram['215'] = 'times';
    histogram['216'] = 'Oslash';
    histogram['217'] = 'Ugrave';
    histogram['218'] = 'Uacute';
    histogram['219'] = 'Ucirc';
    histogram['220'] = 'Uuml';
    histogram['221'] = 'Yacute';
    histogram['222'] = 'THORN';
    histogram['223'] = 'szlig';
    histogram['224'] = 'agrave';
    histogram['225'] = 'aacute';
    histogram['226'] = 'acirc';
    histogram['227'] = 'atilde';
    histogram['228'] = 'auml';
    histogram['229'] = 'aring';
    histogram['230'] = 'aelig';
    histogram['231'] = 'ccedil';
    histogram['232'] = 'egrave';
    histogram['233'] = 'eacute';
    histogram['234'] = 'ecirc';
    histogram['235'] = 'euml';
    histogram['236'] = 'igrave';
    histogram['237'] = 'iacute';
    histogram['238'] = 'icirc';
    histogram['239'] = 'iuml';
    histogram['240'] = 'eth';
    histogram['241'] = 'ntilde';
    histogram['242'] = 'ograve';
    histogram['243'] = 'oacute';
    histogram['244'] = 'ocirc';
    histogram['245'] = 'otilde';
    histogram['246'] = 'ouml';
    histogram['247'] = 'divide';
    histogram['248'] = 'oslash';
    histogram['249'] = 'ugrave';
    histogram['250'] = 'uacute';
    histogram['251'] = 'ucirc';
    histogram['252'] = 'uuml';
    histogram['253'] = 'yacute';
    histogram['254'] = 'thorn';
    histogram['255'] = 'yuml';

    stringl = string.length
    for (i = 0; i < stringl; ++i) {
        code = string.charCodeAt(i);
        if (code in histogram) {
            tmp_arr[i] = '&'+histogram[code]+';';
        } else {
            tmp_arr[i] = string.charAt(i);
        }
    }

    return tmp_arr.join('');
}
function randomString() {
	var chars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz";
	var string_length = 5;
	var randomstring = '';
	for (var i=0; i<string_length; i++) {
		var rnum = Math.floor(Math.random() * chars.length);
		randomstring += chars.substring(rnum,rnum+1);
	}
	return randomstring;
}

function array_reverse( array, preserve_keys ) {
    // http://kevin.vanzonneveld.net
    // +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
    // +   improved by: Karol Kowalski
    // *     example 1: array_reverse( [ 'php', '4.0', ['green', 'red'] ], true );
    // *     returns 1: { 2: ['green', 'red'], 1: 4, 0: 'php'}

    var arr_len=array.length, newkey=0, tmp_ar = {};

    for(var key in array){
        newkey=arr_len-key-1;
        tmp_ar[(!!preserve_keys)?newkey:key]=array[newkey];
    }

    return tmp_ar;
}
function createCookie(name,value,days) {
	if (days) {
		var date = new Date();
		date.setTime(date.getTime()+(days*24*60*60*1000));
		var expires = "; expires="+date.toGMTString();
	}
	else var expires = "";
	document.cookie = name+"="+value+expires+"; path=/";
}

function readCookie(name) {
	var nameEQ = name + "=";
	var ca = document.cookie.split(';');
	for(var i=0;i < ca.length;i++) {
		var c = ca[i];
		while (c.charAt(0)==' ') c = c.substring(1,c.length);
		if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
	}
	return null;
}


function assignSortableListItems (wrapper,highlight,listItem) {

	if ( $("."+listItem+":not(.notDraggable):first",wrapper).find(".dragListItem").length) {
		var handle = ".dragListItem";
	} else {
		var handle = false;
	}
	$("."+listItem+":not(.notDraggable)",wrapper).draggable({

		helper: function() {
			if ($("."+highlight,wrapper).length>1 && $(this).hasClass(highlight)) {
				$clones = $("<div class='draggingBox'></div>");
				var ofTop = 0;
				var ofLeft = 0;
				$("."+highlight,wrapper).each(function(){
						if (listItem=="thumbItem") {
							$clones.append($(this).clone().css("width",$(this).width()+"px").css("top",ofTop+"px").css("left",ofLeft+"px").css("position","absolute")).append("<div class='dropzone'><div></div></div>");
						ofTop+=20;
						ofLeft+=20;

						} else {
							$clones.append($(this).clone().css("width",$(this).width()+"px")).append("<div class='dropzone'><div></div></div>");

						}
				});
				return $clones.css('width', this.offsetWidth-82).css("height",this.offsetHeight-12).css("margin-left","10px")[0];
			} else {
		 		return $(this).clone().css('width', this.offsetWidth-82).css("height",this.offsetHeight-12).css("margin-left","10px")[0];
			}

		},
		handle: handle,
		appendTo:wrapper,
		start: function(){
			if (typeof myScroll[wrapper.attr("id")] !='undefined') {
				myScroll[wrapper.attr("id")].disable();
			}
			hideToolTips(false);
		},
		stop: function(){
			if (typeof myScroll[wrapper.attr("id")] !='undefined') {
				myScroll[wrapper.attr("id")].enable();
			}
			clearTimeout(lovelyScrollDrag);
		},
		drag: function(){
			//hidePaneTools();

			var topZoneTop = wrapper.offset().top;
			var topZoneBottom = topZoneTop+160;
			var topZoneLeft = wrapper.offset().left;
			var topZoneRight = topZoneLeft + wrapper.width();

			var bottomZoneTop = wrapper.offset().top+wrapper.outerHeight()-50;
			var bottomZoneBottom = wrapper.offset().top+wrapper.outerHeight();
			var bottomZoneLeft = wrapper.offset().left;
			var bottomZoneRight = topZoneLeft + wrapper.width();

			var posTop = event.pageY;
			var posLeft = event.pageX;
			clearTimeout(lovelyScrollDrag);
			if (posTop > topZoneTop && posTop < topZoneBottom && posLeft > topZoneLeft && posLeft < topZoneRight) {
				wrapper.lovelyScrollMove(7);
				lovelyScrollDrag = setInterval(function(){
					wrapper.lovelyScrollMove(7);
				},30);
			}

			if (posTop > bottomZoneTop && posTop < bottomZoneBottom && posLeft > bottomZoneLeft && posLeft < bottomZoneRight) {
				wrapper.lovelyScrollMove(-7);
				lovelyScrollDrag = setInterval(function(){
					wrapper.lovelyScrollMove(-7);
				},30);
			}


		},
		refreshPositions:true,
	    zIndex: 1000,
		opacity:0.7,
		distance: 4,
		addClasses:false
	});
	if (listItem=="responsiveListItem") {
		$("."+listItem+":not(.notDraggable)",wrapper).draggable( "option", "axis", "y" );
	}
	if (listItem=="thumbItem") {
		$("."+listItem+":not(.notDraggable)",wrapper).draggable( "option", "handle", ".bpe_tiny_image" );
	}

	$(".dropzone",wrapper).droppable({

		accept: "."+listItem,
		tolerance:"pointer",
		greedy:true,
		drop: function(e, ui) {
			if ($("#rightPaneImages:visible").length && $("#imageSearch .target").hasClass("searching")) {
				$(this).removeClass("dropping");
				error(LangVars.Cant_Sort_Images_When_Search)
				return false;
			}
			$this = $(this);
			if (ui.draggable.hasClass(highlight) && $("."+highlight).length>1) {
				$target = $this;
				jQuery.fn.reverse = [].reverse;
				$("."+highlight+":not(.draggingBox ."+highlight+")",wrapper).reverse().each(function(){
					$(this).insertAfter($target);
				});

			} else {
				ui.draggable.insertAfter($this);
			}

			setTimeout(function() {
				$this.removeClass("dropping");
				$(".dropzone",wrapper).each(function(){
					if ($(this).parents("."+listItem).length) {} else {
						$(this).remove();
					}
				});

				var dropzone = "dropzone";

				$("."+listItem+":not(.notDraggable)",wrapper).after("<div class='"+dropzone+"'><div></div></div>");
				$("."+listItem+":not(.notDraggable):first",wrapper).before("<div class='"+dropzone+"'><div></div></div>");
//				$("#dragBelowToExclude",wrapper).nextAll("."+listItem+":not(.notDraggable)").addClass("excluded");
//				$("#dragBelowToExclude",wrapper).prevAll("."+listItem+":not(.notDraggable)").removeClass("excluded");


				if ($("body").attr("pane")=="mainMenuPages") {
					if ($("#dragBelowToExclude").length) {
						if ($("#dragBelowToExclude",wrapper).prevAll("."+listItem+":not(.notDraggable)").length==0) {
							$("#dragBelowToExclude",wrapper).before("<div class='"+dropzone+"'><div></div></div>");
							$("."+listItem+":not(.notDraggable):first",wrapper).prev().remove();
						}
					}

					// main pages
						working();
						if ($("#dragBelowToExclude",wrapper).nextAll("."+listItem+".hasSubs").length) {
							error(LangVars.Cant_Exclude_Pages_With_Subs);
							if ($("#filter").length>0) {

								$("#adminPages").load("pages.php?filter="+$("#filter").val(),function(){
									logTrainingClick("typeAndEnterMainMenuPage");
									assignPages();
									assign_page_filter();

									saved("Page Added");
								});
							} else {
								$("#adminPages").load("pages.php?to_prevent_cache="+(new Date).getTime(),function(){
									logTrainingClick("typeAndEnterMainMenuPage");

									assignPages();
									assign_page_filter();


									saved("Page Added");
								});
							}
							return false;
						}

						var order = "";
						var orderNo = parseInt($("#adminPages .topLevelSortable").attr("rel"));
						var id;

						$("#adminPages .editPageBar:not(.notDraggable)").each(function(){
							id = $(this).attr("rel");
							order=order+"!!"+id+"*"+orderNo;
							orderNo = orderNo+10;
						});
						/*
						var excludeAfter="";
						if ($("#adminPages #dragBelowToExclude").length) {
							var first = false;

							$("#adminPages .editPageBar.excluded").each(function(){

								if (first===false) {

									excludeAfter = $(this).attr("rel");
									first=true;
								}

								id = $(this).attr("rel");
								order=order+"!!"+id+"*"+orderNo;
								orderNo = orderNo+10;

							});
						}*/
						$.ajax({
						  type: "POST",
						  url: "pageActions.php",
//						  data: "pageAction=sort&data="+order+"&excludeAfter="+excludeAfter,
						  data: "pageAction=sort&data="+order,
						  success: function(msg){
			if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
							saved("Order Changed");
						  }
						});
				}

				if ($("#rightPaneGalleryImages:visible").length) {
					// gallery images

					working();
					var order = "";

					var id = $("#rightPaneGalleryImages .topBarTitle").attr("gallery-id");
					order=order+"!!"+id+"*";
					var orderNo = 10;
					$(".galleryThumb",$("#rightPaneGalleryImages")).each(function(){
						picId = $(this).attr("id").replace("galleryThumb-","");
						order=order+orderNo+"|"+picId+",";
						orderNo=orderNo+10;
					});

					$.ajax({
					  type: "POST",
					  url: "galleriesActions.php",
					  data: "galleriesAction=imageSort&data="+order,
					  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
						if (msg=="ok") {
							saved("Order Changed");
							$("#galleriesAdmin").load("galleriesActions.php?galleriesAction=show&to_prevent_cache="+(new Date).getTime(),function(){
								$("#galleriesPaneInner .insertTarget").html($("#galleriesAdmin").html());
							});
						} else {
							error(LangVars.Misc_Error);
						}

					  }
					});
				}
				
				if ($("#rightPaneImages:visible").length) {

					working();
					var order = "";

					var id = $("#rightPaneImages .topBarTitle").attr("gallery-id");
					var orderNo = 10;
					$(".contentImage",$("#rightPaneImages")).each(function(){
						picId = $(this).attr("id");
						order=order+orderNo+"|"+picId+",";
						orderNo=orderNo+10;
					});

					$.ajax({
					  type: "POST",
					  url: "pageActions.php",
					  data: "pageAction=imageSort&data="+order,
					  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
						if (msg=="ok") {
							saved("Order Changed");
							
						} else {
							error(LangVars.Misc_Error);
						}

					  }
					});
				}
				if ($("#rightPaneFormInputs:visible").length) {
					// form inputs

					working();
					var order = "";
					var orderNo = 10;
					$(".formInputItem",$("#rightPaneFormInputs")).each(function(){

						id = $(this).attr("id").replace("input-","");
						$("#renameFieldForm"+$("#editFormName").attr("form-id")+id+"form").insertAfter($(this));
						order=order+"!!"+id+"*"+orderNo;
						orderNo = orderNo+10;
					});
					$.ajax({
					  type: "POST",
					  url: "formsActions.php",
					  data: "formsAction=sortInput&data="+order,
					  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

						$("#formsWrapper").load("formsActions.php?formsAction=show&to_prevent_cache="+(new Date).getTime(),function(){

							$("#formsPaneInner .insertTarget").html($("#formsWrapper").html());

							saved("Order Changed");
						});



					  }
					});
				}
				if ($("#rightPaneEventsGroups:visible").length) {
					// form inputs

					working();
					var order = "";
					var orderNo = 10;
					$(".responsiveListItem",$("#rightPaneEventsGroups")).each(function(){

						id = $(this).attr("event-group-id");
						order=order+"!!"+id+"*"+orderNo;
						orderNo = orderNo+10;
					});
					$.ajax({
					  type: "POST",
					  url: "calendarActions.php",
					  data: "calendarAction=sortGroups&data="+order,
					  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

						$("#eventsGroupsList").show().load("calendarActions.php?calendarAction=showGroups&belongsToCal="+$("#calendarEventsDateFilter #showing_cat").val(),function(){

							displayEventGroups();
							$("#eventsGroupsPaneInner .responsiveListItem:first").addClass("listItemHighlight");
							$("#eventsGroupsPaneInner").lovelyScroll();
							assignEventGroupKeys();
							assignSortableListItems($("#eventsGroupsPaneInner"),"listItemHighlight","responsiveListItem");
							setTimeout(function() {
								selectionTools();
							}, 100);

							resetAddForms();
						});

					  }
					});
				}
				if ($("#rightPaneFormInputOptions:visible").length) {
					updateOptions(true);

				}
				if ($("#rightPaneProductOptions:visible").length) {
					updateProductOptions();

				}
				assignSortableListItems(wrapper,highlight,listItem);

			}, 100);


		},
		over: function(e,ui) {
			$(this).addClass("dropping");
			if (!ui.draggable.next().hasClass("dropping") && !ui.draggable.prev().hasClass("dropping")) {

			}
	    },
	    out: function() {
			$(this).removeClass("dropping");
	    }
	});

}

function updateOptions (hardRefresh) {
	working();
	var options = "";
	var id = $("#editInputName").attr("input-id");
	$(".optionItem",$("#rightPaneFormInputOptions")).each(function(){
		if (options=="") {
			options = $(this).attr("name");
		} else {
			options = options+"**!!**"+$(this).attr("name");
		}
	});
	$.ajax({
	  type: "POST",
	  url: "formsActions.php",
	  data: "formsAction=sortOptions&options="+encodeURIComponent(options)+"&id="+id,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

		$("#formsWrapper").load("formsActions.php?formsAction=show&showForm="+id+"&to_prevent_cache="+(new Date).getTime(),function(){
			$("#formsPaneInner .insertTarget").html($("#formsWrapper").html());
			if (hardRefresh) {
				setTimeout(function() {
					showInputOptions($("#formsPaneInner #input-"+id),true);
				}, 10);
			} else {
				selectionTools();
			}
			saved();
		});
	  }
	});
}
function dismissEditors () {
	hide_header_menus();
	if ( $("#bpe_area #bpe_text_dropship").length) {
		bpe_save();
	}
	if ( $("#bpe_area .editingImage").length) {
		saveImage();
	}
	$("#bpe_component_dropship,#bpe_video_dropship,#bpe_image_dropship","#bpe_area").remove();

}
function doNothing () {
	return false;
}
function renamePageImage (clicked) {
	editMeListItem(clicked);
}
function editGalleryImage (clicked) {
	editMeListItem(clicked);
}
function showGalleryImages ($gallery,reloading) {
	hidePanes();
	$("input").unbind();
	//$("#loadingMask").show();
	$(".assetPane").hide();
	$("#galleryImagesPaneInner .insertTarget").html($(".galleryImages",$gallery).html());
	$("#rightPaneGalleryImages .topBarTitle").html("<div><span>"+$gallery.attr("rel")+"</span></div>").attr("gallery-id",$gallery.attr("gallery-id"));
	showPane($("#rightPaneGalleryImages"),false,true,false,reloading);
	//$("#rightPaneGalleryImages").show();
	setTimeout(function() {$("#galleryImagesPaneInner").lovelyScroll();}, 400);

	hidePaneTools();
	$("#loadingMask").hide();
	assignListLasso($("#galleryImagesPaneInner"));
	assignListPane($("#galleryImagesPaneInner"),editGalleryImage);
	assignSortableListItems($("#galleryImagesPaneInner"),"listItemHighlight","responsiveListItem");
	assignGalleryImagesKeys();

	return false;
}
var doubletap=false;
function assignPane ($wrapper,item,highlight,passthroughDoubleTap) {

	$(document).unbind("click");
	$(document).click(function(e){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		if (ismac) {
			if (e.ctrlKey) {
				return false;
			}			
		}
		if ($(e.target).hasClass("paneTools") || $(e.target).parents(".paneTools").length) {
			return false;
		}
		var el = e.target.tagName.toLowerCase();
		if (el!="input") {
			hide_menus();
			hide_header_menus();
		}

		hide_header_menus(true);			



		//resetAddForms();
	});
	$(".paneToolsPrimary:not(#iconbarProductSerialNumbers,#showInvoice,#iconbarProductUploadFile,#exportFormSubmissions,#addNewsletterCustomField,#addEventCustomField,#addVolumeDiscount,#addVolumeDiscount2,#addVolumeDiscountOptions,#addVolumeDiscount2Options,#createGalleryFromSelection,.autoUpdateImage,#editGalleryImagesButton,#resetStaffPassword)",$wrapper.parents(".paneContents")).unbind("click").click(function(){
		if (!$(this).hasClass("unavailable")) {
			if ($(this).hasClass("secondaryAction")) {
				passthroughDoubleTap($(".listItemHighlight",$wrapper),true);
			} else {
				passthroughDoubleTap($(".listItemHighlight",$wrapper));
			}

		}
		return false;
	});
	$wrapper.unbind("click").click(function(e){
		if (ismac) {
			if (e.ctrlKey) {
				return false;
			}			
		}

		if (e.target.nodeName!="INPUT") {
			$("input").blur();
			//resetAddForms();
		}
		if ($(".topBarTitle.editing",$wrapper).length) {
			$(".topBarTitle.editing input",$wrapper).blur();
			return false;
		}
		if ($(".renameFieldForm:visible",$wrapper).length) {
			$(".renameFieldForm:visible .focus",$wrapper).blur();
			return false;
		}
		$t = $(e.target);
		var ok = false;
		if ($t.parent().hasClass("thumbItemEdit")) {
			return false;
		}
		if ($t.hasClass("showSubPages")||$t.parents(".showSubPages").length) {
			if ($("#rightPaneBlog:visible").length) {
				showComments($t.parents(".editBlogBar"));
			}

			if ($("#rightPaneProductCategories:visible").length) {
				if ($t.hasClass("upLevel")||$t.parents(".showSubPages").hasClass("upLevel")) {
					if ($t.hasClass("upLevel")) {
						var $p = $t;
					} else {
						var $p = $t.parents(".showSubPages");
					}
					var breadcrumb = $("#rightPaneProductCategories").attr("prod-cats-breadcrumb").split(",");
					$("#rightPaneProductCategories").attr("prod-cats-breadcrumb","");
					var breadcrumbUnqiue = new Array();
					for (var i = 0; i < breadcrumb.length; i++) {
						if (breadcrumbUnqiue.indexOf(breadcrumb[i]) === -1) {
							breadcrumbUnqiue.push(breadcrumb[i]);
						}
					};

					if ($p.attr("id")!="0") {
						for (var i = 0; i < breadcrumbUnqiue.length; i++) {

							if (i==0) {
								$("#rightPaneProductCategories").attr("prod-cats-breadcrumb",breadcrumbUnqiue[i]);

							} else {

								if (breadcrumbUnqiue[i]!=$p.attr("actual-id")) {

									$("#rightPaneProductCategories").attr("prod-cats-breadcrumb",$("#rightPaneProductCategories").attr("prod-cats-breadcrumb")+","+breadcrumbUnqiue[i]);
								} else {
									break;
								}
							}
						};
					}


					displayProdCats($p.attr("id"),false);
				} else {
					displayProdCats($t.parents(".prodCatItem").attr("product-category-id"),true);
				}
			}

			return false;
		}
		if ($t.hasClass("bpe_tiny_image") || $t.parents(".bpe_tiny_image").length) {
			$t = $t.parents("."+item);
			ok=true;
		}
		if ($t.parents("."+item).length) {
			$t = $t.parents("."+item);
			ok=true;
		}
		if ($t.hasClass(item) && item!="thumbItem") {
			ok=true;
		}

		if (ok) {


			if (e.shiftKey) {

				if ($t.prevAll("."+highlight).length) {
					$t.addClass(highlight+" stop");
					$t.prevAll("."+highlight+":first").nextAll("."+item).each(function(){
						if ($(this).hasClass("stop")) {
							return false;
						}
						$(this).addClass(highlight);
					});
					$("."+highlight+".stop").removeClass("stop");
				}
				if ($t.nextAll("."+highlight).length) {
				   $t.addClass(highlight+" stop");
					$t.nextAll("."+highlight+":last").prevAll("."+item).each(function(){
						if ($(this).hasClass("stop")) {
							return false;
						}
						$(this).addClass(highlight);
					});
					$("."+highlight+".stop").removeClass("stop");
				}
				$t.addClass(highlight);

			} else {
				if (doubletap && touchdown!=1) {
					clearTimeout(singleClick);

					touchdown=0;

					if ($("."+highlight).length==1) {
						passthroughDoubleTap($t);
					}

					return false;
				}
				if (!doubletap) {
					doubletap = true;
					setTimeout(function() {
						doubletap=false;
					}, 300);
					singleClick = setTimeout(function(){
						selectionTools();
					},300);
					if (!e.metaKey && !e.shiftKey && ismac) {
						$("."+highlight).removeClass(highlight);
					}
					if (!e.metaKey && !e.shiftKey && !e.ctrlKey && !ismac) {
						$("."+highlight).removeClass(highlight);
					}
					if ($t.hasClass(highlight)) {
						$t.removeClass(highlight);
					} else {
						if (!$t.prevAll(".editBlogBar").length && $t.hasClass("editBlogBar")) {
							logTrainingClick("highlightFirstBlog");
						}
						$t.addClass(highlight);
						if ($("#tab2Images").hasClass("selected")) {
							logTrainingClick("highlightStorageImage");
						}
						if ($("#tab2Newsletter").hasClass("selected")) {
							logTrainingClick("highlightMailingList");
						}
					}

				}
			}

		} else {

			$("."+highlight).removeClass(highlight);
			$("body").removeClass("selectingAll");

			selectionTools();

		}

		hide_iconbar_menus();
		//$("input").blur();
		return false;
	});
}
function assignThumbsPane ($wrapper,passthroughDoubleTap) {
	assignPane($wrapper,"thumbItem","imageItemHighlight",passthroughDoubleTap);
}
function assignListPane ($wrapper,passthroughDoubleTap) {
	assignPane($wrapper,"responsiveListItem","listItemHighlight",passthroughDoubleTap);
}
function assignLasso (wrapper,item,highlight) {
	return false;
	var wrapper = $("> .insertTarget",wrapper);
	//wrapper.selectable("destroy");
	wrapper.selectable({
		filter: '.'+item
		,selecting: function(event, ui) {
			$("."+highlight).removeClass(highlight);
			$(".ui-selecting").addClass(highlight);
			$(".ui-selected").addClass(highlight);
				// show/hide selection based tools

				selectionTools();

		 }
		,unselecting: function(event, ui) {
			$("."+highlight).removeClass(highlight);
			$(".ui-selecting").addClass(highlight);
			$(".ui-selected").addClass(highlight);
			selectionTools();

			// show/hide selection based tools
		 }
		,start: function(){
			$("input").blur();
		}
		,delay: 20
	});
}
function assignThumbLasso (wrapper) {
	assignLasso(wrapper,"thumbItem","imageItemHighlight");

}
function assignListLasso (wrapper) {

	assignLasso(wrapper,"responsiveListItem","listItemHighlight");

}
var flag1p=false;

function resetAddForms () {
	$("input").blur();
	$(".clearAfterSend").val("");
	$(".withFakeFormItem,.hideOnReset").hide();
	//$("#adminPages .responsiveListAddForm").insertBefore($("#adminPages .responsiveListItem").first().prev());
	cancelDialogue();
}
function assignAddForms () {
	$(".hiddenFields").hide();
	$(".addItemForm .focus").unbind("focus").focus(function(){
		$(document).unbind("keyup");
		$(document).unbind("keydown");
		$(document).unbind("keypress");
		$(document).unbind("click");
		$(document).keydown(function(e){
			if (e.keyCode==27) { // esc
				$("input").blur();
				return false;
			}
		});
		$(".hiddenFields",$(this).parents("form")).slideDown();
		if ($(this).attr("data-original")==undefined) {
			$(this).attr("data-original",$(this).val());
		}
		$(this).val("");
	});
	$(".addItemForm input:not(.focus)").unbind("focus").focus(function(){
		if ($(this).attr("data-original")==undefined) {
			$(this).attr("data-original",$(this).val());
		}
		$(this).val("");
	});
	$(".addItemForm input").unbind("blur").blur(function(){
		if ($(this).attr("data-original")!=undefined) {
			$(this).val($(this).attr("data-original"));
		}
		$(".hiddenFields",$(this).parents("form")).slideUp();
		cancelDialogue();
	});
}

var doubletabpages = false;
function assignPages () {

	bindReturnsToLP();
	bindToggleLivePreview();
	$("#deletedPages").click(function(e){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		if ($(e.target).hasClass("overflowEllipsis")) {
			$this = $(e.target).parent();
		} else {
			$this = $(e.target);
		}
		$this.addClass("toRestore");
				prepDialogue("<h2>"+LangVars.Restore_Deleted_Page+"</h2><p>"+LangVars.Restore_Deleted_Page_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Restore,restorePage,false,true,false,"");

		return false;
	});
	$("#adminPages #redirectingPageToggle").unbind("click").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		if (!$(this).hasClass("unavailable")) {
			prepDialogue("<h2>"+LangVars.Add_Redirecting_Page+"</h2><p>"+LangVars.Add_Redirecting_Page_Info+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Save,editRedirecting,false,true,true,"pageRedirecting");
		}

	});
	$("#adminPages #exludedPageToggle").unbind("click").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		
		if ($(this).hasClass("bpe_current")) {
			var ex = '0';
		} else {
			var ex = '1';
		}
		var Ids="[";
		$("#adminPages .listItemHighlight").each(function(){
			if (Ids=="[") {
			Ids+='"'+$(this).attr("rel")+'"';
			} else {
			Ids+=',"'+$(this).attr("rel")+'"';
			}
		});
		Ids+="]";
		working();
		$.ajax({
		  type: "POST",
		  url: "pageActions.php",
		  data: "pageAction=toggleExcluded&ids="+Ids+"&exclude="+ex,
		  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

				if (msg!="ok") {
					error(msg);
				} else {
					$("#adminPages .listItemHighlight").attr("data-excluded",ex);
					if (ex=="1") {
						$("#adminPages .listItemHighlight").addClass("excluded");
					} else {
						$("#adminPages .listItemHighlight").removeClass("excluded");
					}
					
					selectionTools();
					cancelDialogue();
					saved();
				}
		  }
		});
		
	});
	$("#adminPages #redirectFirstSubPageToggle").unbind("click").click(function(){
		if(!$(this).hasClass("unvailable")) {
			if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		
			if ($(this).hasClass("bpe_current")) {
				var red = '0';
			} else {
				var red = '1';
			}
			var Ids="[";
			$("#adminPages .listItemHighlight").each(function(){
				if (Ids=="[") {
				Ids+='"'+$(this).attr("rel")+'"';
				} else {
				Ids+=',"'+$(this).attr("rel")+'"';
				}
			});
			Ids+="]";
			working();
			$.ajax({
			  type: "POST",
			  url: "pageActions.php",
			  data: "pageAction=toggleRedirectFirst&ids="+Ids+"&redirect="+red,
			  success: function(msg){
		if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

					if (msg!="ok") {
						error(msg);
					} else {
						$("#adminPages .listItemHighlight").attr("data-redirect-first",red);
					
						selectionTools();
						cancelDialogue();
						saved();
					}
			  }
			});
		}	
	});
	$("#adminPages #newWindowToggle").unbind("click").click(function(){
		if(!$(this).hasClass("unvailable")) {
			if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		
			if ($(this).hasClass("bpe_current")) {
				var newwindow = '0';
			} else {
				var newwindow = '1';
			}
			var Ids="[";
			$("#adminPages .listItemHighlight").each(function(){
				if (Ids=="[") {
				Ids+='"'+$(this).attr("rel")+'"';
				} else {
				Ids+=',"'+$(this).attr("rel")+'"';
				}
			});
			Ids+="]";
			working();
			$.ajax({
			  type: "POST",
			  url: "pageActions.php",
			  data: "pageAction=toggleNewWindow&ids="+Ids+"&newwindow="+newwindow,
			  success: function(msg){
		if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

					if (msg!="ok") {
						error(msg);
					} else {
						$("#adminPages .listItemHighlight").attr("data-new-window",newwindow);
					
						selectionTools();
						cancelDialogue();
						saved();
					}
			  }
			});
		}	
	});
	$("#adminPages .paneToolsPrimary:not(.addSubpagePT)").unbind("click").click(function(){
		if (!$(this).hasClass("unavailable")) {
			working();
			$("#loadingMask").show();
			window.location="pagesEditPage.php?viewVersion="+$("#adminPages .listItemHighlight").attr("id");
			return false;

		}
		return false;
	});
	$("#adminPages .paneToolsPrimary.addSubpagePT").unbind("click").click(function(){
		if (!$(this).hasClass("unavailable")) {

			if ($("#adminPages .responsiveListItem.listItemHighlight").length!=1) {
				return false;
			}
			$target = $("#adminPages .responsiveListItem.listItemHighlight");
			$("#iconbarAddPage").removeClass("nonMenuPages");
			$("#iconbarAddPage").removeClass("mainMenuPages");
			$("#iconbarAddPage").addClass("subMenuPages");

			currentTooltipItem=0;
			currentTooltip=false;
			hideToolTips(false);
			working();
			bits = $target.attr("data-view-sub-data").split("|");
			var id = bits[0];
			var type = bits[1];
			$.ajax({
			  type: "POST",
			  url: "pageActions.php",
			  data: "pageAction=viewSubs&id="+id+"&type="+type,
			  success: function(msg){
				if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

				$("#adminPages").load("pages.php?to_prevent_cache="+(new Date).getTime(),function(){

					assignPages();
					assign_page_filter();
					if ($(".responsiveListItem:not(.breadcrumbPage)","#adminPages").length===0) {
						addPage();
					}

					saved();
				});
			  }
			});

		}
		return false;
	});
	$("#adminPages #iconbarAddPage").unbind().click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		addPage();
		return false;
	});
	$("#addAccessGroup").unbind().click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		prepDialogue("<h2>"+LangVars.Add_Access_Groups+"</h2><p>"+LangVars.Add_Access_Groups_Info+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Add,addAccessGroup,false,true,true,"pagesSecurity");
		return false;
	});
	$("#adminPages #groupList").load("accessGroupActions.php?accessGroupActions=showAccessGroups",function(){

	});
	$("#groupList,#public").click(function(e){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		if ($(e.target)[0].tagName.toLowerCase()=="a") {
			if (!$(e.target).hasClass("bpe_current")) {
				applyProtection($(e.target).attr("rel"),"add");
			} else {
				applyProtection($(e.target).attr("rel"),"remove");
			}
		}
		return false;
	});
	assignHeaderMenus();
	assignEditMenuPages();
	$(document).unbind("click");
	$(document).click(function(e){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		if ($(e.target).hasClass("paneTools") || $(e.target).parents(".paneTools").length) {			
			return false;
		}
		hide_menus();
		hide_header_menus(true);
	});
	/*
	$("#adminPages .paneTools").click(function(e){
		if ($(e.target).hasClass('iScrollIndicator')) {
			return false;
		}
//		hide_header_menus(true);
		return false;
	});*/
	$("#changeAddLanguage a").unbind().click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		if ($(this).hasClass("bpe_current")) {
			return false;
		}
		if ($(this).hasClass("changeLanguage")) {
			var lang = $(this).attr("fakehref");
			changeLanguage(lang);
		} else {
			pagesAddLanguage($(this));
		}
		return false;
	});
	$("#makeOnline").unbind().click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		logTrainingClick("statusToolbarLive");
		toggleLive("yes");
		return false;
	});
	$("#makeOffline").unbind().click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		toggleLive("");
		return false;
	});
	$("#adminPages .showLeftPane").click(function(){
		if (!flag1p) {
			flag1p=true;
			setTimeout(function() {
				flag1p=false;
			}, 500);
			$("body").addClass("slideoverLeftPane");
			$("#leftPaneMask").fadeIn(100);
			$("#fixedMenus").animate({left:"0px"},100,function(){


			});
		}
		return false;
	});

	assignSortableListItems($("#adminPages .pagesScroll"),"listItemHighlight","responsiveListItem");
	assignLasso($("#adminPages .pagesScroll"),"responsiveListItem","listItemHighlight");

	assignPagesKeys();
	//popdownPaginate("pages.php","ajax=true","#adminPages");
	if ($("#tab2MainMenuPages.selected").length) {
		$("#adminPages #mainMenuPagesMain").show();
		$("#adminPages #nonLinkingPagesMain").hide();
	}
	if ($("#tab2NonMenuPages.selected").length) {
		$("#adminPages #mainMenuPagesMain").hide();
		$("#adminPages #nonLinkingPagesMain").show();
	}


	/*

	$("#adminPages .filterBy").unbind().click(function(){

		filter = $(this).attr('id');
		$("#adminPages").load("pages.php?filter="+filter,function(){

			assignPages();
			assign_page_filter();
		});
		return false;
	});
	*/
	$("#adminPages #addTopLevelForm").unbind().submit(function(){
		if (!$("#adminPages #addTopLevelForm:visible").length) {
			return false
		}
		working();
		function showResponse (responseText, statusText) {
if (responseText =="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			if ($("#filter").length>0) {
				$("#adminPages").load("pages.php?filter="+$("#filter").val(),function(){
					logTrainingClick("typeAndEnterMainMenuPage");
					assignPages();
					assign_page_filter();

					saved("Page Added");
				});
			} else {
				$("#adminPages").load("pages.php?to_prevent_cache="+(new Date).getTime(),function(){
					logTrainingClick("typeAndEnterMainMenuPage");

					assignPages();
					assign_page_filter();


					saved("Page Added");
				});
			}
			if (currentTooltip) {
				interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
				clearTimeout(toolTipTimeout);
			}
			currentTooltipItem=0;
			currentTooltip="addednewpage";
			toolTipTimeout = setTimeout(tooltip, 1000);


			if (responseText=="exists") {
				error(LangVars.Page_Name_Exists);
			} else if (responseText=="limit") {
				error(LangVars.Page_Limit_Reached);
			}
		}
		var options = {
	        success:       showResponse  // post-submit callback
	    };
		var name = $("input[name=title]",this).val().toLowerCase();
		if (name==""){
			saved();
			return false;
		}
		if (name==""||name=="setup"||name=="admin"||name=="date"||name=="product added"||name=="page"||name=="category"||name=="populate"||name=="rss"||name=="search"||name=="install"||name=="media"||name=="downloads")  {
			error(LangVars.Name_Reserved);
		} else {
			$('#addTopLevelForm').ajaxSubmit(options);
		}
		return false;
	});
	$("#adminPages #submitTopLevelPage").unbind().click(function(){
		$("#addTopLevelForm").submit();
		return false;
	});
	/*
	$("#adminPages #addNonLinkingForm").unbind().submit(function(){
		if (!$("#adminPages #addNonLinkingForm:visible").length) {
			return false
		}

		working();
			function showResponse (responseText, statusText) {
if (responseText =="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
 				if ($("#filter").length>0) {
						$("#adminPages").load("pages.php?filter="+$("#filter").val(),function(){
							logTrainingClick("typeAndEnterNonMenuPage");
							assignPages();
							assign_page_filter();

							saved("Page Added");
						});
					} else {
						$("#adminPages").load("pages.php?to_prevent_cache="+(new Date).getTime(),function(){
							logTrainingClick("typeAndEnterNonMenuPage");
							assignPages();
							assign_page_filter();

							saved("Page Added");
						});
					}
					if (currentTooltip) {
						interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
						clearTimeout(toolTipTimeout);
					}
					currentTooltipItem=0;
					currentTooltip="addednewpage";
					toolTipTimeout = setTimeout(tooltip, 1000);

				if (responseText=="exists") {
					error(LangVars.Page_Name_Exists);
				} else if (responseText=="limit") {
					error(LangVars.Page_Limit_Reached);
				}

			}
			var options = {
		        success:       showResponse  // post-submit callback
		    };
			var name = $("input[name=title]",this).val().toLowerCase();
			if (name==""||name=="setup"||name=="admin"||name=="date"||name=="product added"||name=="page"||name=="category"||name=="populate"||name=="rss"||name=="search"||name=="install"||name=="media"||name=="downloads")  {
			cancel();
		} else {
			$('#addNonLinkingForm').ajaxSubmit(options);
		}
		return false;
	});
	$("#adminPages #addNonLinkingButton").unbind().click(function(){
		$("#addNonLinkingForm").submit();
		return false;
	});
	*/
	$("#adminPages .subPageForm").unbind().submit(function(){
		if (!$("#adminPages .subPageForm:visible").length) {
			return false
		}

		working();
			function showResponse (responseText, statusText) {
if (responseText =="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				if ($("#filter").length>0) {
						$("#adminPages").load("pages.php?filter="+$("#filter").val(),function(){
							logTrainingClick("typeAndEnterSubMenuPage");
							assignPages();
							assign_page_filter();
							saved("Page Added");
						});
					} else {
						$("#adminPages").load("pages.php?to_prevent_cache="+(new Date).getTime(),function(){
							logTrainingClick("typeAndEnterSubMenuPage");
							assignPages();
							assign_page_filter();
							saved("Page Added");
						});
					}
					if (currentTooltip) {
						interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
						clearTimeout(toolTipTimeout);
					}
					currentTooltipItem=0;
					currentTooltip="addednewpage";
					toolTipTimeout = setTimeout(tooltip, 1000);
				if (responseText=="exists") {
					error(LangVars.Page_Name_Exists);
				} else if (responseText=="limit") {
					error(LangVars.Page_Limit_Reached);
				}
			}
			var options = {
		        success:       showResponse  // post-submit callback
		    };
		var name = $("input[name=title]",this).val().toLowerCase();
		if (name==""||name=="setup"||name=="admin"||name=="date"||name=="product added"||name=="page"||name=="category"||name=="populate"||name=="rss"||name=="search"||name=="install"||name=="media"||name=="downloads")  {
			cancel();
		} else {
			$(this).ajaxSubmit(options);
		}
		return false;
	});
	$("#adminPages .submitSubPageForm").unbind().click(function(){
		id = $(this).attr('id');
		$("form","#"+id+"form").submit();
		return false;
	});
	$("#adminPages .toggleSubPage").unbind().click(function(){
		dismissPopupController();
		clickToAddNew($(this),$("#"+$(this).attr("id")+"form")," Type a new page name and hit enter",false);



		return false;
	});

	$("#adminPages .subSubPageForm,#adminPages .subSubSubPageForm").unbind().submit(function(){
		if (!$("#adminPages .subSubPageForm:visible,#adminPages .subSubSubPageForm:visible").length) {
			return false
		}

		working();
			function showResponse (responseText, statusText) {
if (responseText =="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				if ($("#filter").length>0) {
					$("#adminPages").load("pages.php?filter="+$("#filter").val(),function(){

						assignPages();
						assign_page_filter();
						saved("Page Added");
					});
				} else {
					$("#adminPages").load("pages.php?to_prevent_cache="+(new Date).getTime(),function(){

						assignPages();
						assign_page_filter();
						saved("Page Added");
					});
				}
				if (currentTooltip) {
					interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
					clearTimeout(toolTipTimeout);
				}
				currentTooltipItem=0;
				currentTooltip="addednewpage";
				toolTipTimeout = setTimeout(tooltip, 1000);
				if (responseText=="exists") {
					error(LangVars.Page_Name_Exists);
				} else if (responseText=="limit") {
					error(LangVars.Page_Limit_Reached);
				}

			}
			var options = {
		        success:       showResponse  // post-submit callback
		    };
		var name = $("input[name=title]",this).val().toLowerCase();
		if (name==""||name=="setup"||name=="admin"||name=="date"||name=="product added"||name=="page"||name=="category"||name=="populate"||name=="rss"||name=="search"||name=="install"||name=="media"||name=="downloads")  {
			cancel();
		} else {
			$(this).ajaxSubmit(options);
		}
		return false;
	});
	$("#adminPages .submitSubSubPageForm").unbind().click(function(){
		id = $(this).attr('id');
		$("form","#"+id+"form").submit();
		return false;
	});

	$("#adminPages .toggleSubSubPage").unbind().click(function(){
		dismissPopupController();
		clickToAddNew($(this),$("#"+$(this).attr("id")+"form")," Type a new page name and hit enter",false);
		return false;
	});
	$("#adminPages .toggleSubSubSubPage").unbind().click(function(){
		dismissPopupController();
		clickToAddNew($(this),$("#"+$(this).attr("id")+"form")," Type a new page name and hit enter",false);
		return false;
	});

	$("#adminPages").unbind("click").click(function(e){

		if (ismac && e.ctrlKey) {return false;}
		if (e.target.nodeName!="INPUT") {
			//$("input").blur();
		}
		if ($(e.target).hasClass("paneTools")||$(e.target).parents(".paneTools").length) {
			if (!$(e.target).parent().hasClass("bpe_selection_tool")&&!$(e.target).hasClass("bpe_selection_tool"))  {
				hide_header_menus(true);								
			}


		}
		if ($(e.target).hasClass("editPageBar") || $(e.target).parents(".editPageBar").length) {

			if ($(e.target).hasClass("editPageBar")) {

				$this=$(e.target);
			} else {
				$this=$(e.target).parents(".editPageBar");
				if ($(e.target).hasClass("backToMainPages")||$(e.target).parents().hasClass("backToMainPages")) {

					if (currentTooltip) {
						interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
						clearTimeout(toolTipTimeout);
					}
					currentTooltipItem=0;
					currentTooltip="mainmenupages";

					toolTipTimeout = setTimeout(tooltip, 1000);
					dismissPopupController();
					$.ajax({
					  type: "POST",
					  url: "pageActions.php",
					  data: "pageAction=showTop",
					  success: function(msg){
						if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

						$("#adminPages").load("pages.php?to_prevent_cache="+(new Date).getTime(),function(){

							if ($("#adminPages").attr("id")=="adminPages") {
								assignPages();
							}
							assign_page_filter($("#adminPages"));
							saved();
						});
					  }
					});

				return false;
				}
				if (($(e.target).hasClass("showSubPages")||$(e.target).parents().hasClass("showSubPages"))&&!$(e.target).hasClass("backToMainPages")) {

					if ($(e.target).hasClass("showSubPages")) {
						$target=$(e.target);
					} else {
						$target=$(e.target).parents(".showSubPages");
					}
					$("#iconbarAddPage").removeClass("nonMenuPages");
					$("#iconbarAddPage").removeClass("mainMenuPages");
					$("#iconbarAddPage").addClass("subMenuPages");

					currentTooltipItem=0;
					currentTooltip=false;
					hideToolTips(false);
					working();
					bits = $target.attr("id").split("|");
					var id = bits[0];
					var type = bits[1];
					$.ajax({
					  type: "POST",
					  url: "pageActions.php",
					  data: "pageAction=viewSubs&id="+id+"&type="+type,
					  success: function(msg){
						if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

						$("#adminPages").load("pages.php?to_prevent_cache="+(new Date).getTime(),function(){

							assignPages();
							assign_page_filter();
							saved();
						});
					  }
					});

				}
			}
			if ($this.hasClass("notokperms")) {
				return false;
			}
			if (doubletabpages && touchdown!=1) {
				clearTimeout(singleClick);
				if (!$(e.target).hasClass("showSubPages")&&!$(e.target).hasClass("hideInLight")) {
					//$("#loadingMask").show();
					window.location="pagesEditPage.php?viewVersion="+$this.attr("id");
					return false;
				}
				return false;
			}
			if (!doubletabpages) {
				doubletabpages = true;
				setTimeout(function() {
					doubletabpages=false;
				}, 300);
				singleClick = setTimeout(function() {

					selectionTools();

				}, 300);
				if (!$(e.target).hasClass("showSubPages")&&!$(e.target).hasClass("hideInLight")) {
					//window.location="pagesEditPage.php?viewVersion="+$(this).attr("id");
					if ((e.metaKey&&ismac)||(e.ctrlKey&&!ismac)) {
						if ($this.hasClass("listItemHighlight")) {
							$this.removeClass("listItemHighlight");
						} else {
							$this.addClass("listItemHighlight");
						}
					} else {
						if (e.shiftKey) {
							if ($this.prevAll(".listItemHighlight").length) {
								$this.addClass("listItemHighlight stop");
								$this.prevAll(".listItemHighlight:first").nextAll(".editPageBar").each(function(){
									if ($(this).hasClass("stop")) {
										return false;
									}
									$(this).addClass("listItemHighlight");
								});
								$(".listItemHighlight.stop").removeClass("stop");
							}
							if ($this.nextAll(".listItemHighlight").length) {
								$this.addClass("listItemHighlight stop");
								$this.nextAll(".listItemHighlight:last").prevAll(".editPageBar").each(function(){
									if ($(this).hasClass("stop")) {
										return false;
									}
									$(this).addClass("listItemHighlight");
								});
								$(".listItemHighlight.stop").removeClass("stop");
							}
							$this.addClass("listItemHighlight");

						} else {
							$(".listItemHighlight").removeClass("listItemHighlight");
							$("body").removeClass("selectingAll");
							$this.addClass("listItemHighlight");
							if (!$this.prevAll(".editPageBar").length) {
								logTrainingClick("highlightFirstPage");
							}
						}
					}

					if (currentTooltip) {
						interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
						clearTimeout(toolTipTimeout);
					}

					return false;
				}


			}
		}
	});



	$("#adminPages .faded.menu_options,.faded.show_choices").css("opacity",0.5);


	$("#adminPages #showNonLinkingPageForm").unbind().click(function(){
		dismissPopupController();
		addNewNonLinking();
		return false;
	});
	selectionTools();
}
function checkStatus () {

	$.ajax({
	  type: "POST",
	  url: "newsletterActions.php",
	  data: "newsletterAction=checkStatus",
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		if (msg != "error") {
			//if ($("#selectedMailingListPage").attr("page-id")!="") {
			$("#changeMailingListPageContent").addClass("okToSend");
			//}
		} else {
			$("#changeMailingListPageContent").removeClass("okToSend");
		}
	  }
	});
}

function assign_page_filter (obj) {



	//lightPagesHeight();
	if (typeof obj==='undefined') {
		obj = $("#adminPages");
		var skipOthers=true;
	} else {
		var skipOthers=false;
	}
	if (obj.parents("#cal").length) {
		return;
	}
	assignHeaderMenus();
	prepFancyLabelForms($(".filterBox",obj));
	if (obj.attr("id")=="lightPagesListInner") {
		$(".pagesScroll",obj).lovelyScroll(pagesScrollBottomLightPages);
	} else {
		$(".pagesScroll",obj).lovelyScroll(pagesScrollBottomPane);
	}



	//$(".pageFilterSearch",obj).unbind("focus");
	$(".pageFilterSearch",obj).click(function(){
		return false;
	})
	$(".pageFilterSearch",obj).focus(function(){
		/*miniSearchStart($(".topBar",obj));

		if ($(this).val()==LangVars.Search) {
			dismissPopupController();
			$(this).val("");
		}*/
		$(document).unbind("keyup");
		$(document).unbind("keydown");
		//return false;
	});

	$(".pageFilterSearch",obj).unbind("blur");
	$(".pageFilterSearch",obj).blur(function(){
		/*miniSearchStop($(".topBar",obj));
		if ($(this).val()=="") {
			$(this).val(LangVars.Search);
		}*/
		assignPagesKeys();
	});
	$(".showAllPages",obj).unbind();
	$(".showAllPages",obj).click(function(){
		working();
		dismissPopupController();

			$.ajax({
			  type: "POST",
			  url: "pageActions.php",
			  data: "pageAction=showTop",
			  success: function(msg){
				if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

				obj.load("pages.php?to_prevent_cache="+(new Date).getTime(),function(){
					if (obj.attr("id")=="adminPages") {
						assignPages();
					}
					assign_page_filter(obj);
					saved();
				});
			  }
			});

		return false;
	});
	$("#pagesFilter").on('click', 'a',  function(e){
//	$("#pagesFilter",obj).unbind().click(function(e){
//		if ($(e.target)[0].nodeName.toLowerCase()=="a") {
//			$this = $(e.target);
//		}
		var filter = $(this).attr("data-item-value");
		obj.load("pages.php?to_prevent_cache="+(new Date).getTime()+"&filter="+filter,function(){
			if (obj.attr("id")=="adminPages") {
				assignPages();
			}
			assign_page_filter(obj);
			saved();
		});
		return false;
	});
	/*
	$(".filterBy",obj).unbind().click(function(){
		working();
		filter = $(this).attr('id');
		obj.load("pages.php?to_prevent_cache="+(new Date).getTime()+"&filter="+filter,function(){
			if (obj.attr("id")=="adminPages") {
				assignPages();
			}
			assign_page_filter(obj);
			saved();
		});
		return false;
	});*/
	$(".showAll",obj).unbind().click(function(){
		working();

		obj.load("pages.php?filter=&to_prevent_cache="+(new Date).getTime(),function(){
			if (obj.attr("id")=="adminPages") {
				assignPages();
			}
			assign_page_filter(obj);
			saved();
		});
		return false;
	});
	$(".filterPage",obj).unbind();
	$(".filterPage",obj).click(function(){
		working();
		var page = $(this).attr("href");
		$.ajax({
		  type: "POST",
		  url: "pageActions.php",
		  data: "pageAction=changeView&showPage="+page,
		  success: function(msg){
			if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			obj.load("pages.php?to_prevent_cache="+(new Date).getTime(),function(){
				if (obj.attr("id")=="adminPages") {
					assignPages();
				}
				assign_page_filter(obj);
				saved();
			});
		  }
		});
		return false;
	});
	function sendSearch (val,obj) {
		working();
		var string = val;
		$.ajax({
		  type: "POST",
		  url: "pageActions.php",
		  data: "pageAction=filterSearch&string="+string,
		  success: function(msg){
			if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

			obj.load("pages.php?to_prevent_cache="+(new Date).getTime(),function(){
				if (obj.attr("id")=="adminPages") {
					assignPages();
				}
				assign_page_filter(obj);
				saved();
			});
		  }
		});
	}
	$(".pageFilterSearch",obj).parents("form").unbind("submit");
	$(".pageFilterSearch",obj).parents("form").submit(function(){
		sendSearch($(".pageFilterSearch",$(this)).val(),obj);
		return false;
	});
	$(".pageFilterSearch",obj).unbind("keydown");
	$(".pageFilterSearch",obj).keyup(function(e){
		if (e.which==13) {
			sendSearch($(this).val(),obj);
		}
	});
	$(".clearSearch",obj).unbind();
	$(".clearSearch",obj).click(function(){
		working();
		$.ajax({
		  type: "POST",
		  url: "pageActions.php",
		  data: "pageAction=filterSearch&string=",
		  success: function(msg){
			if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

			obj.load("pages.php?to_prevent_cache="+(new Date).getTime(),function(){
				if (obj.attr("id")=="adminPages") {
					assignPages();
				}
				assign_page_filter(obj);
				saved();
			});
		  }
		});
	});

	$(".showNonLinkingPages",obj).unbind();
	$(".showNonLinkingPages",obj).click(function(){
		working();
		dismissPopupController();
		$.ajax({
		  type: "POST",
		  url: "pageActions.php",
		  data: "pageAction=showNonLinkers",
		  success: function(msg){
			if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

			obj.load("pages.php?to_prevent_cache="+(new Date).getTime(),function(){
				if (obj.attr("id")=="adminPages") {
					assignPages();
				}
				popdownPaginate("pages.php","ajax=true","#lightPagesListInner");
				assign_page_filter(obj);

				saved();
			});
		  }
		});
	});

	$("#tick",obj).unbind().click(function(){
		var thisLeft = $(this).offset().left;
		var thisTop = $(this).offset().top;
		thisTop = thisTop-45;
		var w = $("#popupControl").width();
		w = w/2;
		thisLeft = thisLeft-w;
		$("#popupControl").css("top",thisTop+"px");
		$("#popupControl").css("left",thisLeft+"px");
		$("#popupControl").fadeIn();
		$(".editPageBar.checked").removeClass("checked");
		$("#adminPages").addClass("ticking").removeClass("notTicking");
		$(this).fadeOut();
		return false;
	});
	$(".breadcrumbViewSub",obj).unbind();
	$(".breadcrumbViewSub",obj).click(function(){
		dismissPopupController();
		working();
		bits = $(this).attr("rel").split("|");
		var id = bits[0];
		var type = bits[1];
		$.ajax({
		  type: "POST",
		  url: "pageActions.php",
		  data: "pageAction=viewSubs&id="+id+"&type="+type,
		  success: function(msg){
			if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

			obj.load("pages.php?to_prevent_cache="+(new Date).getTime(),function(){
				if (obj.attr("id")=="adminPages") {
					assignPages();
				}
				assign_page_filter(obj);
				saved();
			});
		  }
		});
	});

}
function eraseCookie(name) {
	createCookie(name,"",-1);
}

function cancel () {
//	$("#overlay").fadeOut(200);
//	$("#working").fadeOut(200);
	$("#loadingPNGWrap,#loadingPercent").fadeOut(200);
//	clearInterval(loadingAnimator);
}
function error (msg) {
	$("#loadingPNGWrap,#loadingPercent").fadeOut(200);
//	clearInterval(loadingAnimator);
	$("#overlay").fadeOut(200);
	$("#error").html(msg);

	$("#error").css("top","-80px").fadeIn(200).animate({top:"20px"});
}
function message (msg) {
	$("#loadingPNGWrap,#loadingPercent").fadeOut(200);
//	clearInterval(loadingAnimator);
	$("#overlay").fadeOut(200);
	$("#message").html(msg);

	$("#message").css("top","-80px").fadeIn(200).animate({top:"20px"});
}

function saved (skipLP) {
	if (skipLP!==true) {
		livepreview();
	}
//	clearInterval(loadingAnimator);
	$("#loadingPNGWrap,#loadingPercent").fadeOut(200);
}
function savedLog (msg) {

	$("#working").fadeOut(200);
	$("#savedLog").html(msg);
	$("#savedLog").fadeIn(200);
//	setTimeout(function() {$("#saved"Log).fadeOut(200);$("#overlay").fadeOut(200);}, 1000);
}
function working () {
//	clearTimeout(loadingAnimator);
//	$("#miniLoading").fadeIn(200);
//	loadingAnimator = setInterval(animateLoadingPNG, 40);
	$("#loadingPNGWrap").fadeIn(200);
}
function uploading(percent) {
	if ($("#loadingPercent:visible").length==0) {
		clearTimeout(loadingAnimator);
//		loadingAnimator = setInterval(animateLoadingPNG, 40);
		$("#loadingPNGWrap").fadeIn(200);
		$("#loadingPercent").fadeIn(200);
	}

	$("#loadingPercentBar").css("width",percent+"%");
}
function dismissPopupController () {
	if ($("#adminPages").hasClass("ticking")) {
		$("#adminPages").removeClass("ticking").addClass("notTicking");
		$("#popupControl").fadeOut();
		$("#tick").fadeIn();
		cancelPopupControl();
	}
}
function cancelPopupControl () {
	var sl1w = $("#slideMask .slide1").width();
	var sl2w = $("#slideMask .slide2").width();
	var half = sl2w-sl1w;

	$("#slideMask .slideWrapper").animate({left:'0px'});
	$("#slideMask").animate({ width:sl1w+"px" });
	half = half / 2;
	var curleft = $("#popupControl").offset().left;
	half = curleft+half;
	$("#popupControl").animate({left:half+'px'});
}

function hide_iconbar_menus () {
	$(".iconbarMenu").hide();
	hide_header_menus();
}
function pagesCutCopy (type) {
	working();
	if ($(".listItemHighlight").length) {
		$("#iconbarPastePages").removeClass("greyedOut");
	}
	var Ids="[";
	$("#adminPages .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("rel")+'"';
		} else {
		Ids+=',"'+$(this).attr("rel")+'"';
		}
	});
	Ids+="]";
	$.ajax({
	  type: "POST",
	  url: "pageActions.php",
	  data: "pageAction="+type+"&ids="+Ids,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		if (msg!="ok") {
			error(msg);
		} else {
			if (type=="cut_page") {
				$(".listItemHighlight").each(function(){
					$(this).prev().remove();
					$(this).remove();
				});

			}
			saved();
			hide_menus();
		}
	  }
	});
}
function assignAddFormForm () {
	$("#rightPaneForms #addFormForm").unbind("submit").submit(function(){
		working();
		function showResponse (responseText, statusText) {
	if (responseText =="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			if (responseText=="ok") {
				$("#formsWrapper").load("formsActions.php?formsAction=show&to_prevent_cache="+(new Date).getTime(),function(){
					addFormsToSettings();
					$("#formsPaneInner .insertTarget").html($("#formsWrapper").html());
					$("#formsPaneInner .insertTarget .formItem:first").addClass("listItemHighlight");
					resetAddForms();
					assignDragAssets($("#formsPaneInner .insertTarget"));
					assignFormsKeys();
					$("#formsPaneInner").lovelyScroll();
					saved("New Form Added");
					selectionTools();
					if (currentTooltip) {
						interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
						clearTimeout(toolTipTimeout);
					}
					currentTooltipItem=0;
					currentTooltip="newform";
					toolTipTimeout = setTimeout(tooltip, 450);


				});
			} else {
				error(LangVars.Misc_Error);
			}

		}
		var options = {
	        success:       showResponse  // post-submit callback
	    };

		$(this).ajaxSubmit(options);

		return false;
	});
}
function updateTotalRecips() {
	var Ids = getMailingListSendIds();
	if ($("#newsletterPaneInner .listItemHighlight").length==1) {
		var cats = getMailingListSendCats();
		var matchAll = getMailingListSendMatchAll();
	} else {
		var cats="";
		var matchAll="";
	}

	$("#listSize span").load("newsletterActions.php?newsletterAction=send&groups="+Ids+"&cats="+cats+matchAll+"&page=&subject=&showRecips=true");

}
function bindMailingListSendCategories() {
	$("#onlySendToCatsAll").prop("checked","checked");
	$("#onlySendToCatsAll").unbind().change(function(){
		if ($(this).prop('checked')) {
			$("#sendToCategories input").removeAttr("checked");
			$("#onlySendMatchAll").removeAttr("checked");
		}
		updateTotalRecips();
	});
	$("#sendToCategories input").unbind().change(function(){
		if ($("#sendToCategories input:checked").length) {
			$("#onlySendToCatsAll").removeAttr("checked");
		} else {
			$("#onlySendToCatsAll").prop("checked","checked");
			$("#onlySendMatchAll").removeAttr("checked");
		}
		updateTotalRecips();
	});
	$("#onlySendMatchAll").unbind().change(function(){
		updateTotalRecips();
	});
}
function savePaneToolEditText(text) {
	$("#paneToolEditingText").text(text);
	applyProperties($("#"+$("#paneToolEditingText").data("scope")),$("#paneToolEditingText").data("itemclass"));
	hide_header_menus(true);
	selectionTools();
	cancelDialogue();
}
function prepDialogue (text,primaryText,primaryFun,secondaryText,secondaryFun,primaryImportant,secondaryImportant,textField,editingType,linkBuilder,url,ids,selectingAll,items,updateAttr,prefill) {

	if (justScrolled) {
		return false;
	}
	if (editingType=="yourAccount") {
		text="<h2>"+LangVars.Change_Your_Account+"</h2>";
	}
	
	if (editingType=="mailingListSend") {
		$("#sendToCategories").html("");
		if ($("#newsletterPane .listItemHighlight").length===1) {
			if ($("#newsletterPane .listItemHighlight .groupcat").length) {
				$("#mailingListSentToCategories").show();
				$("#newsletterPane .listItemHighlight .groupcat").each(function(){
				$("#sendToCategories").append('<label><input type="checkbox" value="'+$(this).attr("data-id")+'"/>'+$(this).val()+'</label><br/>');
				});
				$("#sendingToMultipleListsMessage").hide();
			} else {
				$("#mailingListSentToCategories").hide();
				$("#sendingToMultipleListsMessage").hide();
			}


		} else {
			$("#mailingListSentToCategories").hide();
			$("#sendingToMultipleListsMessage").show();
		}
		bindMailingListSendCategories();
		updateTotalRecips();
	}
	$("#popupDialogue input,#popupDialogue textarea").unbind("keyup");

	$("#popupDialogueContent").html(text);
	$("#popupDialogueContent .popupExpand").hide().after("<p class='showMore'>"+LangVars.Show_More+"</p>").after("<p class='showLess'>"+LangVars.Show_Less+"</p>");
	$(".showLess").hide();
	$("#popupDialogueContent .showMore").click(function(){
		$(this).hide();
		$(".showLess").show();
		$(".popupExpand").slideDown();
	});
	$("#popupDialogueContent .showLess").click(function(){
		$(this).hide();
		$(".showMore").show();
		$(".popupExpand").slideUp();
	});
	if (linkBuilder===true) {
		$("#linkOpensInNewWindow,#insertInteralLinks").show();
	} else {
		$("#linkOpensInNewWindow,#insertInteralLinks").hide();
	}
	$("#popupDialogueContentPrimary div").html(primaryText);
	$("#popupDialogueContentSecondary div").html(secondaryText);
	unassignKeys();
	$("#popupDialogueChangeMailingListAutoresponder,#popupDialogueChangeFormAutoresponder,#popupDialogueFieldMailingListSend,#popupDialogueSecurity,#popupDialogueField,#popupDialogueFieldPassword,#popupDialogueFieldPasswordStaff,#popupDialogueFrom,#popupDialogueSMTP,#popupDialogueMailTemplate,#popupDialogueImportSubscribers,#popupDialogueProductVolumeDiscount,#popupDialogueTableData,#popupDialogueImportEvents,#popupDialogueFieldQuickAddImageCategory").hide();
	if (textField) {
		$("#popupDialogueField").show();
		$("#popupDialogueField textarea").val("");
		if (typeof prefill != 'undefined') {
			$("#popupDialogueField textarea").val(prefill);
		}
		if (editingType=="addTable" || editingType=="editTable") {
			$("#showTableExample").click(function(){
				$("#popupDialogueField textarea").val(LangVars.CSV_Example);
				return false;
			});
		}
		if (editingType=="panetoolproperty") {
			$("#popupDialogueField textarea").val($("#paneToolEditingText").text()).select();
		}
		if (editingType=="formRedirectOnSend") {
			$("#popupDialogueField textarea").val($("#iconbarFormRedirectOnSend").text()).select();
		}
		if (editingType=="changeNewsletterCustomField") {
			if ($("#subscriberCustomFields .editingField").text()!=LangVars.None && $("#subscriberCustomFields .editingField").text()!="("+LangVars.Multiple_Selected+")") {
			$("#popupDialogueField textarea").val($("#subscriberCustomFields .editingField").text());
			}
		}
		if (editingType=="editTable") {
			var	editingtarget = $(".bpe_highlight");
			$(".itemTag",editingtarget).remove();
			html2csv(editingtarget.html());
		}
		if (editingType=="quickAddImageCategory") {
			$("#popupDialogueFieldQuickAddImageCategory").show();
		}
		if (editingType=="mailingListSend") {
			$("#popupDialogueMailTemplate .imageContextEditFieldset").addClass("showingLabel");
			$("#popupDialogueMailTemplate .toggleLabelValue").val("");
			$("#popupDialogueField").hide();
			$("#popupDialogueFieldMailingListSend").show();
			if ($("#sendMailingListSubjectInput").val()!="") {
				$("#sendMailingListSubject").removeClass("showingLabel");
			}
			if ($("#order_received_email").val()!="") {
				$("#popupMailTemplateMessage").removeClass("showingLabel");
			}

			$("#popupDialogueFieldMailingListSend .toggleLabelValue").unbind().focus(function(){
				$(this).parents(".imageContextEditFieldset").addClass("focusing");
			});
			$("#popupDialogueFieldMailingListSend .toggleLabelValue").unbind().blur(function(){
				$(this).parents(".imageContextEditFieldset").removeClass("focusing");
			});
			$("#popupDialogueFieldMailingListSend .toggleLabelValue").unbind().keyup(function(e){
				if ($(this).val()!="") {
					$(this).parents(".imageContextEditFieldset").removeClass("showingLabel");
				} else {
					$(this).parents(".imageContextEditFieldset").addClass("showingLabel");
				}
			});
		}
		if (editingType=="formAutoresponder") {

			$("#popupDialogueField").hide();
			$("#popupDialogueChangeFormAutoresponder").show();

			$("#popupDialogueChangeFormAutoresponder .toggleLabelValue").unbind().focus(function(){
				$(this).parents(".imageContextEditFieldset").addClass("focusing");
			});
			$("#popupDialogueChangeFormAutoresponder .toggleLabelValue").unbind().blur(function(){
				$(this).parents(".imageContextEditFieldset").removeClass("focusing");
			});
			$("#popupDialogueChangeFormAutoresponder .toggleLabelValue").unbind().keyup(function(e){
				if ($(this).val()!="") {
					$(this).parents(".imageContextEditFieldset").removeClass("showingLabel");
				} else {
					$(this).parents(".imageContextEditFieldset").addClass("showingLabel");
				}
			});
		}
		if (editingType=="mailingListAutoresponder") {

			$("#popupDialogueField").hide();
			$("#popupDialogueChangeMailingListAutoresponder").show();
			$("#popupDialogueChangeMailingListAutoresponder .toggleLabelValue").unbind().focus(function(){
				$(this).parents(".imageContextEditFieldset").addClass("focusing");
			});
			$("#popupDialogueChangeMailingListAutoresponder .toggleLabelValue").unbind().blur(function(){
				$(this).parents(".imageContextEditFieldset").removeClass("focusing");
			});
			$("#popupDialogueChangeMailingListAutoresponder .toggleLabelValue").unbind().keyup(function(e){
				if ($(this).val()!="") {
					$(this).parents(".imageContextEditFieldset").removeClass("showingLabel");
				} else {
					$(this).parents(".imageContextEditFieldset").addClass("showingLabel");
				}
			});
		}
		if (editingType=="orderReceivedTemplate") {
			$("#popupDialogueMailTemplate .imageContextEditFieldset").addClass("showingLabel");
			$("#popupDialogueMailTemplate .toggleLabelValue").val("");
			$("#popupDialogueField").hide();
			$("#popupDialogueMailTemplate").show();
			if ($("#order_received_email_subject").val()!="") {
				$("#popupMailTemplateSubject").removeClass("showingLabel");
			}
			if ($("#order_received_email").val()!="") {
				$("#popupMailTemplateMessage").removeClass("showingLabel");
			}

			$("#popupDialogueMailTemplate .toggleLabelValue").unbind().focus(function(){
				$(this).parents(".imageContextEditFieldset").addClass("focusing");
			});
			$("#popupDialogueMailTemplate .toggleLabelValue").unbind().blur(function(){
				$(this).parents(".imageContextEditFieldset").removeClass("focusing");
			});
			$("#popupDialogueMailTemplate .toggleLabelValue").unbind().keyup(function(e){
				if ($(this).val()!="") {
					$(this).parents(".imageContextEditFieldset").removeClass("showingLabel");
				} else {
					$(this).parents(".imageContextEditFieldset").addClass("showingLabel");
				}
			});
			$("#popupDialogueMailTemplate input[name=subject]").val($("#order_received_email_subject").val());
			$("#popupDialogueMailTemplate textarea[name=message]").val($("#order_received_email").val());
		}
		if (editingType=="orderDispatchedTemplate") {
			$("#popupDialogueMailTemplate .imageContextEditFieldset").addClass("showingLabel");
			$("#popupDialogueMailTemplate .toggleLabelValue").val("");
			$("#popupDialogueField").hide();
			$("#popupDialogueMailTemplate").show();

			if ($("#order_sent_email_subject").val()!="") {
				$("#popupMailTemplateSubject").removeClass("showingLabel");
			}
			if ($("#order_sent_email").val()!="") {
				$("#popupMailTemplateMessage").removeClass("showingLabel");
			}

			$("#popupDialogueMailTemplate .toggleLabelValue").unbind().focus(function(){
				$(this).parents(".imageContextEditFieldset").addClass("focusing");
			});
			$("#popupDialogueMailTemplate .toggleLabelValue").unbind().blur(function(){
				$(this).parents(".imageContextEditFieldset").removeClass("focusing");
			});
			$("#popupDialogueMailTemplate .toggleLabelValue").unbind().keyup(function(e){
				if ($(this).val()!="") {
					$(this).parents(".imageContextEditFieldset").removeClass("showingLabel");
				} else {
					$(this).parents(".imageContextEditFieldset").addClass("showingLabel");
				}
			});
			$("#popupDialogueMailTemplate input[name=subject]").val($("#order_sent_email_subject").val());
			$("#popupDialogueMailTemplate textarea[name=message]").val($("#order_sent_email").val());
		}
		if (editingType=="yourAccount") {
			$("#popupDialogueFieldPassword .imageContextEditFieldset").addClass("showingLabel");
			$("#popupDialogueFieldPassword .toggleLabelValue").val("");
			$("#popupDialogueField").hide();
			$("#popupDialogueFieldPassword").show();
			$("#popupDialogueFieldPassword .toggleLabelValue").unbind().focus(function(){
				$(this).parents(".imageContextEditFieldset").addClass("focusing");
			});
			$("#popupDialogueFieldPassword .toggleLabelValue").unbind().blur(function(){
				$(this).parents(".imageContextEditFieldset").removeClass("focusing");
			});
			$("#popupDialogueFieldPassword .toggleLabelValue").unbind().keyup(function(e){
				if ($(this).val()!="") {
					$(this).parents(".imageContextEditFieldset").removeClass("showingLabel");
				} else {
					$(this).parents(".imageContextEditFieldset").addClass("showingLabel");
				}
			});
		}
		if (editingType=="resetStaffPass") {

			$("#popupDialogueFieldPasswordStaff .imageContextEditFieldset").addClass("showingLabel");
			$("#popupDialogueFieldPasswordStaff .toggleLabelValue").val("");
			$("#popupDialogueField").hide();
			$("#popupDialogueFieldPasswordStaff").show();
			$("#popupDialogueFieldPasswordStaff .toggleLabelValue").unbind().focus(function(){
				$(this).parents(".imageContextEditFieldset").addClass("focusing");
			});
			$("#popupDialogueFieldPasswordStaff .toggleLabelValue").unbind().blur(function(){
				$(this).parents(".imageContextEditFieldset").removeClass("focusing");
			});
			$("#popupDialogueFieldPasswordStaff .toggleLabelValue").unbind().keyup(function(e){
				if ($(this).val()!="") {
					$(this).parents(".imageContextEditFieldset").removeClass("showingLabel");
				} else {
					$(this).parents(".imageContextEditFieldset").addClass("showingLabel");
				}
			});
		}
		if (editingType=="newsletterFrom") {
			$("#popupDialogueField").hide();
			$("#popupDialogueFrom").show();
			$("#popupDialogueFrom .toggleLabelValue").val("");
			$("#popupDialogueFrom .imageContextEditFieldset").addClass("showingLabel");


			if ($("#newsletterFromSetting").attr("mailing-list-from-name")!="") {
				$("#popupFromName").removeClass("showingLabel");
			}
			if ($("#newsletterFromSetting").attr("mailing-list-from-email")!="") {
				$("#popupFromEmail").removeClass("showingLabel");
			}

			$("#popupDialogueFrom .toggleLabelValue").unbind().focus(function(){
				$(this).parents(".imageContextEditFieldset").addClass("focusing");
			});
			$("#popupDialogueFrom .toggleLabelValue").unbind().blur(function(){
				$(this).parents(".imageContextEditFieldset").removeClass("focusing");
			});
			$("#popupDialogueFrom .toggleLabelValue").unbind().keyup(function(e){
				if ($(this).val()!="") {
					$(this).parents(".imageContextEditFieldset").removeClass("showingLabel");
				} else {
					$(this).parents(".imageContextEditFieldset").addClass("showingLabel");
				}
			});
			$("#popupDialogueFrom input[name=from_name]").val($("#newsletterFromSetting").attr("mailing-list-from-name"));
			$("#popupDialogueFrom input[name=from_email]").val($("#newsletterFromSetting").attr("mailing-list-from-email"));

		}
		if (editingType=="newsletterSMTP") {
			$("#popupDialogueSMTP .imageContextEditFieldset").addClass("showingLabel");
			$("#popupDialogueSMTP .toggleLabelValue").val("");
			$("#popupDialogueField").hide();
			$("#popupDialogueSMTP").show();
			if ($("#newsletterSMTPSetting").attr("mailing-list-server")!="") {
				$("#popupSMTPServer").removeClass("showingLabel");
			}
			if ($("#newsletterSMTPSetting").attr("mailing-list-username")!="") {
				$("#popupSMTPUsername").removeClass("showingLabel");
			}
			if ($("#newsletterSMTPSetting").attr("mailing-list-password")!="") {
				$("#popupSMTPPassword").removeClass("showingLabel");
			}

			$("#popupDialogueSMTP .toggleLabelValue").unbind().focus(function(){
				$(this).parents(".imageContextEditFieldset").addClass("focusing");
			});
			$("#popupDialogueSMTP .toggleLabelValue").unbind().blur(function(){
				$(this).parents(".imageContextEditFieldset").removeClass("focusing");
			});
			$("#popupDialogueSMTP .toggleLabelValue").unbind().keyup(function(e){
				if ($(this).val()!="") {
					$(this).parents(".imageContextEditFieldset").removeClass("showingLabel");
				} else {
					$(this).parents(".imageContextEditFieldset").addClass("showingLabel");
				}
			});
			$("#popupDialogueSMTP input[name=smtp_server]").val($("#newsletterSMTPSetting").attr("mailing-list-server"));
			$("#newsletterSMTPSetting .value").attr("title",$("#newsletterSMTPSetting").attr("mailing-list-server"));
			$("#newsletterSMTPSetting .value span").text($("#newsletterSMTPSetting").attr("mailing-list-server"));
			$("#popupDialogueSMTP input[name=smtp_username]").val($("#newsletterSMTPSetting").attr("mailing-list-username"));
			$("#popupDialogueSMTP input[name=smtp_password]").val($("#newsletterSMTPSetting").attr("mailing-list-password"));
		}
		if (editingType=="pagesSecurity") {
			$("#popupDialogueSecurity .imageContextEditFieldset").addClass("showingLabel");
			$("#popupDialogueSecurity .toggleLabelValue").val("");
			$("#popupDialogueField").hide();
			$("#popupDialogueSecurity").show();

			$("#popupDialogueSecurity .toggleLabelValue").unbind().focus(function(){
				$(this).parents(".imageContextEditFieldset").addClass("focusing");
			});
			$("#popupDialogueSecurity .toggleLabelValue").unbind().blur(function(){
				$(this).parents(".imageContextEditFieldset").removeClass("focusing");
			});
			$("#popupDialogueSecurity .toggleLabelValue").unbind().keyup(function(e){
				if ($(this).val()!="") {
					$(this).parents(".imageContextEditFieldset").removeClass("showingLabel");
				} else {
					$(this).parents(".imageContextEditFieldset").addClass("showingLabel");
				}
			});
		}
		if (editingType=="checkoutFrom") {
			$("#popupDialogueFrom .imageContextEditFieldset").addClass("showingLabel");
			$("#popupDialogueFrom .toggleLabelValue").val("");
			$("#popupDialogueField").hide();
			$("#popupDialogueFrom").show();
			if ($("#checkoutFromSetting").attr("checkout-from-name")!="") {
				$("#popupFromName").removeClass("showingLabel");
			}
			if ($("#checkoutFromSetting").attr("checkout-from-email")!="") {
				$("#popupFromEmail").removeClass("showingLabel");
			}

			$("#popupDialogueFrom .toggleLabelValue").unbind().focus(function(){
				$(this).parents(".imageContextEditFieldset").addClass("focusing");
			});
			$("#popupDialogueFrom .toggleLabelValue").unbind().blur(function(){
				$(this).parents(".imageContextEditFieldset").removeClass("focusing");
			});
			$("#popupDialogueFrom .toggleLabelValue").unbind().keyup(function(e){
				if ($(this).val()!="") {
					$(this).parents(".imageContextEditFieldset").removeClass("showingLabel");
				} else {
					$(this).parents(".imageContextEditFieldset").addClass("showingLabel");
				}
			});
			$("#popupDialogueFrom input[name=from_name]").val($("#checkoutFromSetting").attr("checkout-from-name"));
			$("#popupDialogueFrom input[name=from_email]").val($("#checkoutFromSetting").attr("checkout-from-email"));
		}
		if (editingType=="checkoutSMTP") {
			$("#popupDialogueSMTP .imageContextEditFieldset").addClass("showingLabel");
			$("#popupDialogueSMTP .toggleLabelValue").val("");
			$("#popupDialogueField").hide();
			$("#popupDialogueSMTP").show();
			if ($("#checkoutSMTPSetting").attr("checkout-server")!="") {
				$("#popupSMTPServer").removeClass("showingLabel");
			}
			if ($("#checkoutSMTPSetting").attr("checkout-username")!="") {
				$("#popupSMTPUsername").removeClass("showingLabel");
			}
			if ($("#checkoutSMTPSetting").attr("checkout-password")!="") {
				$("#popupSMTPPassword").removeClass("showingLabel");
			}

			$("#popupDialogueSMTP .toggleLabelValue").unbind().focus(function(){
				$(this).parents(".imageContextEditFieldset").addClass("focusing");
			});
			$("#popupDialogueSMTP .toggleLabelValue").unbind().blur(function(){
				$(this).parents(".imageContextEditFieldset").removeClass("focusing");
			});
			$("#popupDialogueSMTP .toggleLabelValue").unbind().keyup(function(e){
				if ($(this).val()!="") {
					$(this).parents(".imageContextEditFieldset").removeClass("showingLabel");
				} else {
					$(this).parents(".imageContextEditFieldset").addClass("showingLabel");
				}
			});
			$("#popupDialogueSMTP input[name=smtp_server]").val($("#checkoutSMTPSetting").attr("checkout-server"));
			$("#popupDialogueSMTP input[name=smtp_username]").val($("#checkoutSMTPSetting").attr("checkout-username"));
			$("#popupDialogueSMTP input[name=smtp_password]").val($("#checkoutSMTPSetting").attr("checkout-password"));
		}
		if (editingType=="newsletterImport") {
			$("#popupDialogueImportSubscribers .imageContextEditFieldset").addClass("showingLabel");
			$("#popupDialogueImportSubscribers .toggleLabelValue").val("");
			$("#popupDialogueField").hide();
			$("#popupDialogueImportSubscribers").show();
			$("#popupDialogueImportSubscribers .toggleLabelValue").unbind().focus(function(){
				$(this).parents(".imageContextEditFieldset").addClass("focus");
			});
			$("#popupDialogueImportSubscribers .toggleLabelValue").unbind().blur(function(){
				$(this).parents(".imageContextEditFieldset").removeClass("focus");
			});
			$("#popupDialogueImportSubscribers .toggleLabelValue").unbind().keyup(function(e){
				if ($(this).val()!="") {
					$(this).parents(".imageContextEditFieldset").removeClass("showingLabel");
				} else {
					$(this).parents(".imageContextEditFieldset").addClass("showingLabel");
				}
			});
		}
		if (editingType=="eventsImport") {
			$("#popupDialogueImportEvents .imageContextEditFieldset").addClass("showingLabel");
			$("#popupDialogueImportEvents .toggleLabelValue").val("");
			$("#popupDialogueField").hide();
			$("#popupDialogueImportEvents").show();
			$("#popupDialogueImportEvents .toggleLabelValue").unbind().focus(function(){
				$(this).parents(".imageContextEditFieldset").addClass("focus");
			});
			$("#popupDialogueImportEvents .toggleLabelValue").unbind().blur(function(){
				$(this).parents(".imageContextEditFieldset").removeClass("focus");
			});
			$("#popupDialogueImportEvents .toggleLabelValue").unbind().keyup(function(e){
				if ($(this).val()!="") {
					$(this).parents(".imageContextEditFieldset").removeClass("showingLabel");
				} else {
					$(this).parents(".imageContextEditFieldset").addClass("showingLabel");
				}
			});
		}
		if (editingType=="tableData") {

			$("#popupDialogueTableData .imageContextEditFieldset").addClass("showingLabel");
			$("#popupDialogueTableData .toggleLabelValue").val("");
			$("#popupDialogueField").hide();
			$("#popupDialogueTableData").show();
			$("#popupDialogueTableData textarea").val($("#tablesPane .listItemHighlight").data('csv')).select();
			$("#popupDialogueTableData .toggleLabelValue").unbind().focus(function(){
				$(this).parents(".imageContextEditFieldset").addClass("focus");
			});
			$("#popupDialogueTableData .toggleLabelValue").unbind().blur(function(){
				$(this).parents(".imageContextEditFieldset").removeClass("focus");
			});
			$("#popupDialogueTableData .toggleLabelValue").unbind().keyup(function(e){
				if ($(this).val()!="") {
					$(this).parents(".imageContextEditFieldset").removeClass("showingLabel");
				} else {
					$(this).parents(".imageContextEditFieldset").addClass("showingLabel");
				}
			}).trigger("keyup");
		}

		function volumeDiscount(no) {
			$("#popupDialogueProductVolumeDiscount .imageContextEditFieldset").addClass("showingLabel");
			$("#popupDialogueProductVolumeDiscount .toggleLabelValue").val("");
			$("#popupDialogueField").hide();
			$("#popupDialogueProductVolumeDiscount").show();
			if ($("#rightPaneProductOptions:visible").length ) {
				var scope = 'rightPaneProductOptions';
			} else {
				var scope = 'rightPaneProducts';
			}

			var firstVal=$("#"+scope+" .listItemHighlight:first").attr('data-discount-'+no+'-price');

			var allTheSame=true;
			$("#"+scope+" .listItemHighlight").each(function(){
				if ($(this).attr('data-discount-'+no+'-price')!=firstVal) {
					allTheSame=false;
				}
			});
			if (allTheSame) {
				if (firstVal!='0.00') {
					$("#popupVolumeDiscountPrice input").val(firstVal);
					$("#popupVolumeDiscountPrice").removeClass("showingLabel");
				}

			} else {
				$("#popupVolumeDiscountPrice input").val("("+LangVars.Multiple_Selected+")");
			}

			var firstVal=$("#"+scope+" .listItemHighlight:first").attr('data-discount-'+no+'-threshold');
			var allTheSame=true;
			$("#"+scope+" .listItemHighlight").each(function(){
				if ($(this).attr('data-discount-'+no+'-threshold')!=firstVal) {
					allTheSame=false;
				}
			});
			if (allTheSame) {
				if (firstVal!='0') {
				$("#popupVolumeDiscountThreshold input").val(firstVal);
				$("#popupVolumeDiscountThreshold").removeClass("showingLabel");
				}
			} else {
				$("#popupVolumeDiscountThreshold input").val("("+LangVars.Multiple_Selected+")");
			}


			$("#popupDialogueProductVolumeDiscount .toggleLabelValue").unbind().focus(function(){
				$(this).parents(".imageContextEditFieldset").addClass("focusing");
			});
			setTimeout(function () {
			$("#popupDialogueProductVolumeDiscount .toggleLabelValue:first").focus();
			}, 10);

			$("#popupDialogueProductVolumeDiscount .toggleLabelValue").unbind().blur(function(){
				$(this).parents(".imageContextEditFieldset").removeClass("focusing");
			});
			$("#popupDialogueProductVolumeDiscount .toggleLabelValue").unbind().keyup(function(e){
				if ($(this).val()!="") {
					$(this).parents(".imageContextEditFieldset").removeClass("showingLabel");
				} else {
					$(this).parents(".imageContextEditFieldset").addClass("showingLabel");
				}
			});
		}
		if (editingType=="productVolume1Discount") {
			volumeDiscount('1');
		}
		if (editingType=="productVolume2Discount") {
			volumeDiscount('2');
		}


		$(document).unbind("keyup");
		$(document).unbind("keypress");
		$(document).unbind("keydown");

		if (editingType=="formDestination") {
			var firstDest=$("#rightPaneForms .listItemHighlight:first").attr("data-destination");
			var allTheSame=true;
			$("#rightPaneForms .listItemHighlight").each(function(){
				if ($(this).attr("data-destination")!=firstDest) {
					allTheSame=false;
				}
			});
			if (allTheSame) {
				$("#popupDialogueField textarea").val(firstDest);
			} else {
				$("#popupDialogueField textarea").val("("+LangVars.Multiple_Selected+")");
			}
		}
		if (editingType=="formAutoresponder") {
			var firstDest=$("#rightPaneForms .listItemHighlight:first").attr("data-autoresponder-title");
			$("#formAutoresponderSubjectInput").val("");
			$("#selectedFormAutoresponderPage").attr("page-id","0");
			$("#changeFormAutoresponderContent").addClass("empty");
			$("#selectedFormAutoresponderPage").text(LangVars.Choose_page);
			$("#formAutoresponderSubjectInput").parents(".imageContextEditFieldset").addClass("showingLabel");

			if (firstDest!=""){
				var allTheSame=true;
				$("#rightPaneForms .listItemHighlight").each(function(){
					if ($(this).attr("data-autoresponder-title")!=firstDest) {
						allTheSame=false;
					}
				});
				if (allTheSame) {
					$("#changeFormAutoresponderContent").removeClass("empty");
					$("#selectedFormAutoresponderPage").text(firstDest);
					$("#selectedFormAutoresponderPage").attr("page-id",$("#rightPaneForms .listItemHighlight:first").attr("data-autoresponder-id"));
				} else {
					$("#selectedFormAutoresponderPage").val("("+LangVars.Multiple_Selected+")");
				}
				var firstDest=$("#rightPaneForms .listItemHighlight:first").attr("data-autoresponder-subject");
				var allTheSame=true;
				$("#rightPaneForms .listItemHighlight").each(function(){
					if ($(this).attr("data-autoresponder-subject")!=firstDest) {
						allTheSame=false;
					}
				});
				$("#formAutoresponderSubjectInput").parents(".imageContextEditFieldset").removeClass("showingLabel");
				if (allTheSame) {
					$("#formAutoresponderSubjectInput").val(firstDest);
				} else {
					$("#formAutoresponderSubjectInput").val("("+LangVars.Multiple_Selected+")");
				}
			}

		}
		if (editingType=="mailingListAutoresponder") {
			var firstDest=$("#newsletterPaneInner .listItemHighlight:first").attr("data-autoresponder-title");
			$("#mailingListAutoresponderSubjectInput").val("");
			$("#selectedMailingListAutoresponderPage").attr("page-id","0");
			$("#changeMailingListAutoresponderContent").addClass("empty");
			$("#selectedMailingListAutoresponderPage").text(LangVars.Choose_page);
			$("#mailingListAutoresponderSubjectInput").parents(".imageContextEditFieldset").addClass("showingLabel");

			if (firstDest!=""){
				var allTheSame=true;
				$("#newsletterPaneInner .listItemHighlight").each(function(){
					if ($(this).attr("data-autoresponder-title")!=firstDest) {
						allTheSame=false;
					}
				});
				if (allTheSame) {
					$("#changeMailingListAutoresponderContent").removeClass("empty");
					$("#selectedMailingListAutoresponderPage").text(firstDest);
					$("#selectedMailingListAutoresponderPage").attr("page-id",$("#newsletterPaneInner .listItemHighlight:first").attr("data-autoresponder-id"));
				} else {
					$("#selectedMailingListAutoresponderPage").val("("+LangVars.Multiple_Selected+")");
				}
				var firstDest=$("#newsletterPaneInner .listItemHighlight:first").attr("data-autoresponder-subject");
				var allTheSame=true;
				$("#newsletterPaneInner .listItemHighlight").each(function(){
					if ($(this).attr("data-autoresponder-subject")!=firstDest) {
						allTheSame=false;
					}
				});
				$("#mailingListAutoresponderSubjectInput").parents(".imageContextEditFieldset").removeClass("showingLabel");
				if (allTheSame) {
					$("#mailingListAutoresponderSubjectInput").val(firstDest);
				} else {
					$("#mailingListAutoresponderSubjectInput").val("("+LangVars.Multiple_Selected+")");
				}
			}

		}
		if (editingType=="productPrice") {
			var firstDest=$("#rightPaneProducts .listItemHighlight:first").attr("product-price");
			var allTheSame=true;
			$("#rightPaneProducts .listItemHighlight").each(function(){
				if ($(this).attr("product-price")!=firstDest) {
					allTheSame=false;
				}
			});
			if (allTheSame) {
				$("#popupDialogueField textarea").val(firstDest);
			} else {
				$("#popupDialogueField textarea").val("("+LangVars.Multiple_Selected+")");
			}
		}
		if (editingType=="productOptionPrice") {
			var firstDest=$("#rightPaneProductOptions .listItemHighlight:first .productOptionPrice").text();
			var allTheSame=true;
			$("#rightPaneProductOptions .listItemHighlight .productOptionPrice").each(function(){
				if ($(this).text()!=firstDest) {
					allTheSame=false;
				}
			});
			if (allTheSame) {
				$("#popupDialogueField textarea").val(firstDest);
			} else {
				$("#popupDialogueField textarea").val("("+LangVars.Multiple_Selected+")");
			}
		}
		if (editingType=="productStock") {
			var firstDest=$("#rightPaneProducts .listItemHighlight:first").attr("product-stock");
			var allTheSame=true;
			$("#rightPaneProducts .listItemHighlight").each(function(){
				if ($(this).attr("product-stock")!=firstDest) {
					allTheSame=false;
				}
			});
			if (allTheSame) {
				$("#popupDialogueField textarea").val(firstDest);
			} else {
				$("#popupDialogueField textarea").val("("+LangVars.Multiple_Selected+")");
			}
		}
		if (editingType=="productOptionStock") {
			var firstDest=$("#rightPaneProductOptions .listItemHighlight:first").attr("product-option-stock");
			var allTheSame=true;
			$("#rightPaneProductOptions .listItemHighlight").each(function(){
				if ($(this).attr("product-option-stock")!=firstDest) {
					allTheSame=false;
				}
			});
			if (allTheSame) {
				$("#popupDialogueField textarea").val(firstDest);
			} else {
				$("#popupDialogueField textarea").val("("+LangVars.Multiple_Selected+")");
			}
		}
		if (editingType=="productWeight") {
			var firstDest=$("#rightPaneProducts .listItemHighlight:first").attr("product-weight");
			var allTheSame=true;
			$("#rightPaneProducts .listItemHighlight").each(function(){
				if ($(this).attr("product-weight")!=firstDest) {
					allTheSame=false;
				}
			});
			if (allTheSame) {
				$("#popupDialogueField textarea").val(firstDest);
			} else {
				$("#popupDialogueField textarea").val("("+LangVars.Multiple_Selected+")");
			}
		}
		if (editingType=="newsletterSubject") {

			$("#popupDialogueField textarea").val($("#changeMailingListSubject").attr("title"));

		}
		if (editingType=="commentNotification") {

			$("#popupDialogueField textarea").val($("#changeCommentNotificationEmail").attr("value"));

		}
		if (editingType=="secretPass") {

			$("#popupDialogueField textarea").val($("#changeSecretPass").attr("value"));

		}
		if (editingType=="articlesPerPage") {
			$("#popupDialogueField textarea").val($("#changeArticlePerPage .value").attr("title"));
		}
		if (editingType=="paypalEmail") {
			$("#popupDialogueField textarea").val($("#changePayPalEmail .value").attr("title"));
		}
		if (editingType=="merchantID") {
			$("#popupDialogueField textarea").val($("#changeMerchantID .value").attr("title"));
		}
		if (editingType=="livechatMessage") {
			$("#popupDialogueField textarea").val($("#livechatMessage .value .overflowEllipsis").html());
		}
		if (editingType=="livechatName") {
			$("#popupDialogueField textarea").val($("#livechatName .value .overflowEllipsis").html());
		}
		if (editingType=="themeOption") {
			$("#popupDialogueField textarea").val($("#themeOptions .themeOptionText.editing").attr("theme-var-value"));
		}

		if (editingType=="metaTitle") {
			$("#popupDialogueField textarea").val($("#editMetaTitle").attr("meta-title"));
		}
		if (editingType=="metaDescription") {
			$("#popupDialogueField textarea").val($("#editMetaDescription").attr("meta-description"));
		}
		if (editingType=="metaKeywords") {
			$("#popupDialogueField textarea").val($("#editMetaKeywords").attr("meta-keywords"));
		}
		if (editingType=="metaTitleBlog") {
			$("#popupDialogueField textarea").val($("#editMetaTitleBlog").attr("meta-title"));
		}
		if (editingType=="metaDescriptionBlog") {
			$("#popupDialogueField textarea").val($("#editMetaDescriptionBlog").attr("meta-description"));
		}
		if (editingType=="metaKeywordsBlog") {
			$("#popupDialogueField textarea").val($("#editMetaKeywordsBlog").attr("meta-keywords"));
		}
		if (editingType=="blogTags") {
			$("#popupDialogueField textarea").val($("#editBlogTags").attr("meta-tags"));
		}
		if (editingType=="blogDate") {
			$("#popupDialogueField textarea").val($("#editBlogDate").attr("meta-date"));
		}
		if (editingType=="pageRedirecting") {

			$("#popupDialogueField textarea").val($("#adminPages .editPageBar.listItemHighlight").attr("data-redirect-url"));
		}
		if (editingType=="tableData") {

			$("#popupDialogueField textarea").val($("#tablesPane .listItemHighlight").attr("data-csv"));
		}
	}
	$("#popupDialogueContentPrimary").hide();
	$("#popupDialogueContentSecondary").hide();
	if (primaryText) {
		$("#popupDialogueContentPrimary").show();
	}
	if (secondaryText) {
		$("#popupDialogueContentSecondary").show();
	}
	$("#popupDialogueContentPrimary").unbind().mousedown(function(){
		if (textField) {
			if (editingType=="youtAccount")
			{
				primaryFun($("#popupDialogueFieldPassword input[name=email]").val(),$("#popupDialogueFieldPassword input[name=old_password]").val(),$("#popupDialogueFieldPassword input[name=password]").val(),$("#popupDialogueFieldPassword input[name=password2]").val());
			}
			else if (editingType=="newsletterFrom" || editingType=="checkoutFrom" )
			{
				primaryFun($("#popupDialogueFrom input[name=from_name]").val(),$("#popupDialogueFrom input[name=from_email]").val());
			}
			else if (editingType=="newsletterSMTP" || editingType=="checkoutSMTP")
			{
				primaryFun($("#popupDialogueSMTP input[name=smtp_server]").val(),$("#popupDialogueSMTP input[name=smtp_username]").val(),$("#popupDialogueSMTP input[name=smtp_password]").val());
			}

			else if (editingType=="orderReceivedTemplate" || editingType=="orderDispatchedTemplate")
			{
				primaryFun($("#popupDialogueMailTemplate input[name=subject]").val(),$("#popupDialogueMailTemplate textarea[name=message]").val());
			}

			else {
				primaryFun($("#popupDialogueField textarea").val());
			}
		} else {
			primaryFun();
		}
		return false;
	});

	$("#popupDialogueContentSecondary").unbind().click(function(){
		if (textField) {

			if (editingType=="yourAccount") {
				secondaryFun($("#popupDialogueFieldPassword input[name=email]").val(),$("#popupDialogueFieldPassword input[name=old_password]").val(),$("#popupDialogueFieldPassword input[name=password]").val(),$("#popupDialogueFieldPassword input[name=password2]").val());
			} else if (editingType=="resetStaffPass") {
				secondaryFun($("#popupDialogueFieldPasswordStaff input[name=password]").val(),$("#popupDialogueFieldPasswordStaff input[name=password2]").val());
				
			} else if (editingType=="newsletterFrom" || editingType=="checkoutFrom") {
				secondaryFun($("#popupDialogueFrom input[name=from_name]").val(),$("#popupDialogueFrom input[name=from_email]").val());
			} else if (editingType=="newsletterSMTP" || editingType=="checkoutSMTP") {
				secondaryFun($("#popupDialogueSMTP input[name=smtp_server]").val(),$("#popupDialogueSMTP input[name=smtp_username]").val(),$("#popupDialogueSMTP input[name=smtp_password]").val());
			} else if (editingType=="orderReceivedTemplate" || editingType=="orderDispatchedTemplate")
			{
				secondaryFun($("#popupDialogueMailTemplate input[name=subject]").val(),$("#popupDialogueMailTemplate textarea[name=message]").val());
			}
			else if (editingType=="pagesSecurity")
			{
				secondaryFun($("#popupDialogueSecurity input[name=username]").val(),$("#popupDialogueSecurity input[name=password]").val(),$("#popupDialogueSecurity input[name=password2]").val());
			}
			else if (editingType=="newsletterImport")
			{
				secondaryFun($("#popupDialogueImportSubscribers textarea").val());
			}
			else if (editingType=="eventsImport")
			{
				secondaryFun($("#popupDialogueImportEvents textarea").val());
			}
			
			else {
				if (secondaryFun) {
					secondaryFun($("#popupDialogueField textarea").val());					
				} else {
					working();

					var page = url.split("?");
					var data = page[1];

					$.ajax({
					  type: "POST",
					  url: page[0],
					  data: data+"&text="+encodeURIComponent($("#popupDialogueField textarea").val())+"&ids="+ids+selectingAll,
					  success: function(msg){
				if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
						$(items+".listItemHighlight").each(function(){
							$(this).attr(updateAttr,$("#popupDialogueField textarea").val());
						});
						selectionTools();
						cancelDialogue();
						saved();
						livepreview();
					  }
					});
					
				}

			}
		} else {
			secondaryFun();
		}
		return false;
	});
	$(".popupDialogueImportant").removeClass("popupDialogueImportant");
	if (primaryImportant) {
		$("#popupDialogueContentPrimary").addClass("popupDialogueImportant");
	}
	if (secondaryImportant) {
		$("#popupDialogueContentSecondary").addClass("popupDialogueImportant");
	}
	$("#popupDialogueWrap").css("top",-300);
	if ($("body").hasClass("unlicensed")) {
	$("#popupDialogueWrap").animate({top:20},400);
	} else {
	$("#popupDialogueWrap").animate({top:0},400);
	}

	$("#popupDialogue").fadeIn(400,function(){
		if (textField) {
			$("#popupDialogueField textarea,#popupDialogueFieldMailingListSend textarea,#popupDialogueMailTemplate textarea,#popupDialogueImportSubscribers textarea,#popupDialogueTableData textarea").autosize(function(){
				$("#popupDialogueInner").lovelyScrollContents();
			});
			$("#popupDialogueField textarea,#popupDialogueFieldMailingListSend textarea,#popupDialogueMailTemplate textarea,#popupDialogueImportSubscribers textarea,#popupDialogueTableData textarea").trigger("autosize.resize");
			$("#popupDialogueField:first textarea,#popupDialogueImportSubscribers textarea,#popupDialogueTableData textarea").focus();
			$("#popupDialogueFieldPassword input:first,#popupDialogueFrom input:first,#popupDialogueSMTP input:first,#popupDialogueSecurity input:first,#popupDialogueMailTemplate input:first").focus();

		}
	});
	$("#popupDialogue").click(function(e){
		e.stopPropagation();
	});
	$(document).keydown(function (e) {
		if ((e.keyCode==13 && editingType!="tableData" && editingType!="productSerialNumber" && editingType!="changeNewsletterCustomField" && editingType!="editTable" && editingType!="addTable" && editingType!="mailingListSend" && editingType!="orderReceivedTemplate" && editingType!="orderDispatchedTemplate" && editingType!="newsletterImport" && editingType!="eventsImport" && editingType!="themeOption") || (e.keyCode==13 && e.ctrlKey)) {
			return false;
		}
	});
	$(document).keyup(function (e) {
		if (e.keyCode==27) {
			cancelDialogue();
		}
	});
	if (linkBuilder) {
		var enterBinder = $("#popupDialogue input,#popupDialogue textarea");
	} else {
		var enterBinder = $(document);
	}
	enterBinder.keyup(function (e) {
		if ((e.keyCode==13 && editingType!="tableData" && editingType!="productSerialNumber" && editingType!="changeNewsletterCustomField" && editingType!="editTable" && editingType!="addTable" && editingType!="mailingListSend" && editingType!="orderReceivedTemplate" && editingType!="orderDispatchedTemplate" && editingType!="newsletterImport" && editingType!="eventsImport" && editingType!="themeOption") || (e.keyCode==13 && e.ctrlKey)) {
//			$("#popupDialogueContentSecondary").trigger("click");
			
			if (primaryImportant) {
				$("#popupDialogueContentPrimary").trigger("click");
				/*
				if (textField) {
					if (editingType=="paneToolsPrimary") {
						primaryFun($("#popupDialogueFieldPassword input[name=email]").val(),$("#popupDialogueFieldPassword input[name=old_password]").val(),$("#popupDialogueFieldPassword input[name=password]").val(),$("#popupDialogueFieldPassword input[name=password2]").val());
					} else if (editingType=="newsletterFrom" || editingType=="checkoutFrom") {
						primaryFun($("#popupDialogueFrom input[name=from_name]").val(),$("#popupDialogueFrom input[name=from_email]").val());
					} else if (editingType=="newsletterSMTP" || editingType=="checkoutSMTP") {
						primaryFun($("#popupDialogueSMTP input[name=smtp_server]").val(),$("#popupDialogueSMTP input[name=smtp_username]").val(),$("#popupDialogueSMTP input[name=smtp_password]").val());

					} else {
						primaryFun($("#popupDialogueField textarea").val());
					}
				} else {
					primaryFun();
				}
				*/
			} else if (secondaryImportant) {
				$("#popupDialogueContentSecondary").trigger("click");
				/*
				if (textField) {
					if (editingType=="yourAccount") {
						secondaryFun($("#popupDialogueFieldPassword input[name=email]").val(),$("#popupDialogueFieldPassword input[name=old_password]").val(),$("#popupDialogueFieldPassword input[name=password]").val(),$("#popupDialogueFieldPassword input[name=password2]").val());
					} else if (editingType=="newsletterFrom" || editingType=="checkoutFrom") {
						secondaryFun($("#popupDialogueFrom input[name=from_name]").val(),$("#popupDialogueFrom input[name=from_email]").val());
					} else if (editingType=="newsletterSMTP" || editingType=="checkoutSMTP") {
						secondaryFun($("#popupDialogueSMTP input[name=smtp_server]").val(),$("#popupDialogueSMTP input[name=smtp_username]").val(),$("#popupDialogueSMTP input[name=smtp_password]").val());
					} else if (editingType=="pagesSecurity") {
						secondaryFun($("#popupDialogueSecurity input[name=username]").val(),$("#popupDialogueSecurity input[name=password]").val(),$("#popupDialogueSecurity input[name=password2]").val());
					} else {
						secondaryFun($("#popupDialogueField textarea").val());
					}
				} else {
					secondaryFun();
				}
				*/
			}
			return false
		}
	});

	$("#popupDialogueInner").lovelyScroll();
}
function cancelDialogue () {
	$("#popupDialogue").fadeOut(400);
	$("#popupDialogueWrap").animate({top:-300},400);
	$("#themeOptions .themeOptionText.editing").removeClass("editing");

	/*if ($("#settingsFlyinMask:visible").length) {

 		unassignKeys();
 		$(document).unbind("click");
		$(document).click(function(){
			if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
			hide_menus();
		});
		return false;
	}
	$(document).unbind("click");
	$(document).click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		hide_menus();
	});*/

	if ($("body").attr("pane")=="mainMenuPages"||$("body").attr("pane")=="nonMenuPages") {
		$("#deletedPagesMenu .toRestore").removeClass("toRestore");
		assignPages();
		assign_page_filter();
	}
	if ($("body").attr("pane")=="editContent") {
		if ( $("#bpe_area .textareaWrapper.bpe_highlight").length) {
			assignAddTextKeysAndClick();

		} else {

			if ($(".bpe_highlight.bpe_table").length && $(".bpe_highlight.bpe_table").html()=="") {
				$(".bpe_highlight.bpe_table").remove();
				$.fn.bpeditor.clean(true);
			}

			hide_menus();
			assignSaveListener();
		}
	}

	if ($("body").attr("pane")=="images") {
		assignImagesKeys();
	}
	if ($("body").attr("pane")=="videos") {
		assignVideosKeys();
	}
	if ($("body").attr("pane")=="galleries"&&!$("#rightPaneGalleryImages:visible").length) {
		assignGalleriesKeys();
	}
	if ($("body").attr("pane")=="galleries"&&$("#rightPaneGalleryImages:visible").length) {
		assignGalleryImagesKeys();
	}
	if ($("body").attr("pane")=="forms"&&!$("#rightPaneFormInputs:visible").length) {
		assignFormsKeys();
	}
	if ($("body").attr("pane")=="forms"&&$("#rightPaneFormInputs:visible").length) {
		assignFormInputsKeys();
	}
	if ($("body").attr("pane")=="forms"&&$("#rightPaneFormInputOptions:visible").length) {
		assignFormInputOptionsKeys();
	}
	if ($("body").attr("pane")=="products"&&!$("#rightPaneProductOptions:visible").length) {
		assignProductsKeys();
	}
	if ($("body").attr("pane")=="products"&&$("#rightPaneProductOptions:visible").length) {
		assignProductOptionsKeys();
	}
	if ($("body").attr("pane")=="bookingproducts") {
		assignBookingProductsKeys();
	}
	if ($("body").attr("pane")=="calendars"&&!$("#rightPaneCalendarEvents:visible").length) {
		assignCalendarsKeys();
	}
	if ($("body").attr("pane")=="calendars"&&$("#rightPaneCalendarEvents:visible").length) {
		assignCalendarEventsKeys();
	}
	if ($("body").attr("pane")=="calendars"&&$("#rightPaneEventsGroups:visible").length) {
		assignEventGroupKeys();
	}
	if ($("body").attr("pane")=="snippets") {
		assignSnippetsKeys();
	}
	if ($("body").attr("pane")=="tables") {
		assignTablesKeys();
	}
	if ($("body").attr("pane")=="files") {
		assignFilesKeys();
	}
	if ($("body").attr("pane")=="newsletter"&&!$("#newsletterSubscribersPaneInner:visible").length&&!$("#rightPaneSubscriberCategories:visible").length) {
		assignNewsletterKeys();
	}
	if ($("body").attr("pane")=="newsletter"&&$("#newsletterSubscribersPaneInner:visible").length&&!$("#rightPaneSubscriberCategories:visible").length) {
		assignNewsletterSubscribersKeys();
	}
	if ($("body").attr("pane")=="newsletter"&&!$("#newsletterSubscribersPaneInner:visible").length&&$("#rightPaneSubscriberCategories:visible").length) {
		assignSubscriberCategoriesKeys();
	}
	if ($("body").attr("pane")=="blog"&&!$("#blogAuthorsPaneInner:visible").length) {
		assignBlogKeys();
	}
	if ($("body").attr("pane")=="blog"&&$("#blogAuthorsPaneInner:visible").length) {
		assignBlogAuthorsKeys();
	}
	if ($("body").attr("pane")=="blog"&&$("#blogCategoriesPaneInner:visible").length) {
		assignBlogCategoriesKeys();
	}
	if ($("body").attr("pane")=="blog"&&$("#blogCommentsPaneInner:visible").length) {
		assignBlogCommentsKeys();
	}
	if ($("body").attr("pane")=="livechat") {
		assignLivechatKeys();
	}
	if ($("body").attr("pane")=="staff") {
		assignStaffKeys();
	}
	if ($("body").attr("pane")=="embedCodes") {
		assignEmbedCodesKeys();
	}
	if ($("body").attr("pane")=="mainMenuPages"||$("body").attr("pane")=="nonMenuPages") {
		assignPagesKeys();
	}
	if ($("body").attr("pane")=="checkout") {
		assignCheckoutKeys();
	}
	if ($("body").attr("pane")=="products"&&$("#rightPaneProductCategories:visible").length) {
		assignProductCategoriesKeys();
	}

}


function pastePages (action) {
	var str = $("#adminPages .copyPageDestinaiton").attr("id").split("|");
	type = str[0];
	var parentId = str[1];
	if (type=="") {
		type = "topLevel";
	}
	if (action=="duplicate_pages") {
		var Ids="[";
		$("#adminPages .listItemHighlight").each(function(){
			if (Ids=="[") {
			Ids+='"'+$(this).attr("rel")+'"';
			} else {
			Ids+=',"'+$(this).attr("rel")+'"';
			}
		});
		Ids+="]";
	} else {
		var Ids = "";
	}
	working();
	$.ajax({
	  type: "POST",
	  url: "pageActions.php",
	  data: "pageAction="+action+"&parent="+parentId+"&type="+type+"&ids="+Ids,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

				if (msg!="" && msg!="Error1" && msg!="Error2" && msg!="Error3") {
						var toHighlight = jQuery.parseJSON(msg);

							$("#adminPages").load("pages.php?to_prevent_cache="+(new Date).getTime(),function(){
								for (var i=0; i < toHighlight.length; i++) {
									$("#adminPages div[rel="+toHighlight[i]+"]").addClass("listItemHighlight");
								};
								$("#loadingMask").hide();
								saved();
								cancelDialogue();
								$(document).unbind("click");
								$(document).click(function(){
									if (justScrolled) {return false;}
									if (ignoreClickCatchup) {return false;}
									hide_menus();
								});
								selectionTools();
								$("#loadingMask").hide();
							});
				} else {
					if (msg=="Error1") {
						error(LangVars.Cant_Copy_With_Blog);
					} else if (msg=="Error2") {
						error(LangVars.Cant_Copy_With_Checkout);
					} else if (msg=="Error3") {
						error(LangVars.Cant_Copy_Too_Many_With_Same_Name);
					} else {
						saved();
						cancelDialogue();
						$(document).unbind("click");
						$(document).click(function(){
							if (justScrolled) {return false;}
							if (ignoreClickCatchup) {return false;}
							hide_menus();
						});

					}
				}





	  }
	});
}

function deleteGalleryImages () {

	working();
	var Ids="[";

	$("#rightPaneGalleryImages .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+=$(this).attr("gallery-image-id");
		} else {
		Ids+=","+$(this).attr("gallery-image-id");
		}

	});
	Ids+="]";

	var galid  = $("#rightPaneGalleryImages .topBarTitle").attr('gallery-id');

		$.ajax({
		  type: "POST",
		  url: "galleriesActions.php",
		  data: "galleriesAction=deleteImage&imagesids="+Ids,
		  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
	$("#galleriesAdmin").load("galleriesActions.php?galleriesAction=show&show="+galid+"&to_prevent_cache="+(new Date).getTime(),function(){
				$("#galleriesPaneInner .insertTarget").html($("#galleriesAdmin").html());
				$("#rightPaneGalleryImages .pagesScroll > div").css("height",$("#rightPaneGalleryImages .pagesScroll > div").height()+"px");
				showGalleryImages($("#rightPaneGalleries #gal"+galid),true);
				$("#rightPaneGalleryImages .pagesScroll > div").css("height","auto");
				hide_menus();
				cancelDialogue();
				saved("Images Removed");
			});
		  }
		});
}
function deleteImages () {
	working();

	counter=0;
	if ($("body").hasClass("selectingAll")) {
		var Ids="[";
		$("#imagesPaneInner .responsiveListItem:not(.responsiveListItem.listItemHighlight)").each(function(){
			if (Ids=="[") {
			Ids+='"'+$(this).attr("id")+'"';
			} else {
			Ids+=',"'+$(this).attr("id")+'"';
			}
		});
		Ids+="]";
		var selectingAll = "&selectingAll=true";
	} else {
		var selectingAll = "";
		var Ids="[";
		$("#imagesPaneInner .listItemHighlight").each(function(){
			if (Ids=="[") {
			Ids+='"'+$(this).attr("id")+'"';
			} else {
			Ids+=',"'+$(this).attr("id")+'"';
			}
		});
		Ids+="]";
	}
	$.ajax({
	  type: "POST",
	  url: "pageActions.php",
	  data: "pageAction=deleteImages&ids="+Ids+selectingAll,
	  success: function(msg){
		
		$(".bpe_images,#bpe_images,#bpe_dropship_images .insertTarget,#imagesPaneInner .insertTarget").html(msg);

  		if ($("#rightPaneImages:visible").length) {

			assignListLasso($("#imagesPaneInner"));
			assignListPane($("#imagesPaneInner"),doNothing);
//			prepFancyLabelForms($("#rightPaneImages .filterBox"));
//			assignPaneSearch($("#rightPaneImages .searchList"),"pageActions.php","pageAction=showFilteredImages&search=","image");
//			assignImagesKeys();
//			$("#loadingMask").hide();
			assignDragAssets($("#imagesPaneInner .insertTarget"));
			setTimeout(function() {
				$("#imagesPaneInner").lovelyScroll(scrollImagesBottom);
			}, 400);
						$("#imagesPane .paneTools .imagePreview").remove();
		}
		
		saved("Image Removed");
		hide_menus();
		cancelDialogue();
	  }
	});

}
function deleteGalleries () {
	working();
	var Ids="[";
	$("#rightPaneGalleries .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("gallery-id")+'"';
		} else {
		Ids+=',"'+$(this).attr("gallery-id")+'"';
		}
	});
	Ids+="]";
	$.ajax({
	  type: "POST",
	  url: "galleriesActions.php",
	  data: "galleriesAction=deleteGallery&ids="+Ids,
	  success: function(msg){

		$("#rightPaneGalleries .listItemHighlight").each(function(){
			$(this).next().remove();
			$(this).remove();
		});
		if ($("#rightPaneGalleries .galleryItem").length===0) {
			$("#galleriesPane .noPages").show();
		}
		$("#galleriesPaneInner").lovelyScroll();
		saved("Image Removed");
		hide_menus();
		cancelDialogue();
		$(document).unbind("click").click(function(){
			hide_menus();
		});
		assignGalleriesKeys();
	  }
	});
}
function deleteVideos () {
	working();
	var Ids="[";
	$("#rightPaneVideos .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("playlist-id")+'"';
		} else {
		Ids+=',"'+$(this).attr("playlist-id")+'"';
		}
	});
	Ids+="]";

	obj = $(this);

	$.ajax({
	  type: "POST",
	  url: "mediaActions.php",
	  data: "mediaAction=removePlaylist&ids="+Ids,
	  success: function(msg){
		$(".listItemHighlight").each(function(){
			$(this).prev().remove();
			$(this).remove();
		});

	  	if ($("#rightPaneVideos .addVideoItem").length==0) {
	  		$("#rightPaneVideos .noPages").show();
	  	}

		$("#videosPaneInner").lovelyScroll();
		saved("Image Removed");
		hide_menus();
		cancelDialogue();
		$(document).unbind("click").click(function(){
			hide_menus();
		});
		assignVideosKeys();
	  }
	});

}
function deletePages () {

	if ($("body").hasClass("selectingAll")) {
		var Ids = getUnselectedPagesIds();
		var selectingAll = "&selectingAll=true";
	} else {
		var selectingAll = "";
		var Ids = getSelectedPagesIds();
	}

	working();
	$.ajax({
	  type: "POST",
	  url: "pageActions.php",
	  data: "pageAction=deleteMulti&ids="+Ids+selectingAll,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

			if (msg!="ok") {
				error(msg);
			} else {
				$("#adminPages .listItemHighlight").each(function(){
					$("#deletedPages").prepend("<li><a href='"+$(this).attr("rel")+"'><span class='overflowEllipsis'>"+$(this).attr("title")+"</span></a></li>");
					$(this).next().remove();
					$(this).remove();
				});
				hide_menus();
				cancelDialogue();
				saved();

			}
	  }
	});
}
function changeGalleryStyle (newStyle) {
		var Ids="[";
		$("#galleriesPane .listItemHighlight").each(function(){
			if (Ids=="[") {
			Ids+='"'+$(this).attr("gallery-id")+'"';
			} else {
			Ids+=',"'+$(this).attr("gallery-id")+'"';
			}
		});
		Ids+="]";

		working();
		$.ajax({
		  type: "POST",
		  url: "galleriesActions.php",
		  data: "galleriesAction=changeStyle&ids="+Ids+"&style="+newStyle,
		  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

				if (msg!="ok") {
					error(msg);
				} else {
					$("#galleriesPane .listItemHighlight").each(function(){
						$(this).attr("data-gallery-style",newStyle);
					});
					selectionTools();
					//galleryStyleTicks();
					saved();

				}
		  }
		});
}
function galleryStyleTicks () {
		var allTheSame=true;
		var galleryStyle = $("#galleriesPaneInner .listItemHighlight:first").attr("gallery-style");
		$("#galleriesPaneInner .listItemHighlight").each(function(){
			if ($(this).attr("gallery-style")!=galleryStyle) {
				allTheSame=false;
			}
		});
		$("#stylesMenuGalleries a.bpe_current").removeClass("bpe_current");
		if (allTheSame) {
		$("#stylesMenuGalleries a[gal-style="+galleryStyle+"]").addClass("bpe_current");
		}
}
function renameGallery(clicked) {
	editMeListItem(clicked);
}
function addGallery () {
	$(document).unbind("click");
	$(document).unbind("keyup");
	$(document).unbind("keydown");
	$(document).unbind("keypress");
	hidePaneTools();
	$("#galleriesPane .noPages").hide();
	$("#rightPaneGalleries #addGalleryForm").show();
	$("#rightPaneGalleries #addGalleryForm .focus").focus();
	prepFancyLabelForms($("#rightPaneGalleries #addGalleryForm"));
	function saveOrCancel () {
		$("#rightPaneGalleries #addGalleryForm .focus").unbind("blur");
		if ($("#rightPaneGalleries #addGalleryForm .focus").val()=="" || $("#rightPaneGalleries #addGalleryForm .focus").val()==" ") {
			resetAddForms();
			if ($("#galleriesPane .galleryItem").length===0) {
				$("#galleriesPane .noPages").show();
			}
		} else {
			$("#rightPaneGalleries #addGalleryForm").submit();
		}
	}
	$("#rightPaneGalleries #addGalleryForm .focus").unbind("blur").blur(function(){
			saveOrCancel();
			return false;
	});
	$(document).keypress(function(e){
		if (e.keyCode==13) { // enter
			e.preventDefault();
			return false;
		}

	});
	$(document).keyup(function(e){

		if (e.keyCode==13) { // enter
			e.preventDefault();
			return false;
		}
		if (e.keyCode==27) { // esc

			return false;
		}
	});
	$(document).keydown(function(e){
		if (e.keyCode==13) { // enter
			e.preventDefault();

			if (!shiftDown) {
				saveOrCancel();
			}
			return false;
		}
		if (e.keyCode==27) { // esc
			saveOrCancel();
			return false;
		}
	});
}
function assignGalleryAdd () {
	$("#rightPaneGalleries #addGalleryForm").unbind("submit").submit(function(){
		working();
		function showResponse (responseText, statusText) {
if (responseText =="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			$("#galleriesAdmin").load("galleriesActions.php?galleriesAction=show&to_prevent_cache="+(new Date).getTime(),function(){
				$("#galleriesPaneInner .insertTarget").html($("#galleriesAdmin").html());
				$("#galleriesPaneInner .insertTarget .galleryItem:first").addClass("listItemHighlight");
				assignDragAssets($("#galleriesPaneInner .insertTarget"));
				$("#galleriesPaneInner").lovelyScroll();
				resetAddForms();
				assignGalleryAdd();
				assignGalleriesKeys();
				saved();
				selectionTools();
			});

		}
		var options = {
	        success:       showResponse  // post-submit callback
	    };

		$(this).ajaxSubmit(options);

		return false;
	});

}
function addPage () {


	prepFancyLabelForms($("#adminPages .responsiveListAddForm"));
	$("#adminPages .responsiveListAddForm").show();

	$(".noPages").hide();
	$("#adminPages .responsiveListAddForm .focus").focus();
	$(document).unbind("click");
	$(document).unbind("keyup");
	$(document).unbind("keydown");
	$(document).unbind("keypress");

	function saveOrCancel () {
		$("#adminPages .responsiveListAddForm .focus").unbind("blur");
		if ($("#adminPages .responsiveListAddForm .focus").val()=="" || $("#adminPages .responsiveListAddForm .focus").val()==" ") {
			resetAddForms();
			$(".noPages").show();
		} else {
			$("#adminPages .responsiveListAddForm").submit();
		}
	}
	$("#adminPages .responsiveListAddForm").click(function(){
		return false;
	});
	$("#adminPages .responsiveListAddForm .focus").blur(function(){
		saveOrCancel();
		return false;
	});
	$(document).keydown(function(e){

		if (e.keyCode==27) { // esc
			saveOrCancel();
			return false;
		}
	});


}
function getUnselectedPagesIds () {
	var Ids="[";
	$("#adminPages .responsiveListItem:not(.responsiveListItem.listItemHighlight,.breadcrumbPage)").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("rel")+'"';
		} else {
		Ids+=',"'+$(this).attr("rel")+'"';
		}
	});
	Ids+="]";
	return Ids;
}
function getSelectedPagesIds () {
	var Ids="[";
	$("#adminPages .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("rel")+'"';
		} else {
		Ids+=',"'+$(this).attr("rel")+'"';
		}
	});
	Ids+="]";
	return Ids;
}
function toggleLive (action) {
	working();

	if ($("body").hasClass("selectingAll")) {
		var Ids = getUnselectedPagesIds();
		var selectingAll = "&selectingAll=true";
	} else {
		var selectingAll = "";
		var Ids = getSelectedPagesIds();
	}

	$.ajax({
	  type: "POST",
	  url: "pageActions.php",
	  data: "pageAction=change&action=live&live="+action+"&ids="+Ids+selectingAll,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

		softToggle(action);
		saved();
		selectionTools();
	  }
	});

}
function softToggle (action) {
	$("#adminPages .listItemHighlight").each(function(){
		if (action=="yes") {
			if ($(this).hasClass("offline")) {
				$(this).removeClass("offline").addClass("live");
				$(this).attr("data-pane-status","live");
				$(".offlineLabel",$(this)).remove();
			}
		} else {
			if (!$(this).hasClass("offline")) {
				$(this).prepend("<span class='responsiveListItemInfo offlineLabel'>"+LangVars.Offline+"</span>");
				$(this).addClass("offline").removeClass("live");
				$(this).attr("data-pane-status","offline");
			}
		}
	});

}
function changeLanguage (lang) {
	if ($("body").hasClass("selectingAll")) {
		var ids = getUnselectedPagesIds();
		var selectingAll = "&selectingAll=true";
	} else {
		var selectingAll = "";
		var ids = getSelectedPagesIds();
	}


		$.ajax({
		  type: "POST",
		  url: "pageActions.php",
		  data: "pageAction=change&action=language&ids="+ids+"&language="+lang+selectingAll,
		  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			if (msg=="exists") {
				error(LangVars.Page_Name_Exists);
			} else {
				saved("Language changed for page");
			}
			$("#languagesWrapper").load("languagesActions.php?languagesAction=show&to_prevent_cache="+(new Date).getTime(),function(){
				$("#pagesFilterToUpdate,#languagesWrapperBlog").html($("#languagesWrapper").html());
				$("#adminPages .listItemHighlight").attr("data-lang",lang);
				assign_page_filter();
				assignPages();
				selectionTools();
				if ($("#pagesFilterToUpdate li").length>1) {
					$("#adminPagesLangFilter").show();
				}
				if ($("#pagesFilterToUpdate a.bpe_current").length || !$("#pagesFilter a.bpe_current").length) {
					$("#adminPages").load("pages.php?to_prevent_cache="+(new Date).getTime(),function(){
						assignPages();
						assign_page_filter();
					});
				}

				updateSitewideLangs();


				//$("#pagesFilter a.bpe_current").length===0
			});
			/*
			$("#adminPages").load("pages.php?to_prevent_cache="+(new Date).getTime(),function(){

				assignPages();
				assign_page_filter();
			});*/
		  }
		});

}
function pagesAddLanguage ($this) {
	working();
	var lang = $this.attr("fakehref");
	var abr = lang.split("|");
	abr = abr[1];
	$.ajax({
	  type: "POST",
	  url: "languagesActions.php",
	  data: "languagesAction=addLanguage&lang="+lang,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

		if ($("body").attr("pane")=="mainMenuPages") {
			changeLanguage(abr);
		}
		if ($("body").attr("pane")=="blog") {
			changeLanguageBlog(abr);
		}
	  }
	});
}
function applyProtection (accessGroupId,addremove) {
	working();
	if ($("body").hasClass("selectingAll")) {
		var ids = getUnselectedPagesIds();
		var selectingAll = "&selectingAll=true";
	} else {
		var selectingAll = "";
		var ids = getSelectedPagesIds();
	}
	var action = accessGroupId;
	$.ajax({
	  type: "POST",
	  url: "pageActions.php",
	  data: "pageAction=change&action=security&security="+action+"&addremove="+addremove+"&ids="+ids+selectingAll,
	  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

			if (addremove=="add") {
				if (accessGroupId=="") {
					$("#adminPages .listItemHighlight").attr("data-security","public");
					$(".responsiveListItemPadlock",$("#adminPages .listItemHighlight")).hide();
				} else {
					$("#adminPages .listItemHighlight").each(function(){
						if ($(this).attr("data-security")=="public") {
							$(this).attr("data-security","");
						}
						$(".responsiveListItemPadlock",$(this)).show();
						var curSec = $(this).attr("data-security");

						if ($(this).attr("data-security")!="") {
							var s = ",";
						} else {
							var s="";
						}
						var newSec = curSec+s+accessGroupId
						newSec=newSec.split(",");
						newSec.sort(function(a,b){return a-b});
						var newSecStr = "";
						for (var i=0; i < newSec.length; i++) {
							if (newSecStr!="") {
								newSecStr+=",";
							}
							newSecStr+=newSec[i];
						};
						if (newSecStr==""){
							newSecStr="public";
						}
						$(this).attr("data-security",newSecStr);
					});
				}
			} else {
				$("#adminPages .listItemHighlight").each(function(){
					var securities = $(this).attr("data-security").split(",");
					var newSecurities = new Array();
					for (var i=0; i < securities.length; i++) {
						if (securities[i]!=accessGroupId) {
							newSecurities.push(securities[i]);
						}
					};
					newSecurities.sort(function(a,b){return a-b});
					var newSecStr = "";
					for (var i=0; i < newSecurities.length; i++) {
						if (newSecStr!="") {
							newSecStr+=",";
						}
						newSecStr+=newSecurities[i];
					};
					if (newSecStr==""){
						newSecStr="public";
						$(".responsiveListItemPadlock",$(this)).hide();
					}
					$(this).attr("data-security",newSecStr);

				});
			}

			/*$("#adminPages .listItemHighlight").each(function(){
				$(".responsiveListItemPadlock",$(this)).hide();
				$(this).removeClass("hasSecurity");

				var security = $(this).attr("data-security").split(",");
				for (var i=0; i < security.length; i++) {
					if (security[i]==securityJustChanged && security[i]!="") {
						$(".responsiveListItemPadlock",$(this)).show();
						$(this).addClass("hasSecurity");
					}
				};
			});*/
			securityJustChanged = accessGroupId;
			selectionTools();
			if (msg=="removed") {
				$("#groupList").load("accessGroupActions.php?accessGroupActions=showAccessGroups",function(){
					selectionTools();
				});
			}
			saved();
		}
	});

}
function setTicksInSecurityMenu () {
	$("#groupList .bpe_current").removeClass("bpe_current");
	var group = $("#rightPanePages .listItemHighlight:first").attr("security");
	var allTheSame=true;
	$("#rightPanePages .listItemHighlight").each(function(){
		if ($(this).attr("security")!=group) {
			allTheSame=false;
		}
	});
	if (allTheSame) {
		$("#groupList a[rel="+group+"]").addClass("bpe_current");
	}
}
function addAccessGroup (username,password1,password2) {
	if (username==""||password1==""||password2=="") {
		return false;
	}
	if (password1!=password2) {
		error(LangVars.Error_Passwords_Dont_Match);
		return false;
	}
	working();
	var pwhash = hex_hmac_sha1(password1,$("#addAccessGroup").attr("href"));
	$.ajax({
	  type: "POST",
	  url: "accessGroupActions.php",
	  data: "accessGroupActions=addNew&hash="+pwhash+"&salt="+$("#addAccessGroup").attr("href")+"&username="+username,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		if (msg!="exists") {
			$(".bpe_mask").remove();
			$(".bpe_add_popup").remove();
			$("#groupList").load("accessGroupActions.php?accessGroupActions=showAccessGroups",function(){
				applyProtection(msg,"add");
				setTicksInSecurityMenu();
			});
			cancelDialogue();
			saved();

		} else if(msg=="exists") {
			error(LangVars.Error_Access_Group_Exists);
		}
	  }
	});
}
function editMe ($title) {

	if (!$title.hasClass("editing")) {
		var text = $("span",$title).html();

		var w = $("span",$title).width();
		var ot = $title.offset().top+5;
		var space = parseInt($title.css("left"));
		var ol = $title.offset().left-space+5;
		var bt = $title.width()+(space*2)-10;
		$title.html("<div style='width:"+bt+"px;position:fixed;top:4px;left:"+ol+"px;' id='editingTopTitle'><input type='text' style='padding-left:0;padding-right:0;width:100%;' /></div>");
		$("input",$title).val(text).attr("original",text).focus();
		$input = $("input",$title);
		var space = $input.parent().width();
		space=space-30;
		$(".showLeftPane:visible,.showRightPane:visible,.topBarButtonBack:visible,.topBarButtonBack:visible,.subHeaderButton:visible,.subHeaderLeftMenuItem:visible,.topBarButtonSwap:visible,.filterBox:visible,.dateFilterButton:visible,.returnToLP:visible,.toggleLivepreview:visible",$title.parent()).fadeOut().addClass("showBack");
		$title.attr("prevLeft",parseInt($title.css("left")));
		$title.attr("prevRight",parseInt($title.css("right")));
		//$title.css({left:"16px",right:"36px"});
		//$input.animate({width:"100%"},500);
		function resetTitle ($input,text) {
			var $parent = $input.parent().parent();
			var nl = $parent.attr("prevLeft");
			var nr = $parent.attr("prevRight");
			$parent.removeClass("editing");
			$parent.html("<div><span>"+text+"</span></div>");
			//$parent.css({left:nl+"px",right:nr+"px"});


		}
		$("input",$title).unbind("blur").blur(function(){
			var $this = $(this);
			var nl = parseInt($(this).parent().parent().attr("prevLeft"));
			var nr = parseInt($(this).parent().parent().attr("prevRight"));
			var $newi = "<div id='widthTest' style='position:relative;top:-100px;'><span>"+$(this).val()+"</span></div>";
			$this.parents(".topBarTitle").append($newi);
			var w  = $("#widthTest").outerWidth();
			$("#widthTest").remove();
			$(".showBack",$(this).parent().parent().parent()).fadeIn().removeClass("showBack");
			//$(this).css({width:w+"px"});
			//$(this).parent().parent().css({left:nl+"px",right:nr+"px"});

				if ($("body").attr("pane")=="galleries"&&$("#rightPaneGalleryImages:visible").length) {
					var id = $this.parent().parent().attr("gallery-id");
					var name = encodeURIComponent($this.val());
					if (name=="") {
						resetTitle($this,$this.attr("original"));
						assignGalleryImagesKeys();
						return false;
					}
					if (name==$this.attr("original")) {
						resetTitle($this,$this.attr("original"));

						assignGalleryImagesKeys();
						return false;
					}
					working();
					$.ajax({
					  type: "POST",
					  url: "galleriesActions.php",
					  data: "galleriesAction=renameGallery&id="+id+"&name="+name,
					  success: function(msg){
		if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
						$("#galleriesAdmin").load("galleriesActions.php?galleriesAction=show&to_prevent_cache="+(new Date).getTime(),function(){
							$("#galleriesPaneInner .insertTarget").html($("#galleriesAdmin").html());
							saved("Gallery Removed");
							resetTitle($this,msg);

						});
						$(document).unbind("click").click(function(){
								if (justScrolled) {return false;}
								if (ignoreClickCatchup) {return false;}
								hide_menus();
								hide_header_menus();
							});
					  }
					});
					assignGalleryImagesKeys();
				}
				if ($("body").attr("pane")=="forms"&&$("#rightPaneFormInputs:visible").length) {
					var id = $this.parent().parent().attr("form-id");
					var name = encodeURIComponent($this.val());
					if (name=="") {

						resetTitle($this,$this.attr("original"));

						assignFormInputsKeys();
						return false;
					}
					if (name==$this.attr("original")) {
						resetTitle($this,$this.attr("original"));

						assignFormInputsKeys();
						return false;
					}
					working();
					$.ajax({
					  type: "POST",
					  url: "formsActions.php",
					  data: "formsAction=renameForm&formId="+id+"&name="+name,
					  success: function(msg){
		if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
						$("#formsWrapper").load("formsActions.php?formsAction=show&v="+(new Date).getTime(),function(){
							addFormsToSettings();
							$("#formsPaneInner .insertTarget").html($("#formsWrapper").html());

								resetTitle($this,msg);

							saved("Form renamed");
						});
						$(document).unbind("click").click(function(){
								if (justScrolled) {return false;}
								if (ignoreClickCatchup) {return false;}
								hide_menus();
								hide_header_menus();
							});
					  }
					});
					assignFormInputsKeys();
				}
				if ($("#rightPaneFormInputOptions:visible").length) {
					var id = $this.parent().parent().attr("input-id");
					var name = encodeURIComponent($this.val());
					if (name=="") {
						resetTitle($this,$this.attr("original"));

						assignFormInputOptionsKeys();
						return false;
					}
					if (name==$this.attr("original")) {
						resetTitle($this,$this.attr("original"));

						assignFormInputOptionsKeys();
						return false;
					}
					working();
					var showId = id;
					$.ajax({
					  type: "POST",
					  url: "formsActions.php",
					  data: "formsAction=editInput&inputsId="+id+"&label="+name,
					  success: function(msg){
		if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
							saved("");
							resetTitle($this,msg);
							$("#formsWrapper").load("formsActions.php?formsAction=show&showForm="+showId+"&to_prevent_cache="+(new Date).getTime(),function(){
								$("#formsPaneInner .insertTarget").html($("#formsWrapper").html());
							});
							$(document).unbind("click").click(function(){
								if (justScrolled) {return false;}
								if (ignoreClickCatchup) {return false;}
								hide_menus();
								hide_header_menus();
							});

					  }
					});
					assignFormInputOptionsKeys();

				}
				if ($("#rightPaneProductOptions:visible").length) {
					var id = $this.parent().parent().attr("product-id");
					var name = encodeURIComponent($this.val());
					if (name=="") {
						resetTitle($this,$this.attr("original"));

						assignProductOptionsKeys();
						return false;
					}
					if (name==$this.attr("original")) {
						resetTitle($this,$this.attr("original"));

						assignProductOptionsKeys();
						return false;
					}
					working();
					var showId = id;
					$.ajax({
					  type: "POST",
					  url: "shopActions.php",
					  data: "shopAction=renameProduct&id="+id+"&name="+name,
					  success: function(msg){
		if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
							saved("");
							resetTitle($this,msg);

							$("#productWrapper").load("shopActions.php?shopActions=showProducts&to_prevent_cache="+(new Date).getTime(),function(){

							});
							$("#rightPaneProducts #prod"+showId).attr("name",msg);
							$("#rightPaneProducts #prod"+showId+" .productItem > .overflowEllipsis").html(msg);
							$(document).unbind("click").click(function(){
								if (justScrolled) {return false;}
								if (ignoreClickCatchup) {return false;}
								hide_menus();
								hide_header_menus();
							});
					  }
					});
					assignProductOptionsKeys();

				}
				if ($("#rightPaneCalendarEvents:visible").length) {
					var id = $this.parent().parent().attr("cal-id");
					var name = encodeURIComponent($this.val());
					if (name=="") {
						resetTitle($this,$this.attr("original"));

						assignCalendarEventsKeys();
						return false;
					}
					if (name==$this.attr("original")) {
						resetTitle($this,$this.attr("original"));

						assignCalendarEventsKeys();
						return false;
					}
					var val = $this.val();
					working();
					var showId = id;
					$.ajax({
					  type: "POST",
					  url: "calendarActions.php",
					  data: "calendarAction=renameCat&id="+id+"&name="+name,
					  success: function(msg){
		if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
							saved("");

							resetTitle($this,htmlentities(val));

							$("#calendarsPaneInner .insertTarget").html(msg);
							$(document).unbind("click").click(function(){
								if (justScrolled) {return false;}
								if (ignoreClickCatchup) {return false;}
								hide_menus();
								hide_header_menus();
							});

					  }
					});
					assignCalendarEventsKeys();

				}
				if ($("#rightPaneNewsletterSubscribers:visible").length) {
					var id = $this.parent().parent().attr("mailinglist-id");
					var name = encodeURIComponent($this.val());
					if (name=="") {

						resetTitle($this,$this.attr("original"));
						assignNewsletterSubscribersKeys();
						return false;
					}
					if (name==$this.attr("original")) {

						resetTitle($this,$this.attr("original"));
						assignCalendarEventsKeys();
						return false;
					}
					var val = $this.val();
					working();
					var showId = id;
					$.ajax({
					  type: "POST",
					  url: "newsletterActions.php",
					  data: "newsletterAction=renameGroup&id="+id+"&name="+name,
					  success: function(msg){
		if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
							saved("");

							resetTitle($this,htmlentities(val));

							$("#editNewsletterSubscribersTitle").attr("mailinglist-id",msg);

							$("#newsletterPaneInner > div").load("newsletterActions.php?newsletterAction=showGroups&showPane=",function(){

							});
							$(document).unbind("click").click(function(){
								if (justScrolled) {return false;}
								if (ignoreClickCatchup) {return false;}
								hide_menus();
								hide_header_menus();
							});



					  }
					});
					assignNewsletterSubscribersKeys();

				}
				if ($("body").attr("pane")=="editContent" && $("#rightPane .topBarTitle").hasClass("renameBlog")) {
						var name = encodeURIComponent($this.val());
						if (name=="") {

							resetTitle($this,$this.attr("original"));
							assignSaveListener();
							return false;
						}
						if (name==$this.attr("original")) {
							resetTitle($this,$this.attr("original"));
							assignSaveListener();
							return false;
						}
						working();

						var val = $this.val();
						var pageId = $("#kbid").val();
						$.ajax({
						  type: "POST",
						  url: "blogActions.php",
						  data: "blogAction=renamePage&id="+pageId+"&title="+name,
						  success: function(msg){
			if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
								saved();
								resetTitle($this,htmlentities(val));
								assignSaveListener();
								$(document).unbind("click").click(function(){

									hide_menus();
									$.fn.bpeditor.assign_toggler();
									assignSaveListener();

								});


						  }
						});
				}
				if ($("body").attr("pane")=="editContent" && $("#rightPane .topBarTitle").hasClass("renamePage")) {

					var name = encodeURIComponent($this.val());
					if (name=="") {
						resetTitle($this,$this.attr("original"));

						assignSaveListener();
						$(document).unbind("click").click(function(){

							hide_menus();
							$.fn.bpeditor.assign_toggler();
							assignSaveListener();


						});

						return false;
					}

					if (name==encodeURIComponent($this.attr("original"))) {

						resetTitle($this,$this.attr("original"));

						assignSaveListener();
						$(document).unbind("click").click(function(){

							hide_menus();
							$.fn.bpeditor.assign_toggler();
							assignSaveListener();

						});
						return false;
					}
					working();

					var val = $this.val();
					var pageId = $("#kbid").val();
					$.ajax({
					  type: "POST",
					  url: "pageActions.php",
					  data: "pageAction=renamePage&id="+pageId+"&title="+name,
					  success: function(msg){
		if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
							if (msg=="exists") {
								error(LangVars.Page_Name_Exists);
								resetTitle($this,$this.attr("original"));
							} else {
								resetTitle($this,htmlentities(val));
							}
							saved("");

							assignSaveListener();
							$(document).unbind("click").click(function(){

								hide_menus();
								$.fn.bpeditor.assign_toggler();
								assignSaveListener();


							});
					  }
					});
				}
				if ($("body").attr("pane")=="editContent" && $("#rightPane .topBarTitle").hasClass("renameSnippet")) {
					var name = encodeURIComponent($this.val());
					if (name=="") {
						resetTitle($this,$this.attr("original"));


						assignSaveListener();
						return false;
					}
					if (name==$this.attr("original")) {
						resetTitle($this,$this.attr("original"));

						assignSaveListener();
						return false;
					}
					working();

					var val = $this.val();
					var pageId = $("#editing").val();
					$.ajax({
					  type: "POST",
					  url: "snippetsActions.php",
					  data: "snippetsAction=rename&id="+pageId+"&name="+name,
					  success: function(msg){
		if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
							saved("");

							resetTitle($this,htmlentities(val));

							assignSaveListener();
							$(document).unbind("click").click(function(){

								hide_menus();
								$.fn.bpeditor.assign_toggler();
								assignSaveListener();


							});

					  }
					});
				}



		});
		$(document).unbind("click");
		$(document).unbind("keypress");
		$(document).unbind("keyup");
		$(document).unbind("keydown");
		$(document).keyup(function(e){
			if (e.keyCode==13) { // enter
				$input.blur();
				return false;
			}
			if (e.keyCode==27) { // enter
				$input.blur();
				return false;
			}
		});
		$title.addClass("editing");
	}
}

function changeFormAutoresponderContent(clicked) {
	$("#selectedFormAutoresponderPage").attr("page-id",clicked.attr("rel")).html(clicked.attr("title"));
	$("#selectedFormAutoresponderPage").attr("data-static-pages-versions-id",clicked.attr("data-static-pages-versions-id"));
	$("#changeFormAutoresponderContent").removeClass("empty");
	if ($("#lightPagesList").length) {
		$("#lightPagesOuter").animate({opacity:"0"},550,function(){
			$("#lightPagesOuter").remove();
		});
		return false;
	}
}
function duplicateForms () {
	working();
	var Ids="[";
	$("#rightPaneForms .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("form-id")+'"';
		} else {
		Ids+=',"'+$(this).attr("form-id")+'"';
		}
	});
	Ids+="]";
	$.ajax({
	  type: "POST",
	  url: "formsActions.php",
	  data: "formsAction=dupeForm&ids="+Ids,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		$("#formsWrapper").load("formsActions.php?formsAction=show&v="+(new Date).getTime(),function(){
			addFormsToSettings();
			$("#formsPaneInner .insertTarget").html($("#formsWrapper").html());
			assignDragAssets($("#formsPaneInner .insertTarget"));
			saved("Form Duplicated");
			selectionTools();
		});
	  }
	});
}
function deleteForms () {
	working();
	var Ids="[";
	$("#rightPaneForms .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("form-id")+'"';
		} else {
		Ids+=',"'+$(this).attr("form-id")+'"';
		}
	});
	Ids+="]";

	$.ajax({
	  type: "POST",
	  url: "formsActions.php",
	  data: "formsAction=deleteForm&ids="+Ids,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		if (msg=="ok") {

			$("#formsWrapper").load("formsActions.php?formsAction=show&to_prevent_cache="+(new Date).getTime(),function(){
				addFormsToSettings();
				$("#formsPaneInner .insertTarget").html($("#formsWrapper").html());
					assignAddFormForm();
					hide_menus();
					cancelDialogue();
					$("#formsPaneInner").lovelyScroll();
				saved("Form Removed");
				if ($("#rightPaneForms .formItem").length===0) {
					$("#rightPaneForms .noPages").show();
				}
			});


		} else {
			error(LangVars.Misc_Error);
		}

	  }
	});
}
function exportFormData() {

	if ($("#rightPaneForms .listItemHighlight").length!==1) {
		return false;
	}

	var formid = $("#rightPaneForms .listItemHighlight").attr("form-id");

	window.location.href = "formsActions.php?formsAction=exportFormData&formid="+formid;

	saved(LangVars.Form_Export_Done);

}
function changeRecipient (value) {
	var Ids="[";
	$("#rightPaneForms .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("form-id")+'"';
		} else {
		Ids+=',"'+$(this).attr("form-id")+'"';
		}
	});
	Ids+="]";
	working();
	$.ajax({
	  type: "POST",
	  url: "formsActions.php",
	  data: "formsAction=changeDestination&ids="+Ids+"&destination="+value,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

		$("#formsWrapper").load("formsActions.php?formsAction=show&to_prevent_cache="+(new Date).getTime(),function(){
			$("#formsPaneInner .insertTarget").html($("#formsWrapper").html());
			var toHighlight = jQuery.parseJSON( Ids );
			for (var i=0; i < toHighlight.length; i++) {
		 		$("#rightPaneForms #form"+toHighlight[i]).addClass("listItemHighlight");
			};
			selectionTools();
			cancelDialogue();


			saved();
		});
	  }
	});
}

function changeAutoresponder () {
	var value = $("#selectedFormAutoresponderPage").attr("page-id");
	var subject = $("#formAutoresponderSubjectInput").val();
	var Ids="[";
	$("#rightPaneForms .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("form-id")+'"';
		} else {
		Ids+=',"'+$(this).attr("form-id")+'"';
		}
	});
	Ids+="]";
	working();
	$.ajax({
	  type: "POST",
	  url: "formsActions.php",
	  data: "formsAction=changeAutoresponder&ids="+Ids+"&pageid="+value+"&subject="+encodeURIComponent(subject),
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

		$("#formsWrapper").load("formsActions.php?formsAction=show&to_prevent_cache="+(new Date).getTime(),function(){
			$("#formsPaneInner .insertTarget").html($("#formsWrapper").html());
			var toHighlight = jQuery.parseJSON( Ids );
			for (var i=0; i < toHighlight.length; i++) {
		 		$("#rightPaneForms #form"+toHighlight[i]).addClass("listItemHighlight");
			};
			selectionTools();
			cancelDialogue();
			saved();
		});
	  }
	});
}

function changeRedirectOnSend (text) {
	var value = encodeURIComponent(text);

	var Ids="[";
	$("#rightPaneForms .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("form-id")+'"';
		} else {
		Ids+=',"'+$(this).attr("form-id")+'"';
		}
	});
	Ids+="]";
	working();
	$.ajax({
	  type: "POST",
	  url: "formsActions.php",
	  data: "formsAction=changeRedirectOnSend&ids="+Ids+"&value="+value,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

		$("#formsWrapper").load("formsActions.php?formsAction=show&to_prevent_cache="+(new Date).getTime(),function(){
			$("#formsPaneInner .insertTarget").html($("#formsWrapper").html());
			var toHighlight = jQuery.parseJSON( Ids );
			for (var i=0; i < toHighlight.length; i++) {
		 		$("#rightPaneForms #form"+toHighlight[i]).addClass("listItemHighlight");
			};
			selectionTools();
			cancelDialogue();
			saved();
		});
	  }
	});
}
function addForm () {
	$(document).unbind("click");
	$(document).unbind("keyup");
	$(document).unbind("keydown");
	$(document).unbind("keypress");
	$("#rightPaneForms .noPages").hide();

	$("#rightPaneForms #addFormForm").show();
	$("#rightPaneForms #addFormForm .focus").focus();
	prepFancyLabelForms($("#rightPaneForms #addFormForm"));
	function saveOrCancel () {
		$("#rightPaneForms #addFormForm .focus").unbind("blur");
		if ($("#rightPaneForms #addFormForm .focus").val()=="" || $("#rightPaneForm #addFormForm .focus").val()==" ") {
			resetAddForms();
			if ($("#rightPaneForms .formItem").length===0) {
				$("#rightPaneForms .noPages").show();
			}

		} else {
			$("#rightPaneForms #addFormForm").submit();
		}
		return false;
	}
	$(document).keydown(function(e){
		if (e.keyCode==13) { // enter
			saveOrCancel();
			return false;
		}
		if (e.keyCode==27) { // esc
			saveOrCancel();
			return false;
		}
	});
	$("#rightPaneForms #addFormForm .focus").unbind("blur").blur(function(){
		saveOrCancel();
		return false;
	});/*
	$(document).click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		resetAddForms();
		return false;
	});*/
}
function editForm ($form,secondaryAction) {
	if(secondaryAction===true) {
		editMeListItem($form);
		return false;
	}
	showFormInputs($form,false)	;
}
function showFormInputs ($form,scrollToBottom) {
	hidePanes();

	$("input").unbind();
	$("#loadingMask").show();
	$(".assetPane").hide();
	$("#formInputsPaneInner .insertTarget").html($(".formInputs",$form).html());
	hidePaneTools();

	$("#rightPaneFormInputs .topBarTitle").html("<div><span>"+$form.attr("rel")+"</span></div>").attr("form-id",$form.attr("form-id"));
	//$("#rightPaneFormInputs").show();
	$("#formInputsPaneInner").css("width","auto");
	showPane($("#rightPaneFormInputs"),false,true,false,true);


	$("#loadingMask").hide();
	assignListLasso($("#formInputsPaneInner"));
	assignListPane($("#formInputsPaneInner"),editInput);

	assignSortableListItems($("#formInputsPaneInner"),"listItemHighlight","formInputItem");
	assignFormInputsKeys();
	setTimeout(function() {
		$("#formInputsPaneInner").lovelyScroll();
	}, 350);
	if (scrollToBottom) {
		setTimeout(function() {
			var d = $("#formInputsPaneInner .insertTarget").outerHeight()-$("#formInputsPaneInner").innerHeight()+95;
			d = d-d-d;
			$("#formInputsPaneInner").lovelyScrollMove(d);
			$("#formInputsPaneInner .formInputItem:last").addClass("listItemHighlight");
			selectionTools();
		}, 360);
	}

}
function reloadCalendar () {
	var date = $(".dateInput",$("#calendarEventsPaneInner .eventForm")).val();
	var splitd = date.split("/");
	var showCatId = $("#calendarEventsDateFilter #showing_cat").val();
	var showCatString = "&showCat="+showCatId;
	month = splitd[1];
	year = splitd[2];
	day = splitd[0];
	$("#calendarEventsDateFilter").load("/actions/ShowCal/?month="+month+"&year="+year+"&day="+day+showCatString,function(){
		saved("");
		$("#eventsGroupsList").load("calendarActions.php?calendarAction=showGroups&belongsToCal="+$("#calendarEventsDateFilter #showing_cat").val(),function(){
			if ($("#eventsGroupsList li").length==0) {
//				$("#filterBySubscriberCat").hide();
				$("#eventsGroupsList").next().hide();
				$("#eventsGroupsList").hide();
			} else {
//				$("#filterBySubscriberCat").show();
				$("#eventsGroupsList").next().show();
				$("#eventsGroupsList").show();
			}
	//		updateSubscriberCatFilterMenu();
		});
	});
}
function editMeListItemMultiple ($item) {
	hidePaneTools();

	$input = $item.next();
	$input.show();
	$item.hide();
	$input.unbind("click").click(function(){
		return false;
	});
	$(".imageContextEditFieldset",$input).each(function(){
		$(".imageContextEditLabel",$(this)).css("visibility","hidden");
		if ($("input",$(this)).val()==""){
			$(".imageContextEditLabel",$(this)).css("visibility","visible");
		}
	});
	$(".imageContextEditFieldset input",$input).unbind("keyup").keyup(function(){
		if ($(this).val()!="") {
			$(".imageContextEditLabel",$(this).parents(".imageContextEditFieldset")).css("visibility","hidden");
		} else {
			$(".imageContextEditLabel",$(this).parents(".imageContextEditFieldset")).css("visibility","visible");
		}
	});
	$(".linkField input",$input).focus(function(){
		if (!$("#insertLinkToDownload").length) {
			$(this).parents(".imageContextEditFieldset").after("<span id='insertInteralLinksInline' class='clearfix'><span id='insertLinkToPage'>"+LangVars.Insert_Link_To_Page+"</span><span id='insertLinkToDownload'>"+LangVars.Insert_Link_To_File+"</span></span>");
			$("#insertLinkToPage").click(function(){
				$(".linkField input",$input).blur();
				showLightPages(updateEventLinkVal,"showTop",true,LangVars.Choose_page);
			});
			$("#insertLinkToDownload").click(function(){
				$(".linkField input",$input).blur();
				showDownloadPopdown(updateEventLinkVal);
			});
		}
	});
	$(".focus",$input).focus(function(){
		$("#insertLinkToPage").parent().remove();
	});
	if ($("#rightPaneCalendarEvents:visible").length) {
		$("#rightPaneCalendarEvents .insertTarget").unbind("click").click(function(){
			hidePopdownOrPassthroughSave(saveThis);
			return false;
		});
	}
	if ($("#rightPaneNewsletterSubscribers:visible").length) {
		$("#newsletterSubscribersPaneInner .insertTarget").unbind("click").click(function(){
			saveThis();
			return false;
		});
	}
	if ($("#rightPaneBlogAuthors:visible").length) {
		$("#blogAuthorsPaneInner").unbind("click").click(function(){
			saveThis();
			return false;
		});
	}
	if ($("#rightPaneEmbedCodes:visible").length) {
		$(".editEmbedCodeCode",$input).autosize();
		$("#embedCodesPaneInner .insertTarget").unbind("click").click(function(){
			saveThis();
			return false;
		});
	}
	function saveThis () {
		$("#fixedMenus,.rightPane").unbind("click");
		if ($("#rightPaneCalendarEvents:visible").length) {
			working();
			var val = $(".focus",$input).val();
			var link = $(".eventLink",$input).val();
			var id = $(".eventId",$input).val();
			$item.attr("name",val);
			$(".overflowEllipsis",$item).html(val);

			$.ajax({
			  type: "POST",
			  url: "calendarActions.php",
			  data: "calendarAction=editEvent&id="+id+"&link="+encodeURIComponent(link)+"&title="+encodeURIComponent(val),
			  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
					$item.show().addClass("listItemHighlight");
					$input.hide();
					assignListPane($("#rightPaneCalendarEvents .insertTarget"),editCalendarEvents);

					reloadCalendar();
					assignCalendarEventsKeys();
					selectionTools();
			  }
			});

		}
		if ($("#rightPaneNewsletterSubscribers:visible").length) {
			var id = $item.attr("subscriber-id");
			var name = encodeURIComponent($(".editSubscriberName",$input).val());
			var email = encodeURIComponent($(".editSubscriberEmail",$input).val());

			var rawname = $(".editSubscriberName",$input).val();
			var rawemail = $(".editSubscriberEmail",$input).val();


			if (name=="" || email=="") {

				$input.hide();
				assignNewsletterSubscribersKeys();
				$item.show();
				return false;
			} else {
				working();
				$.ajax({
				  type: "POST",
				  url: "newsletterActions.php",
				  data: "newsletterAction=changeEmail&id="+id+"&name="+name+"&email="+email,
				  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

					$(".subscriberName",$item).html(rawname).attr("title",rawname);
					$(".subscriberEmail",$item).html(rawemail).attr("title",rawemail);
					$item.show();
					$input.hide();
					selectionTools();
					saved();
					assignNewsletterSubscribersKeys();
					assignListPane($("#newsletterSubscribersPaneInner .insertTarget"),editSubscriber);


				   }
				});
			}


		}
		if ($("#rightPaneBlogAuthors:visible").length) {
			var id = $item.attr("blog-author-id");
			var name = encodeURIComponent($(".newBlogAuthorName",$input).val());
			var bio = encodeURIComponent($(".newBlogAuthorBio",$input).val());

			var rawname = $(".newBlogAuthorName",$input).val();
			var rawbio = $(".newBlogAuthorBio",$input).val();


			if (name=="") {
				$("input",$input).each(function(){
					$(this).val($(this).attr("original"));
				});
				$input.hide();
				$item.show();
				assignBlogAuthorsKeys();
				assignListPane($("#blogAuthorsPaneInner"),editBlogAuthor);

				saved();
				return false;
			} else {
				working();
				$.ajax({
				  type: "POST",
				  url: "blogActions.php",
				  data: "blogAction=changeAuthor&id="+id+"&name="+name+"&bio="+bio,
				  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
					$(".overflowEllipsis",$item).html(rawname);
					$item.attr("blog-author-bio",rawbio);
					$item.show();
					$input.hide();

					$("#blogAuthorsList a").remove();
					$("#blogAuthorsPaneInner .responsiveListItem").each(function(){
						$("#blogAuthorsList").append("<li><a class='authorItem' blog-author-id=\""+$(this).attr("blog-author-id")+"\" data-item-value=\""+$(this).attr("blog-author-id")+"\" blog-author-bio=\""+$(this).attr("blog-author-bio")+"\" data-lang=\""+$(".overflowEllipsis",$(this)).html()+"\"><span class=\"overflowEllipsis\">"+$(".overflowEllipsis",$(this)).html()+"</span></a></li>");
					});

					selectionTools();
					saved();
					assignBlogAuthorsKeys();
					assignListPane($("#blogAuthorsPaneInner"),editBlogAuthor);


				   }
				});
			}


		}
		if ($("#rightPaneEmbedCodes:visible").length) {
			var id = $item.attr("embed-code-id");

			var name = encodeURIComponent($(".editEmbedCodeName",$input).val());
			var code = encodeURIComponent($(".editEmbedCodeCode",$input).val());

			var rawname = $(".editEmbedCodeName",$input).val();
			var rawcode = $(".editEmbedCodeCode",$input).val();


			if (name=="" || code=="") {

				$("input",$input).each(function(){
					$(this).val($(this).attr("original"));
				});
				$input.hide();
				$item.show();
				assignEmbedCodesKeys();
				assignListPane($("#embedCodesPaneInner .insertTarget"),editEmbedCode);
				assignDragAssets($("#embedCodesPaneInner .insertTarget"));

				saved();
				return false;
			} else {
				working();

				$.ajax({
				  type: "POST",
				  url: "embedCodesActions.php",
				  data: "embedCodesAction=editEmbedCode&id="+id+"&name="+name+"&code="+code,
				  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

					$(".overflowEllipsis",$item).html(htmlentities(rawname));
					$item.attr("embed-code-name",htmlentities(rawname));
					$(".editEmbedCodeName",$item.next()).val(rawname);
					$(".editEmbedCodeCode",$item.next()).val(rawcode);
					$item.show();
					$input.hide();

					selectionTools();
					saved();

					assignListPane($("#embedCodesPaneInner .insertTarget"),editEmbedCode);
					assignDragAssets($("#embedCodesPaneInner .insertTarget"));
					assignEmbedCodesKeys();

				   }
				});
				return false;
			}


		}
	}
	$(".focus",$input).focus();
	$(document).unbind("click");

	$("#fixedMenus,.rightPane").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		hidePopdownOrPassthroughSave(saveThis);
		$("#fixedMenus,.rightPane").unbind("click");
		return false;
	});
	$(document).unbind("keypress");
	$(document).unbind("keyup");
	$(document).unbind("keydown");
	$(document).keyup(function(e){
		if (e.keyCode==13) { // enter
			if ($("#rightPaneEmbedCodes:visible").length && $(".editEmbedCodeCode:focus",$input).length) {

			} else {
				hidePopdownOrPassthroughSave(saveThis);
				return false;
			}

		}
		if (e.keyCode==27) { // esc
			hidePopdownOrPassthroughSave(saveThis);
			return false;
		}
	});
}
function editMeListItem ($item) {
	hidePaneTools();
	$("input").unbind();
	if (!$item.next().hasClass("responsiveListAddForm")) {
		var itemId = '';
		var text = $item.attr("name");
		if (typeof $item.attr("gallery-id") !== 'undefined' && $item.attr("gallery-id") !== false) {
			itemId=$item.attr("gallery-id");
			text = $item.attr("data-name");
		}
		if (typeof $item.attr("product-id") !== 'undefined' && $item.attr("product-id") !== false) {
			itemId=$item.attr("product-id");
		}
		if (typeof $item.attr("form-id") !== 'undefined' && $item.attr("form-id") !== false) {
			itemId=$item.attr("form-id");
		}
		if (typeof $item.attr("gallery-image-id") !== 'undefined' && $item.attr("gallery-image-id") !== false) {
			itemId=$item.attr("gallery-image-id");
		}
		if (typeof $item.attr("booking-product-id") !== 'undefined' && $item.attr("booking-product-id") !== false) {
			itemId=$item.attr("booking-product-id");
		}
		if (typeof $item.attr("id") !== 'undefined' && $item.attr("id") !== false && $item.hasClass("contentImage")) {
			itemId=$item.attr("id");
			text = $item.attr("title");
		}
		if (typeof $item.attr("permission-group-id") !== 'undefined' && $item.attr("permission-group-id") !== false) {
			itemId=$item.attr("permission-group-id");
			text = $item.attr("title");
		}
		if (typeof $item.attr("images-category-id") !== 'undefined' && $item.attr("images-category-id") !== false) {
			itemId=$item.attr("images-category-id");
			text = $item.attr("title");
		}
		$item.after("<div class=\"responsiveListAddForm inline\" action=\"\" method=\"post\" rel=\""+itemId+"\"><input type=\"text\" name=\"\" value=\""+htmlentities(text)+"\" class=\"focus\"	/></div>");
	}
	$input = $item.next();
	$input.show();
	$item.hide();
	$input.click(function(){
		return false;
	});
	$("input",$input).focus();
	$(".focus",$input).blur(function(){
		if ($(".assetPane:visible").hasClass("autoRename")) {

			var $dataEl = $(".assetPane:visible");
			working();

			var elementId = $(this).parent().attr('rel');


			$.ajax({
			  type: "POST",
			  url: $dataEl.data("url"),
			  data: $dataEl.data("data")+"&id="+elementId+"&value="+encodeURIComponent($(this).val()),
			  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
					if (typeof $dataEl.data("post-call")!="undefined") {
						window[$dataEl.data("post-call")]();

					}

					saved();
					selectionTools();
			  }
			});
			$item.attr($dataEl.data("attr-to-update"),$(this).val());
			$(".overflowEllipsis:not(.inputOptions .overflowEllipsis)",$item).html($(this).val());
			$item.show().addClass("listItemHighlight");
			$input.remove();
			window[$dataEl.data("assign-keys")]();
		}
		if ($("#rightPaneFormInputs:visible").length) {
			working();
			var showId = $(".formid",$(this).parent()).val();
			var inputId =$(this).parent().attr('rel');

			$.ajax({
			  type: "POST",
			  url: "formsActions.php",
			  data: "formsAction=editInput&inputsId="+$(this).parent().attr('rel')+"&label="+encodeURIComponent($(".renameFieldInput",$(this).parent()).val()),
			  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

					//selectionTools();

					$("#formsWrapper").load("formsActions.php?formsAction=show&showForm="+showId+"&to_prevent_cache="+(new Date).getTime(),function(){
						$("#formsPaneInner .insertTarget").html($("#formsWrapper").html());
						saved("");

					});

			  }
			});
			$item.attr("name",$(this).val());
			$(".overflowEllipsis:not(.inputOptions .overflowEllipsis)",$item).html($(this).val());
			$item.show().addClass("listItemHighlight");
			$input.remove();
			assignFormInputsKeys();
		}
		if ($("#rightPaneFormInputOptions:visible").length) {
			$item.attr("name",$(this).val());
			$(".overflowEllipsis",$item).html($(this).val());
			$item.show().addClass("listItemHighlight");
			$input.remove();
			updateOptions(false);
			selectionTools();
			assignFormInputOptionsKeys();
		}
		if ($("#rightPaneForms:visible").length) {
			working();
			var formId = $(this).parent().attr('rel');
			var val = $(this).val();
			$.ajax({
				  type: "POST",
				  url: "formsActions.php",
				  data: "formsAction=renameForm&formId="+formId+"&name="+encodeURIComponent(val),
				  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
					$item.attr("name",val);
					$item.attr("rel",val);
					$(".overflowEllipsis:not(.formInputs .overflowEllipsis)",$item).html(val);
					$item.show().addClass("listItemHighlight");
					$input.remove();
					saved("");
					assignFormsKeys();
					selectionTools();
				  }
				});
		}
		if ($("#rightPaneForms:visible").length) {
			working();
			var formId = $(this).parent().attr('rel');
			var val = $(this).val();
			$.ajax({
				  type: "POST",
				  url: "formsActions.php",
				  data: "formsAction=renameForm&formId="+formId+"&name="+encodeURIComponent(val),
				  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
					$item.attr("name",val);
					$item.attr("rel",val);
					$(".overflowEllipsis:not(.formInputs .overflowEllipsis)",$item).html(val);
					$item.show().addClass("listItemHighlight");
					$input.remove();
					saved("");
					assignFormsKeys();
					selectionTools();
				  }
				});
		}
		if ($("#rightPaneSubscriberCategories:visible").length) {
			working();
			var catId = $(this).parent().attr('rel');
			var val = $(this).val();
			$.ajax({
			  type: "POST",
			  url: "newsletterActions.php",
			  data: "newsletterAction=renameCategory&id="+catId+"&name="+encodeURIComponent($(this).val()),
			  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
					$item.attr("name",val);
					$item.attr("rel",val);
					$(".overflowEllipsis",$item).html(val);
					$item.show().addClass("listItemHighlight");
					$input.remove();
					saved("");
					assignSubscriberCategoriesKeys();
					selectionTools();

			  }
			});
		}
		if ($("#rightPaneEventsGroups:visible").length) {
			working();
			var catId = $(this).parent().attr('rel');
			var val = $(this).val();
			$.ajax({
			  type: "POST",
			  url: "calendarActions.php",
			  data: "calendarAction=renameGroup&id="+catId+"&name="+encodeURIComponent($(this).val()),
			  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
					$item.attr("name",val);
					$item.attr("rel",val);
					$(".overflowEllipsis",$item).html(val);
					$item.show().addClass("listItemHighlight");
					$input.remove();
					saved("");
					assignEventGroupKeys();
					selectionTools();
			  }
			});
		}
		if ($("#rightPaneProductCategories:visible").length) {
			working();
			var catId = $(this).parent().attr('rel');
			var val = $(this).val();
			$.ajax({
			  type: "POST",
			  url: "shopActions.php",
			  data: "shopAction=renameProductCategory&id="+catId+"&name="+encodeURIComponent($(this).val()),
			  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
					$("#productCategoriesList").load("shopActions.php?shopAction=showProductCategories",function(){
						updateProdFilterMenu();
					});
					$item.attr("name",val);
					$item.attr("rel",val);
					$(".overflowEllipsis",$item).html(val);
					$item.show().addClass("listItemHighlight");
					$input.remove();
					saved("");

					assignProductCategoriesKeys();
					selectionTools();
			  }
			});
		}
		if ($("#rightPaneProducts:visible").length) {
			var val = $(this).val();
			$item.attr("name",val);
			$.ajax({
			  type: "POST",
			  url: "shopActions.php",
			  data: "shopAction=renameProduct&id="+itemId+"&name="+val,
			  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
					saved("");

					$("#productWrapper").load("shopActions.php?shopActions=showProducts&to_prevent_cache="+(new Date).getTime(),function(){

					});
					assignProductOptionsKeys();

					$(".overflowEllipsis",$item).html(val);
					$item.show().addClass("listItemHighlight");
					$input.remove();
					saved("");

					selectionTools();
			  }
			});


		}
		if ($("#rightPaneProductOptions:visible").length) {
			var val = $(this).val();

			$item.attr("name",val);
			$(".overflowEllipsis",$item).html(val);
			$item.show().addClass("listItemHighlight");
			$input.remove();
			saved("");
			updateProductOptions();

			assignProductOptionsKeys();

			selectionTools();
		}
		if ($("#rightPaneBlogCategories:visible").length) {
			working();
			var prodId = $(this).parent().attr('rel');
			var val = $(this).val();
			$.ajax({
			  type: "POST",
			  url: "blogActions.php",
			  data: "blogAction=renameCategory&id="+prodId+"&name="+encodeURIComponent($(this).val()),
			  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
					$(".overflowEllipsis",$item).html(val);
					$item.show().addClass("listItemHighlight");
					$input.hide();
					$("#blogCategoriesList a").remove();
					$("#blogCategoriesPaneInner .responsiveListItem").each(function(){
						$("#blogCategoriesList").append("<li><a blog-category-id=\""+$(this).attr("blog-category-id")+"\" data-reverse-order=\""+$(this).attr("data-reverse-order")+"\" data-lang=\""+$(".overflowEllipsis",$(this)).html()+"\" data-item-value=\""+$(this).attr("blog-category-id")+"\"><span class=\"overflowEllipsis\">"+$(".overflowEllipsis",$(this)).html()+"</span></a></li>");
					});

					saved("");
					$(".focus",$input).unbind();
					assignListLasso($("#blogCategoriesPaneInner"));
					assignListPane($("#blogCategoriesPaneInner"),editBlogCategory);
					assignBlogCategoriesKeys();
					//selectionTools();

			  }
			});
		}
		if ($("#rightPaneBookingProducts:visible").length) {
			var val = $(this).val();
			$item.attr("name",val);
			$.ajax({
			  type: "POST",
			  url: "shopActions.php",
			  data: "shopAction=updateBookingProduct&ids=["+itemId+"]&name="+val,
			  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
					saved("");


					assignBookingProductsKeys();

					$(".overflowEllipsis",$item).html(val);
					$item.show().addClass("listItemHighlight");
					$input.remove();
					saved("");

					selectionTools();
			  }
			});


		}
		if ($("#rightPaneStaff:visible").length) {
			working();
			var id = $item.attr('staff-id');
			var val = $(this).val();
			$.ajax({
			  type: "POST",
			  url: "adminUsersActions.php",
			  data: "adminUsersAction=changeEmailStaff&id="+id+"&email="+encodeURIComponent($(this).val()),
			  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
					$(".overflowEllipsis",$item).html(val);
					$item.attr("name",val);
					$item.show().addClass("listItemHighlight");
					$input.remove();
					saved("");
					assignStaffKeys();
					selectionTools();

			  }
			});
		}
		if ($("#rightPaneGalleryImages:visible").length) {
			var galid = $(".galid",$item).val();
			var id = $item.attr('gallery-image-id');
			var val = $(this).val();
			$.ajax({
			  type: "POST",
			  url: "galleriesActions.php",
			  data: "galleriesAction=editImage&imagesid="+id+"&caption="+encodeURIComponent($(this).val()),
			  success: function(msg){
		if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				$("#galleriesAdmin").load("galleriesActions.php?galleriesAction=show&show="+galid+"&to_prevent_cache="+(new Date).getTime(),function(){
					$("#galleriesPaneInner .insertTarget").html($("#galleriesAdmin").html());
					assignGalleryImagesKeys();
					$input.remove();
					$item.attr("name",val);
					$item.removeClass('editingThumb');
					$item.show().addClass('listItemHighlight');
					$(".overflowEllipsis",$item).html(msg);
					saved("Image Renamed");
					selectionTools();
				});
			  }
			});
		}
		if ($("#rightPaneSnippetCategories:visible").length) {
			working();
			var prodId = $(this).parent().attr('rel');
			var val = $(this).val();
			$.ajax({
			  type: "POST",
			  url: "snippetsActions.php",
			  data: "snippetsAction=renameCategory&id="+prodId+"&name="+encodeURIComponent($(this).val()),
			  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
					$(".overflowEllipsis",$item).html(val);
					$item.show().addClass("listItemHighlight");
					$input.hide();
					$("#snippetCategoriesList a").remove();
					$("#snippetCategoriesPaneInner .responsiveListItem").each(function(){
						$("#snippetCategoriesList").append("<li><a snippet-cat-id=\""+$(this).attr("snippet-category-id")+"\" data-pinned='"+$(this).attr("data-pinned")+"' data-lang=\""+$(".overflowEllipsis",$(this)).html()+"\" data-item-value=\""+$(this).attr("snippet-category-id")+"\"><span class=\"overflowEllipsis\">"+$(".overflowEllipsis",$(this)).html()+"</span></a></li>");
					});

					saved("");
					$(".focus",$input).unbind();
					assignListLasso($("#snippetCategoriesPaneInner"));
					assignListPane($("#snippetCategoriesPaneInner"),editSnippetCategory);
					assignSnippetCategoriesKeys();
					//selectionTools();

			  }
			});
		}
	});
	$(document).unbind("click");
	$(document).unbind("keypress");
	$(document).unbind("keyup");
	$(document).unbind("keydown");
	$(document).keyup(function(e){
		if (e.keyCode==13) { // enter
			$(".focus",$input).blur();
			return false;
		}
		if (e.keyCode==27) { // enter
			$(".focus",$input).blur();
			return false;
		}
	});

}
function showInputOptions ($item,scrollToBottom) {
	$("#backToInputs").attr("form-id",$("#editFormName").attr("form-id"));
	hidePanes();

	$("input").unbind();
	$("#loadingMask").show();
	$(".assetPane").hide();

	$("#formInputOptionsPaneInner .insertTarget").html($(".inputOptions",$item).html());

	hidePaneTools();
	$("#rightPaneFormInputOptions .topBarTitle").html("<div><span>"+$item.attr("rel")+"</span></div>").attr("input-id",$item.attr("input-id"));
	//$("#rightPaneFormInputOptions").show();
	$("#formInputOptionsPaneInner").css("width","auto");
	showPane($("#rightPaneFormInputOptions"),false,true);


	$("#loadingMask").hide();
	assignListLasso($("#formInputOptionsPaneInner"));
	assignListPane($("#formInputOptionsPaneInner"),editInputOption);
	assignSortableListItems($("#formInputOptionsPaneInner"),"listItemHighlight","optionItem");
	assignFormInputOptionsKeys();
	setTimeout(function() {
		$("#formInputOptionsPaneInner").lovelyScroll();
	}, 350);
	if (scrollToBottom) {
		$("#formInputOptionsPaneInner .responsiveListItem:last").addClass("listItemHighlight");
		setTimeout(function() {
			var d = $("#formInputOptionsPaneInner .insertTarget").outerHeight()-$("#formInputOptionsPaneInner").innerHeight()+95;
			d = d-d-d;
			$("#formInputOptionsPaneInner").lovelyScrollMove(d);

			setTimeout(function() {
				selectionTools();
			}, 10);

		}, 360);
	}
}
function editProductOption ($item) {
	editMeListItem($item);
}
function editInputOption ($item) {
	editMeListItem($item);
}
function editInput ($item,secondaryAction) {
	if (secondaryAction===true) {
		editMeListItem($item);
		return false;
	}
	if ($item.hasClass("withOptions")) {
		showInputOptions($item,false);
	} else {
		editMeListItem($item);
	}
}
function duplicateFormInputs() {
	working();
	var Ids="[";
	$("#rightPaneFormInputs .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("input-id")+'"';
		} else {
		Ids+=',"'+$(this).attr("input-id")+'"';
		}
	});
	Ids+="]";
	var showId = $("#rightPaneFormInputs .topBarTitle").attr("form-id");
	$.ajax({
	  type: "POST",
	  url: "formsActions.php",
	  data: "formsAction=duplicateInputs&ids="+Ids,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		if (msg=="ok") {

			$("#formsWrapper").load("formsActions.php?formsAction=show&to_prevent_cache="+(new Date).getTime(),function(){
				$("#formsPaneInner .insertTarget").html($("#formsWrapper").html());
				showFormInputs($("#formsPaneInner #form"+showId),false);
				cancelDialogue();
				saved("Form Removed");
			});

		} else {
			error(LangVars.Misc_Error);
		}

	  }
	});
}
function deleteInput () {
	working();
	var Ids="[";
	$("#rightPaneFormInputs .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("input-id")+'"';
		} else {
		Ids+=',"'+$(this).attr("input-id")+'"';
		}
	});
	Ids+="]";
	var showId = $("#rightPaneFormInputs .topBarTitle").attr("form-id");

	$.ajax({
	  type: "POST",
	  url: "formsActions.php",
	  data: "formsAction=deleteInput&ids="+Ids,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		if (msg=="ok") {

			$("#formsWrapper").load("formsActions.php?formsAction=show&to_prevent_cache="+(new Date).getTime(),function(){
				$("#formsPaneInner .insertTarget").html($("#formsWrapper").html());
				showFormInputs($("#formsPaneInner #form"+showId),false);
				cancelDialogue();
				saved("Form Removed");
			});

		} else if (msg=="locked") {
			cancelDialogue();
			error(LangVars.Form_Locked);
		} else {
			error(LangVars.Misc_Error);
		}

	  }
	});
}
function addInput () {
	$(document).unbind("click");
	$(document).unbind("keyup");
	$(document).unbind("keydown");
	hidePaneTools();
	$("#rightPaneFormInputs .noPages").hide();

	$("#rightPaneFormInputs .addInputForm").show();
	prepFancyLabelForms($("#rightPaneFormInputs .addInputForm"));
	$("#formInputsPaneInner").lovelyScroll();
	setTimeout(function () {
		var d = $("#formInputsPaneInner .insertTarget").outerHeight()-$("#formInputsPaneInner").innerHeight()+95;
		d = d-d-d;
		$("#formInputsPaneInner").lovelyScrollMove(d);
		$("#rightPaneFormInputs .addInputForm .focus").focus();
	}, 10);


	function saveOrCancel () {
		$("#rightPaneFormInputs .addInputForm .focus").unbind("blur").unbind();
		if ($("#rightPaneFormInputs .addInputForm .focus").val()=="" || $("#rightPaneFormInputs .addInputForm .focus").val()==" ") {
			resetAddForms();
			$("#rightPaneFormInputs .noPages").show();

		} else {
			working();
			showId = $(".selectedForm",$("#rightPaneFormInputs .addInputForm")).val();
			function showResponse (responseText, statusText) {
if (responseText =="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				if (responseText=="ok") {
					$("#formsWrapper").load("formsActions.php?formsAction=show&v="+(new Date).getTime(),function(){
						$("#formsPaneInner .insertTarget").html($("#formsWrapper").html());
						showFormInputs($("#formsPaneInner #form"+showId),true);

						saved("Input Added");
					});
				} else {
					error(LangVars.Misc_Error);
				}

			}
			var options = {
		        success:       showResponse  // post-submit callback
		    };

			$("#rightPaneFormInputs .addInputForm").ajaxSubmit(options);

		}
	}
	$("#rightPaneFormInputs .addInputForm").submit(function(){
		saveOrCancel();
		return false;
	});
	$("#rightPaneFormInputs .addInputForm .focus").unbind("blur").blur(function(){
		saveOrCancel();
		return false;
	});
	$(document).keydown(function(e){
		if (e.keyCode==13) { // enter
			saveOrCancel();
			return false;
		}
		if (e.keyCode==27) { // esc
			saveOrCancel();
			return false;
		}
	});
}
function changeRequired (yesno) {
	var Ids="[";
	$("#rightPaneFormInputs .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("input-id")+'"';
		} else {
		Ids+=',"'+$(this).attr("input-id")+'"';
		}
	});
	Ids+="]";
	var showId = $("#editFormName").attr("form-id");
	working();
	$.ajax({
	  type: "POST",
	  url: "formsActions.php",
	  data: "formsAction=changeRequired&ids="+Ids+"&required="+yesno,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

		$("#formsWrapper").load("formsActions.php?formsAction=show&showForm="+showId+"&to_prevent_cache="+(new Date).getTime(),function(){
			$("#formsPaneInner .insertTarget").html($("#formsWrapper").html());

			if (yesno=="yes") {
				$("#rightPaneFormInputs .listItemHighlight").attr("data-input-required","yes");
				$("#rightPaneFormInputs .listItemHighlight .asterix").show();
			} else {
				$("#rightPaneFormInputs .listItemHighlight").attr("data-input-required","");
				$("#rightPaneFormInputs .listItemHighlight .asterix").hide();
			}
			selectionTools();


			saved();
		});
	  }
	});
}
function changeInputWidth(width) {
	var Ids="[";
	$("#rightPaneFormInputs .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("input-id")+'"';
		} else {
		Ids+=',"'+$(this).attr("input-id")+'"';
		}
	});
	Ids+="]";
	var showId = $("#editFormName").attr("form-id");
	working();
	$.ajax({
	  type: "POST",
	  url: "formsActions.php",
	  data: "formsAction=changeWidth&ids="+Ids+"&width="+width,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

		$("#formsWrapper").load("formsActions.php?formsAction=show&showForm="+showId+"&to_prevent_cache="+(new Date).getTime(),function(){
			//hidePaneTools();
			$("#formsPaneInner .insertTarget").html($("#formsWrapper").html());
			//showFormInputs($("#formsPaneInner #form"+showId),false);
			
			$("#rightPaneFormInputs .listItemHighlight").attr("data-input-width",width);
			selectionTools();
			saved();
		});
	  }
	});
}
function changeInputType (type) {
	var Ids="[";
	$("#rightPaneFormInputs .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("input-id")+'"';
		} else {
		Ids+=',"'+$(this).attr("input-id")+'"';
		}
	});
	Ids+="]";
	var showId = $("#editFormName").attr("form-id");
	working();
	$.ajax({
	  type: "POST",
	  url: "formsActions.php",
	  data: "formsAction=changeType&ids="+Ids+"&type="+type,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

		$("#formsWrapper").load("formsActions.php?formsAction=show&showForm="+showId+"&to_prevent_cache="+(new Date).getTime(),function(){
			//hidePaneTools();
			$("#formsPaneInner .insertTarget").html($("#formsWrapper").html());
			//showFormInputs($("#formsPaneInner #form"+showId),false);
			if (type=="radiogroup"||type=="select") {
				$("#rightPaneFormInputs .listItemHighlight").addClass("withOptions");
			} else {
				$("#rightPaneFormInputs .listItemHighlight").removeClass("withOptions");
			}
			$("#rightPaneFormInputs .listItemHighlight").attr("data-input-type",type);
			$("#rightPaneFormInputs .listItemHighlight .itemTag").html($("#listOfInputTypes li a[data-item-value="+type+"]").attr("data-lang"));
			selectionTools();
			saved();
		});
	  }
	});

}
function addInputOption () {
	$(document).unbind("click");
	$(document).unbind("keyup");
	$(document).unbind("keydown");
	$(document).unbind("keypress");
	$("#rightPaneFormInputOptions .noPages").hide();

	prepFancyLabelForms($("#rightPaneFormInputOptions .addOptionForm"));
	$("#rightPaneFormInputOptions").unbind("click");
	$("#rightPaneFormInputOptions .addOptionForm").show();
	setTimeout(function () {
		var d = $("#formInputOptionsPaneInner .insertTarget").outerHeight()-$("#formInputOptionsPaneInner").innerHeight()+95;
		d = d-d-d;
		$("#formInputOptionsPaneInner").lovelyScrollMove(d);
		$("#rightPaneFormInputOptions .addOptionForm .focus").focus();

	}, 10);
	function saveOrCancel () {
		$("#rightPaneFormInputOptions .addOptionForm .focus").unbind("blur");
		if ($("#rightPaneFormInputOptions .addOptionForm .focus").val()=="") {
			resetAddForms();
			$("#rightPaneFormInputOptions .noPages").show();
			return false;
		}
		working();
		var id = $("#editInputName").attr("input-id");
		$.ajax({
		  type: "POST",
		  url: "formsActions.php",
		  data: "formsAction=editInput&inputsId="+id+"&options="+encodeURIComponent($("#rightPaneFormInputOptions .addOptionForm .focus").val()),
		  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			$("#formsWrapper").load("formsActions.php?formsAction=show&showForm="+id+"&to_prevent_cache="+(new Date).getTime(),function(){
				$("#formsPaneInner .insertTarget").html($("#formsWrapper").html());
				setTimeout(function() {
					showInputOptions($("#formsPaneInner #input-"+id),true);
					saved();
				}, 10);

			});

		  }
		});
	}
	$("#rightPaneFormInputOptions .addOptionForm").submit(function(){
		saveOrCancel();
		return false;
	});
	$("#rightPaneFormInputOptions .addOptionForm .focus").unbind("blur").blur(function(){
		saveOrCancel();
		return false;
	});
	$("#rightPaneFormInputOptions input").keydown(function(e){
		if (e.keyCode==13) { // enter
			saveOrCancel();
			return false;
		}
		if (e.keyCode==27) { // esc
			saveOrCancel();
			return false;
		}
	});
}
function addProductOption () {
	$(document).unbind("click");
	$(document).unbind("keyup");
	$(document).unbind("keydown");
	$(document).unbind("keypress");
	hidePaneTools();
	$("#rightPaneProductOptions .noPages").hide();
	prepFancyLabelForms($("#rightPaneProductOptions .addProductOptionForm"));
	$("#rightPaneProductOptions .addProductOptionForm").show();
	var b = $("#productOptionsPaneInner .lovelyScrollContents").height() - $("#productOptionsPaneInner").height();
	$("#productOptionsPaneInner").lovelyScrollMove(-Math.abs(b));
	$("#rightPaneProductOptions .addProductOptionForm .focus").focus();
	$("#rightPaneProductOptions .listItemHighlight").removeClass("listItemHighlight");
	function saveOrCancel () {
		$("#rightPaneProductOptions .addProductOptionForm .focus").unbind("blur");
		var name = htmlentities($("#rightPaneProductOptions .addProductOptionForm .focus").val());
		if (name=="") {
			resetAddForms();

			if ($("#rightPaneProductOptions .responsiveListItem").length===0) {
				$("#rightPaneProductOptions .noPages").show();
			}
			return false;
		}
		if ($("#rightPaneProductOptions .topBarTitle").attr("options-separate-stock")=="yes") {
			$("#rightPaneProductOptions .addProductOptionForm").before("<div class=\"responsiveListItem productOption optionsSeparateStock\" name=\""+name+"\" data-discount-1-price=\"0.00\" data-discount-1-threshold=\"0\" data-discount-2-price=\"0.00\" data-discount-2-threshold=\"0\" data-option-price='0.00' product-option-stock='0' data-option-has-stock='yes'><span class=\"responsiveListItemInfo productOptionPrice\">"+$("#curSym").val()+"0.00</span><span class=\"responsiveListItemInfo productOptionStock\">0</span><span class=\"overflowEllipsis\" title=\""+name+"\">"+name+"</span></div><div class=\"dropzone\"><div></div></div>");
		} else {
			$("#rightPaneProductOptions .addProductOptionForm").before("<div class=\"responsiveListItem productOption\" name=\""+name+"\" data-discount-1-price=\"0.00\" data-discount-1-threshold=\"0\" data-discount-2-price=\"0.00\" data-discount-2-threshold=\"0\" data-option-price='0.00' product-option-stock='0' data-option-has-stock='no'><span class=\"responsiveListItemInfo productOptionPrice\">"+$("#curSym").val()+"0.00</span><span class=\"responsiveListItemInfo productOptionStock\">0</span><span class=\"overflowEllipsis\" title=\""+name+"\">"+name+"</span></div><div class=\"dropzone\"><div></div></div>");
		}


		updateProductOptions();
		assignListLasso($("#rightPaneProductOptions"));
		assignListPane($("#rightPaneProductOptions"),editInputOption);
		$("#productOptionsPaneInner").lovelyScroll();
		assignSortableListItems($("#productOptionsPaneInner"),"listItemHighlight","productOption");
		assignProductOptionsKeys();
		resetAddForms();
		$("#productOptionsPaneInner").lovelyScrollMove("-"+$("#productOptionsPaneInner").height());
		$("#productOptionsPaneInner .responsiveListItem:last").addClass("listItemHighlight");
		selectionTools();
	}
	$("#rightPaneProductOptions .addProductOptionForm .focus").unbind("blur").blur(function(){
		saveOrCancel();
		return false;
	});
	$(document).keyup(function(e){
		if (e.keyCode==13) { // enter
			saveOrCancel();
			return false;
		}
		if (e.keyCode==27) { // esc
			saveOrCancel();
			return false;
		}
	});
	$(document).click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		saveOrCancel();
		return false;
	});
}
function deleteInputOption () {
	$("#rightPaneFormInputOptions .listItemHighlight").each(function(){
		$(this).next().remove();
		$(this).remove();
	});
	updateOptions(true);
	cancelDialogue();
}
function assignRightPanePaginate (url,data,wrapper) {
	var justFired = false;

	$(wrapper).unbind("scroll").scroll(function(){
		showHideMenusOnScroll($(this));
		justScrolled=true;
		if (scrollTimeout) {
			clearTimeout(scrollTimeout);
		}
		scrollTimeout = setTimeout(function() {
			justScrolled=false;
		},500);
		if (justFired) {
			return false;
		}
		setTimeout(function() {
			justFired=false;
		}, 500);
		justFired=true;
		var elem = $(wrapper);
		var inner = $(wrapper+' > div');

		var cutoff = inner.height()-250;
		if ( elem.scrollTop() + elem.height() >= cutoff) {
			working();
			var el = $(wrapper+" .showMoreItems");
			var start = parseInt(el.attr("href"));
			var $insertBefore = el.prev();
			var extra="";
			if (data.match("shopAction=showProducts")) {
				extra = "&filterCat="+filterProductsByCategory;
			}
			$.ajax({
			  type: "POST",
			  url: url,
			  data: data+start+extra,
			  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

				if (msg=="") {
				} else {
					if ($("body").hasClass("selectingAll")) {
						$insertBefore.before("<div id='highlightAfter'></div>");
					}

					$insertBefore.before(msg);
					if ($("body").hasClass("selectingAll")) {
						$("#highlightAfter").nextAll(".responsiveListItem").addClass("listItemHighlight");
						$("#highlightAfter").remove();
					}

					el.attr("href",start+50);

				}
				saved(true);

			  }
			});
  		}
	});
}
function assignRightPanePaginateEvent(url,data,wrapper) {
	var elem = $(wrapper);
	var inner = $(wrapper+' > div');
	working();
	var el = $(wrapper+" .showMoreItems");
	var start = parseInt(el.attr("href"));
	var $insertBefore = el.prev();
	var extra="";
	if (data.match("shopAction=showProducts")) {
		extra = "&filterCat="+filterProductsByCategory;
	}
	$.ajax({
	  type: "POST",
	  url: url,
	  data: data+start+extra,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		setTimeout(function() {
			scrollWaiting=false;
		}, 500);
		if (msg=="") {
		} else {
			if ($("body").hasClass("selectingAll")) {
				$insertBefore.before("<div id='highlightAfter'></div>");
			}

			$insertBefore.before(msg);
			if ($("body").hasClass("selectingAll")) {
				$("#highlightAfter").nextAll(".responsiveListItem").addClass("listItemHighlight");
				$("#highlightAfter").remove();
			}

			el.attr("href",start+50);
			setTimeout(function () {
				if (typeof myScroll[elem.attr("id")] !='undefined') {
					myScroll[elem.attr("id")].refresh();
				}

			}, 10);

		}
		saved(true);

	  }
	});

}
function deleteProducts () {
	var Ids="[";
	$("#rightPaneProducts .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("product-id")+'"';
		} else {
		Ids+=',"'+$(this).attr("product-id")+'"';
		}
	});
	Ids+="]";
	working();
	$.ajax({
	  type: "POST",
	  url: "shopActions.php",
	  data: "shopAction=removeProduct&ids="+Ids,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		$("#rightPaneProducts .listItemHighlight").each(function(){
			$(this).next().remove();
			$(this).remove();
			$("#productsPaneInner").lovelyScroll(pagesScrollBottomProducts);
			cancelDialogue();
			selectionTools();
			if ($("#rightPaneProducts .productItem").length===0) {
				$("#rightPaneProducts .noPages").show();
			}
		});
		saved();
	  }
	});
}
function deleteBookingProducts () {
	var Ids="[";
	$("#rightPaneBookingProducts .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("booking-product-id")+'"';
		} else {
		Ids+=',"'+$(this).attr("booking-product-id")+'"';
		}
	});
	Ids+="]";
	working();
	$.ajax({
	  type: "POST",
	  url: "shopActions.php",
	  data: "shopAction=removeBookingProduct&ids="+Ids,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		$("#rightPaneBookingProducts .listItemHighlight").each(function(){
			$(this).next().remove();
			$(this).remove();
			$("#bookingProductsPaneInner").lovelyScroll(pagesScrollBottomBookingProducts);
			cancelDialogue();
			selectionTools();
			if ($("#rightPaneBookingProducts .bookingProductItemMain").length===0) {
				$("#rightPaneBookingProducts .noPages").show();
			}
		});
		saved();
	  }
	});
}
function duplicateProducts () {
	if ($("body").hasClass("selectingAll")) {
		var Ids="[";
		$("#rightPaneProducts .productItemMain:not(.responsiveListItem.listItemHighlight)").each(function(){
			if (Ids=="[") {
			Ids+='"'+$(this).attr("product-id")+'"';
			} else {
			Ids+=',"'+$(this).attr("product-id")+'"';
			}
		});
		Ids+="]";
		var selectingAll = "&selectingAll=true";
	} else {
		var selectingAll = "";
		var Ids="[";
		$("#rightPaneProducts .listItemHighlight").each(function(){
			if (Ids=="[") {
			Ids+='"'+$(this).attr("product-id")+'"';
			} else {
			Ids+=',"'+$(this).attr("product-id")+'"';
			}
		});
		Ids+="]";
	}
	working();
	$.ajax({
	  type: "POST",
	  url: "shopActions.php",
	  data: "shopAction=duplicateProduct&ids="+Ids+"&filterCat="+filterProductsByCategory+selectingAll,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		$("#productsPaneInner .insertTarget").load("shopActions.php?shopAction=showProducts&ajax=yes&filterCat="+filterProductsByCategory+"&initPane=yes&searchBy=",function(){
		var toHighlight = jQuery.parseJSON( msg );
		for (var i=0; i < toHighlight.length; i++) {
			$("#productsPaneInner div[product-id="+toHighlight[i]+"]").addClass("listItemHighlight");
		};
		setTimeout(function() {
			$("#productsPaneInner").lovelyScroll(pagesScrollBottomProducts);
		}, 300);

		assignDragAssets($("#productsPaneInner .insertTarget"));

		selectionTools();
		saved();
		});
	  }
	});
}
function duplicateBookingProducts () {
	if ($("body").hasClass("selectingAll")) {
		var Ids="[";
		$("#rightPaneBookingProducts .bookingProductItemMain:not(.responsiveListItem.listItemHighlight)").each(function(){
			if (Ids=="[") {
			Ids+='"'+$(this).attr("booking-product-id")+'"';
			} else {
			Ids+=',"'+$(this).attr("booking-product-id")+'"';
			}
		});
		Ids+="]";
		var selectingAll = "&selectingAll=true";
	} else {
		var selectingAll = "";
		var Ids="[";
		$("#rightPaneBookingProducts .listItemHighlight").each(function(){
			if (Ids=="[") {
			Ids+='"'+$(this).attr("booking-product-id")+'"';
			} else {
			Ids+=',"'+$(this).attr("booking-product-id")+'"';
			}
		});
		Ids+="]";
	}
	working();
	$.ajax({
	  type: "POST",
	  url: "shopActions.php",
	  data: "shopAction=duplicateBookingProduct&ids="+Ids+"&filterCat="+filterProductsByCategory+selectingAll,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		$("#bookingProductsPaneInner .insertTarget").load("shopActions.php?shopAction=showBookingProducts&ajax=yes&initPane=yes&searchBy=",function(){
		var toHighlight = jQuery.parseJSON( msg );
		for (var i=0; i < toHighlight.length; i++) {
			$("#bookingProductsPaneInner div[booking-product-id="+toHighlight[i]+"]").addClass("listItemHighlight");
		};
		setTimeout(function() {
			$("#bookingProductsPaneInner").lovelyScroll(pagesScrollBottomProducts);
		}, 300);

		assignDragAssets($("#bookingProductsPaneInner .insertTarget"));

		selectionTools();
		saved();
		});
	  }
	});
}
function productSortBy (sortBy) {
	$.ajax({
	  type: "POST",
	  url: "shopActions.php",
	  data: "shopAction=sortBy&sortBy="+sortBy,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		$("#productsPaneInner .insertTarget").load("shopActions.php?shopAction=showProducts&ajax=yes&initPane=yes&filterCat="+filterProductsByCategory+"&searchBy=",function(){
			saved();
			assignProductsKeys();
			resetAddForms();
			$("#productsPaneInner").lovelyScroll(pagesScrollBottomProducts);
			assignDragAssets($("#productsPaneInner .insertTarget"));
		});

	  }
	});
}
function productSortReverse (reverse) {
	$.ajax({
	  type: "POST",
	  url: "shopActions.php",
	  data: "shopAction=sortByReverse&reverse="+reverse,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		$("#productsPaneInner .insertTarget").load("shopActions.php?shopAction=showProducts&ajax=yes&initPane=yes&filterCat="+filterProductsByCategory+"&searchBy=",function(){
			saved();
			assignProductsKeys();
			resetAddForms();
			$("#productsPaneInner").lovelyScroll(pagesScrollBottomProducts);
			assignDragAssets($("#productsPaneInner .insertTarget"));
		});

	  }
	});
}
function addProduct () {
	$(document).unbind("click");
	$(document).unbind("keyup");
	$(document).unbind("keydown");
	$(document).unbind("keypress");
	$("#rightPaneProducts .noPages").hide();
	$("#rightPaneProducts #addProductForm").show();
	prepFancyLabelForms($("#rightPaneProducts #addProductForm"));
	$("#rightPaneProducts #addProductForm .focus").focus();
	function saveOrCancel () {
		$("#rightPaneProducts #addProductForm .focus").unbind("blur");
		if ($("#rightPaneProducts #addProductForm .focus").val()=="" || $("#rightPaneProducts #addProductForm .focus").val()==" ") {
			resetAddForms();
			if ($("#rightPaneProducts .productItem").length===0) {
				$("#rightPaneProducts .noPages").show();
			}


		} else {
			working();
			$.ajax({
			  type: "POST",
			  url: "shopActions.php",
			  data: "shopAction=addProduct&product_name="+encodeURIComponent($("#rightPaneProducts #addProductForm .focus").val())+"&filterCat="+filterProductsByCategory,
			  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				$("#productsPaneInner .insertTarget").load("shopActions.php?shopAction=showProducts&ajax=yes&initPane=yes&filterCat="+filterProductsByCategory+"&searchBy=",function(){
				saved();
				assignProductsKeys();
				resetAddForms();
				$("#productsPaneInner").lovelyScroll(pagesScrollBottomProducts);
				$("#productsPaneInner .responsiveListItem:first").addClass("listItemHighlight");
				setTimeout(function() {
					selectionTools();
				}, 10);

				assignDragAssets($("#productsPaneInner .insertTarget"));

				});

			  }
			});
		}
	}
	$("#rightPaneProducts #addProductForm .focus").unbind("blur").blur(function(){
		saveOrCancel();
		return false;
	});
	$(document).keyup(function(e){
		if (e.keyCode==13) { // enter
			saveOrCancel();
			return false;
		}
	});
	$(document).keydown(function(e){
		if (e.keyCode==13) { // enter

			return false;
		}
		if (e.keyCode==27) { // esc
			saveOrCancel();
			return false;
		}
	});
}
function addBookingProduct() {
	$(document).unbind("click");
	$(document).unbind("keyup");
	$(document).unbind("keydown");
	$(document).unbind("keypress");
	$("#rightPaneBookingProducts .noPages").hide();
	$("#rightPaneBookingProducts #addBookingProductForm").show();
	prepFancyLabelForms($("#rightPaneBookingProducts #addBookingProductForm"));
	$("#rightPaneBookingProducts #addBookingProductForm .focus").focus();
	function saveOrCancel () {
		$("#rightPaneBookingProducts #addBookingProductForm .focus").unbind("blur");
		if ($("#rightPaneBookingProducts #addBookingProductForm .focus").val()=="" || $("#rightPaneBookingProducts #addBookingProductForm .focus").val()==" ") {
			resetAddForms();


		} else {
			working();
			$.ajax({
			  type: "POST",
			  url: "shopActions.php",
			  data: "shopAction=addBookingProduct&product_name="+encodeURIComponent($("#rightPaneBookingProducts #addBookingProductForm .focus").val()),
			  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				$("#bookingProductsPaneInner .insertTarget").load("shopActions.php?shopAction=showBookingProducts&ajax=yes&initPane=yes",function(){
				saved();
				assignBookingProductsKeys();
				resetAddForms();
				$("#bookingProductsPaneInner").lovelyScroll(pagesScrollBottomProducts);
				$("#bookingProductsPaneInner .responsiveListItem:first").addClass("listItemHighlight");
				setTimeout(function() {
					selectionTools();
				}, 10);

				assignDragAssets($("#bookingProductsPaneInner .insertTarget"));

				});

			  }
			});
		}
	}
	$("#rightPaneBookingProducts #addBookingProductForm .focus").unbind("blur").blur(function(){
		saveOrCancel();
		return false;
	});
	$(document).keyup(function(e){
		if (e.keyCode==13) { // enter
			saveOrCancel();
			return false;
		}
	});
	$(document).keydown(function(e){
		if (e.keyCode==13) { // enter

			return false;
		}
		if (e.keyCode==27) { // esc
			saveOrCancel();
			return false;
		}
	});
}
function editProduct ($this,secondaryAction) {
	if(secondaryAction===true) {
		editMeListItem($this);
		return false;
	}
	if ($this.attr("data-product-type")=="simple_multi"||$this.attr("data-product-type")=="gallery_multi"||$this.attr("data-product-type")=="form_multi") {
		showProductOptions($this,false);
	} else {
		editMeListItem($this);
	}
}

function showBookingProdRates() {
	$("#bookingAvailability .bookingAvailabilityPriceLabel").remove();
	var id = $("#bookingAvailability").data("editing-product-id");
	var rates = $("#bookingprod"+id).data("rates");
	var c =0;
	var letters = new Array();
	letters[0] = "A";
	letters[1] = "B";
	letters[2] = "C";
	letters[3] = "D";
	letters[4] = "E";
	letters[5] = "F";
	var select = new Array();
	select.push("<option value=\"0\" data-name=\"\" data-price-normal=\"\" data-price-special=\"\" data-price-children=\"\" data-min-price=\"\">"+LangVars.Add_Rate+"</option>");
	$.each(rates,function(key,val){
		$("#bookingAvailabilityToolbarInner").prepend("<div class=\"bookingAvailabilityPriceLabel price"+letters[c]+"\" data-value=\"price-"+letters[c].toLowerCase()+"\" data-ratesid=\""+val['booking_products_ratesId']+"\" id=\"rate"+val['booking_products_ratesId']+"\">"+val['name']+"</div>");
		c++;
		select.push("<option value=\""+val['booking_products_ratesId']+"\" data-name=\""+val['name']+"\" data-price-normal=\""+val['price_normal']+"\" data-price-special=\""+val['price_special']+"\" data-price-children=\""+val['price_children']+"\" data-min-price=\""+val['minimum_price_per_place']+"\">"+val['name']+"</option>");
	});

	$("#chooseRates #chooseRatesSelect").html("<select>"+select.join("")+"</select>");

}
function editBookingProduct ($this,secondaryAction) {
	$("#manageBookingAvailabilityRates,#editRate,#addRate,#chooseRates").hide();
	if(secondaryAction===true) {
		editMeListItem($this);
		return false;
	} else {
		var rates= $this.data("rates");
		assignBookingCaledarKeys();
		$("#bookingAvailabilityInner").load("shopActions.php?shopAction=showBookingAvailability&booking_productsId="+$this.data("id"),function(){
			$("#bookingAvailability").data("editing-product-id",$this.data("id"));
			$("#bookingAvailability").data("editing-product-type",$this.data("item-type"));
			$("#bookingAvailability").data("editing-product-children-separate",$this.data("children-separate"));
			$("#bookingAvailability").data("editing-product-special-separate",$this.data("special-separate"));
			$("#bookingAvailability").data("editing-product-min-charge-per-space",$this.data("min-charge-per-space"));
			if (rates.length===0) {
				$("#manageBookingAvailabilityRates,#addRate").show();
				$("#availabilityRateNormalConcessions,#availabilityRateNormalChildren,#availabilityRateNormalMinPerSpace").parent().hide();
				$("#bookingProdTypeSeatOrSpace,#bookingProdTypeObject").hide();
				if ($this.data("item-type")=="1"||$this.data("item-type")=="2") {
					$("#bookingProdTypeSeatOrSpace").show();
					if ($this.data("children-separate")=="1") {
						$("#availabilityRateNormalChildren").parent().show();
					}
					if ($this.data("special-separate")=="1") {
						$("#availabilityRateNormalConcessions").parent().show();
					}
				} else {
					$("#bookingProdTypeObject").show();
				}
				if ($this.data("item-type")=="2") {
					if ($this.data("min-charge-per-space")=="1") {
						$("#availabilityRateNormalMinPerSpace").parent().show();
					}
				}

				$("#addEditRate .replace-with-space-name").each(function(){
					if ($this.data("item-type")=="2") {
						$(this).html($(this).data("original-string").replace("{*}",LangVars['Booking_Prod_Name_'+$("#pane-tools-booking-products div[data-test-data=place-name] li a.bpe_current").data("lang")].toLowerCase()));
					}
				});
			} else {
				showBookingProdRates();
				$(".availabilityMonth td").each(function(){
					if ($(this).data("rate")!=0) {
						$(this).addClass($("#rate"+$(this).data("rate")).data("value"));
					}
				});
			}
			$("#bookingAvailabilityOuter").show();
			setTimeout(function () {
			$("#bookingAvailability").addClass("visible");

			}, 5);
		});

	}
}
function showBookingDay () {
	var bookings = $("#bookings .current").data("bookings");
	var bookingsListA = new Array();

	if ($("#bookingsInner .current").length && $("#bookingsInner .current").attr("data-bookings")!="[]") {
		var product_name = "";
		var showtitle = false;
		for (var i = bookings.length - 1; i >= 0; i--) {
			var days = new Array();
			for (var x = bookings[i]['days'].length - 1; x >= 0; x--) {
				if (bookings[i]['days'][x]==$("#bookings .current").data("date")) {
					var c = 'class="currentDayInDays"';
				} else {
					var c = "";
				}
				days.push("<span "+c+">"+bookings[i]['days'][x]+"</span>");
			}
			var daysS = "";
			if (days.length) {
				daysS = '<div class="daysInBooking">'+days.join('')+'</div>';
			}
			var html = "";
			showtitle = false;
			if (bookings[i]['product_name']!=product_name) {
				product_name=bookings[i]['product_name'];
				showtitle = true;
			}
			if ($("#bookingsRight").hasClass="showingall"&&showtitle) {
				html += '<li class="clearfix bookingname">'+bookings[i]['product_name']+'</li>';				
			}
			var dayshtml = JSON.stringify(bookings[i]['days']);
			dayshtml = htmlentities(dayshtml);
			html += '<li data-buyer-id="'+bookings[i]['buyer_id']+'" class="clearfix" data-first-name="'+bookings[i]['first_name']+'" data-last-name="'+bookings[i]['last_name']+'" data-street="'+bookings[i]['last_name']+'" data-city="'+bookings[i]['city']+'" data-state="'+bookings[i]['state']+'" data-country="'+bookings[i]['country']+'" data-zip="'+bookings[i]['zip']+'" data-email="'+bookings[i]['payer_email']+'" data-phone="'+bookings[i]['phone']+'" data-paid="'+bookings[i]['paid']+'" data-qty="'+bookings[i]['normal']+'" data-qty-children="'+bookings[i]['children']+'" data-qty-special="'+bookings[i]['special']+'" data-days="'+dayshtml+'" data-order-id="'+bookings[i]['order_id']+'">';
			html += '<strong>'+bookings[i]['first_name']+' '+bookings[i]['last_name']+'</strong> <a href="mailto:'+bookings[i]['payer_email']+'">'+bookings[i]['payer_email']+'</a> '+bookings[i]['phone']+'<br/>';
			html += LangVars['Adults']+": "+bookings[i]['normal']+', '+LangVars['Children']+": "+bookings[i]['children']+', '+LangVars['Concessions']+": "+bookings[i]['special'];
			html += daysS;
//			html += '<div class="details" style="clear:both;display:none;">';
//			html += LangVars['Shipping_Address']+"<br/>";
//			html += bookings[i]['payer_email']+"<br/>";
//			html += bookings[i]['phone']+"<br/>";
//			html += '</div>';
			html += '</li>';
			bookingsListA.push(html);
		}

	}

	if (!$("#bookingsInner .current").length)  {
		$("#bookingsRightInner").html('<p class="noBookings">'+LangVars['No_Day_Selected']+'</p>');

	} else {
		$("#bookingsRightInner").html('<h2>'+$("#bookingsInner .current").data("local-date")+'</h2>');
		if (bookingsListA.length) {
			$("#bookingsRightInner").append('<ol>'+bookingsListA.join("")+'</ol>');
		} else {
			$("#bookingsRightInner").append('<p class="noBookings">'+LangVars['No_Bookings']+'</p>');
		}

	}



}
function deleteProductCategories ($item) {
	var Ids="[";
	$("#rightPaneProductCategories .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("product-category-id")+'"';
		} else {
		Ids+=',"'+$(this).attr("product-category-id")+'"';
		}
	});
	Ids+="]";
	working();
	$.ajax({
	  type: "POST",
	  url: "shopActions.php",
	  data: "shopAction=deleteProductCategories&ids="+Ids,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		$("#productCategoriesList").load("shopActions.php?shopAction=showProductCategories",function(){
			if ($("#productCategoriesList li").length==0) {
				$("#filterByProdCat").hide();
				$("#productCategoriesList").next().hide();
				$("#productCategoriesList").hide();
			}
			if ($("#rightPaneProductCategories .prodCatItem:not(.breadcrumbPage)").length===0) {
				$("#rightPaneProductCategories .noPages").show();
			}
			displayProdCats($("#rightPaneProductCategories").attr("showing-parent-id"),false);
			selectionTools();
			assignProductCategoriesKeys();
			cancelDialogue();
			saved();
			$("#productCategoriesPaneInner").lovelyScroll();
		});
	  }
	});

	cancelDialogue();
}
function displayProdCats (parentId,drillDown) {
	$("#rightPaneProductCategories").attr("showing-parent-id",parentId);
	$("#productCategoriesPaneInner .insertTarget").html("");
	var indent=0;
	if (parentId=="0") {
		$("#rightPaneProductCategories").removeAttr("prod-cats-breadcrumb");
		//$("#rightPaneProductCategories .topBarTitle .overflowEllipsis span").html($("#rightPaneProductCategories .topBarTitle").attr("original-text"));
	} else {
		//$("#rightPaneProductCategories .topBarTitle .overflowEllipsis span").html($("#productCategoriesList a[product-cat-id="+parentId+"] .overflowEllipsis").text());
		if (drillDown) {
			if ($("#rightPaneProductCategories").attr("prod-cats-breadcrumb")) {
				$("#rightPaneProductCategories").attr("prod-cats-breadcrumb",$("#rightPaneProductCategories").attr("prod-cats-breadcrumb")+","+parentId);
			} else {
				$("#rightPaneProductCategories").attr("prod-cats-breadcrumb",parentId);
			}
		}

		var parentIds = $("#rightPaneProductCategories").attr("prod-cats-breadcrumb").split(",");

		for (var i = 0; i < parentIds.length; i++) {
			$("#productCategoriesPaneInner .insertTarget").append("<div class='dropzone'><div></div></div>");
			indent=indent+50;
			$("#productCategoriesPaneInner .insertTarget").append("<div style='margin-left:"+indent+"px' class='responsiveListItem breadcrumbPage prodCatItem' product-category-id='"+parentIds[i]+"'><div class=\"showSubPages upLevel \" actual-id='"+parentIds[i]+"' id=\""+$("#productCategoriesList a[product-cat-id="+parentIds[i]+"]").attr("product-parent-id")+"\" title='"+LangVars.Back+"'>"+svgUp+"</div><span class='overflowEllipsis'>"+htmlentities($("#productCategoriesList a[product-cat-id="+parentIds[i]+"]").attr("data-lang"))+"</span></div><div class=\"responsiveListAddForm inline\" style='display:none;' action=\"\" method=\"post\" rel=\""+parentIds[i]+"\"><input type=\"text\" name=\"\" value=\""+htmlentities($("#productCategoriesList a[product-cat-id="+parentIds[i]+"]").attr("data-lang"))+"\" class=\"focus\"	/></div>");
			indent=indent+10;
		};

	}

	//$("#productCategoriesPaneInner .insertTarget").append($("#productsPaneInner #productCatsMenuList .iconbarAddProductCategory").first().clone().css("margin-left",indent+"px"));
	if (indent==0) {
		var mt = "10";
	} else {
		var mt = "22"
	}
	$("#productCategoriesPaneInner .insertTarget").append($("#productsPaneInner #productCatsMenuList .addProductCategory").first().clone().css("margin-left",indent+"px").css("margin-top",mt+"px"));
	$("#productCategoriesPaneInner .insertTarget").append("<div class='dropzone'><div></div></div>");
	hidePaneTools();

	var c = 0;
	$("#productCategoriesList a[product-parent-id="+parentId+"]").each(function(){
		var totalChildren = $("#productCategoriesList a[product-parent-id="+$(this).attr("product-cat-id")+"]").length;
		if (totalChildren!=0) {
			var cStr = '<div class="showSubPages" id="" title="'+LangVars.View_Add_Subpages+'">'+svgDown+'<span class="responsiveListItemInfo">'+totalChildren+'</span></div>';
		} else {
			var cStr = '<div class="showSubPages" id="" title="'+LangVars.View_Add_Subpages+'">'+svgDown+'</div>';
		}
		$("#productCategoriesPaneInner .insertTarget").append("<div style='margin-left:"+indent+"px' class='responsiveListItem prodCatItem' product-category-id='"+$(this).attr("product-cat-id")+"'>"+cStr+"<span class='overflowEllipsis'>"+htmlentities($(".overflowEllipsis",$(this)).html())+"</span></div><div class=\"responsiveListAddForm inline\" style='display:none;' action=\"\" method=\"post\" rel=\""+$(this).attr("product-cat-id")+"\"><input type=\"text\" name=\"\" value=\""+htmlentities($(".overflowEllipsis",$(this)).html())+"\" class=\"focus\"	/></div><div class='dropzone'><div></div></div>");
		c++;
	});
	if (c==0) {
		$("#productCategoriesPaneInner .insertTarget").append("<div class='noPages'>"+LangVars.No_Product_Categories+"</div>");

	}

	updateProdFilterMenu();


}
function updateProdFilterMenu () {
	if ($("#productCategoriesList a").length) {
		$("#rightPaneProducts .filterBar").show();
		$("#productsPaneInner").addClass("withFilterBar");
		$("#productFilterCategories").html("");
		$("#productCategoriesList a").each(function(){
			$("#productFilterCategories").append('<li><a href="#" class="filterBy filterLink" data-lang="'+htmlentities($(".overflowEllipsis",$(this)).html())+'" category-id="'+$(this).attr("product-cat-id")+'"><span>'+htmlentities($(".overflowEllipsis",$(this)).html())+'</span></a></li>');
		});
	} else {
		$("#rightPaneProducts .filterBar").hide();
		$("#productsPaneInner").removeClass("withFilterBar");
	}
}
function showProductOptions ($item,scrollToBottom) {

	hidePanes();
	$("input").unbind();
	$("#loadingMask").show();
	$(".assetPane").hide();
	hidePaneTools();
	$("#productOptionsPaneInner .insertTarget").html($(".productOptions",$item).html());
	if (scrollToBottom) {
		setTimeout(function() {
			$("#productOptionsPaneInner").scrollTop($("#productOptionsPaneInner .insertTarget").height());
		}, 10);
	}
	$("#rightPaneProductOptions .topBarTitle").html("<div><span>"+$item.attr("rel")+"</span></div>").attr("product-id",$item.attr("product-id")).attr("options-separate-stock",$item.attr("options-separate-stock"));
	//$("#rightPaneProductOptions").show();
	$("#productOptionsPaneInner").css("width","auto");
	showPane($("#rightPaneProductOptions"),false,true);

	$("#loadingMask").hide();

	assignListLasso($("#productOptionsPaneInner"));
	assignListPane($("#productOptionsPaneInner"),editProductOption);
	assignSortableListItems($("#productOptionsPaneInner"),"listItemHighlight","productOption");
	assignProductOptionsKeys();
	setTimeout(function() {$("#productOptionsPaneInner").lovelyScroll();}, 400);

}
function deleteProductOption () {
	$("#rightPaneProductOptions .listItemHighlight").each(function(){
		$(this).next().remove();
		$(this).remove();
	});
	if ($("#rightPaneProductOptions .responsiveListItem").length===0) {
		$("#rightPaneProductOptions .noPages").show();
	}
	$("#productOptionsPaneInner").lovelyScroll();
	updateProductOptions();
	hidePaneTools();
	cancelDialogue();
}
function updateProductOptions () {
	working();
	var variantsString="";
	var counter = 0;
	var title;
	var price;
	var stock;
	$("#rightPaneProductOptions .productOption").each(function(){
		title = htmlentities($(".overflowEllipsis",$(this)).text());
		price = $(".productOptionPrice",$(this)).html().replace(/[^0-9.]/,"");
		stock = $(".productOptionStock",$(this)).html().replace(/[^0-9.]/,"");
		var discounts = "";
		if ($(this).attr("data-discount-1-threshold")!='0') {
			discounts=discounts+";"+$(this).attr("data-discount-1-price")+"|"+$(this).attr("data-discount-1-threshold");
		}
		if ($(this).attr("data-discount-2-threshold")!='0') {
			discounts=discounts+";"+$(this).attr("data-discount-2-price")+"|"+$(this).attr("data-discount-2-threshold");
		}

		if (counter==0) {
			variantsString = title+"**::**"+price+discounts+"**::**"+stock;
		} else {
			variantsString = variantsString+"||**||"+title+"**::**"+price+discounts+"**::**"+stock;
		}
		counter++;
	});
	var id = $("#editProductName").attr("product-id");
	$.ajax({
	  type: "POST",
	  url: "shopActions.php",
	  data: "shopAction=changeOptions&variants="+encodeURIComponent(variantsString)+"&id="+id,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

		if (msg=="ok") {
			saved();
		} else {
			error(LangVars.Misc_Error);
		}
	  }
	});
	$("#productsPaneInner .insertTarget #prod"+$("#editProductName").attr("product-id")+" .productOptions").html($("#productOptionsPaneInner .insertTarget").html());

}
function changeProductOptionStock (stock) {

	$("#rightPaneProductOptions .listItemHighlight").each(function(){
		$(".productOptionStock",$(this)).html(stock);
		$(this).attr("product-option-stock",stock);
	});
	selectionTools();
	updateProductOptions();
	cancelDialogue();
}
function changeProductOptionPrice (price) {
	var curSym = $("#curSym").val();
	price = parseFloat(price.replace(/[^\d.]/g, "")).toFixed(2);
	$("#rightPaneProductOptions .listItemHighlight").each(function(){
		$(".productOptionPrice",$(this)).html(curSym+price);
		$(this).attr("data-option-price",curSym+price);
	});
	selectionTools();
	updateProductOptions();
	cancelDialogue();
}

function changeProductPrice (price) {
	if ($("body").hasClass("selectingAll")) {
		var Ids="[";
		$("#rightPaneProducts .productItemMain:not(.responsiveListItem.listItemHighlight)").each(function(){
			if (Ids=="[") {
			Ids+='"'+$(this).attr("product-id")+'"';
			} else {
			Ids+=',"'+$(this).attr("product-id")+'"';
			}
		});
		Ids+="]";
		var selectingAll = "&selectingAll=true";
	} else {
		var selectingAll = "";
		var Ids="[";
		$("#rightPaneProducts .listItemHighlight").each(function(){
			if (Ids=="[") {
			Ids+='"'+$(this).attr("product-id")+'"';
			} else {
			Ids+=',"'+$(this).attr("product-id")+'"';
			}
		});
		Ids+="]";
	}
	working();
	price = parseFloat(price.replace(/[^\d.]/g, "")).toFixed(2);
	$.ajax({
	  type: "POST",
	  url: "shopActions.php",
	  data: "shopAction=renameProductPrice&ids="+Ids+"&price="+price+selectingAll+"&filterCat="+filterProductsByCategory,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		$("#rightPaneProducts .listItemHighlight.productItemMain").each(function(){
			if ($(this).attr("data-product-type")=="donation" || $(this).attr("data-product-type")=="simple" || $(this).attr("data-product-type")=="gallery" || $(this).attr("data-product-type")=="form") {
				$(".productPrice",$(this)).html($("#curSym").val()+price);
				$(this).attr("product-price",price);
			}
		});
		selectionTools();
		cancelDialogue();

		saved();
	  }
	});
}
function changeProductSerialNumber (serialnumbers) {
	if ($("body").hasClass("selectingAll")) {
		var Ids="[";
		$("#rightPaneProducts .productItemMain:not(.responsiveListItem.listItemHighlight)").each(function(){
			if (Ids=="[") {
			Ids+='"'+$(this).attr("product-id")+'"';
			} else {
			Ids+=',"'+$(this).attr("product-id")+'"';
			}
		});
		Ids+="]";
		var selectingAll = "&selectingAll=true";
	} else {
		var selectingAll = "";
		var Ids="[";
		$("#rightPaneProducts .listItemHighlight").each(function(){
			if (Ids=="[") {
			Ids+='"'+$(this).attr("product-id")+'"';
			} else {
			Ids+=',"'+$(this).attr("product-id")+'"';
			}
		});
		Ids+="]";
	}
	working();

	$.ajax({
	  type: "POST",
	  url: "shopActions.php",
	  data: "shopAction=changeSerialNumbers&ids="+Ids+"&serialnumbers="+serialnumbers+selectingAll+"&filterCat="+filterProductsByCategory,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

		selectionTools();
		cancelDialogue();

		saved();
	  }
	});
}
function changeProductStock (stock) {
	if ($("body").hasClass("selectingAll")) {
		var Ids="[";
		$("#rightPaneProducts .productItemMain:not(.responsiveListItem.listItemHighlight)").each(function(){
			if (Ids=="[") {
			Ids+='"'+$(this).attr("product-id")+'"';
			} else {
			Ids+=',"'+$(this).attr("product-id")+'"';
			}
		});
		Ids+="]";
		var selectingAll = "&selectingAll=true";
	} else {
		var selectingAll = "";
		var Ids="[";
		$("#rightPaneProducts .listItemHighlight").each(function(){
			if (Ids=="[") {
			Ids+='"'+$(this).attr("product-id")+'"';
			} else {
			Ids+=',"'+$(this).attr("product-id")+'"';
			}
		});
		Ids+="]";
	}
	working();
	stock = stock.replace(/[^\d.]/g, "")
	$.ajax({
	  type: "POST",
	  url: "shopActions.php",
	  data: "shopAction=changeStock&ids="+Ids+"&stock="+stock+selectingAll+"&filterCat="+filterProductsByCategory,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		$("#rightPaneProducts .listItemHighlight.productItemMain").each(function(){
			$(this).attr("product-stock",stock);
			$(".productStock",$(this)).html(stock);
			selectionTools();
		});
		cancelDialogue();
		saved();
	  }
	});
}

function changeProductWeight (weight) {
	if ($("body").hasClass("selectingAll")) {
		var Ids="[";
		$("#rightPaneProducts .productItemMain:not(.responsiveListItem.listItemHighlight)").each(function(){
			if (Ids=="[") {
			Ids+='"'+$(this).attr("product-id")+'"';
			} else {
			Ids+=',"'+$(this).attr("product-id")+'"';
			}
		});
		Ids+="]";
		var selectingAll = "&selectingAll=true";
	} else {
		var selectingAll = "";
		var Ids="[";
		$("#rightPaneProducts .listItemHighlight").each(function(){
			if (Ids=="[") {
			Ids+='"'+$(this).attr("product-id")+'"';
			} else {
			Ids+=',"'+$(this).attr("product-id")+'"';
			}
		});
		Ids+="]";
	}
		working();
		weight = weight.replace(/[^\d.]/g, "")
		$.ajax({
		  type: "POST",
		  url: "shopActions.php",
		  data: "shopAction=changeWeight&ids="+Ids+"&weight="+weight+selectingAll+"&filterCat="+filterProductsByCategory,
		  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			$("#rightPaneProducts .listItemHighlight.productItemMain").each(function(){
				$(this).attr("product-weight",weight);
			});
			selectionTools();
			cancelDialogue();
			saved();
		  }
		});
}
function addProductVolumeDiscountMain(type) {
	if ($("body").hasClass("selectingAll")) {
		var Ids="[";
		$("#rightPaneProducts .productItemMain:not(.responsiveListItem.listItemHighlight)").each(function(){
			if (Ids=="[") {
			Ids+='"'+$(this).attr("product-id")+'"';
			} else {
			Ids+=',"'+$(this).attr("product-id")+'"';
			}
		});
		Ids+="]";
		var selectingAll = "&selectingAll=true";
	} else {
		var selectingAll = "";
		var Ids="[";
		$("#rightPaneProducts .listItemHighlight").each(function(){
			if (Ids=="[") {
			Ids+='"'+$(this).attr("product-id")+'"';
			} else {
			Ids+=',"'+$(this).attr("product-id")+'"';
			}
		});
		Ids+="]";
	}
	var price = $("#popupVolumeDiscountPrice input").val()
	var threshold = $("#popupVolumeDiscountThreshold input").val();
	price = parseFloat(price.replace(/[^\d.]/g, "")).toFixed(2);
		working();
		$.ajax({
		  type: "POST",
		  url: "shopActions.php",
		  data: "shopAction=changeVolDiscount&discountNo="+type+"&ids="+Ids+"&price="+price+"&threshold="+threshold+selectingAll+"&filterCat="+filterProductsByCategory,
		  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			$("#rightPaneProducts .listItemHighlight.productItemMain").each(function(){
				$(this).attr("data-discount-"+type+"-price",price);
				$(this).attr("data-discount-"+type+"-threshold",threshold);
			});
			selectionTools();
			cancelDialogue();
			saved();
		  }
		});
}
function addProductVolumeDiscount() {
	addProductVolumeDiscountMain('1');
}
function addProductVolumeDiscount2() {
	addProductVolumeDiscountMain('2');
}
function addProductOptionsVolumeDiscountMain(type) {

	var price = $("#popupVolumeDiscountPrice input").val()
	var threshold = $("#popupVolumeDiscountThreshold input").val();
	price = parseFloat(price.replace(/[^\d.]/g, "")).toFixed(2);

	$("#rightPaneProductOptions .listItemHighlight").each(function(){
		$(this).attr("data-discount-"+type+"-price",price);
		$(this).attr("data-discount-"+type+"-threshold",threshold);
	});
	selectionTools();
	updateProductOptions();
	cancelDialogue();
}
function addProductOptionsVolumeDiscount() {
	addProductOptionsVolumeDiscountMain('1');
}
function addProductOptionsVolumeDiscount2() {
	addProductOptionsVolumeDiscountMain('2');
}
function changeSeparateOptionsStock () {
	if ($("#productChangeSeparateOptionsStock").hasClass("bpe_current")) {
		var separateOptionsStock="no";
	} else {
		var separateOptionsStock="yes";
	}
	if ($("body").hasClass("selectingAll")) {
		var Ids="[";
		$("#rightPaneProducts .productItemMain:not(.responsiveListItem.listItemHighlight)").each(function(){
			if (Ids=="[") {
			Ids+='"'+$(this).attr("product-id")+'"';
			} else {
			Ids+=',"'+$(this).attr("product-id")+'"';
			}
		});
		Ids+="]";
		var selectingAll = "&selectingAll=true";
	} else {
		var selectingAll = "";
		var Ids="[";
		$("#rightPaneProducts .listItemHighlight").each(function(){
			if (Ids=="[") {
			Ids+='"'+$(this).attr("product-id")+'"';
			} else {
			Ids+=',"'+$(this).attr("product-id")+'"';
			}
		});
		Ids+="]";
	}
	working();
	$.ajax({
	  type: "POST",
	  url: "shopActions.php",
	  data: "shopAction=separateOptionsStock&ids="+Ids+"&separateOptionsStock="+separateOptionsStock+selectingAll+"&filterCat="+filterProductsByCategory,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		$("#rightPaneProducts .listItemHighlight").each(function(){
			$(this).attr("options-separate-stock",separateOptionsStock);
			$(".productOption",$(this)).attr("data-option-has-stock",separateOptionsStock);
			if (separateOptionsStock=="yes") {
				$(".insertProduct,.productOption",$(this)).addClass("optionsSeparateStock");
			} else {
				$(".insertProduct,.productOption",$(this)).removeClass("optionsSeparateStock");
			}
		});
		selectionTools();
		hide_iconbar_menus();
		saved();
	  }
	});
}
function changeOnlyOne () {
	if ($("#productChangeOnlyOne").hasClass("bpe_current")) {
		var onlyOne="no";
	} else {
		var onlyOne="yes";
	}
	if ($("body").hasClass("selectingAll")) {
		var Ids="[";
		$("#rightPaneProducts .productItemMain:not(.responsiveListItem.listItemHighlight)").each(function(){
			if (Ids=="[") {
			Ids+='"'+$(this).attr("product-id")+'"';
			} else {
			Ids+=',"'+$(this).attr("product-id")+'"';
			}
		});
		Ids+="]";
		var selectingAll = "&selectingAll=true";
	} else {
		var selectingAll = "";
		var Ids="[";
		$("#rightPaneProducts .listItemHighlight").each(function(){
			if (Ids=="[") {
			Ids+='"'+$(this).attr("product-id")+'"';
			} else {
			Ids+=',"'+$(this).attr("product-id")+'"';
			}
		});
		Ids+="]";
	}
	working();
	$.ajax({
	  type: "POST",
	  url: "shopActions.php",
	  data: "shopAction=onlyOne&ids="+Ids+"&onlyOne="+onlyOne+selectingAll+"&filterCat="+filterProductsByCategory,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		$("#rightPaneProducts .listItemHighlight").each(function(){
			$(this).attr("only-one",onlyOne);
		});
		selectionTools();
		hide_iconbar_menus();
		saved();
	  }
	});
}
function editProductCategory ($clicked) {
	editMeListItem($clicked);
	return false;
}
function addProductCategory () {
	$(document).unbind("click");
	$(document).unbind("keyup");
	$(document).unbind("keydown");
	$(document).unbind("keypress");
	$("#rightPaneProductCategories .noPages").hide();
	$("#rightPaneProductCategories .addProductCategory").show();
	prepFancyLabelForms($("#rightPaneProductCategories .addProductCategory"));
	$("#rightPaneProductCategories .addProductCategory .focus").focus();
	function saveOrCancel () {
		$("#rightPaneProductCategories .addProductCategory .focus").unbind("blur");
		if ($("#rightPaneProductCategories .addProductCategory .focus").val()=="" || $("#rightPaneProductCategories .addProductCategory .focus").val()==" ") {
			resetAddForms();
			if ($("#rightPaneProductCategories .prodCatItem:not(.breadcrumbPage)").length===0) {
				$("#rightPaneProductCategories .noPages").show();
			}
		} else {
			working();
			var parentId = $("#rightPaneProductCategories").attr("showing-parent-id");


			$.ajax({
			  type: "POST",
			  url: "shopActions.php",
			  data: "shopAction=addProductCategory&parent_id="+parentId+"&name="+encodeURIComponent($("#rightPaneProductCategories .addProductCategory .focus").val()),
			  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				$("#filterByProdCat").show();
				$("#productCategoriesList").next().show();
				$("#productCategoriesList").show().load("shopActions.php?shopAction=showProductCategories",function(){
				saved();



				displayProdCats(parentId,false);
				$("#productCategoriesPaneInner .responsiveListItem:first").addClass("listItemHighlight");
				$("#productCategoriesPaneInner").lovelyScroll();
				assignProductCategoriesKeys();
				selectionTools();
				resetAddForms();
				});

			  }
			});
		}
	}
	$("#rightPaneProductCategories .addProductCategory .focus").unbind("blur").blur(function(){
		saveOrCancel();
		return false;
	});
	$(document).keyup(function(e){
		if (e.keyCode==13) { // enter
			saveOrCancel();
			return false;
		}
	});
	$(document).keydown(function(e){
		if (e.keyCode==13) { // enter

			return false;
		}
		if (e.keyCode==27) { // esc
			saveOrCancel();
			return false;
		}
	});

}
function setTicksInProdCatsMenu () {
	$("#productCategoriesList a").removeClass("bpe_current");
	var $el=$("#rightPaneProducts .listItemHighlight");
	if ($el.length==1) {
		$("#productCategoriesList a").each(function(){
			if ($('input#cat'+$(this).attr("product-cat-id"),$el).length) {
				$(this).addClass("bpe_current");
			}
		});
	}

}
function setTicksInTypeMenu () {
	/*
		$("#changeProductTypeSimple,#changeProductTypeGallery,#changeProductTypeForm,#changeProductTypeDonation,#productChangeOnlyOne,#changeProductTypeMulti,#productChangeSellIfInStock").removeClass("bpe_current");
		var type = $("#rightPaneProducts .listItemHighlight.productItemMain:first").attr("product-type");
		var onlyOne = $("#rightPaneProducts .listItemHighlight.productItemMain:first").attr("only-one");
		var sellOnlyIfStock = $("#rightPaneProducts .listItemHighlight.productItemMain:first").attr("product-sell-only-if-stock");
		var allTheSame=true;
		var allTheSameOnlyOne = true;
		var allTheSameSellOnlyIfStock = true;
		$("#rightPaneProducts .listItemHighlight.productItemMain").each(function(){
			if ($(this).attr("product-type")!=type) {
				allTheSame=false;
			}
			if ($(this).attr("product-sell-only-if-stock")!=sellOnlyIfStock) {
				allTheSameSellOnlyIfStock=false;
			}
			if ($(this).attr("only-one")!=onlyOne) {
				allTheSameOnlyOne=false;
			}
		});
		$("#productChooseForm").prev().hide();
		$("#productChooseGallery").prev().hide();
		$("#productChooseForm").hide();
		$("#productChooseGallery").hide();
		if (allTheSame) {
			if (type=="simple" || type=="simple_multi") {
				$("#changeProductTypeSimple").addClass("bpe_current");
			}

			if (type=="gallery" || type=="gallery_multi") {
				$("#changeProductTypeGallery").addClass("bpe_current");
				$("#productChooseGallery").show();
				$("#productChooseGallery").prev().show();
			}
			if (type=="form" || type=="form_multi") {
				$("#changeProductTypeForm").addClass("bpe_current");
				$("#productChooseForm").show();
				$("#productChooseForm").prev().show();
			}
			$("#changeProductTypeMulti").show();
			$("#changeProductTypeMulti").prev().show();
			if (type=="form") {
				//$("#changeProductTypeMulti").hide();
				//$("#changeProductTypeMulti").prev().hide();
			}
			if (type=="donation") {
				$("#changeProductTypeDonation").addClass("bpe_current");
				$("#changeProductTypeMulti").hide();
				$("#changeProductTypeMulti").prev().hide();
			}
			if (type=="gallery_multi" || type=="form_multi" || type=="simple_multi") {
				$("#changeProductTypeMulti").addClass("bpe_current");
			}
		}
		if (allTheSameOnlyOne) {
			if (onlyOne=="yes") {
				$("#productChangeOnlyOne").addClass("bpe_current");
			}
		}
		if (allTheSameSellOnlyIfStock) {
			if (sellOnlyIfStock=="1") {
				$("#productChangeSellIfInStock").addClass("bpe_current");
			}
		}
		if (!$("#chooseFormsList a").length) {
			$("#changeProductTypeForm").addClass("greyedOut");
		}
		if (!$("#chooseGalleriesList a").length) {
			$("#changeProductTypeGallery").addClass("greyedOut");
		}
		*/
}
function changeProductType (type,chosenId) {
	if ($("body").hasClass("selectingAll")) {
		var Ids="[";
		$("#rightPaneProducts .productItemMain:not(.responsiveListItem.listItemHighlight)").each(function(){
			if (Ids=="[") {
			Ids+='"'+$(this).attr("product-id")+'"';
			} else {
			Ids+=',"'+$(this).attr("product-id")+'"';
			}
		});
		Ids+="]";
		var selectingAll = "&selectingAll=true";
	} else {
		var selectingAll = "";
		var Ids="[";
		$("#rightPaneProducts .listItemHighlight").each(function(){
			if (Ids=="[") {
			Ids+='"'+$(this).attr("product-id")+'"';
			} else {
			Ids+=',"'+$(this).attr("product-id")+'"';
			}
		});
		Ids+="]";
	}

	working();

	$.ajax({
	  type: "POST",
	  url: "shopActions.php",
	  data: "shopAction=changeType&ids="+Ids+"&type="+type+"&chosenId="+chosenId+selectingAll+"&filterCat="+filterProductsByCategory,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		$("#rightPaneProducts .listItemHighlight").each(function(){
			$(".productItem",$(this)).removeClass("type_donation type_simple type_simple_multi type_gallery type_gallery_multi type_form type_form_multi");
			if (type=="multiyes") {
				if ($(this).attr("data-product-type")=="simple") {
					$(this).attr("data-product-type","simple_multi");
					$(".productItem",$(this)).addClass("type_simple_multi");
				}
				if ($(this).attr("data-product-type")=="gallery") {
					$(this).attr("data-product-type","gallery_multi");
					$(".productItem",$(this)).addClass("type_gallery_multi");
				}
				if ($(this).attr("data-product-type")=="form") {
					$(this).attr("data-product-type","form_multi");
					$(".productItem",$(this)).addClass("type_form_multi");
				}
			} else if (type=="multino") {
				if ($(this).attr("data-product-type")=="simple_multi") {
					$(this).attr("data-product-type","simple");
					$(".productItem",$(this)).addClass("type_simple");
				}
				if ($(this).attr("data-product-type")=="gallery_multi") {
					$(this).attr("data-product-type","gallery");
					$(".productItem",$(this)).addClass("type_gallery");
				}
				if ($(this).attr("data-product-type")=="form_multi") {
					$(this).attr("data-product-type","form");
					$(".productItem",$(this)).addClass("type_form");
				}
			} else {
				if ($(this).attr("data-product-type")=="simple_multi" || $(this).attr("data-product-type")=="gallery_multi" || $(this).attr("data-product-type")=="form_multi") {
					if (type=="gallery") {
						$(this).attr("data-product-type","gallery_multi");
						$(".productItem",$(this)).addClass("type_gallery_multi");
					}
					if (type=="form") {
						$(this).attr("data-product-type","form_multi");
						$(".productItem",$(this)).addClass("type_form_multi");
					}
					if (type=="simple") {
						$(this).attr("data-product-type","simple_multi");
						$(".productItem",$(this)).addClass("type_simple_multi");
					}
					if (type=="donation") {
						$(this).attr("data-product-type","donation");
						$(".productItem",$(this)).addClass("type_donation");
					}
				} else {
					$(this).attr("data-product-type",type);

				}
				if (type=="gallery"||type=="gallery_multi") {
					$(this).attr("data-gal-id",chosenId);
				}
				if (type=="form"||type=="form_multi") {
					$(this).attr("data-form-id",chosenId);
				}
			}
			selectionTools();
		});
		//hide_iconbar_menus();
		saved();
	  }
	});
}
function changeTypeMultiYes () {
	changeProductType("multiyes","");
}
function changeTypeMultiNo () {
	changeProductType("multino","");
}
function changeProductHasOptions (yesno) {
	var allElligible = true;
	$("#rightPaneProducts .listItemHighlight").each(function(){
		if ($(this).attr("data-product-type")=="donation"||$(this).attr("data-product-type")=="digital")  {
			allElligible = false;
		}
	});
	if (allElligible) {
		if (yesno=="yes") {
			changeTypeMultiYes();
		} else {
			changeTypeMultiNo();
		}
	} else {
		if (yesno=="yes") {
			prepDialogue("<h2>"+LangVars.Confirm_Multi+"</h2><p>"+LangVars.Confirm_Multi_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Yes,changeTypeMultiYes,false,true,false,"");
		} else {
			changeTypeMultiNo();
		}

	}
}
function editCalendar ($item) {
	showCalendarEvents($item,false);
}
function addCalendar () {
	$(document).unbind("click");
	$(document).unbind("keyup");
	$(document).unbind("keydown");
	$(document).unbind("keypress");
	$("#rightPaneCalendars .noPages").hide();
	$("#rightPaneCalendars #addCalendarForm").show();
	prepFancyLabelForms($("#rightPaneCalendars #addCalendarForm"));
	$("#rightPaneCalendars #addCalendarForm .focus").focus();
	function saveOrCancel () {
		$("#rightPaneCalendars #addCalendarForm .focus").unbind("blur");
		if ($("#rightPaneCalendars #addCalendarForm .focus").val()=="" || $("#rightPaneCalendars #addCalendarForm .focus").val()==" ") {
			resetAddForms();

			if ($("#rightPaneCalendars .calendarItem").length===0) {
				$("#rightPaneCalendars .noPages").show();
			}
		} else {
			working();
			$.ajax({
			  type: "POST",
			  url: "calendarActions.php",
			  data: "calendarAction=addCat&name="+encodeURIComponent($("#rightPaneCalendars #addCalendarForm .focus").val()),
			  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
					$("#rightPaneCalendars #addCalendarForm .focus").val("");
					$("#rightPaneCalendars #addCalendarForm .focus").unbind();
					$("#rightPaneCalendars #addCalendarForm").hide();
					$("#calendarsPaneInner .insertTarget").html(msg);
					$("#calendarsPaneInner .insertTarget .calendarItem:first").addClass("listItemHighlight");
					assignDragAssets($("#calendarsPaneInner .insertTarget"));
					resetAddForms();
					$("#calendarsPaneInner").lovelyScroll();
					selectionTools();
					saved();
			  }
			});
		}
	}
	$("#rightPaneCalendars #addCalendarForm .focus").unbind("blur").blur(function(){
		saveOrCancel();
		return false;
	});
	$(document).keyup(function(e){
		if (e.keyCode==13) { // enter
			saveOrCancel();
			return false;
		}
	});
	$(document).keydown(function(e){
		if (e.keyCode==13) { // enter

			return false;
		}
		if (e.keyCode==27) { // esc
			saveOrCancel();
			return false;
		}
	});
}
function deleteCalendars () {
	var Ids="[";
	$("#rightPaneCalendars .calendarItem.listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("rel")+'"';
		} else {
		Ids+=',"'+$(this).attr("rel")+'"';
		}
	});
	Ids+="]";
	working();
	$.ajax({
	  type: "POST",
	  url: "calendarActions.php",
	  data: "calendarAction=deleteCat&ids="+Ids,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		$("#rightPaneCalendars .listItemHighlight").each(function(){
			$(this).next().remove();
			$(this).remove();
		});
		if ($("#rightPaneCalendars .calendarItem").length===0) {
			$("#rightPaneCalendars .noPages").show();
		}
		$("#calendarsPaneInner").lovelyScroll();
		cancelDialogue();
		selectionTools();
		saved();
	  }
	});
}
function editCalendarEvents ($item) {
	editMeListItemMultiple($item);
}
function showCalendarEvents ($item,scrollToBottom) {
	hidePanes();
	$("input").unbind();
	$("#loadingMask").show();
	$(".assetPane").hide();
	working();
	$("#eventsCustomFields").load("calendarActions.php?calendarAction=showCustomFields&categoryid="+$item.attr("rel"),function(){

	});
	$("#calendarEventsDateFilter").load("/actions/ShowCal/?showCat="+$item.attr("rel"),function(){
		$("#eventsGroupsList").load("calendarActions.php?calendarAction=showGroups&belongsToCal="+$("#calendarEventsDateFilter #showing_cat").val(),function(){
			if ($("#eventsGroupsList li").length==0) {
//				$("#filterBySubscriberCat").hide();
				$("#eventsGroupsList").next().hide();
				$("#eventsGroupsList").hide();
			} else {
//				$("#filterBySubscriberCat").show();
				$("#eventsGroupsList").next().show();
				$("#eventsGroupsList").show();
			}
	//		updateSubscriberCatFilterMenu();
		});
		
		$("#calendarEventsDateFilterButton").html($("#calendarEventsDateFilter #current_day").val()+" "+$("#calendarEventsDateFilter #current_month_text").val()+" "+$("#calendarEventsDateFilter #current_year").val());
		$("#rightPaneCalendarEvents .topBarTitle").html("<div><span>"+$item.attr("title")+"</span></div>").attr("cal-id",$item.attr("rel"));
		$target = $("#rightPaneCalendarEvents .selectedDay");
		if ($(".eventList .eventItem",$target).length) {
			$("#calendarEventsPaneInner .insertTarget").html($(".eventList",$target).html());
		} else {
			$("#calendarEventsPaneInner .insertTarget").html($(".eventList",$target).html()+"<div class='noPages'>"+LangVars.There_Are_No_Events_For+" "+$target.attr("day")+" "+$("#calendarEventsDateFilter #current_month_text").val()+" "+$("#calendarEventsDateFilter #current_year").val()+"</div>");
		}
		hideCutEvents();

		//$("#rightPaneCalendarEvents").show();
		$("#calendarEventsPaneInner").css("width","auto");
		showPane($("#rightPaneCalendarEvents"),false,true);

		setTimeout(function() {$("#calendarEventsPaneInner").lovelyScroll();}, 400);
		$("#loadingMask").hide();

		saved();
	});
	if (scrollToBottom) {
		setTimeout(function() {
			$("#calendarEventsPaneInner").scrollTop($("#calendarEventsPaneInner .insertTarget").height());
		}, 10);
	}


	assignListLasso($("#rightPaneCalendarEvents"));
	assignListPane($("#rightPaneCalendarEvents .insertTarget"),editCalendarEvents);
	assignCalendarEventsKeys();
	selectionTools();
}
function hideCutEvents() {
	if (readCookie("eventsCut")) {
		var ids = JSON.parse(readCookie("eventsCut"));
		for (var i = 0; i < ids.length; i++) {
			$("#calendarEventsPaneInner .eventItem[event-id=\""+ids[i]+"\"]").hide().next().hide().next().hide();
		}

	}
};
function addEvent () {
	$(document).unbind("click");
	$(document).unbind("keyup");
	$(document).unbind("keydown");
	$(document).unbind("keypress");
	hide_header_menus();
		$("#calendarEventsPaneInner .noPages").hide();
	$("#calendarEventsPaneInner .eventForm").show();
	$("#calendarEventsPaneInner .eventForm .focus").focus();

	$("#calendarEventsPaneInner .eventForm .imageContextEditLabel").css("visibility","visible");
	$(".imageContextEditFieldset",$("#calendarEventsPaneInner .eventForm")).each(function(){
		if ($("input",$(this)).val()==""){
			$(".imageContextEditLabel",$(this)).css("visibility","visible");
		}
	});
	$(".imageContextEditFieldset input",$("#calendarEventsPaneInner .eventForm")).unbind("keyup").keyup(function(){
		if ($(this).val()!="") {
			$(".imageContextEditLabel",$(this).parents(".imageContextEditFieldset")).css("visibility","hidden");
		} else {
			$(".imageContextEditLabel",$(this).parents(".imageContextEditFieldset")).css("visibility","visible");
		}
	});

	$(".linkField input",$("#calendarEventsPaneInner .eventForm")).val("").focus(function(){
		if (!$("#insertLinkToDownload").length) {
			$(this).parents(".imageContextEditFieldset").after("<span id='insertInteralLinksInline' class='clearfix'><span id='insertLinkToPage'>"+LangVars.Insert_Link_To_Page+"</span><span id='insertLinkToDownload'>"+LangVars.Insert_Link_To_File+"</span></span>");
			$("#insertLinkToPage").click(function(){
				$(".linkField input",$("#calendarEventsPaneInner .eventForm")).blur();
				showLightPages(updateEventLinkValNew,"showTop",true,LangVars.Choose_page);
			});
			$("#insertLinkToDownload").click(function(){
				$(".linkField input",$("#calendarEventsPaneInner .eventForm")).blur();
				showDownloadPopdown(updateEventLinkValNew);
			});
		}
	});
	$(".focus",$("#calendarEventsPaneInner .eventForm")).focus(function(){
		$("#insertLinkToPage").parent().remove();
	});
	$("#calendarEventsPaneInner .eventForm").click(function(){
		return false;
	});
	$("#rightPaneCalendarEvents").unbind("click").click(function(){
		saveOrCancel();
		return false;
	});

	function saveOrCancel () {
		if ($(".bpe_mask_small").length) {
			return false;
		}
		if ($("#lightPagesList").length) {
			$("#lightPagesOuter").animate({opacity:"0"},550,function(){
				$("#lightPagesOuter").remove();
			});
			return false;
		}
		if ($("#downloadsPopdown").length) {
			var minus = $("#downloadsPopdown").height();
			$("#downloadsPopdown").animate({top:"-"+minus+"px"},550,function(){
				$("#downloadsPopdownOuter").remove();
			});
			return false;
		}
		if ($("#calendarEventsPaneInner .eventForm .focus").val()=="" || $("#calendarEventsPaneInner .eventForm .focus").val()==" ") {
			resetAddForms();
			$("#calendarEventsPaneInner .noPages").show();

		} else {
			working();

			var title = $(".focus",$("#calendarEventsPaneInner .eventForm")).val();
			var link = $(".eventLink",$("#calendarEventsPaneInner .eventForm")).val();
			var date = $(".dateInput",$("#calendarEventsPaneInner .eventForm")).val();
			var splitd = date.split("/");
			var showCatId = $("#calendarEventsDateFilter #showing_cat").val();

			var showCatString = "&showCat="+showCatId;
			var addToCatString = "&addToCat="+showCatId;


			if (title=="") {
				return false;
			} else {
				$.ajax({
				  type: "POST",
				  url: "calendarActions.php",
				  data: "calendarAction=addEvent&name="+encodeURIComponent(title)+"&link="+encodeURIComponent(link)+"&date="+date+addToCatString,
				  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
					month = splitd[1];
					year = splitd[2];
					day = splitd[0];
					$("#calendarEventsDateFilter").load("/actions/ShowCal/?month="+month+"&year="+year+"&day="+day+showCatString,function(){
						
						$("#calendarEventsPaneInner .eventForm .focus").val("");
						$("#calendarEventsPaneInner .eventForm .focus").unbind();
						$("#calendarEventsPaneInner .eventForm").hide();

						$target = $("#rightPaneCalendarEvents .selectedDay");
						$("#calendarEventsPaneInner .insertTarget").html($(".eventList",$target).html());
						setTimeout(function() {$("#calendarEventsPaneInner").lovelyScroll();}, 400);
						
						setTimeout(function() {
							$("#calendarEventsPaneInner .insertTarget .eventItem:first").addClass("listItemHighlight");
							$(".addEventFake").unbind().click(function(){
								addEvent();
								return false;
							});
							assignListLasso($("#rightPaneCalendarEvents"));
							assignListPane($("#rightPaneCalendarEvents .insertTarget"),editCalendarEvents);
							assignCalendarEventsKeys();
							selectionTools();
							
						}, 10);

						saved();
					});
				  }
				});
			}

		}
	}

	$(document).keyup(function(e){
		if (e.keyCode==13) { // enter
			saveOrCancel();
			return false;
		}
	});
	$(document).keydown(function(e){
		if (e.keyCode==13) { // enter

			return false;
		}
		if (e.keyCode==27) { // esc
			saveOrCancel();
			return false;
		}
	});

	$(document).click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		saveOrCancel();
		return false;
	});
}
function importEventsCSV(text) {
	working();
	var showCatId = $("#calendarEventsDateFilter #showing_cat").val();

	$.ajax({
	  type: "POST",
	  url: "calendarActions.php",
	  data: "calendarAction=importCSV&csv="+encodeURIComponent(text)+"&categoryid="+showCatId,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		var date = $(".dateInput",$("#calendarEventsPaneInner .eventForm")).val();
		var splitd = date.split("/");
		month = splitd[1];
		year = splitd[2];
		day = splitd[0];

		$("#calendarEventsDateFilter").load("/actions/ShowCal/?month="+month+"&year="+year+"&day="+day+"&showCat="+showCatId,function(){

			$("#calendarEventsPaneInner .eventForm .focus").val("");
			$("#calendarEventsPaneInner .eventForm .focus").unbind();
			$("#calendarEventsPaneInner .eventForm").hide();

			$target = $("#rightPaneCalendarEvents .selectedDay");
			$("#calendarEventsPaneInner .insertTarget").html($(".eventList",$target).html());
			
			setTimeout(function() {$("#calendarEventsPaneInner").lovelyScroll();}, 400);

			setTimeout(function() {
			//	$("#calendarEventsPaneInner .insertTarget .eventItem:first").addClass("listItemHighlight");
				$(".addEventFake").unbind().click(function(){
					addEvent();
					return false;
				});
							hideCutEvents();
				assignListLasso($("#rightPaneCalendarEvents"));
				assignListPane($("#rightPaneCalendarEvents .insertTarget"),editCalendarEvents);
				assignCalendarEventsKeys();
				selectionTools();
			}, 10);

			saved();
		});
		reloadCalendar();
		cancelDialogue();
		selectionTools();

	   }
	});
}
function addEventCustomField(text) {
	working();
	var showCatId = $("#calendarEventsDateFilter #showing_cat").val();
	
	$.ajax({
	  type: "POST",
	  url: "calendarActions.php",
	  data: "calendarAction=addCustomField&name="+encodeURIComponent(text)+"&categoryid="+showCatId,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			$("#eventsCustomFields").load("calendarActions.php?calendarAction=showCustomFields&categoryid="+showCatId,function(){
				reloadCalendar();
				cancelDialogue();
				selectionTools();
			});
	   }
	});
}
function deleteCalendarEvents () {
	var Ids="[";
	$("#calendarEventsPaneInner .eventItem.listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("event-id")+'"';
		} else {
		Ids+=',"'+$(this).attr("event-id")+'"';
		}
	});
	Ids+="]";
	working();
	$.ajax({
	  type: "POST",
	  url: "calendarActions.php",
	  data: "calendarAction=deleteEvent&ids="+Ids,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		$("#calendarEventsPaneInner .eventItem.listItemHighlight").each(function(){
			$(this).next().remove();
			$(this).next().remove();
			$(this).remove();

			var date = $(".dateInput",$("#calendarEventsPaneInner .eventForm")).val();
			var splitd = date.split("/");
			month = splitd[1];
			year = splitd[2];
			day = splitd[0];

			if ($("#calendarEventsPaneInner .eventItem").length=="0") {
				$("#calendarEventsPaneInner .insertTarget").append("<div class='noPages'>"+LangVars.There_Are_No_Events_For+" "+day+" "+month+" "+year+"</div>");

			}
			reloadCalendar();
			cancelDialogue();
			selectionTools();
		});
	  }
	});
}
function updateEventLinkValNew ($clicked) {
	var linkVal = $clicked.attr("alt");
	$("#calendarEventsPaneInner .eventForm .eventLink").val(linkVal);
	$(".imageContextEditLabel",$("#calendarEventsPaneInner .eventForm .eventLink").parents(".imageContextEditFieldset")).css("visibility","hidden");
	$("#insertLinkToPage").parent().remove();
	hidePopdownOrPassthroughSave(false);
}
function updateEventLinkVal ($clicked) {
	var linkVal = $clicked.attr("alt");
	$("#calendarEventsPaneInner .editEventForm:visible .eventLink").val(linkVal);
	$(".imageContextEditLabel",$("#calendarEventsPaneInner .editEventForm:visible .eventLink").parents(".imageContextEditFieldset")).css("visibility","hidden");
	$("#insertLinkToPage").parent().remove();
	hidePopdownOrPassthroughSave(false);
}
function addTableData() {
	var csv = $("#popupDialogueTableData textarea").val();
	working();
	$.ajax({
	  type: "POST",
	  url: "tablesActions.php",
	  data: "tablesAction=csv&id="+$("#tablesPane .listItemHighlight").attr("table-id")+"&data="+encodeURIComponent(csv),
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		$("#tablesPane .listItemHighlight").data("csv",csv);
		cancelDialogue();
		saved();
	  }
	});
}
function editTable ($clicked) {
	if ($("#tablesPaneInner .listItemHighlight").length==1) {
		prepDialogue("<h2>"+LangVars.Add_Table_Data+"</h2><p>"+LangVars.Add_Table_Data_Text+"</p>",LangVars.Cancel,cancelDialogue,LangVars.Import,addTableData,false,true,true,"tableData");
	}
	return false;
}
function deleteTables () {
	var Ids="[";
	$("#tablesPaneInner .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("alt")+'"';
		} else {
		Ids+=',"'+$(this).attr("alt")+'"';
		}
	});
	Ids+="]";
	working();
	$.ajax({
	  type: "POST",
	  url: "tablesActions.php",
	  data: "tablesAction=delete&ids="+Ids,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		$("#tablesPaneInner .listItemHighlight").each(function(){
			$(this).next().remove();
			$(this).remove();
		});
		if ($("#tablesPaneInner .tableItem").length===0) {
			$("#tablesPaneInner .noPages").show();
		}
		if ($("#tablesPaneInner .tableItem").length==0) {
			$("#tablesPaneInner .insertTarget").load("tablesActions.php?tablesAction=search&rightPane=&string=");
		}
		cancelDialogue();
		selectionTools();
		saved();
	  }
	});
}
function addTable () {
	$(document).unbind("click");
	$(document).unbind("keyup");
	$(document).unbind("keydown");
	$(document).unbind("keypress");
	prepFancyLabelForms($("#tablesPaneInner .addTableForm"));
	$("#tablesPaneInner .noPages").hide();

	$("#tablesPaneInner .addTableForm").show();
	$("#tablesPaneInner .addTableForm .focus").focus();
	function saveOrCancel () {
		$("#tablesPaneInner .addTableForm .focus").unbind("blur");
		if ($("#error:visible").length) {
			$("#error").fadeOut();
			return false;
		}
		if ($("#tablesPaneInner .addTableForm .focus").val()=="" || $("#tablesPaneInner .addTableForm .focus").val()==" ") {
			resetAddForms();
			if ($("#tablesPaneInner .tableItem").length===0) {
				$("#tablesPaneInner .noPages").show();
			}
		} else {


			var title = encodeURIComponent($(".focus",$("#tablesPaneInner .addTableForm")).val());

			if (title=="") {

				resetAddForms();
				return false;
			} else {
							working();
				$.ajax({
				  type: "POST",
				  url: "tablesActions.php",
				  data: "tablesAction=addTable&title="+title,
				  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				
					$("#tablesPaneInner .noPages").remove();
					$("#tablesPaneInner .insertTarget").html(msg);
					$("#tablesPaneInner .insertTarget .tableItem:first").addClass("listItemHighlight");
					selectionTools();
					saved();
					assignTablesKeys();
				
					$("#tablesPaneInner").lovelyScroll();
					assignDragAssets($("#tablesPaneInner .insertTarget"));

					resetAddForms();

				   }
				});
			}

		}
	}
	$("#tablesPaneInner .addTableForm .focus").unbind("blur").blur(function(){
		saveOrCancel();
		return false;
	});
	$(document).keyup(function(e){
		if (e.keyCode==13) { // enter
			saveOrCancel();
			return false;
		}
	});
	$(document).keydown(function(e){
		if (e.keyCode==13) { // enter

			return false;
		}
		if (e.keyCode==27) { // esc
			saveOrCancel();
			return false;
		}
	});
}
function addSnippet () {
	$(document).unbind("click");
	$(document).unbind("keyup");
	$(document).unbind("keydown");
	$(document).unbind("keypress");
	prepFancyLabelForms($("#snippetsPaneInner .addSnippetForm"));
	$("#snippetsPaneInner .noPages").hide();

	$("#snippetsPaneInner .addSnippetForm").show();
	$("#snippetsPaneInner .addSnippetForm .focus").focus();
	function saveOrCancel () {
		$("#snippetsPaneInner .addSnippetForm .focus").unbind("blur");
		if ($("#error:visible").length) {
			$("#error").fadeOut();
			return false;
		}
		if ($("#snippetsPaneInner .addSnippetForm .focus").val()=="" || $("#snippetsPaneInner .addSnippetForm .focus").val()==" ") {
			resetAddForms();
			if ($("#snippetsPaneInner .snippetItem").length===0) {
				$("#snippetsPaneInner .noPages").show();
			}
		} else {


			var title = encodeURIComponent($(".focus",$("#snippetsPaneInner .addSnippetForm")).val());

			if (title=="") {

				resetAddForms();
				return false;
			} else {
							working();
				$.ajax({
				  type: "POST",
				  url: "snippetsActions.php",
				  data: "snippetsAction=addSnippet&title="+title+"&filterCat="+filterSnippetsByCategory,
				  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
					if (msg=="Exists") {
						$(".addSnippetForm").hide();
						$(".addSnippetForm .focus").val("");
						selectionTools();
						assignSnippetsKeys();
						error(LangVars.Snippet_Exists);
					} else {

						$("#snippetsPaneInner .noPages").remove();
						$("#snippetsPaneInner .insertTarget").html(msg);
						$("#snippetsPaneInner .insertTarget .snippetItem:first").addClass("listItemHighlight");
						selectionTools();
						saved();
						assignSnippetsKeys();
					}
					$("#snippetsPaneInner").lovelyScroll(pagesScrollBottomSnippets);
					assignDragAssets($("#snippetsPaneInner .insertTarget"));

					resetAddForms();

				   }
				});
			}

		}
	}
	$("#snippetsPaneInner .addSnippetForm .focus").unbind("blur").blur(function(){
		saveOrCancel();
		return false;
	});
	$(document).keyup(function(e){
		if (e.keyCode==13) { // enter
			saveOrCancel();
			return false;
		}
	});
	$(document).keydown(function(e){
		if (e.keyCode==13) { // enter

			return false;
		}
		if (e.keyCode==27) { // esc
			saveOrCancel();
			return false;
		}
	});
}
function deleteSnippets () {
	var Ids="[";
	$("#snippetsPaneInner .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("alt")+'"';
		} else {
		Ids+=',"'+$(this).attr("alt")+'"';
		}
	});
	Ids+="]";
	working();
	$.ajax({
	  type: "POST",
	  url: "snippetsActions.php",
	  data: "snippetsAction=delete&ids="+Ids,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		$("#snippetsPaneInner .listItemHighlight").each(function(){
			$(this).next().remove();
			$(this).remove();
		});
		if ($("#snippetsPaneInner .snippetItem").length===0) {
			$("#snippetsPaneInner .noPages").show();
		}
		if ($("#snippetsPaneInner .snippetItem").length==0) {
			$("#snippetsPaneInner .insertTarget").load("snippetsActions.php?snippetsAction=search&rightPane=&string=&filterCat="+filterSnippetsByCategory);
		}
		cancelDialogue();
		selectionTools();
		saved();
	  }
	});
}
function duplicateSnippets () {
	var Ids="[";
	$("#snippetsPaneInner .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("alt")+'"';
		} else {
		Ids+=',"'+$(this).attr("alt")+'"';
		}
	});
	Ids+="]";
	working();
	$.ajax({
	  type: "POST",
	  url: "snippetsActions.php",
	  data: "snippetsAction=copy&ids="+Ids,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		$("#snippetsPaneInner .insertTarget").load("snippetsActions.php?snippetsAction=search&rightPane=&string=&filterCat="+filterSnippetsByCategory,function(){
			$("#snippetsPaneInner").scrollTop(0);
			var toHighlight = jQuery.parseJSON( msg );
			for (var i=0; i < toHighlight.length; i++) {
				$("#snippetsPaneInner div[alt="+toHighlight[i]+"]").addClass("listItemHighlight");
			};
			selectionTools();
			saved();
			assignSnippetsKeys();
			$("#snippetsPaneInner").lovelyScroll(pagesScrollBottomSnippets);
		});
	  }
	});
}
function editSnippet ($clicked) {
	window.location="/admin/editSnippet.php?id="+$clicked.attr("id");
}
function downloadFile () {
	$("#rightPaneFiles .listItemHighlight").each(function(){
		window.location=$(this).attr("alt");
	});
}
function deleteFiles () {
	var Ids="[";
	$("#filesPaneInner .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("id")+'"';
		} else {
		Ids+=',"'+$(this).attr("id")+'"';
		}
	});
	Ids+="]";
	working();
	$.ajax({
	  type: "POST",
	  url: "removeFileFromList.php",
	  data: "files="+Ids,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		$("#filesPaneInner .listItemHighlight").each(function(){
			$(this).next().remove();
			$(this).remove();
		});

		$("#downloads").load("pageActions.php?pageAction=showMoreFiles&start=0&search=",function(){
			if ($("#filesPaneInner .responsiveListItem").length==0) {
				$("#filesPaneInner .insertTarget").html($("#downloads .pagesScroll").html());
				assignDragAssets($("#filesPaneInner .insertTarget"));

			}
			saved();
		});

		cancelDialogue();
		selectionTools();
	  }
	});
}
function getMailingListSendCats() {
	if ($("#onlySendToCatsAll").prop("checked")) {
		var cats="";
	} else {
		var cats="";
		$("#sendToCategories input:checked").each(function(){
			if (cats!="") {
				cats = cats+",";
			}
			cats = cats+$(this).val();
		});
	}
	return cats;
}
function getMailingListSendMatchAll() {
	if ($("#onlySendMatchAll").prop("checked")) {
		var matchAll = "&matchall=true";
	} else {
		var matchAll = "&matchall=false";
	}
	return matchAll;
}
function getMailingListSendIds() {
	var Ids="[";
	$("#newsletterPaneInner .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("group-id")+'"';
		} else {
		Ids+=',"'+$(this).attr("group-id")+'"';
		}
	});
	Ids+="]";
	return Ids;
}
function sendToMailingLists () {
	if (!$("#changeMailingListPageContent").hasClass("okToSend") || $("#selectedMailingListPage").attr("page-id")=="" || $("#sendMailingListSubjectInput").val()==""){
		error(LangVars.Cant_Send_Mailing_List);
		return false;
	}
//	working();
	var page = $("#selectedMailingListPage").attr("page-id")+"|"+$("#selectedMailingListPage").attr("data-static-pages-versions-id");
	var Ids = getMailingListSendIds();
	if ($("#newsletterPaneInner .listItemHighlight").length==1) {
		var cats = getMailingListSendCats();
		var matchAll = getMailingListSendMatchAll();
	} else {
		var cats="";
		var matchAll="";
	}
	var url = window.location.href.split("#");
	var w = screen.width;
	var h = screen.height;
	var pw = 400;
	var ph = 390;
	var l = w/2 - pw/2;
	var t = h/2 - ph/2;
	window.open("newsletterActions.php?newsletterAction=sendfirst&v=2&groups="+Ids+"&cats="+cats+matchAll+"&page="+page+"&subject="+encodeURIComponent($("#sendMailingListSubjectInput").val()),"_blank","width="+pw+", height="+ph+", top="+t+", left="+l+" menubar=none, toolbar=no, status=no");
	/*
	$.ajax({
	  type: "POST",
	  url: "newsletterActions.php?newsletterAction=send&groups="+Ids+"&cats="+cats+matchAll+"&page="+page+"&subject="+encodeURIComponent($("#sendMailingListSubjectInput").val()),
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		alert("success");
//		window.open("newsletterActions.php?newsletterAction=send&groups="+Ids+"&cats="+cats+matchAll+"&page="+page+"&subject="+encodeURIComponent($("#sendMailingListSubjectInput").val()),"_blank","width=400, height=650, menubar=yes, toolbar=yes, status=yes");

	  }
	});	*/
	cancelDialogue();
//	message(LangVars.Mailing_List_Sent);
	return false;
}

function changeMailingListAutoresponder () {
	var value = $("#selectedMailingListAutoresponderPage").attr("page-id");
	var subject = $("#mailingListAutoresponderSubjectInput").val();
	var Ids="[";
	$("#newsletterPaneInner .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("group-id")+'"';
		} else {
		Ids+=',"'+$(this).attr("group-id")+'"';
		}
	});
	Ids+="]";
	working();
	$.ajax({
	  type: "POST",
	  url: "newsletterActions.php",
	  data: "newsletterAction=changeAutoresponder&ids="+Ids+"&pageid="+value+"&subject="+encodeURIComponent(subject),
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

			$("#newsletterPaneInner .insertTarget").html(msg);
			var idA = jQuery.parseJSON(Ids);
			for (var i = 0; i < idA.length; i++) {
				$("#newsletterPaneInner .insertTarget .responsiveListItem[group-id=\""+idA[i]+"\"]").addClass("listItemHighlight");
			}

			$("#newsletterPaneInner").lovelyScroll();
			assignDragAssets($("#newsletterPaneInner .insertTarget"));
			setTimeout(function() {

				selectionTools();

			}, 10);
			saved();
			assignNewsletterKeys();
			cancelDialogue();
	  }
	});
}
function changeMailingListAutoresponderContent(clicked) {
	$("#selectedMailingListAutoresponderPage").attr("page-id",clicked.attr("rel")).html(clicked.attr("title"));
	$("#selectedMailingListAutoresponderPage").attr("data-static-pages-versions-id",clicked.attr("data-static-pages-versions-id"));
	$("#changeMailingListAutoresponderContent").removeClass("empty");
	if ($("#lightPagesList").length) {
		$("#lightPagesOuter").animate({opacity:"0"},550,function(){
			$("#lightPagesOuter").remove();
		});
		return false;
	}
}
function addMailingList () {
	$(document).unbind("click");
	$(document).unbind("keyup");
	$(document).unbind("keydown");
	$(document).unbind("keypress");
	$("#newsletterPaneInner .noPages").hide();
	$("#newsletterPaneInner #addMailingList").show();
	$("#newsletterPaneInner #addMailingList .focus").focus();
	prepFancyLabelForms($("#newsletterPaneInner #addMailingList"));

	function saveOrCancel () {
		if ($("#error:visible").length) {

			$("#error").fadeOut();
			return false;
		}
		$("#newsletterPaneInner #addMailingList .focus").unbind("blur");


		if ($("#newsletterPaneInner #addMailingList .focus").val()=="" || $("#newsletterPaneInner #addMailingList .focus").val()==" ") {
			resetAddForms();
			if ($("#newsletterPaneInner .mailingListItem").length===0) {
				$("#newsletterPaneInner .noPages").show();
			}

		} else {

			var title = encodeURIComponent($(".focus",$("#newsletterPaneInner #addMailingList")).val());

			if (title=="") {
				resetAddForms();
				return false;
			} else {
				resetAddForms();
				working();
				$.ajax({
				  type: "POST",
				  url: "newsletterActions.php",
				  data: "newsletterAction=addGroup&name="+title,
				  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
					if (msg=="Exists") {
						error(LangVars.Mailing_List_Exists);
					} else {

						$("#newsletterPaneInner .insertTarget").html(msg);
						$("#newsletterPaneInner .insertTarget .responsiveListItem:first").addClass("listItemHighlight");
						$("#newsletterPaneInner").lovelyScroll();
						assignDragAssets($("#newsletterPaneInner .insertTarget"));
						setTimeout(function() {
							selectionTools();

						}, 10);
						saved();
						assignNewsletterKeys();
					}

				   }
				});
			}

		}
	}

	$("#newsletterPaneInner #addMailingList .focus").unbind("blur").blur(function(){
		saveOrCancel();
		return false;
	});
	$(document).keyup(function(e){
		if (e.keyCode==13) { // enter
			saveOrCancel();
			return false;
		}
	});
	$(document).keydown(function(e){
		if (e.keyCode==13) { // enter

			return false;
		}
		if (e.keyCode==27) { // esc
			saveOrCancel();
			return false;
		}
	});
	/*

	$(document).click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		saveOrCancel();
		return false;
	});*/
}
function changeMailingListFrom (name,email) {
	logTrainingClick("submitMailingListFrom");
	working();
	$.ajax({
	  type: "POST",
	  url: "newsletterActions.php",
	  data: "newsletterAction=saveSettings&from_name="+encodeURIComponent(name)+"&from_email="+encodeURIComponent(email),
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		saved();
		cancelDialogue();

		$("#newsletterFromSetting").attr("mailing-list-from-name",name);
		$("#newsletterFromSetting").attr("mailing-list-from-email",email);
		$("#newsletterFromSetting .value .overflowEllipsis").text(name+" ("+email+")");
		$("#newsletterFromSetting .value").attr("title",name+" ("+email+")");
	  }
	});
}
function changeMailingListSMTP (server,username,password) {

	working();
		$.ajax({
		  type: "POST",
		  url: "newsletterActions.php",
		  data: "newsletterAction=saveSettings&smtp_server="+encodeURIComponent(server)+"&username="+encodeURIComponent(username)+"&password="+encodeURIComponent(password),
		  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

				if (msg!="ok") {
					error(msg);
				} else {
					saved();
					cancelDialogue();
					hide_menus();

					$("#newsletterSMTPSetting").attr("mailing-list-server",server);
					$("#newsletterSMTPSetting").attr("mailing-list-username",username);
					$("#newsletterSMTPSetting").attr("mailing-list-password",password);
				}


		  }
		});


}
function deleteMailingLists () {
	var Ids="[";
	$("#newsletterPaneInner .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("group-id")+'"';
		} else {
		Ids+=',"'+$(this).attr("group-id")+'"';
		}
	});
	Ids+="]";
	working();
	$.ajax({
	  type: "POST",
	  url: "newsletterActions.php",
	  data: "newsletterAction=removeGroups&ids="+Ids,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		$("#newsletterPaneInner .listItemHighlight").each(function(){
			$(this).next().remove();
			$(this).next().remove();
			$(this).remove();
		});
		if ($("#newsletterPane .mailingListItem").length===0) {
			$("#newsletterPane .noPages").show();
		}
		saved();
		cancelDialogue();
		selectionTools();
	  }
	});
}
function deleteMailingListPrep () {
	var okToGo = true;
	$("#newsletterPaneInner .listItemHighlight").each(function(){
		if ($(this).attr("id")=="") {
			error(LangVars.Cant_Remove_Default_Newsletter);
			okToGo=false;
		}
	});
	if (okToGo) {
		if ($("#newsletterPaneInner .listItemHighlight").length) {
prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Newsletter_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteMailingLists,false,true);
		}

	}
}
function changeMailingListSubject (subject) {
	logTrainingClick("submitMailingListSubject");
	working();
	$.ajax({
	  type: "POST",
	  url: "newsletterActions.php",
	  data: "newsletterAction=changeSubject&subject="+subject,
	  success: function(msg){
		if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			$("#changeMailingListSubject").attr("title",msg);
			$("#changeMailingListSubject").html(msg);
			checkStatus();
			assignNewsletterKeys();
			cancelDialogue();
			saved();


	  }
	});
}
function changeMailingListPageContent (clicked) {
	logTrainingClick("choosePageForMailingListContent");
	$("#selectedMailingListPage").attr("page-id",clicked.attr("rel")).html(clicked.attr("title"));
	$("#selectedMailingListPage").attr("data-static-pages-versions-id",clicked.attr("data-static-pages-versions-id"));
	$("#changeMailingListPageContent").removeClass("empty");
	checkStatus();
	if ($("#lightPagesList").length) {
		$("#lightPagesOuter").animate({opacity:"0"},550,function(){
			$("#lightPagesOuter").remove();
		});
		return false;
	}
}
function showNewsletterSettings () {
	$(document).unbind("click");
	$(document).unbind("keyup");
	$(document).unbind("keydown");
	$(document).unbind("keypress");

	$('body').append("<div class='bpe_mask'></div><div class='bpe_add_popup'><div class='bpe_add_popup_inner'><img src='graphics/bpeditor/help.png' alt='Before you can send a newsletter you need to enter a From Name and Email address which your emails will use. To decrease the chance of your emails being flagegd as spam, you can send mail using your actual SMTP server by entering SMTP connection information.' class='bpe_help' /><h2>Edit Newsletter Email Settings</h2><div id='newsletter_email_settings' class='popup_loading'></div><div class='clear'></div><div class='bpe_savecancel'><a href='#' class='bpe_save'><span>Done</span></a><a href='#' class='bpe_cancel'><span>Cancel</span></a></div></div></div>");


	$("#newsletter_email_settings").load("newsletterActions.php?newsletterAction=showEmailSettings&to_prevent_cache="+(new Date).getTime(),function(){
		$(".popup_loading").removeClass("popup_loading");
		$("#newsletterSettingsForm").submit(function(){
			working();
			function showResponse (responseText, statusText) {
if (responseText =="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			if (responseText!="ok") {
					error(responseText);
				} else {
					saved("Settings Saved");
					checkStatus();
					$(".bpe_mask").remove();
					$(".bpe_add_popup").remove();
					assignNewsletterKeys();
				}
			}
			var options = {
				success:       showResponse  // post-submit callback
			};
			$('#newsletterSettingsForm').ajaxSubmit(options);
			return false;
		});
		$(".bpe_save").click(function(){

			$('#newsletterSettingsForm').submit();



			return false;
		});

	});

	$(document).unbind("keypress");

	$(document).keypress(function (e) {
      if (e.keyCode == 27) {
			$(".bpe_mask").remove();
			$(".bpe_add_popup").remove();
			assignNewsletterKeys();
      }
    });
	$(".bpe_cancel").click(function(){
		$(".bpe_mask").remove();
		$(".bpe_add_popup").remove();
								assignSaveListener();
		return false;
	});
	//assign_help();
	$(".bpe_mask").css("height",$(document).height()+"px");
	$(".bpe_mask").fadeTo(0,0.4);
	var top = $(window).height()-$("#bpe_add_popup").height()-380;
	top = top/2;
	top = top-30;
	$(".bpe_add_popup").css("top",$(document).scrollTop()+top+"px");
	$(".bpe_mask,.bpe_add_popup").click(function(){ $(".bpe_help_popup").hide(); return false;});



	return false;
}
function loadSubscribers() {
	$("#subscriberCategoriesList").load("newsletterActions.php?newsletterAction=showCategories",function(){
		if ($("#subscriberCategoriesList li").length==0) {
			$("#filterBySubscriberCat").hide();
			$("#subscriberCategoriesList").next().hide();
			$("#subscriberCategoriesList").hide();
		} else {
			$("#filterBySubscriberCat").show();
			$("#subscriberCategoriesList").next().show();
			$("#subscriberCategoriesList").show();
		}
		updateSubscriberCatFilterMenu();
	});
	$("#subscriberCustomFields").load("newsletterActions.php?newsletterAction=showCustomFields",function(){

	});
	$("#newsletterSubscribersPaneInner .insertTarget").load("newsletterActions.php?newsletterAction=showEmails&showPane=&clearSearch=",function(){
			$("#rightPaneNewsletterSubscribers").show();
			$(window).trigger("resize");

			saved();


			$("#newsletterSubscribersPaneInner").lovelyScroll(pagesScrollMailingListSubs);
			prepFancyLabelForms($("#rightPaneNewsletterSubscribers .filterBox"));
			assignListLasso($("#newsletterSubscribersPaneInner"));
			assignListPane($("#newsletterSubscribersPaneInner .insertTarget"),editSubscriber);
			//assignRightPanePaginate("newsletterActions.php","newsletterAction=showEmails&ajax=true&start=","#newsletterSubscribersPaneInner");

			assignNewsletterSubscribersKeys();
			assignPaneSearch($("#rightPaneNewsletterSubscribers .searchList"),"newsletterActions.php","newsletterAction=filterSearch&search=","newsletterSubscribers");
			$("#loadingMask").hide();
	});
}
function showSubscribers (clicked) {
	if ($("#rightPaneNewsletter").hasClass("noEditPrivs")) {
		error(LangVars.No_Subscriber_Privs);
		return false;
	}
	hidePaneTools();
	logTrainingClick("showSubscribers");
	hidePanes();
	$("input").unbind();
	$("body").removeClass("storageDraggable");
	$("#loadingMask").show();
	$("#rightPaneNewsletter").hide();
	$("#rightPaneNewsletterSubscribers .searchList").val("");
	$("#rightPaneNewsletterSubscribers .clearSearch").hide();
	$("#rightPaneNewsletterSubscribers .searchSVG").parent().removeClass("searching");
	$("#editNewsletterSubscribersTitle").attr("mailinglist-id",clicked.attr("group-id")).html("<div><span>"+clicked.attr("title")+"</span></div>");
	working();
	$.ajax({
	  type: "POST",
	  url: "newsletterActions.php",
	  data: "newsletterAction=filterGroup&group="+clicked.attr("group-id"),
	  success: function(msg){
		if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		loadSubscribers();

	  }
	});
	return false;
}
function editSubscriber (clicked) {
	editMeListItemMultiple(clicked);
}
function changeNewsletterCustomField(text) {
	var fieldId = $("#subscriberCustomFields .editingField").attr("data-field-id");
	if ($("body").hasClass("selectingAll")) {
		var Ids="[";
		$("#rightPaneNewsletterSubscribers .responsiveListItem:not(.responsiveListItem.listItemHighlight)").each(function(){
			if (Ids=="[") {
			Ids+='"'+$(this).attr("subscriber-id")+'"';
			} else {
			Ids+=',"'+$(this).attr("subscriber-id")+'"';
			}
		});
		Ids+="]";
		var selectingAll = "&selectingAll=true";
	} else {
		var selectingAll = "";
		var Ids="[";
		$("#rightPaneNewsletterSubscribers .listItemHighlight").each(function(){
			if (Ids=="[") {
			Ids+='"'+$(this).attr("subscriber-id")+'"';
			} else {
			Ids+=',"'+$(this).attr("subscriber-id")+'"';
			}
		});
		Ids+="]";
	}
	working();
	$.ajax({
	  type: "POST",
	  url: "newsletterActions.php",
	  data: "newsletterAction=changeCustomFieldValue&ids="+Ids+"&id="+fieldId+"&value="+text+selectingAll+"&filterCat="+filterSubscribersByCategory+filterSubscribersByCategoryMatchAll+filterSubscribersByStatus,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		$("#newsletterSubscribersPaneInner .listItemHighlight").each(function(){
			$(this).attr("data-custom-field-"+fieldId,text);
		});
		saved();
		selectionTools();
		cancelDialogue();
	  }
	});
}
function addNewsletterCustomField(text) {
	working();
	$.ajax({
	  type: "POST",
	  url: "newsletterActions.php",
	  data: "newsletterAction=addCustomField&name="+encodeURIComponent(text),
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			$("#subscriberCustomFields").load("newsletterActions.php?newsletterAction=showCustomFields",function(){
				$("#newsletterSubscribersPaneInner .insertTarget").load("newsletterActions.php?newsletterAction=showEmails&showPane="+"&filterCat="+filterSubscribersByCategory+filterSubscribersByCategoryMatchAll+filterSubscribersByStatus,function(){
					assignListPane($("#newsletterSubscribersPaneInner .insertTarget"),editSubscriber);
					$("#newsletterSubscribersPaneInner").lovelyScroll(pagesScrollMailingListSubs);
					saved();
					cancelDialogue();
					$("#newsletterSubscribersPane .paneTools").each(function(){
						if ($(this).hasClass("scrollWrapper")) {
							myScroll[$(this).attr("id")].refresh();
						} else {
							$(this).lovelyScroll();
						}
					});
				});
			});

	   }
	});
}
function importNewsletterCSV (text) {
	working();
	$.ajax({
	  type: "POST",
	  url: "newsletterActions.php",
	  data: "newsletterAction=importCSV&csv="+encodeURIComponent(text)+"&belongs_to_list="+$("#editNewsletterSubscribersTitle").attr("mailinglist-id")+"&filterCat="+filterSubscribersByCategory+filterSubscribersByCategoryMatchAll+filterSubscribersByStatus,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

		$("#newsletterSubscribersPaneInner .insertTarget").load("newsletterActions.php?newsletterAction=showEmails&showPane="+"&filterCat="+filterSubscribersByCategory+filterSubscribersByCategoryMatchAll+filterSubscribersByStatus,function(){
			$("#newsletterSubscribersPaneInner .responsiveListItem:first").addClass("listItemHighlight");
			assignListPane($("#newsletterSubscribersPaneInner .insertTarget"),editSubscriber);
			$("#newsletterSubscribersPaneInner").lovelyScroll(pagesScrollMailingListSubs);
			saved();
			cancelDialogue();
		});

	   }
	});
}
function newSubscriber () {

	$(document).unbind("click");
	$(document).unbind("keyup");
	$(document).unbind("keydown");
	$(document).unbind("keypress");
	logTrainingClick("newSubscriber");
	$("#newsletterSubscribersPaneInner").unbind("click");
	$("#newsletterSubscribersPaneInner .insertTarget").click(function(){
		saveOrCancel();
		return false;
	});
	$("#newsletterSubscribersPaneInner .noPages").hide();
	$("#newsletterSubscribersPaneInner #addSubscriber").show();
	$("#newsletterSubscribersPaneInner #addSubscriber .focus").focus();
	$("#newsletterSubscribersPaneInner #addSubscriber .imageContextEditLabel").css("visibility","visible");

	$(".imageContextEditFieldset",$("#newsletterSubscribersPaneInner #addSubscriber")).each(function(){
		if ($("input",$(this)).val()==""){
			$(".imageContextEditLabel",$(this)).css("visibility","visible");
		}
	});
	$(".imageContextEditFieldset input",$("#newsletterSubscribersPaneInner #addSubscriber")).unbind("keyup").keyup(function(){
		if ($(this).val()!="") {
			$(".imageContextEditLabel",$(this).parents(".imageContextEditFieldset")).css("visibility","hidden");
		} else {
			$(".imageContextEditLabel",$(this).parents(".imageContextEditFieldset")).css("visibility","visible");
		}
	});

	function saveOrCancel () {

		if ($("#error:visible").length) {
			$("#error").fadeOut();
			return false;
		}

		var name = encodeURIComponent($(".newSubscriberName",$("#newsletterSubscribersPaneInner #addSubscriber")).val());
		var email = encodeURIComponent($(".newSubscriberEmail",$("#newsletterSubscribersPaneInner #addSubscriber")).val());

		if (name=="" || email=="") {
			resetAddForms();
			if ($("#newsletterSubscribersPaneInner .responsiveListItem").length===0) {
				$("#newsletterSubscribersPaneInner .noPages").show();
			}
			return false;
		} else {
			logTrainingClick("submitNewSubscriber");
			working();
			$.ajax({
			  type: "POST",
			  url: "newsletterActions.php",
			  data: "newsletterAction=addEmail&name="+name+"&email="+email+"&belongs_to_list="+$("#editNewsletterSubscribersTitle").attr("mailinglist-id")+"&filterCat="+filterSubscribersByCategory+filterSubscribersByCategoryMatchAll+filterSubscribersByStatus,
			  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

				$("#newsletterSubscribersPaneInner .insertTarget").load("newsletterActions.php?newsletterAction=showEmails&showPane="+"&filterCat="+filterSubscribersByCategory+filterSubscribersByCategoryMatchAll+filterSubscribersByStatus,function(){
					$("#newsletterSubscribersPaneInner .responsiveListItem:first").addClass("listItemHighlight");
					assignListPane($("#newsletterSubscribersPaneInner .insertTarget"),editSubscriber);
					resetAddForms();
					selectionTools();
					saved();
					assignNewsletterSubscribersKeys();
					$("#newsletterSubscribersPaneInner").lovelyScroll(pagesScrollMailingListSubs);
				});

			   }
			});
		}


	}
	$("#newsletterSubscribersPaneInner #addSubscriber").click(function(){
		return false;
	});

	$(document).keyup(function(e){
		if (e.keyCode==13) { // enter
			saveOrCancel();
			return false;
		}
	});
	$(document).keydown(function(e){
		if (e.keyCode==13) { // enter

			return false;
		}
		if (e.keyCode==27) { // esc
			saveOrCancel();
			return false;
		}
	});
	$(document).click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
			saveOrCancel();
		return false;
	});
}
function deleteSubscribersPrep () {

	if ($("#newsletterSubscribersPaneInner .listItemHighlight").length) {
prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Newsletter_Sub_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteSubscribers,false,true);
	}


}

function deleteSubscribers () {
	var Ids="[";
	$("#newsletterSubscribersPaneInner .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("subscriber-id")+'"';
		} else {
		Ids+=',"'+$(this).attr("subscriber-id")+'"';
		}
	});
	Ids+="]";
	working();
	$.ajax({
	  type: "POST",
	  url: "newsletterActions.php",
	  data: "newsletterAction=removeEmails&ids="+Ids,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		$("#newsletterSubscribersPaneInner .listItemHighlight").each(function(){
			$(this).next().remove();
			$(this).next().remove();
			$(this).remove();
		});
		if ($("#newsletterSubscribersPaneInner .responsiveListItem").length===0) {
			$("#newsletterSubscribersPaneInner .noPages").show();
		}
		$("#newsletterSubscribersPaneInner").lovelyScroll(pagesScrollMailingListSubs);
		saved();
		hide_iconbar_menus();
		cancelDialogue();
		selectionTools();
	  }
	});
}
function toggleSubInactive (inactive) {
	var Ids="[";
	$("#newsletterSubscribersPaneInner .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("subscriber-id")+'"';
		} else {
		Ids+=',"'+$(this).attr("subscriber-id")+'"';
		}
	});
	Ids+="]";
	working();
	$.ajax({
	  type: "POST",
	  url: "newsletterActions.php",
	  data: "newsletterAction=toggleInactive&ids="+Ids+"&inactive="+inactive,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		$("#newsletterSubscribersPaneInner .listItemHighlight").each(function(){
			if (inactive=="yes") {
				$(this).addClass("offline").attr("data-subscriber-status","inactive");
				$(".subscriberInactive",$(this)).css("visibility","visible");
			} else {
				$(this).removeClass("offline").attr("data-subscriber-status","active");
				$(".subscriberInactive",$(this)).css("visibility","hidden");
			}

		});
		saved();
		selectionTools();
	  }
	});
}
// Subscriber Categories

function editSubscriberCategory ($clicked) {
	editMeListItem($clicked);
	return false;
}
function deleteSubscriberCategoriesPrep () {
	if ($("#subscriberCategoriesPaneInner .listItemHighlight").length) {
prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Subscriber_Category_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteSubscriberCategories,false,true);
	}
}
function deleteSubscriberCategories () {
	var Ids="[";
	$("#subscriberCategoriesPaneInner .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("subscriber-category-id")+'"';
		} else {
		Ids+=',"'+$(this).attr("subscriber-category-id")+'"';
		}
	});
	Ids+="]";
	working();
	$.ajax({
	  type: "POST",
	  url: "newsletterActions.php",
	  data: "newsletterAction=deleteCategories&ids="+Ids,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

		$("#subscriberCategoriesList").load("newsletterActions.php?newsletterAction=showCategories",function(){
			if ($("#subscriberCategoriesList li").length==0) {
				$("#filterBySubscriberCat").hide();
				$("#subscriberCategoriesList").next().hide();
				$("#subscriberCategoriesList").hide();
			}
			if ($("#rightPaneSubscriberCategories .subscriberCatItem").length===0) {
				$("#rightPaneSubscriberCategories .noPages").show();
			}
			displaySubscriberCats();
			selectionTools();
			assignSubscriberCategoriesKeys();
			cancelDialogue();
			saved();
			$("#subscriberCategoriesPaneInner").lovelyScroll();
		});

	  }
	});
}
function addSubscriberCategory () {
	$(document).unbind("click");
	$(document).unbind("keyup");
	$(document).unbind("keydown");
	$(document).unbind("keypress");
	$("#rightPaneSubscriberCategories .noPages").hide();
	$("#rightPaneSubscriberCategories .addSubscriberCategory").show();
	prepFancyLabelForms($("#rightPaneSubscriberCategories .addSubscriberCategory"));
	$("#rightPaneSubscriberCategories .addSubscriberCategory .focus").focus();
	function saveOrCancel () {
		$("#rightPaneSubscriberCategories .addSubscriberCategory .focus").unbind("blur");
		if ($("#rightPaneSubscriberCategories .addSubscriberCategory .focus").val()=="" || $("#rightPaneSubscriberCategories .addSubscriberCategory .focus").val()==" ") {
			resetAddForms();
			if ($("#rightPaneSubscriberCategories .subscriberCatItem").length===0) {
				$("#rightPaneSubscriberCategories .noPages").show();
			}
		} else {
			working();

			$.ajax({
			  type: "POST",
			  url: "newsletterActions.php",
			  data: "newsletterAction=addCategory&name="+encodeURIComponent($("#rightPaneSubscriberCategories .addSubscriberCategory .focus").val()),
			  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				$("#filterBySubscriberCat").show();
				$("#subscriberCategoriesList").next().show();
				$("#subscriberCategoriesList").show().load("newsletterActions.php?newsletterAction=showCategories",function(){
					saved();
					displaySubscriberCats();
					$("#subscriberCategoriesPaneInner .responsiveListItem:first").addClass("listItemHighlight");
					$("#subscriberCategoriesPaneInner").lovelyScroll();
					assignSubscriberCategoriesKeys();
					setTimeout(function() {
						selectionTools();
					}, 100);

					resetAddForms();
				});

			  }
			});
		}
	}
	$("#rightPaneSubscriberCategories .addSubscriberCategory .focus").unbind("blur").blur(function(){
		saveOrCancel();
		return false;
	});
	$(document).keyup(function(e){
		if (e.keyCode==13) { // enter
			saveOrCancel();
			return false;
		}
	});
	$(document).keydown(function(e){
		if (e.keyCode==13) { // enter

			return false;
		}
		if (e.keyCode==27) { // esc
			saveOrCancel();
			return false;
		}
	});
}

// Event groups

function editEventGroup ($clicked) {
	editMeListItem($clicked);
	return false;
}
function deleteEventGroupPrep () {
	if ($("#eventsGroupsPaneInner .listItemHighlight").length) {
prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Event_Group_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteEventGroup,false,true);
	}
}
function deleteEventGroup () {
	var Ids="[";
	$("#eventsGroupsPaneInner .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("event-group-id")+'"';
		} else {
		Ids+=',"'+$(this).attr("event-group-id")+'"';
		}
	});
	Ids+="]";
	working();
	$.ajax({
	  type: "POST",
	  url: "calendarActions.php",
	  data: "calendarAction=deleteGroups&ids="+Ids,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

		$("#eventsGroupsList").load("calendarActions.php?calendarAction=showGroups&belongsToCal="+$("#calendarEventsDateFilter #showing_cat").val(),function(){

			if ($("#eventsGroupsList li").length==0) {
//				$("#filterByEventGroup").hide();
				$("#eventsGroupsList").next().hide();
				$("#eventsGroupsList").hide();
			}
			if ($("#rightPaneEventsGroups .eventGroupItem").length===0) {
				$("#rightPaneEventsGroups .noPages").show();
			}
			displayEventGroups();
			selectionTools();
			assignEventGroupKeys();
			cancelDialogue();
			saved();
			$("#eventsGroupsPaneInner").lovelyScroll();
		});

	  }
	});
}
function addEventGroup () {
	$(document).unbind("click");
	$(document).unbind("keyup");
	$(document).unbind("keydown");
	$(document).unbind("keypress");
	$("#rightPaneEventsGroups .noPages").hide();
	$("#rightPaneEventsGroups .addEventGroup").show();
	prepFancyLabelForms($("#rightPaneEventsGroups .addEventGroup"));
	$("#rightPaneEventsGroups .addEventGroup .focus").focus();
	function saveOrCancel () {
		$("#rightPaneEventsGroups .addEventGroup .focus").unbind("blur");
		if ($("#rightPaneEventsGroups .addEventGroup .focus").val()=="" || $("#rightPaneEventsGroups .addEventGroup .focus").val()==" ") {
			resetAddForms();
			if ($("#rightPaneEventsGroups .subscriberCatItem").length===0) {
				$("#rightPaneEventsGroups .noPages").show();
			}
		} else {
			working();
			$.ajax({
			  type: "POST",
			  url: "calendarActions.php",
			  data: "calendarAction=addGroup&name="+encodeURIComponent($("#rightPaneEventsGroups .addEventGroup .focus").val())+"&belongsToCal="+$("#calendarEventsDateFilter #showing_cat").val(),
			  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
//				$("#filterBySubscriberCat").show();
				$("#eventsGroupsList").next().show();
				$("#eventsGroupsList").show().load("calendarActions.php?calendarAction=showGroups&belongsToCal="+$("#calendarEventsDateFilter #showing_cat").val(),function(){
					saved();
					displayEventGroups();
					$("#eventsGroupsPaneInner .responsiveListItem:first").addClass("listItemHighlight");
					$("#eventsGroupsPaneInner").lovelyScroll();
					assignEventGroupKeys();
					assignSortableListItems($("#eventsGroupsPaneInner"),"listItemHighlight","responsiveListItem");
					setTimeout(function() {
						selectionTools();
					}, 100);

					resetAddForms();
				});

			  }
			});
		}
	}
	$("#rightPaneEventsGroups .addEventGroup .focus").unbind("blur").blur(function(){
		saveOrCancel();
		return false;
	});
	$(document).keyup(function(e){
		if (e.keyCode==13) { // enter
			saveOrCancel();
			return false;
		}
	});
	$(document).keydown(function(e){
		if (e.keyCode==13) { // enter

			return false;
		}
		if (e.keyCode==27) { // esc
			saveOrCancel();
			return false;
		}
	});
}

function displayEventGroups () {

	$("#eventsGroupsPaneInner .insertTarget").html("");
	$("#eventsGroupsPaneInner .insertTarget").append("<div class='dropzone'><div></div></div>");
	
	hidePaneTools();

	var c = 0;
	$("#eventsGroupsList a").each(function(){
		$("#eventsGroupsPaneInner .insertTarget").append("<div class='responsiveListItem eventGroupItem' event-group-id='"+$(this).attr("event-group-id")+"'><span class='overflowEllipsis'>"+$(".overflowEllipsis",$(this)).html()+"</span></div><div class=\"responsiveListAddForm inline\" style='display:none;' action=\"\" method=\"post\" rel=\""+$(this).attr("event-group-id")+"\"><input type=\"text\" name=\"\" value=\""+$(".overflowEllipsis",$(this)).html().replace(/"/g,"&quot;")+"\" class=\"focus\"	/></div><div class='dropzone'><div></div></div>");
		c++;
	});
	if (c==0) {
		$("#eventsGroupsPaneInner .insertTarget").append("<div class='noPages'>"+LangVars.No_Event_Groups+"</div>");
	}

//	updateSubscriberCatFilterMenu();

}
function displaySubscriberCats () {


	$("#subscriberCategoriesPaneInner .insertTarget").html("");

	$("#subscriberCategoriesPaneInner .insertTarget").append($("#newsletterSubscribersPaneInner #subscriberCatsMenuList .addSubscriberCategory").first().clone());
	$("#subscriberCategoriesPaneInner .insertTarget").append("<div class='dropzone'><div></div></div>");
	hidePaneTools();

	var c = 0;
	$("#subscriberCategoriesList a").each(function(){
		$("#subscriberCategoriesPaneInner .insertTarget").append("<div class='responsiveListItem subscriberCategoryItem' subscriber-category-id='"+$(this).attr("subscriber-cat-id")+"' data-id='"+$(this).attr("subscriber-cat-id")+"' data-show-on-signup=\""+$(this).attr("data-show-in-signup")+"\"><span class='overflowEllipsis'>"+$(".overflowEllipsis",$(this)).html()+"</span></div><div class=\"responsiveListAddForm inline\" style='display:none;' action=\"\" method=\"post\" rel=\""+$(this).attr("subscriber-cat-id")+"\"><input type=\"text\" name=\"\" value=\""+$(".overflowEllipsis",$(this)).html().replace(/"/g,"&quot;")+"\" class=\"focus\"	/></div><div class='dropzone'><div></div></div>");
		c++;
	});
	if (c==0) {
		$("#subscriberCategoriesPaneInner .insertTarget").append("<div class='noPages'>"+LangVars.No_Subscriber_Categories+"</div>");
	}

	updateSubscriberCatFilterMenu();

}
function updateSubscriberCatFilterMenu () {
	if ($("#subscriberCategoriesList a").length) {
		$("#rightPaneNewsletterSubscribers .filterBar").show();
//		$("#newsletterSubscribersPaneInner").addClass("withFilterBar");
		$("#subscriberFilterCategories").html("");
		$("#subscriberCategoriesList a").each(function(){
			$("#subscriberFilterCategories:hidden").show();
			$("#subscriberFilterCategories").append('<li><a href="#" class="filterBy filterLink" data-lang="'+htmlentities($(".overflowEllipsis",$(this)).html())+'" category-id="'+$(this).attr("subscriber-cat-id")+'"><span>'+htmlentities($(".overflowEllipsis",$(this)).html())+'</span></a></li>');
		});
	} else {
		$("#rightPaneNewsletterSubscribers .filterBar").hide();
		$("#newsletterSubscribersPaneInner").removeClass("withFilterBar");
	}
}
// Blog
function editBlog ($clicked) {
	window.location="blogActions.php?blogAction=viewVersion&id="+$clicked.attr("id");
}
function deleteBlogPrep () {
	if ($("#blogPaneInner .listItemHighlight").length) {
prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Blog_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteBlog,false,true);
	}
}
function deleteBlog () {
	var Ids="[";
	$("#blogPaneInner .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("blog-id")+'"';
		} else {
		Ids+=',"'+$(this).attr("blog-id")+'"';
		}
	});
	Ids+="]";
	working();
	$.ajax({
	  type: "POST",
	  url: "blogActions.php",
	  data: "blogAction=deleteEntry&ids="+Ids,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		$("#blogPaneInner .listItemHighlight").each(function(){
			$(this).next().remove();
//			$(this).next().remove();
			$(this).remove();
		});
		saved();
		cancelDialogue();
		selectionTools();
	  }
	});
}
function addBlog () {
	$(document).unbind("click");
	$(document).unbind("keyup");
	$(document).unbind("keydown");
	$(document).unbind("keypress");
			$("#blogPaneInner .noPages").hide();

	$(".listItemHighlight").removeClass("listItemHighlight");
	selectionTools();
	$("#blogPaneInner #addBlogEntry").show();
	$("#blogPaneInner #addBlogEntry .focus").focus();
	prepFancyLabelForms($("#blogPaneInner #addBlogEntry"));

	function saveOrCancel () {
		$("#blogPaneInner #addBlogEntry .focus").unbind("blur");
		if ($("#error:visible").length) {
			$("#error").fadeOut();
			return false;
		}
		if ($("#blogPaneInner #addBlogEntry .focus").val()=="" || $("#blogPaneInner #addBlogEntry .focus").val()==" ") {
			resetAddForms();
			$("#blogPaneInner .noPages").show();

		} else {


			var title = encodeURIComponent($(".focus",$("#blogPaneInner #addBlogEntry")).val());

			if (title=="") {
				resetAddForms();
				return false;
			} else {
				working();
				$.ajax({
				  type: "POST",
				  url: "blogActions.php",
				  data: "blogAction=addEntry&title="+title,
				  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
					if (msg=="Exists") {
						error(LangVars.Mailing_List_Exists);
					} else if (msg=="limit") {
						error(LangVars.Blog_Limit_Reached);
					} else {
						logTrainingClick("addBlogEnter");
						switchToBlog(true,true);
						selectionTools();
						saved();
						assignBlogKeys();
					}
					resetAddForms();

				   }
				});
			}

		}
	}
	$("#blogPaneInner #addBlogEntry .focus").blur(function(){
		saveOrCancel();
		return false;
	});
	$(document).keyup(function(e){
		if (e.keyCode==13) { // enter

			return false;
		}
	});
	$(document).keydown(function(e){
		if (e.keyCode==13) { // enter
			saveOrCancel();
			return false;
		}
		if (e.keyCode==27) { // esc
			saveOrCancel();
			return false;
		}
	});
	/*
	$(document).click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		resetAddForms();
		return false;
	});*/
}
function assignBlogFilterBar () {
	assignHeaderMenus();
	prepFancyLabelForms($("#blogPane .blogSearchMenu .filterBox"));
	assignPaneSearch($("#blogPane .blogSearchMenu .filterBox .blogFilterSearch"),"blogActions.php","blogAction=filterSearch&string=","blog");

	$("#blogPane #blogFilter").unbind().click(function(e){
		if ($(e.target)[0].nodeName.toLowerCase()=="a") {
			$this = $(e.target);
		}
		var lang = $this.attr("data-item-value");
		$.ajax({
		  type: "POST",
		  url: "blogActions.php",
		  data: "blogAction=changeLangFilter&language="+lang,
		  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			hidePaneTools();
			hidePanes();
			hide_iconbar_menus();
			switchToBlog(true,false);
			saved();
		  }
		});
		return false;
	});
	$("#blogPane #blogFilterCat").unbind().click(function(e){
		working();
		if ($(e.target)[0].nodeName.toLowerCase()=="a") {
			$this = $(e.target);
		}
		var catid = $this.attr("blog-category-id");
		$.ajax({
		  type: "POST",
		  url: "blogActions.php",
		  data: "blogAction=changeCategoryFilter&catid="+catid,
		  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			hidePaneTools();
			hidePanes();
			hide_iconbar_menus();
			switchToBlog(true,false);

		  }
		});
		return false;
	});
}
function getSelectedBlogs() {
	var selectingAll="";
	if ($("body").hasClass("selectingAll")) {
		var Ids="[";
		$("#blogPaneInner .responsiveListItem:not(.responsiveListItem.listItemHighlight)").each(function(){
			if (Ids=="[") {
			Ids+='"'+$(this).attr("blog-id")+'"';
			} else {
			Ids+=',"'+$(this).attr("blog-id")+'"';
			}
		});
		Ids+="]";
		var selectingAll = "&selectingAll=true";
	} else {
		var Ids="[";
		$("#blogPaneInner .listItemHighlight").each(function(){
			if (Ids=="[") {
			Ids+='"'+$(this).attr("blog-id")+'"';
			} else {
			Ids+=',"'+$(this).attr("blog-id")+'"';
			}
		});
		Ids+="]";
	}

	return new Array(selectingAll,Ids);
}
function toggleBlogLive (toggle) {
	
	var selection = getSelectedBlogs();
	var selectingAll = selection[0];
	var Ids = selection[1];
	
	
	working();
	$.ajax({
	  type: "POST",
	  url: "blogActions.php",
	  data: "blogAction=change&action=live&live="+toggle+"&ids="+Ids+selectingAll,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			saved();
			cancelDialogue();

			$("#blogPaneInner .listItemHighlight").each(function(){
				if (toggle=="yes") {
					$(this).removeClass("offline").attr("data-blog-status","live");
					$(".blogOffline",$(this)).css("visibility","hidden");
				} else {
					$(this).addClass("offline").attr("data-blog-status","offline");
					$(".blogOffline",$(this)).css("visibility","visible");
				}
			});
			selectionTools();

	  }
	});
}
function changeCommentNotificationEmail (email) {
	working();
	$.ajax({
	  type: "POST",
	  url: "blogActions.php",
	  data: "blogAction=changeConfig&action=comment_email_notification&comment_email_notification="+encodeURIComponent(email),
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			saved();
			$("#changeCommentNotificationEmail").attr("value",email);
			$("#changeCommentNotificationEmail .value").attr("title",email);
			$("#changeCommentNotificationEmail .value span").text(email);
			cancelDialogue();

	  }
	});
}
function changeSecretPass (pass) {
	working();
	$.ajax({
	  type: "POST",
	  url: "blogActions.php",
	  data: "blogAction=changeConfig&action=secret_passcode&secret_passcode="+encodeURIComponent(pass),
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			saved();
			cancelDialogue();
			$("#changeSecretPass").attr("value",pass);
			$("#changeSecretPass .value").attr("title",pass);
			$("#changeSecretPass .value span").text(pass);

	  }
	});
}
function changeArticlesOnPage (onpage) {
	working();
	$.ajax({
	  type: "POST",
	  url: "blogActions.php",
	  data: "blogAction=changeConfig&action=items_on_page&items_on_page="+encodeURIComponent(onpage),
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			saved();
			cancelDialogue();
			$("#changeArticlePerPage .value").attr("title",onpage);
			$("#changeArticlePerPage .value span").html(onpage);

	  }
	});
}
function updateSitewideLangs (argument) {

	$("#otherLangsSitewide").html("");
	$("#languagesWrapperBlog a:not(:eq(0))").each(function(){
		$("#otherLangsSitewide").append("<div class='otherLangSitewide' language='"+$(this).text()+"' language-code='"+$(this).attr("fakehref")+"'></div>");
	});
	$("#otherLangsSitewide > div").html($("#primaryLangSitewide").html());
	$("#otherLangsSitewide > div").each(function(){
		$div = $(this);
		$(".settingsItem a",$(this)).each(function(){
			$(this).append(" ("+$div.attr("language")+")").attr("href",$(this).attr("href")+"&language="+$div.attr("language-code"));
		});

	});

}
function changeLanguageBlog (lang) {
	
		var selection = getSelectedBlogs();
		var selectingAll = selection[0];
		var Ids = selection[1];	
	
		$.ajax({
		  type: "POST",
		  url: "blogActions.php",
		  data: "blogAction=change&action=language&ids="+Ids+"&language="+lang+selectingAll,
		  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			$("#languagesWrapperBlog").load("languagesActions.php?languagesAction=show&to_prevent_cache="+(new Date).getTime(),function(){
				$("#blogPane #blogFilterToUpdate,#languagesWrapper").html($("#languagesWrapperBlog").html());

				$("#blogPaneInner .listItemHighlight").attr("blog-language",lang).attr("data-lang",lang);
				selectionTools();
				assignBlogFilterBar();
				if ($("#blogPane #blogFilterToUpdate li").length>1) {
					$(".langFilterMenu").show();
				}
				if ($("#blogPane #blogFilterToUpdate a.bpe_current").length || !$("#blogPane #blogFilter a.bpe_current").length) {
					switchToBlog(true,false);
				} else {
					saved();
				}
				updateSitewideLangs();
			});

			//$("#languagesWrapperBlog a").removeClass("bpe_current");
			//$("#languagesWrapperBlog a[fakehref="+lang+"]").addClass("bpe_current");
			//hidePanes();
			//hide_iconbar_menus();

			//switchToBlog(true,false);
			
		  }
		});

}
function addBlogAuthor () {
	logTrainingClick("newBlogAuthor");
	$(document).unbind("click");
	$(document).unbind("keyup");
	$(document).unbind("keydown");
	$(document).unbind("keypress");
				$("#blogAuthorsPaneInner .noPages").hide();
	$("#rightPaneBlogAuthors .addBlogAuthor input").unbind();
	$("#blogAuthorsPaneInner").unbind("click");
	$("#blogAuthorsPaneInner").click(function(){
		saveOrCancel();
		return false;
	});

	$("#rightPaneBlogAuthors .addBlogAuthor").show();
	$("#rightPaneBlogAuthors .addBlogAuthor .focus").focus();
	prepFancyLabelForms($("#rightPaneBlogAuthors .addBlogAuthor"));

	function saveOrCancel () {
		if ($("#error:visible").length) {
			$("#error").fadeOut();
			return false;
		}
		var name = encodeURIComponent($(".newBlogAuthorName",$("#blogAuthorsPaneInner .addBlogAuthor")).val());
		var bio = encodeURIComponent($(".newBlogAuthorBio",$("#blogAuthorsPaneInner .addBlogAuthor")).val());
		var nameraw = $(".newBlogAuthorName",$("#blogAuthorsPaneInner .addBlogAuthor")).val();
		var bioraw = $(".newBlogAuthorBio",$("#blogAuthorsPaneInner .addBlogAuthor")).val();


		if (name=="") {
			$("#blogAuthorsPaneInner .noPages").show();
			resetAddForms();
		} else {
			logTrainingClick("newBlogAuthorEnter");
			working();
			$.ajax({
			  type: "POST",
			  url: "blogActions.php",
			  data: "blogAction=addAuthor&name="+name+"&bio="+bio,
			  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				if (msg=="Exists") {
					error(LangVars.Blog_Author_Exists);
				} else {

					$("#blogAuthorsList .addBlogAuthor").after("<a blog-author-id=\""+msg+"\" blog-author-bio=\""+htmlentities(bioraw)+"\"><span class=\"overflowEllipsis\" id=\""+msg+"\">"+htmlentities(nameraw)+"</span></a>");

					if (!$("#blogAuthorsList .iconbarRule").length) {
						$("#blogAuthorsList").append("<div class='iconbarRule'></div>");
					}
					$("#blogAuthorsList").show();
					$("#blogAuthorsList").next().show();



					$("#rightPaneBlogAuthors .noPages").remove();
					$("#rightPaneBlogAuthors .insertTarget").prepend("<div class='dropzone'><div></div></div><div class='responsiveListItem' blog-author-id='"+msg+"' blog-author-bio=\""+htmlentities(bioraw)+"\"><span class='overflowEllipsis'>"+htmlentities(nameraw)+"</span></div><div class='responsiveListAddForm inline' style='display:none'><div class='imageContextEditFieldset'><div class='imageContextEditLabel'>&nbsp;"+LangVars.Blog_Author_Name+"</div><div class='imageContextEditInputWrap'><input type='text' name='' class='focus newBlogAuthorName' value=\""+htmlentities(nameraw)+"\" original=\""+htmlentities(nameraw)+"\" /></div></div><div class='imageContextEditFieldset'><div class='imageContextEditLabel'>&nbsp;"+LangVars.Blog_Author_Bio+"</div><div class='imageContextEditInputWrap'><input type='text' name='' class='newBlogAuthorBio' value=\""+htmlentities(bioraw)+"\" original=\""+htmlentities(bioraw)+"\" /></div></div></div>");
					$("#blogAuthorsPaneInner").lovelyScroll();

					$("input",$("#blogAuthorsPaneInner .addBlogAuthor")).val("");
					resetAddForms();
					$("#blogAuthorsList a").remove();
					$("#rightPaneBlogAuthors .insertTarget .responsiveListItem").each(function(){
						$("#blogAuthorsList").append("<li><a class='authorItem' blog-author-id=\""+$(this).attr("blog-author-id")+"\" data-item-value=\""+$(this).attr("blog-author-id")+"\" blog-author-bio=\""+$(this).attr("blog-author-bio")+"\" data-lang=\""+$(".overflowEllipsis",$(this)).html()+"\"><span class=\"overflowEllipsis\">"+$(".overflowEllipsis",$(this)).html()+"</span></a></li>");
					});


					selectionTools();
					saved();
					assignListPane($("#blogAuthorsPaneInner .insertTarget"),editBlogAuthor);

				}

			   }
			});


		}
	}

	$(document).keyup(function(e){
		if (e.keyCode==13) { // enter
			//saveOrCancel();
			return false;
		}
	});
	$("#rightPaneBlogAuthors .addBlogAuthor input").keydown(function(e){
		if (e.keyCode==13) { // enter
			saveOrCancel();
			return false;
		}
	});
	$(document).keydown(function(e){
		if (e.keyCode==27) { // esc
			saveOrCancel();
			return false;
		}
	});
	$(document).click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		saveOrCancel();
		return false;
	});
}
function editBlogAuthor ($clicked) {
	editMeListItemMultiple($clicked);
}
function deleteBlogAuthorsPrep () {
		if ($("#blogAuthorsPaneInner .listItemHighlight").length) {
	prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Blog_Author_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteBlogAuthors,false,true);
		}

}
function deleteBlogAuthors () {
	var Ids="[";
	$("#blogAuthorsPaneInner .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("blog-author-id")+'"';
		} else {
		Ids+=',"'+$(this).attr("blog-author-id")+'"';
		}
	});
	Ids+="]";
	working();
	$.ajax({
	  type: "POST",
	  url: "blogActions.php",
	  data: "blogAction=deleteAuthors&ids="+Ids,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		$("#blogAuthorsPaneInner .listItemHighlight").each(function(){
			$("#blogAuthorsList a[blog-author-id="+$(this).attr("blog-author-id")+"]").remove();
			$(this).next().remove();
			$(this).next().remove();
			$(this).remove();
		});
		if ($("#blogAuthorsList a").length==0) {
			$("#blogAuthorsList").hide();
			$("#blogAuthorsList").next().hide();
		}

		if (!$("#blogAuthorsList a").length) {
			$("#blogAuthorsPaneInner .insertTarget").append("<div class='noPages'>"+LangVars.No_Blog_Authors+"</div>");
			$("#blogAuthorsList .iconbarRule").remove();
		}
		$("#blogAuthorsPaneInner").lovelyScroll();
		saved();
		hide_iconbar_menus();
		hidePaneTools();
		cancelDialogue();
		selectionTools();
	  }
	});
}
function editBlogCategory ($clicked) {
	editMeListItem($clicked);
	return false;
}

function addBlogCategory () {
	$(document).unbind("click");
	$(document).unbind("keyup");
	$(document).unbind("keydown");
	$(document).unbind("keypress");
	$("#blogCategoriesPaneInner .noPages").hide();
	$("#blogCategoriesPaneInner .addBlogCategory").submit(function(){return false;});
	$("#blogCategoriesPaneInner .addBlogCategory").show();
	$("#blogCategoriesPaneInner .addBlogCategory .focus").focus();
	prepFancyLabelForms($("#blogCategoriesPaneInner .addBlogCategory"));
	function saveOrCancel () {
		$("#blogCategoriesPaneInner .addBlogCategory .focus").unbind("blur");
		if ($("#error:visible").length) {
			$("#error").fadeOut();
			return false;
		}
		if ($("#blogCategoriesPaneInner .addBlogCategory .focus").val()=="" || $("#blogCategoriesPaneInner .addBlogCategory .focus").val()==" ") {
			$("#blogCategoriesPaneInner .addBlogCategory").hide();

			assignBlogCategoriesKeys();
		} else {


			var title = encodeURIComponent($(".focus",$("#blogCategoriesPaneInner .addBlogCategory")).val());
			var nameraw = $(".focus",$("#blogCategoriesPaneInner .addBlogCategory")).val();
			if (title=="") {

				resetAddForms();
				$("#blogCategoriesPaneInner .noPages").show();

				return false;
			} else {
				working();
				$.ajax({
				  type: "POST",
				  url: "blogActions.php",
				  data: "blogAction=addCategory&name="+title,
				  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
					if (msg=="Exists") {
						error(LangVars.Blog_Category_Exists);
					} else {
						$("#blogCategoriesList").append("<li><a blog-category-id=\""+msg+"\" data-item-value=\""+msg+"\" data-lang=\""+htmlentities(nameraw)+"\" data-reverse-order=\"0\">"+htmlentities(nameraw)+"</a></li>");

						if ($("#blogCategoriesList li").length===0) {
							$("#blogCategoriesList").next().hide();
						} else {
							$("#blogCategoriesList").next().show();
						}
						$("#rightPaneBlogCategories .noPages").remove();
						$("#rightPaneBlogCategories .insertTarget").append("<div class='responsiveListItem' blog-category-id='"+msg+"' data-reverse-order=\"0\"><span class='overflowEllipsis'>"+htmlentities(nameraw)+"</span></div><div class=\"responsiveListAddForm inline\" style='display:none;' action=\"\" method=\"post\" rel=\""+msg+"\"><input type=\"text\" name=\"\" value=\""+htmlentities(nameraw)+"\" class=\"focus\"	/></div><div class='dropzone'><div></div></div>");
						$("#blogCategoriesPaneInner").scrollTop(10000);
						$("#rightPaneBlogCategories .insertTarget .responsiveListItem:last").addClass("");
						resetAddForms();
						$("input",$("#blogCategoriesPaneInner .addBlogCategory")).val("");
						$("#blogCategoriesPaneInner").lovelyScroll();
						selectionTools();
						saved();
						updateBlogCatFilterMenu();

					}

				   }
				});
			}

		}
	}
	$("#blogCategoriesPaneInner .addBlogCategory .focus").unbind("blur").blur(function(){
		saveOrCancel();
		return false;
	});
	$(document).keyup(function(e){
		if (e.keyCode==13) { // enter

			return false;
		}
	});
	$(document).keydown(function(e){
		if (e.keyCode==13) { // enter
			saveOrCancel();
			return false;
		}
		if (e.keyCode==27) { // esc
			saveOrCancel();
			return false;
		}
	});/*
	$(document).click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		saveOrCancel();
		return false;
	});*/
}
function deleteBlogCategoriesPrep () {
	if ($("#blogCategoriesPaneInner .listItemHighlight").length) {
prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Blog_Category_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteBlogCategories,false,true);
	}
}
function updateBlogCatFilterMenu() {
	$("#blogFilterCategoriesToUpdate").html("");
	$("#blogCategoriesList li").each(function(){
		$("#blogFilterCategoriesToUpdate").append($(this).clone());
	});
	if ($("#blogCategoriesList li").length) {
		$("#blogCategoryFilterMenu").show();
	} else {
		$("#blogCategoryFilterMenu").hide();
	}
}
function deleteBlogCategories () {
	var Ids="[";
	$("#blogCategoriesPaneInner .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("blog-Category-id")+'"';
		} else {
		Ids+=',"'+$(this).attr("blog-Category-id")+'"';
		}
	});
	Ids+="]";
	working();
	$.ajax({
	  type: "POST",
	  url: "blogActions.php",
	  data: "blogAction=deleteCategories&ids="+Ids,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		$("#blogCategoriesPaneInner .listItemHighlight").each(function(){
			$("#blogCategoriesList a[blog-category-id="+$(this).attr("blog-category-id")+"]").parent().remove();
			$(this).next().remove();
			$(this).next().remove();
			$(this).remove();
		});
		if (!$("#blogCategoriesList a").length) {
			$("#blogCategoriesPaneInner > div").append("<div class='noPages'>"+LangVars.No_Blog_Categories+"</div>");
		//	$("#blogCategoriesList .iconbarRule").remove();
		}
		if ($("#blogCategoriesList li").length===0) {
			$("#blogCategoriesList").next().hide();

		} else {
			$("#blogCategoriesList").next().show();
		}
		for (var i = 0; i < Ids.length; i++) {
			if ($("#blogFilterCategoriesToUpdate a.bpe_current[blog-category-id=\""+Ids[i]+"\"]").length) {
				switchToBlog(true,true);
			}
		}

		updateBlogCatFilterMenu();
		hidePaneTools();
		saved();
		hide_iconbar_menus();
		$("#blogCategoriesPaneInner").lovelyScroll();
		cancelDialogue();
		selectionTools();
	  }
	});
}
function toggleReverseBlogCats() {
	var Ids="[";
	$("#blogCategoriesPaneInner .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("blog-Category-id")+'"';
		} else {
		Ids+=',"'+$(this).attr("blog-Category-id")+'"';
		}
	});
	Ids+="]";
	working();
	if ($("#reverseBlogsToggle").hasClass("bpe_current")) {
		var action = "0";
	} else {
		var action = "1";
	}
	$.ajax({
	  type: "POST",
	  url: "blogActions.php",
	  data: "blogAction=reverseOrderToggle&action="+action+"&ids="+Ids,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		$("#blogCategoriesPaneInner .listItemHighlight").each(function(){
			$(this).attr("data-reverse-order",action);
			$("#blogCategoriesList a[blog-category-id="+$(this).attr("blog-category-id")+"]").attr("data-reverse-order",action);
		});
		saved();
		selectionTools();
	  }
	});
}

// Snippet Categories

function editSnippetCategory ($clicked) {
	editMeListItem($clicked);
	return false;
}
function deleteSnippetCategoriesPrep () {
	if ($("#snippetCategoriesPaneInner .listItemHighlight").length) {
prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Snippet_Category_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteSnippetCategories,false,true);
	}
}
function deleteSnippetCategories () {
	var Ids="[";
	$("#snippetCategoriesPaneInner .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("snippet-category-id")+'"';
		} else {
		Ids+=',"'+$(this).attr("snippet-category-id")+'"';
		}
	});
	Ids+="]";
	working();
	$.ajax({
	  type: "POST",
	  url: "snippetsActions.php",
	  data: "snippetsAction=deleteCategories&ids="+Ids,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

		$("#snippetCategoriesList").load("snippetsActions.php?snippetsAction=showCategories",function(){
			if ($("#snippetCategoriesList li").length==0) {
				$("#filterBySnippetCat").hide();
				$("#snippetCategoriesList").next().hide();
				$("#snippetCategoriesList").hide();
			}
			if ($("#rightPaneSnippetCategories .snippetCatItem").length===0) {
				$("#rightPaneSnippetCategories .noPages").show();
			}
			displaySnippetCats();
			selectionTools();
			assignSnippetCategoriesKeys();
			cancelDialogue();
			saved();
			$("#snippetCategoriesPaneInner").lovelyScroll();
		});

	  }
	});
}
function addSnippetCategory () {
	$(document).unbind("click");
	$(document).unbind("keyup");
	$(document).unbind("keydown");
	$(document).unbind("keypress");
	$("#rightPaneSnippetCategories .noPages").hide();
	$("#rightPaneSnippetCategories .addSnippetCategory").show();
	prepFancyLabelForms($("#rightPaneSnippetCategories .addSnippetCategory"));
	$("#rightPaneSnippetCategories .addSnippetCategory .focus").focus();
	function saveOrCancel () {
		$("#rightPaneSnippetCategories .addSnippetCategory .focus").unbind("blur");
		if ($("#rightPaneSnippetCategories .addSnippetCategory .focus").val()=="" || $("#rightPaneSnippetCategories .addSnippetCategory .focus").val()==" ") {
			resetAddForms();
			if ($("#rightPaneSnippetCategories .snippetCatItem").length===0) {
				$("#rightPaneSnippetCategories .noPages").show();
			}
		} else {
			working();

			$.ajax({
			  type: "POST",
			  url: "snippetsActions.php",
			  data: "snippetsAction=addCategory&name="+encodeURIComponent($("#rightPaneSnippetCategories .addSnippetCategory .focus").val()),
			  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				$("#filterBySnippetCat").show();
				$("#snippetCategoriesList").next().show();
				$("#snippetCategoriesList").show().load("snippetsActions.php?snippetsAction=showCategories",function(){
					saved();
					displaySnippetCats();
					$("#snippetCategoriesPaneInner .responsiveListItem:first").addClass("listItemHighlight");
					$("#snippetCategoriesPaneInner").lovelyScroll();
					assignSnippetCategoriesKeys();
					setTimeout(function() {
						selectionTools();
					}, 100);

					resetAddForms();
				});

			  }
			});
		}
	}
	$("#rightPaneSnippetCategories .addSnippetCategory .focus").unbind("blur").blur(function(){
		saveOrCancel();
		return false;
	});
	$(document).keyup(function(e){
		if (e.keyCode==13) { // enter
			saveOrCancel();
			return false;
		}
	});
	$(document).keydown(function(e){
		if (e.keyCode==13) { // enter

			return false;
		}
		if (e.keyCode==27) { // esc
			saveOrCancel();
			return false;
		}
	});
}
function displaySnippetCats () {
	$("#snippetCategoriesPaneInner .insertTarget").html("");

	$("#snippetCategoriesPaneInner .insertTarget").append($("#snippetsPaneInner #snippetCatsMenuList .addSnippetCategory").first().clone());
	$("#snippetCategoriesPaneInner .insertTarget").append("<div class='dropzone'><div></div></div>");
	hidePaneTools();

	var c = 0;
	$("#snippetCategoriesList a").each(function(){
		$("#snippetCategoriesPaneInner .insertTarget").append("<div class='responsiveListItem snippetCategoryItem' data-pinned='"+$(this).attr("data-pinned")+"' snippet-category-id='"+$(this).attr("snippet-cat-id")+"'><span class='overflowEllipsis'>"+htmlentities($(".overflowEllipsis",$(this)).html())+"</span></div><div class=\"responsiveListAddForm inline\" style='display:none;' action=\"\" method=\"post\" rel=\""+$(this).attr("snippet-cat-id")+"\"><input type=\"text\" name=\"\" value=\""+htmlentities($(".overflowEllipsis",$(this)).html())+"\" class=\"focus\"	/></div><div class='dropzone'><div></div></div>");
		c++;
	});
	if (c==0) {
		$("#snippetCategoriesPaneInner .insertTarget").append("<div class='noPages'>"+LangVars.No_Snippet_Categories+"</div>");

	}

	updateSnippetCatFilterMenu();

}
function updateSnippetCatFilterMenu () {
	if ($("#snippetCategoriesList a").length) {
		$("#rightPaneSnippets .filterBar").show();
		$("#snippetsPaneInner").addClass("withFilterBar");
		$("#snippetFilterCategories").html("");
		$("#snippetCategoriesList a").each(function(){
			$("#snippetFilterCategories").append('<li><a href="#" class="filterBy filterLink" data-lang="'+htmlentities($(".overflowEllipsis",$(this)).html())+'" category-id="'+$(this).attr("snippet-cat-id")+'"><span>'+htmlentities($(".overflowEllipsis",$(this)).html())+'</span></a></li>');
		});
	} else {
		$("#rightPaneSnippets .filterBar").hide();
		$("#snippetsPaneInner").removeClass("withFilterBar");
	}
}
function showComments ($clicked) {
	hidePanes();

	$("input").unbind();
	$("#loadingMask").show();
	$("#rightPaneBlog").hide();
	hide_iconbar_menus();
	$("#blogCommentsPaneInner .insertTarget").html($(".commentsList",$clicked).html());

	hidePaneTools();
	$("#viewingBlogComments").attr("blog-id",$clicked.attr("blog-id"));
	assignListLasso($("#blogCommentsPaneInner .insertTarget"));
	assignListPane($("#blogCommentsPaneInner .insertTarget"),editBlogComment);
	assignBlogCommentsKeys();

	$("#rightPaneBlogComments").show();
	$(window).trigger("resize");
	$("#blogCommentsPaneInner").lovelyScroll();
	$("#loadingMask").hide();
	return false;
}
function editBlogComment () {

}
function blogCommentApproval (approved) {
	var Ids="[";
	$("#blogCommentsPaneInner .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("blog-comment-id")+'"';
		} else {
		Ids+=',"'+$(this).attr("blog-comment-id")+'"';
		}
	});
	Ids+="]";

	var blogId = $("#viewingBlogComments").attr("blog-id");
	working();
		$.ajax({
		  type: "POST",
		  url: "blogActions.php",
		  data: "blogAction=approveComment&ids="+Ids+"&action="+approved,
		  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			if (approved=="approve"){
				$("#blogCommentsPaneInner .listItemHighlight").each(function(){
					if ($(this).hasClass("offline")) {
						$(this).removeClass("offline").attr("data-blog-comment-status","live");
						$(".numberApproved",$(".editBlogBar[blog-id="+blogId+"]")).html(parseInt($(".numberApproved",$(".editBlogBar[blog-id="+blogId+"]")).html())+1);
						$(".numberNotApproved",$(".editBlogBar[blog-id="+blogId+"]")).html(parseInt($(".numberNotApproved",$(".editBlogBar[blog-id="+blogId+"]")).html())-1);
					}
				});

				$(".numberApproved",$(".editBlogBar[blog-id="+blogId+"]")).removeClass("hidden");
				$(".numberNotApproved",$(".editBlogBar[blog-id="+blogId+"]")).removeClass("byitself");

			} else {
				$("#blogCommentsPaneInner .listItemHighlight").each(function(){
					if (!$(this).hasClass("offline")) {
						$(this).addClass("offline").attr("data-blog-comment-status","offline");
						$(".numberApproved",$(".editBlogBar[blog-id="+blogId+"]")).html(parseInt($(".numberApproved",$(".editBlogBar[blog-id="+blogId+"]")).html())-1);
						$(".numberNotApproved",$(".editBlogBar[blog-id="+blogId+"]")).html(parseInt($(".numberNotApproved",$(".editBlogBar[blog-id="+blogId+"]")).html())+1);

					}
				});
				$(".numberNotApproved",$(".editBlogBar[blog-id="+blogId+"]")).removeClass("hidden");
				$(".numberApproved",$(".editBlogBar[blog-id="+blogId+"]")).removeClass("byitself");
			}
			if ( $(".numberApproved",$(".editBlogBar[blog-id="+blogId+"]")).html() == "0" ) {
				$(".numberApproved",$(".editBlogBar[blog-id="+blogId+"]")).addClass("hidden");
				$(".numberNotApproved",$(".editBlogBar[blog-id="+blogId+"]")).addClass("byitself");
			}
			if ( $(".numberNotApproved",$(".editBlogBar[blog-id="+blogId+"]")).html() == "0" ) {
				$(".numberNotApproved",$(".editBlogBar[blog-id="+blogId+"]")).addClass("hidden");
				$(".numberApproved",$(".editBlogBar[blog-id="+blogId+"]")).addClass("byitself");
			}
			selectionTools();
			$("#blogPaneInner #commentsList"+blogId).html($("#blogCommentsPaneInner .insertTarget").html());
			saved("Comment Approved");
		  }
		});


}
function deleteBlogComments () {
		var Ids="[";
		$("#blogCommentsPaneInner .listItemHighlight").each(function(){
			if (Ids=="[") {
			Ids+='"'+$(this).attr("blog-comment-id")+'"';
			} else {
			Ids+=',"'+$(this).attr("blog-comment-id")+'"';
			}
		});
		Ids+="]";

		var blogId = $("#viewingBlogComments").attr("blog-id");
		working();
			$.ajax({
			  type: "POST",
			  url: "blogActions.php",
			  data: "blogAction=deleteComments&ids="+Ids,
			  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

				$("#blogCommentsPaneInner .listItemHighlight").each(function(){
					if (!$(this).hasClass("offline")) {
						$(".numberApproved",$(".editBlogBar[blog-id="+blogId+"]")).html(parseInt($(".numberApproved",$(".editBlogBar[blog-id="+blogId+"]")).html())-1);

					} else {
						$(".numberNotApproved",$(".editBlogBar[blog-id="+blogId+"]")).html(parseInt($(".numberNotApproved",$(".editBlogBar[blog-id="+blogId+"]")).html())-1);

					}
					$(this).next().remove();
					$(this).remove();
				});

				if ( $(".numberApproved",$(".editBlogBar[blog-id="+blogId+"]")).html() == "0" ) {
					$(".numberApproved",$(".editBlogBar[blog-id="+blogId+"]")).addClass("hidden");
					$(".numberNotApproved",$(".editBlogBar[blog-id="+blogId+"]")).addClass("byitself");
				}
				if ( $(".numberNotApproved",$(".editBlogBar[blog-id="+blogId+"]")).html() == "0" ) {
					$(".numberNotApproved",$(".editBlogBar[blog-id="+blogId+"]")).addClass("hidden");
					$(".numberApproved",$(".editBlogBar[blog-id="+blogId+"]")).addClass("byitself");
				}

				$("#blogPaneInner #commentsList"+blogId).html($("#blogCommentsPaneInner .insertTarget").html());
				hide_iconbar_menus();
				$("#blogCommentsPaneInner").lovelyScroll();
				cancelDialogue();
				selectionTools();
				saved("Comments removed");
				if ($("#blogCommentsPaneInner .blogComment").length==0) {
					$(".showSubPages",$(".editBlogBar[blog-id="+blogId+"]")).remove();
					$(".editBlogBar[blog-id="+blogId+"]").removeClass("withComments");
					hidePanes();
					$("input").unbind();
					$("#loadingMask").show();
					$(".rightPane,#dragInsert").hide();
					switchToBlog(false,false);
				}
			  }
			});


}
function deleteBlogCommentsPrep () {
	if ($("#blogCommentsPaneInner .listItemHighlight").length) {
prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Blog_Comment_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteBlogComments,false,true);
	}
}
function addCommentReply () {
	$(document).unbind("click");
	$(document).unbind("keyup");
	$(document).unbind("keydown");
	$(document).unbind("keypress");

	$("#blogCommentsPaneInner").unbind("click");
	/*$("#blogCommentsPaneInner").click(function(){
		saveOrCancel();
		return false;
	});*/
	hidePaneTools();
	$("#rightPaneBlogComments .addBlogComment").show();
	$("#rightPaneBlogComments .addBlogComment .focus").focus();
	prepFancyLabelForms($("#rightPaneBlogComments .addBlogComment"));
	$(".imageContextEditFieldset textarea",$("#rightPaneBlogComments .addBlogComment")).autosize();
	var blogId = $("#viewingBlogComments").attr("blog-id");

	function saveOrCancel () {
		if ($("#error:visible").length) {
			$("#error").fadeOut();
			return false;
		}
		var name = encodeURIComponent($(".replyName",$("#blogCommentsPaneInner .addBlogComment")).val());
		var email = encodeURIComponent($(".replyEmail",$("#blogCommentsPaneInner .addBlogComment")).val());
		var comment = encodeURIComponent($(".replyComment",$("#blogCommentsPaneInner .addBlogComment")).val());
		var nameraw = $(".replyName",$("#blogCommentsPaneInner .addBlogComment")).val();
		var emailraw = $(".replyEmail",$("#blogCommentsPaneInner .addBlogComment")).val();
		var commentraw = $(".replyComment",$("#blogCommentsPaneInner .addBlogComment")).val();


		if (comment=="") {
			resetAddForms();

		} else {

			working();
			$.ajax({
			  type: "POST",
			  url: "blogActions.php",
			  data: "blogAction=addBlogComment&blogId="+$("#viewingBlogComments").attr("blog-id")+"&name="+name+"&email="+email+"&comment="+comment,
			  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
					var response = msg.split("**284k;s;*");
					$("#blogCommentsPaneInner .insertTarget").prepend("<div class=\"dropzone\"><div></div></div><div class=\"blogComment responsiveListItem\" blog-comment-id='"+response[0]+"' data-blog-comment-status='live'><div class=\"responsiveListItemImage\" style=\"background: url('http://www.gravatar.com/avatar/"+response[1]+"?s=50') 50% 50%;\"></div><strong><a href=\"mailto:"+htmlentities(emailraw)+"\">"+htmlentities(nameraw)+"</a>:</strong>"+response[2]+"</div>");

					$(".numberApproved",$(".editBlogBar[blog-id="+blogId+"]")).html(parseInt($(".numberApproved",$(".editBlogBar[blog-id="+blogId+"]")).html())+1).removeClass("hidden");
					$(".numberNotApproved",$(".editBlogBar[blog-id="+blogId+"]")).removeClass("byitself");


					$("#blogCommentsPaneInner .noPages").remove();
					$("#blogPaneInner #commentsList"+blogId).html($("#blogCommentsPaneInner .insertTarget").html());
					$("#rightPaneBlogComments .addBlogComment").hide();
					$("input,textarea",$("#blogCommentsPaneInner .addBlogComment")).val("");
					$("#blogCommentsPaneInner").lovelyScroll();
					resetAddForms();
					selectionTools();
					saved();
					assignListPane($("#blogCommentsPaneInner .insertTarget"),editBlogComment);


			   }
			});


		}
	}
	$("#rightPaneBlogComments .addBlogComment input").keydown(function(e){
		if (e.keyCode==13) { // enter
			saveOrCancel();
			return false;
		}
	});
	$(document).keydown(function(e){
		if (e.keyCode==27) { // esc
			saveOrCancel();
			return false;
		}
	});

	$(document).click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		saveOrCancel();
		return false;
	});
}
function editCheckoutOrder ($el) {
	showOrderPopdown($(".orderDetails",$el));
}
function changePayPalEmail (newVal) {
	working();
	$.ajax({
	  type: "POST",
	  url: "shopActions.php",
	  data: "shopAction=saveSettings&paypal_email="+encodeURIComponent(newVal),
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			saved();
			cancelDialogue();
			$("#changePayPalEmail .value .overflowEllipsis").html(newVal);
			$("#changePayPalEmail .value").attr("title",newVal);

	  }
	});
}
function changeMerchantID (newVal) {
	working();
	$.ajax({
	  type: "POST",
	  url: "shopActions.php",
	  data: "shopAction=saveSettings&merchant_id="+encodeURIComponent(newVal),
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			saved();
			cancelDialogue();
			$("#changeMerchantID .value .overflowEllipsis").html(newVal);
			$("#changeMerchantID .value").attr("title",newVal);

	  }
	});
}
function changeCheckoutFrom (name,email) {
	working();
	$.ajax({
	  type: "POST",
	  url: "shopActions.php",
	  data: "shopAction=saveSettings&from_name="+encodeURIComponent(name)+"&from_email="+encodeURIComponent(email),
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			saved();
			cancelDialogue();
			$("#checkoutFromSetting .value .overflowEllipsis").html(name+" ("+email+")");
			$("#checkoutFromSetting").attr("checkout-from-name",name).attr("checkout-from-email",email);
			$("#checkoutFromSetting .value").attr("title",name+" ("+email+")");

	  }
	});
}
function changeCheckoutSMTP (server,username,password) {
	working();
	$.ajax({
	  type: "POST",
	  url: "shopActions.php",
	  data: "shopAction=saveSettings&smtp_server="+encodeURIComponent(server)+"&username="+encodeURIComponent(username)+"&password="+encodeURIComponent(password),
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			if (msg!="ok") {
				error(msg);
			} else {
				saved();
				cancelDialogue();

				$("#checkoutSMTPSetting").attr("checkout-server",server).attr("checkout-username",username).attr("checkout-password",password);
				$("#checkoutSMTPSetting .value span").html(server);
				$("#checkoutSMTPSetting .value").attr('title',server);
			}

	  }
	});
}
function changeSalesTax(text) {
	$.ajax({
		  type: "POST",
		  url: "shopActions.php",
		  data: "shopAction=saveSettings&sales_tax="+encodeURIComponent(text),
		  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

			saved();
			hide_menus();
			cancelDialogue();

			$("#changeSalesTax .value .overflowEllipsis").text(text);
		  }
		});
}
function changeSalesTaxName(text) {
	$.ajax({
		  type: "POST",
		  url: "shopActions.php",
		  data: "shopAction=saveSettings&sales_tax_name="+encodeURIComponent(text),
		  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

			saved();
			hide_menus();
			cancelDialogue();

			$("#changeSalesTaxName .value .overflowEllipsis").text(text);
		  }
		});
}
function changeOrderReceivedTemplate (subject,body) {
	$.ajax({
		  type: "POST",
		  url: "shopActions.php",
		  data: "shopAction=saveSettings&order_received_email_subject="+encodeURIComponent(subject)+"&order_received_email="+body,
		  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

			saved();
			hide_menus();
			cancelDialogue();

			$("#order_received_email").val(body);
			$("#order_received_email_subject").val(subject);
		  }
		});
}
function changeOrderDispatchedTemplate (subject,body) {
	$.ajax({
		  type: "POST",
		  url: "shopActions.php",
		  data: "shopAction=saveSettings&order_sent_email_subject="+encodeURIComponent(subject)+"&order_sent_email="+body,
		  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

			saved();
			hide_menus();
			cancelDialogue();

			$("#order_sent_email").val(body);
			$("#order_sent_email_subject").val(subject);
		  }
		});
}
function changeSuccessPage ($el) {
	working();
	var id = $el.attr("rel");
	var el = $el;
	var title = el.attr("title");
	$.ajax({
	  type: "POST",
	  url: "shopActions.php",
	  data: "shopAction=saveSettings&return_success="+id,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		if (msg != "error") {
			saved("Success landing page changed to page id: ");
			$("#checkoutSuccessPage .value .overflowEllipsis").html(title);
			$("#checkoutSuccessPage .value").attr("title",title);
			if ($("#lightPagesList").length) {
				$("#lightPagesOuter").animate({opacity:"0"},550,function(){
					$("#lightPagesOuter").remove();
				});
				return false;
			}

		}
	  }
	});
}
function changeFailPage ($el) {
	working();
	var id = $el.attr("rel");
	var el = $el;
	var title = el.attr("title");
	$.ajax({
	  type: "POST",
	  url: "shopActions.php",
	  data: "shopAction=saveSettings&return_fail="+id,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		if (msg != "error") {
			saved("Success landing page changed to page id: ");
			$("#checkoutFailPage .value .overflowEllipsis").html(title);
			$("#checkoutFailPage .value").attr("title",title);
			if ($("#lightPagesList").length) {
				$("#lightPagesOuter").animate({opacity:"0"},550,function(){
					$("#lightPagesOuter").remove();
				});
				return false;
			}

		}
	  }
	});
}
function dispatchOrders () {
	var Ids="[";
	$("#checkoutPaneInner .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("buyer-id")+'"';
		} else {
		Ids+=',"'+$(this).attr("buyer-id")+'"';
		}
	});
	Ids+="]";
	working();
	$.ajax({
	  type: "POST",
	  url: "shopActions.php",
	  data: "shopAction=orderDispatch&ids="+Ids,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

		saved("'Dispatched' email sent");
		$("#checkoutPaneInner .listItemHighlight").each(function(){
			$(this).next().remove();
			$(this).remove();
		});
		cancelDialogue();
		selectionTools();
		urchin();
	  }
	});

}
function deleteOrdersPrep () {
	if ($("#checkoutPaneInner .listItemHighlight").length) {
prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Order_Delete_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteOrders,false,true);
	}
}
function deleteOrders () {
	var Ids="[";
	$("#checkoutPaneInner .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("buyer-id")+'"';
		} else {
		Ids+=',"'+$(this).attr("buyer-id")+'"';
		}
	});
	Ids+="]";
	working();
	$.ajax({
	  type: "POST",
	  url: "shopActions.php",
	  data: "shopAction=archive&ids="+Ids,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

		saved();
		$("#checkoutPaneInner .listItemHighlight").each(function(){
			$(this).next().remove();
			$(this).remove();
		});
		cancelDialogue();
		selectionTools();
		hide_menus();
		urchin();
	  }
	});
}
var chatting=false;
function closeChat () {
	chatting=false;
	$("#livechatFloater").hide();
	createCookie("chat",false,-1);
}
function openChat ($clicked) {
	var href= $clicked.attr("livechat-href");
	//window.open(href,'null','toolbar=0,scrollbars=0,location=0,statusbar=0,menubar=0,resizable=0,width=311,height=349');
	createCookie("chat",href,30);
	var chatx = readCookie("chatx");
	var chaty = readCookie("chaty");
	if (chatx) {
		if ($(window).width>580 && $(window).height()>580) {
			$("#livechatFloater").css("left",chatx+"px").css("top",chaty+"px");
		}
	}
	$("#livechatiframe").attr("src",href);
	$("#livechatFloater").show();
}
function prepDeleteLivechats () {
		if ($("#livechatPaneInner .listItemHighlight").length) {
	prepDialogue("<h2>"+LangVars.Livechat_Delete_Heading+"</h2><p>"+LangVars.Livechat_Delete_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteLivechats,false,true);
		}
}
function deleteLivechats () {
	var Ids="[";
	$("#livechatPaneInner .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("chat-id")+'"';
		} else {
		Ids+=',"'+$(this).attr("chat-id")+'"';
		}
	});
	Ids+="]";
	working();
	$.ajax({
		type: "POST",
		url: "/livechat/actions/kill.php",
		data: "&chatIds="+Ids,
		success: function(msg){
			livechat_init();
			saved();
			cancelDialogue();
			selectionTools();
			hide_menus();
			urchin();
		}
	});
}
function changeLivechatMessage (text) {
	working();
	$.ajax({
	  type: "POST",
	  url: "livechatActions.php",
	  data: "livechatAction=saveConfig&livechat_message="+encodeURIComponent(text),
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			saved();
			cancelDialogue();
			$("#livechatMessage .value .overflowEllipsis").html(text);
			$("#livechatMessage .value").attr("title",text);

	  }
	});
}
function changeLivechatName (text) {
	working();
	$.ajax({
	  type: "POST",
	  url: "livechatActions.php",
	  data: "livechatAction=saveConfig&livechat_name="+encodeURIComponent(text),
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			saved();
			cancelDialogue();
			$("#livechatName .value .overflowEllipsis").html(text);
			$("#livechatName .value").attr("title",text);

	  }
	});
}
function changeThemeOption (text) {
	$("#themeOptions .themeOptionText.editing").attr("theme-var-value",text);
	$(".value .overflowEllipsis",$("#themeOptions .themeOptionText.editing")).html(htmlentities(text)).attr("title",htmlentities(text));
	$("#themeOptions .themeOptionText.editing").removeClass("editing");
	cancelDialogue();
	buildThemeVars();
}
function changeAccountEmail (text) {

	if (text!=$("#changeAdminEmail").attr("account-email")) {
		working();
		$.ajax({
		  type: "POST",
		  url: "adminUsersActions.php",
		  data: "adminUsersAction=changeEmail&email="+encodeURIComponent(text),
		  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				if (msg=="exists") {
					error(LangVars.Email_Exists);
				} else {
					saved();
					cancelDialogue();
					$("#changeAdminEmail").attr("account-email",text);
				}


		  }
		});
	}

}
function changeAccountPassword (old,pass1,pass2) {
	if (pass1!=pass2 || pass1=="") {
		return false;
	}
	working();
	var pwhash = hex_hmac_sha1(pass1,$("#adminUserSalt").val());
	var pwhashold = hex_hmac_sha1(old,$("#adminUserSalt").val());
	working();
	$.ajax({
	  type: "POST",
	  url: "adminUsersActions.php",
	  data: "adminUsersAction=changePass&hash="+encodeURIComponent(pwhash)+"&salt="+$("#adminUserSalt").val()+"&old_password="+pwhashold,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				if (msg=="wrong") {
					error(LangVars.Wrong_Current_Pass);
				} else {
					saved();
					cancelDialogue();

				}

	  }
	});
}
function changeYourAccount (email,old,pass1,pass2) {

	if (old!="") {
		if (pass1!=pass2 || pass1=="") {
			error(LangVars.Error_Passwords_Dont_Match);
			return false;
		}
	}

	working();

	if (pass1!="") {
		var pwhash = encodeURIComponent(hex_hmac_sha1(pass1,$("#adminUserSalt").val()));
		var pwhashold = hex_hmac_sha1(old,$("#adminUserSalt").val());
	} else {
		var pwhash = "";
		var pwhashold ="";
	}

	working();
	$.ajax({
	  type: "POST",
	  url: "adminUsersActions.php",
	  data: "adminUsersAction=changeYourAccount&hash="+pwhash+"&salt="+$("#adminUserSalt").val()+"&old_password="+pwhashold+"&email="+email,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				if (msg=="wrong") {
					error(LangVars.Wrong_Current_Pass);
				} else {
					saved();
					cancelDialogue();
					if (email!="") {
						$("#accountEmail").html(email);
					}

				}

	  }
	});
}
function resetStaffPassword (pass1,pass2) {


	if (pass1!=pass2 || pass1=="") {
		error(LangVars.Error_Passwords_Dont_Match);
		return false;
	}


	working();

	if (pass1!="") {
		var pwhash = encodeURIComponent(hex_hmac_sha1(pass1,$("#adminUserSalt").val()));
	} else {
		var pwhash = "";
		var pwhashold ="";
	}

	working();
	$.ajax({
	  type: "POST",
	  url: "adminUsersActions.php",
	  data: "adminUsersAction=resetStaffPass&hash="+pwhash+"&admin_usersid="+$("#staffPane .listItemHighlight").attr("staff-id")+"&token="+encodeURIComponent($("#session").val()),
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }


				saved();
				cancelDialogue();


	  }
	});
}
function prepFancyLabelForms($form){
	$(".imageContextEditFieldset",$form).each(function(){
		if ($("input,textarea",$(this)).val()==""){
			$(".imageContextEditLabel",$(this)).css("visibility","visible");
		}
	});
	$("input,textarea",$form).focus(function(){
		$(document).unbind("keyup");
		$(document).unbind("keydown");
		$(document).unbind("keypress");
		$(this).parents(".imageContextEditFieldset").addClass("focusing");
	});
	$("input,textarea",$form).blur(function(){
		$(this).parents(".imageContextEditFieldset").removeClass("focusing");
	});
	$(".sendMe",$form).hide();
	$(".imageContextEditFieldset input,.imageContextEditFieldset textarea",$form).unbind("keyup").keyup(function(){
		if ($(this).val()!="") {
			$(".imageContextEditLabel",$(this).parents(".imageContextEditFieldset")).css("visibility","hidden");
		} else {
			$(".imageContextEditLabel",$(this).parents(".imageContextEditFieldset")).css("visibility","visible");
		}
		if ($('.okToSendWhenFilled',$form).filter(function() { return !this.value; }).length) {
			$(".sendMe",$form).fadeOut();
		} else {
			$(".clearSearch",$form).fadeOut();
			$(".sendMe",$form).fadeIn();
		}
	});
	$(".sendMe",$form).click(function(){
		$(this).parents("form").submit();
	});

}
function addStaff () {
	$(document).unbind("click");
	$(document).unbind("keyup");
	$(document).unbind("keydown");
	$(document).unbind("keypress");

	/*$("#staffPaneInner").unbind("click");
	$("#staffPaneInner").click(function(){
		resetAddForms();
		return false;
	});*/
	hidePaneTools();
	$("#staffPaneInner #addStaff").show();
	$("#staffPaneInner #addStaff .focus").focus();

	$("#staffPaneInner .noPages").hide();

	prepFancyLabelForms($("#staffPaneInner #addStaff"));
	function saveOrCancel () {
		if ($("#error:visible").length) {
			$("#error").fadeOut();
			return false;
		}


		var email = encodeURIComponent($(".newStaffEmail",$("#staffPaneInner #addStaff")).val());
		var pass1 = $(".newStaffPassword",$("#staffPaneInner #addStaff")).val();
		var pass2 = $(".newStaffPassword2",$("#staffPaneInner #addStaff")).val();

		if (email=="") {

			resetAddForms();
			if ($("#staffPaneInner .responsiveListItem").length===0) {
				$("#staffPaneInner .noPages").show();
			}
			return false;
		} else {
			if (pass1==pass2 && (pass1!="" || pass2!="")) {
				var hash = hex_hmac_sha1(pass1,$("#adminUserSalt").val());
				working();
				$.ajax({
				  type: "POST",
				  url: "adminUsersActions.php",
				  data: "adminUsersAction=addNew&username="+email+"&hash="+hash+"&salt="+$("#adminUserSalt").val(),
				  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
						if (msg=="limit") {
							error(LangVars['Staff_Account_Limit']);
						}
						$("#adminList").load("adminUsersActions.php?adminUsersAction=showAdminUsers",function(){
							saved();
							assignStaffKeys();
							assignListPane($("#staffPaneInner"),editStaff);
							$("#staffPaneInner").lovelyScroll();
							$("#staffPaneInner .responsiveListItem:last").addClass("listItemHighlight");
							$("#staffPaneInner").lovelyScrollMove("-"+$("#staffPaneInner").height());
							selectionTools();
						});
					resetAddForms();

				   }
				});
			} else {
				error(LangVars.Error_Passwords_Dont_Match);
			}

		}


	}
	$("#staffPaneInner #addStaff").click(function(){
		return false;
	});
	$("#staffPaneInner #addStaff input").keyup(function(e){
		if (e.keyCode==13) { // enter
			saveOrCancel();
			return false;
		}
	});
	$("#staffPaneInner #addStaff input").keydown(function(e){
		if (e.keyCode==13) { // enter

			return false;
		}
		if (e.keyCode==27) { // esc
			saveOrCancel();
			return false;
		}
	});
	$(document).click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		saveOrCancel();
		return false;
	});
}
function editStaff ($clicked) {
	editMeListItem($clicked);
	return false;
}
function prepDeleteStaff () {
		if ($("#staffPaneInner .listItemHighlight").length) {
	prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Staff_Delete_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteStaff,false,true);
		}
}
function deleteStaff () {
	var Ids="[";
	$("#staffPaneInner .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("staff-id")+'"';
		} else {
		Ids+=',"'+$(this).attr("staff-id")+'"';
		}
	});
	Ids+="]";
	working();
	$.ajax({
		type: "POST",
		url: "adminUsersActions.php",
		data: "adminUsersAction=delete&ids="+Ids,
		success: function(msg){
			$("#staffPaneInner .listItemHighlight").each(function(){
				$(this).next().remove();
				$(this).remove();
			});
			if ($("#staffPaneInner .responsiveListItem").length===0) {
				$("#staffPaneInner .noPages").show();
			}
			$("#staffPaneInner").lovelyScroll();
			saved();
			cancelDialogue();
			hide_menus();
		}
	});
}
function changePrivs () {
	var privs = "";
	$("#staffPane .privilegeItem").each(function(){
		if ($(this).hasClass("bpe_current")) {
			if (privs!="") {
				privs = privs+",";
			}
			privs = privs+$(this).attr("data-item-value");
		}
	});
	var Ids="[";
	$("#staffPaneInner .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("staff-id")+'"';
		} else {
		Ids+=',"'+$(this).attr("staff-id")+'"';
		}
	});
	Ids+="]";
	working();
	$.ajax({
		type: "POST",
		url: "adminUsersActions.php",
		data: "adminUsersAction=changePrivs&ids="+Ids+"&privs="+privs,
		success: function(msg){
			$("#staffPaneInner .listItemHighlight").each(function(){
				$(this).attr("data-privs",privs);
			});
//			selectionTools();
			saved(true);
		}
	});
}
function restorePage () {

	var toRestore = $("#deletedPages .toRestore").attr("href");
	$.ajax({
	  type: "POST",
	  url: "pageActions.php",
	  data: "pageAction=restore&id="+toRestore,
	  success: function(msg){
		if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		if (msg=="cant") {
			error(LangVars.Page_Name_Exists);
		} else if (msg=="limit") {
			error(LangVars.Page_Limit_Reached);
		} else if (msg=="ok") {
			$("#adminPages").load("pages.php?to_prevent_cache="+(new Date).getTime(),function(){
				hide_menus();
				$("#adminPages div[rel="+toRestore+"]").addClass("listItemHighlight");
				saved();
				cancelDialogue();
				$("#loadingMask").hide();
			});
		} else {
			if (msg.split("***")[0]=="parent deleted") {
				error(LangVars.Restore_Parent_First+" \""+msg.split("***")[1]+"\"");
			} else {
				error(LangVars.Misc_Error);
			}

		}

	  }
	});
}
function editRedirecting (val) {
	var Ids="[";
	$("#adminPages .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("rel")+'"';
		} else {
		Ids+=',"'+$(this).attr("rel")+'"';
		}
	});
	Ids+="]";
	working();
	$.ajax({
	  type: "POST",
	  url: "pageActions.php",
	  data: "pageAction=set_redirect&ids="+Ids+"&url="+encodeURIComponent( val ),
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

			if (msg!="ok") {
				error(msg);
			} else {
				$("#adminPages .listItemHighlight").attr("data-redirect-url",val);
				if (val=="") {
					$("#adminPages .listItemHighlight").attr("data-page-redirect-to","");
				} else {
					$("#adminPages .listItemHighlight").attr("data-page-redirect-to","yes");
				}
				selectionTools();
				cancelDialogue();
				saved();
			}
	  }
	});
}
function editEmbedCode ($clicked) {
	editMeListItemMultiple($clicked);
	return false;
}
function deleteEmbedCodes () {
	var Ids="[";
	$("#embedCodesPaneInner .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("embed-code-id")+'"';
		} else {
		Ids+=',"'+$(this).attr("embed-code-id")+'"';
		}
	});
	Ids+="]";
	working();
	$.ajax({
		type: "POST",
		url: "embedCodesActions.php",
		data: "embedCodesAction=delete&ids="+Ids,
		success: function(msg){
			$("#embedCodesPaneInner .listItemHighlight").each(function(){
				$(this).next().remove();
				$(this).next().remove();
				$(this).remove();
			});
			if ($("#embedCodesPaneInner .embedCodeItem").length===0) {
				$("#embedCodesPaneInner .noPages").show();
			}
			$("#embedCodesPaneInner").lovelyScroll();
			saved();
			cancelDialogue();
			hide_menus();
		}
	});
}
function addEmbedCodes () {
	$(document).unbind("click");
	$(document).unbind("keyup");
	$(document).unbind("keydown");
	$(document).unbind("keypress");
	$("#embedCodesPaneInner .noPages").hide();
	$("#embedCodesPaneInner #addEmbedCode").show();
	$("#embedCodesPaneInner #addEmbedCode .focus").focus();
	prepFancyLabelForms($("#embedCodesPaneInner #addEmbedCode"));
	function saveOrCancel () {
		if ($("#error:visible").length) {
			$("#error").fadeOut();
			return false;
		}


		var name = encodeURIComponent($(".newEmbedCodeName",$("#embedCodesPaneInner #addEmbedCode")).val());
		var code = encodeURIComponent($(".newEmbedCodeCode",$("#embedCodesPaneInner #addEmbedCode")).val());

		if (name=="" || code=="") {
			resetAddForms();
			if ($("#embedCodesPaneInner .embedCodeItem").length===0) {
				$("#embedCodesPaneInner .noPages").show();
			}
			return false;
		} else {
			working();
			$.ajax({
			  type: "POST",
			  url: "embedCodesActions.php",
			  data: "embedCodesAction=addEmbedCode&name="+name+"&code="+code,
			  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }


					if ($("#embedCodesList .listTipUp").length) {
						$("#embedCodesList .listTipUp").before(msg);
					} else {
						$("#embedCodesList").append(msg)
					}

					saved();
					$("#embedCodesPaneInner #addEmbedCode").hide();
					$(".newEmbedCodeName",$("#embedCodesPaneInner #addEmbedCode")).val("");
					$(".newEmbedCodeCode",$("#embedCodesPaneInner #addEmbedCode")).val("")
					assignEmbedCodesKeys();
					resetAddForms();
					assignDragAssets($("#embedCodesPaneInner .insertTarget"));
					assignListPane($("#embedCodesPaneInner .insertTarget"),editEmbedCode);
					$("#embedCodesPaneInner").lovelyScroll();
					$("#embedCodesPaneInner").lovelyScrollMove("-"+$("#embedCodesPaneInner").height());
					$("#embedCodesPaneInner .insertTarget .responsiveListItem:last").addClass("listItemHighlight");
					selectionTools();

			   }
			});
		}


	}

	$("#embedCodesPaneInner #addEmbedCode").click(function(){
		return false;
	});
	$("#embedCodesPaneInner #addEmbedCode input").keyup(function(e){
		if (e.keyCode==13) { // enter
			if ($(".newEmbedCodeName",$("#embedCodesPaneInner #addEmbedCode")).val()!=""&&$(".newEmbedCodeCode",$("#embedCodesPaneInner #addEmbedCode")).val()!="") {
				saveOrCancel();
			}

			return false;
		}
	});
	$(document).click(function(){
		saveOrCancel();
		return false;
	});
	$("#embedCodesPaneInner #addEmbedCode input").keydown(function(e){
		if (e.keyCode==13) { // enter

			return false;
		}
		if (e.keyCode==27) { // esc
			saveOrCancel();
			return false;
		}
	});
}
function saveMetaTitle (text) {
	if (text!=$("#editMetaTitle").attr("meta-title")) {
		working();
		$.ajax({
		  type: "POST",
		  url: "pageActions.php",
		  data: "pageAction=saveMeta&id="+$("#kbid").val()+"&longtitle="+encodeURIComponent(text),
		  success: function(msg){
			saved("Meta information saved");

			cancelDialogue();
			hide_menus();
		  }
		});
		$("#longTitleValue").val(text);
		$("#editMetaTitle").attr("meta-title",text);
	} else {
		cancelDialogue();
	}
}
function saveMetaDescription (text) {
	if (text!=$("#editMetaDescription").attr("meta-description")) {
		working();
		$.ajax({
		  type: "POST",
		  url: "pageActions.php",
		  data: "pageAction=saveMeta&id="+$("#kbid").val()+"&summary="+encodeURIComponent(text),
		  success: function(msg){
			saved("Meta information saved");
				cancelDialogue();
			hide_menus();
		  }
		});
		$("#metaSummary").val(text);
		$("#editMetaDescription").attr("meta-description",text);
	} else {
		cancelDialogue();
	}
}
function saveMetaKeywords (text) {
	if (text!=$("#editMetaKeywords").attr("meta-keywords")) {
		working();
		$.ajax({
		  type: "POST",
		  url: "pageActions.php",
		  data: "pageAction=saveMeta&id="+$("#kbid").val()+"&keywords="+encodeURIComponent(text),
		  success: function(msg){
			saved("Meta information saved");
				cancelDialogue();
			hide_menus();
		  }
		});
		$("#metaKeywords").val(text);
		$("#editMetaKeywords").attr("meta-keywords",text);
	} else {
		cancelDialogue();
	}
}

function saveMetaTitleBlog (text) {
	if (text!=$("#editMetaTitleBlog").attr("meta-title")) {
		working();
		$.ajax({
		  type: "POST",
		  url: "blogActions.php",
		  data: "blogAction=saveMeta&kbid="+$("#kbid").val()+"&longtitle="+encodeURIComponent(text),
		  success: function(msg){
			saved("Meta information saved");

			cancelDialogue();
			hide_menus();
		  }
		});
		$("#blogMetaLongTitle").val(text);
		$("#editMetaTitleBlog").attr("meta-title",text);
	} else {
		cancelDialogue();
	}
}
function saveMetaDescriptionBlog (text) {
	if (text!=$("#editMetaDescriptionBlog").attr("meta-description")) {
		working();
		$.ajax({
		  type: "POST",
		  url: "blogActions.php",
		  data: "blogAction=saveMeta&kbid="+$("#kbid").val()+"&summary="+encodeURIComponent(text),
		  success: function(msg){
			saved("Meta information saved");
				cancelDialogue();
			hide_menus();
		  }
		});
		$("#blogMetaSummary").val(text);
		$("#editMetaDescriptionBlog").attr("meta-description",text);
	} else {
		cancelDialogue();
	}
}
function saveMetaKeywordsBlog (text) {
	if (text!=$("#editMetaKeywordsBlog").attr("meta-keywords")) {
		working();
		$.ajax({
		  type: "POST",
		  url: "blogActions.php",
		  data: "blogAction=saveMeta&kbid="+$("#kbid").val()+"&keywords="+encodeURIComponent(text),
		  success: function(msg){
			saved("Meta information saved");
				cancelDialogue();
			hide_menus();
		  }
		});
		$("#blogMetaKeywords").val(text);
		$("#editMetaKeywordsBlog").attr("meta-keywords",text);
	} else {
		cancelDialogue();
	}
}
function saveTagsBlog (text) {
	if (text!=$("#editBlogTags").attr("meta-tags")) {
		working();
		$.ajax({
		  type: "POST",
		  url: "blogActions.php",
		  data: "blogAction=saveMeta&kbid="+$("#kbid").val()+"&tags="+encodeURIComponent(text),
		  success: function(msg){
			saved("Meta information saved");
				cancelDialogue();
			hide_menus();
		  }
		});
		$("#blogMetaTags").val(text);
		$("#editBlogTags").attr("meta-tags",text);
	} else {
		cancelDialogue();
	}
}
function saveBlogDate (text) {
	if (text!=$("#editBlogDate").attr("meta-tags")) {
		working();
		$.ajax({
		  type: "POST",
		  url: "blogActions.php",
		  data: "blogAction=saveMeta&kbid="+$("#kbid").val()+"&timestamp="+encodeURIComponent(text),
		  success: function(msg){
			saved("Meta information saved");
			cancelDialogue();
			hide_menus();
		  }
		});
		$("#blogMetaTime").val(text);
		$("#editBlogDate").attr("meta-date",text);
	} else {
		cancelDialogue();
	}
}
function prepDeleteEmbedCodes () {
	if ($("#rightPaneEmbedCodes .listItemHighlight").length) {
prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Embed_Codes_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteEmbedCodes,false,true);
	}
}
var LangVars;
var loadingPNG;
var editIconClick = "";
var blogOrganiseClick = "";
var blogOrganiseAuthorsClick = "";
var typeAndSubmitCounter = "";
function changeHomepage ($clicked) {
	var id=$clicked.attr("rel");
	$.ajax({
	  type: "POST",
	  url: "pageActions.php",
	  data: "pageAction=change&action=homepage&id="+id,
	  success: function(msg){
		if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		if ($("#lightPagesList").length) {
			$("#lightPagesOuter").animate({opacity:"0"},550,function(){
				$("#lightPagesOuter").remove();
			});
			saved("Homepage changed");
			return false;
		}

	  }
	});
}
function insertLinkToDialogueField (text) {

	if (text.attr("alt")!="") {
		$("#popupDialogueField textarea").val(text.attr("alt"));
	}
	$("#lightPagesOuter").animate({opacity:"0"},550,function(){
		$("#lightPagesOuter").remove();
	});
	hidePopdownOrPassthroughSave(false);

}
function assignFilesMenus ($parent) {

	$(".iconbarSelectAllFiles",$parent).click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		$(".responsiveListItem",$parent).addClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	$(".iconbarDeselectAllFiles",$parent).click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		$(".listItemHighlight",$parent).removeClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
}
function pd () {
	$("#fixedMenusInner").scrollTop(2000);
}
var pushDown;
var loadingAnimator;
var $loadingPNG;

function galImagePaneDZOptions(clickable) {
		var options  = {
			url:"/admin/galleriesActions.php"
			,clickable:clickable
			,paramName: "image"
			,params:{galleriesAction:"addImage"}
			,previewsContainer:"#null"
			,acceptedMimeTypes:"image/*"
			,maxFilesize:m
			,dictInvalidFileType:LangVars.Upload_Error_Bad_Format
			,dictResponseError:LangVars.Misc_Error
			,dictFileTooBig:LangVars.File_Too_Large
			,init: function() {
				this.on("addedfile", function() {
					uploading("1");
				}),
				this.on("uploadprogress", function(file,progress) {
					if (updatedPercent==false) {
						uploading(progress);
						updatedPercent=true;
						setTimeout(function() {
							updatedPercent=false;
						}, 1000);
					}

				}),
				this.on("sending", function(file, xhr, formData) {
				  formData.append("belongs_to_gallery", $("#rightPaneGalleryImages .topBarTitle").attr('gallery-id'));
				});
				this.on("error", function(file,message) {
					$("#galleryImagesPaneInner .insertTarget").removeClass("dz-drag-hover");
					error(message);
				}),
				this.on("success", function(file,serverData,e,t) {
					var galid = $("#rightPaneGalleryImages .topBarTitle").attr('gallery-id');
					if (serverData=="limit") {
						error(LangVars.Storage_Limit_Reached);
					} else {
		    			if (serverData == "fail" || serverData == "notjpg") {
							error(LangVars.Misc_Error);
						} else {
							$("#galleriesAdmin").load("galleriesActions.php?galleriesAction=show&show="+galid+"&to_prevent_cache="+(new Date).getTime(),function(){
								$("#galleriesPaneInner .insertTarget").html($("#galleriesAdmin").html());
								$("#rightPaneGalleryImages .insertTarget").css("height",$("#rightPaneGalleryImages .pagesScroll .insertTarget").height()+"px");
								showGalleryImages($("#rightPaneGalleries #gal"+galid),true);
								$("#rightPaneGalleryImages .pagesScroll .insertTarget").css("height","auto");
								saved();
							});
						}
					}
				});
	  		}
		}
		return options;
	}
function imagePaneDZOptions(clickable) {
	var options  = {
		url:"/admin/pageActions.php"
		,clickable:clickable
		,paramName: "image"
		,params:{pageAction:"addImage"}
		,previewsContainer:"#null"
		,acceptedMimeTypes:"image/*"
		,maxFilesize:m
		,dictInvalidFileType:LangVars.Upload_Error_Bad_Format
		,dictResponseError:LangVars.Misc_Error
		,dictFileTooBig:LangVars.File_Too_Large
		,init: function() {
			this.on("addedfile", function() {
					uploading("1");
			}),
			this.on("uploadprogress", function(file,progress) {
				if (updatedPercent==false) {
					uploading(progress);
					updatedPercent=true;
					setTimeout(function() {
						updatedPercent=false;
					}, 1000);
				}

			}),
			this.on("error", function(file,message) {
				$("#galleryImagesPaneInner .insertTarget").removeClass("dz-drag-hover");
				error(message);
			}),
			this.on("success", function(file,serverData,e,t) {
				if (serverData=="limit") {
					error(LangVars.Storage_Limit_Reached);
				} else {
	    			$(".bpe_images,#bpe_images,#bpe_dropship_images .insertTarget,#imagesPaneInner .insertTarget").html(serverData);

		    		if ($("#rightPaneImages:visible").length) {

						assignListLasso($("#imagesPaneInner"));
						assignListPane($("#imagesPaneInner"),doNothing);
						prepFancyLabelForms($("#rightPaneImages .filterBox"));
						assignPaneSearch($("#rightPaneImages .searchList"),"pageActions.php","pageAction=showFilteredImages&search=","image");
						assignImagesKeys();
						$("#loadingMask").hide();
						assignDragAssets($("#imagesPaneInner .insertTarget"));
						if (!($("body").hasClass("storageDraggable"))) {
							assignSortableListItems($("#imagesPaneInner"),"listItemHighlight","contentImage");		
						}
						setTimeout(function() {
							$("#imagesPaneInner").lovelyScroll(scrollImagesBottom);
						}, 400);
					}
//					$(".imagePalletFilter").val(LangVars.Search);
//					$(".clearImageSearch").remove();
					saved();

				}
			});
  		}
	}
	return options;
}
var selectedVidId;
function videoThumbPaneDZOptions(clickable) {
	var options  = {
		url:"/admin/mediaActions.php"
		,clickable:clickable
		,selectMultiple:false
		,paramName: "image"
		,params:{mediaAction:"addThumb"}
		,previewsContainer:"#null"
		,acceptedMimeTypes:"image/*"
		,maxFilesize:m
		,dictInvalidFileType:LangVars.Upload_Error_Bad_Format
		,dictResponseError:LangVars.Misc_Error
		,dictFileTooBig:LangVars.File_Too_Large
		,init: function() {
			this.on("addedfile", function() {
				uploading("1");
			}),
			this.on("uploadprogress", function(file,progress) {
				if (updatedPercent==false) {
					uploading(progress);
					updatedPercent=true;
					setTimeout(function() {
						updatedPercent=false;
					}, 1000);
				}

			}),
			this.on("sending", function(file, xhr, formData) {
				selectedVidId = $("#rightPaneVideos .addVideoItem.listItemHighlight").attr("media-id");
  				formData.append("mediaId", selectedVidId);
			}),
			this.on("error", function(file,message) {
				error(message);
			}),
			this.on("success", function(file,serverData,e,t) {
				if (serverData=="limit") {
					error(LangVars.Storage_Limit_Reached);
				} else {

					$("#videoList").load("mediaActions.php?mediaAction=show&to_prevent_cache="+(new Date).getTime(),function(){
						$("#videosPaneInner .insertTarget").html($("#videoList").html());

						$("#videosPaneInner").lovelyScroll();
						assignListLasso($("#videosPaneInner"));
						assignListPane($("#videosPaneInner"),doNothing);
						assignVideosKeys();
						assignDragAssets($("#videosPaneInner .insertTarget"));

					});

					saved();

				}
			});
  		}
	}
	return options;
}
var updatedPercent=false;
function videoPaneDZOptions(clickable) {
	var options  = {
		url:"/admin/mediaActions.php"
		,clickable:clickable
		,paramName: "file"
		,selectMultiple:false
		,params:{mediaAction:"addItem"}
		,previewsContainer:"#null"
		,acceptedFiles:"video/mp4,video/x-m4v,video/*"
		,maxFilesize:m
		,dictInvalidFileType:LangVars.Upload_Error_Bad_Format
		,dictResponseError:LangVars.Misc_Error
		,dictFileTooBig:LangVars.File_Too_Large
		,init: function() {
			this.on("addedfile", function() {
				uploading("1");
			}),
			this.on("uploadprogress", function(file,progress) {
				if (updatedPercent==false) {
					uploading(progress);
					updatedPercent=true;
					setTimeout(function() {
						updatedPercent=false;
					}, 1000);
				}

			}),
			this.on("error", function(file,message) {
				$("#videosPaneInner .insertTarget").removeClass("dz-drag-hover");
				error(message);
			}),

			this.on("success", function(file,serverData,e,t) {
				if (serverData=="limit") {
					error(LangVars.Storage_Limit_Reached);
				} else {

					$("#videoList").load("mediaActions.php?mediaAction=show&to_prevent_cache="+(new Date).getTime(),function(){
						$("#videosPaneInner .insertTarget").html($("#videoList").html());

						$("#videosPaneInner").lovelyScroll();
						assignListLasso($("#videosPaneInner"));
						assignListPane($("#videosPaneInner"),doNothing);
						assignVideosKeys();
						assignDragAssets($("#videosPaneInner .insertTarget"));

						$("#videosPaneInner .insertTarget .addVideoItem:last").addClass("listItemHighlight");
						$("#videosPaneInner").lovelyScrollMove("-"+$("#videosPaneInner .insertTarget").height());
						selectionTools();
						if (currentTooltip) {
							interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
							clearTimeout(toolTipTimeout);
						}
						currentTooltipItem=0;
						currentTooltip="newvideo";
						setTimeout(function() {
							tooltip();
						}, 360);

					});

					saved();

				}
			});
  		}
	}
	return options;
}

var m;
var svgDown = "<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 800 600\" enable-background=\"new 0 0 800 600\" xml:space=\"preserve\"><circle cx=\"292.079\" cy=\"201.479\" r=\"36.612\"/><circle cx=\"292.079\" cy=\"287.479\" r=\"36.612\"/><circle cx=\"292.079\" cy=\"373.288\" r=\"36.612\"/><circle cx=\"381.079\" cy=\"373.288\" r=\"36.612\"/><polygon points=\"544.538,373.094 438.229,434.73 438.006,311.845 \"/></svg>";
var svgUp = "<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 800 600\" enable-background=\"new 0 0 800 600\" xml:space=\"preserve\"><circle cx=\"507.926\" cy=\"398.118\" r=\"36.612\"/><circle cx=\"507.926\" cy=\"312.118\" r=\"36.612\"/><circle cx=\"507.926\" cy=\"226.309\" r=\"36.612\"/><circle cx=\"418.926\" cy=\"226.309\" r=\"36.612\"/><polygon points=\"255.467,226.503 361.777,164.866 362,287.752 \"/></svg>";
$(window).load(function(){

	initLP();
	setTimeout(function(){
		window.scrollTo(0, 1);
		window.scrollTo(0, 0);
		$("#splash").addClass("hidden");
	}, 10);
			//Removed 9 Jan
			//$(".textEditingArea").lovelyScroll();
});
var dragInsert;
/*
function touchHandlerLovelyScroll (event,scrollFunction) {
	if (!dragging) {
		var touches = event.changedTouches,
	    first = touches[0],
	    type = "";
	    var $obj = $(event.target).parents(".scrollWrapper");
	    switch(event.type)
		{
		    case "touchstart":
				scrollStart = new Array()
				scrollDirectionTestY=first.screenY;
			break;
		    case "touchmove":
		    	$(".lovelyScrollContents",$obj).stop(false,true);
		    	$(".lovelyScrollBar",$obj).stop(false,true);
				scrollStart[0] = first.screenX;
				scrollStart[1] = first.screenY;

				if (first.screenY>scrollDirectionTestY) {
					var goingDown=true;
				} else {
					var goingUp=true;
				}

				if (goingDown) {
					var dist = first.screenY-scrollDirectionTestY;
					if (!$(".lovelyScrollBar:visible",$obj).length) {
		  				$(".lovelyScrollBar",$obj).fadeIn();
		  			}
		  			clearTimeout(fadeOnStop);

		  			curOffset = parseInt($(".lovelyScrollContents",$obj).css("top"));
		  			var newOffset = curOffset+dist;

		  			if (newOffset<=0) {

						$(".lovelyScrollContents",$obj).css("top","+="+dist+"px");

			  			moveBar($obj);
		  			} else {
		  				$(".lovelyScrollContents",$obj).css("top","+="+dist*0.3+"px");
		  				elasticBar($obj);

		  			}
		  			fadeOnStop = setTimeout(function() {
		  				 $(".lovelyScrollBar",$obj).fadeOut();
		  			}, 2000);
				} else {
					var dist = first.screenY-scrollDirectionTestY;
					if (!$(".lovelyScrollBar:visible",$obj).length) {
		  				$(".lovelyScrollBar",$obj).fadeIn();
		  			}
		  			clearTimeout(fadeOnStop);

		  			curOffset = parseInt($(".lovelyScrollContents",$obj).css("top"));
		  			var newOffset = curOffset+dist;
	  				var posOff = parseInt(newOffset.toString().replace("-",""));

		  			if (posOff<$(".lovelyScrollContents",$obj).outerHeight()-$obj.innerHeight()) {

						$(".lovelyScrollContents",$obj).css("top","+="+dist+"px");
						moveBar($obj);


		  			} else {
		  				$(".lovelyScrollContents",$obj).css("top","+="+dist*0.3+"px");
		  				elasticBar($obj);
		  				if (!scrollWaiting) {
		  					scrollWaiting=true;
		  					if (typeof scrollFunction!=='undefined') {
		  						scrollFunction();
		  					}

		  				}
		  			}
		  			fadeOnStop = setTimeout(function() {
		  				 $(".lovelyScrollBar",$obj).fadeOut();
		  			}, 2000);
				}
				scrollDirectionTestY=first.screenY;

		   	break;
		   	case "touchend":
				var curOffset = parseInt($(".lovelyScrollContents",$obj).css("top"));
				if (curOffset>0) {
					$(".lovelyScrollContents",$obj).stop(false,true).animate({top:0},400,"easeOutCirc");
					//$(".lovelyScrollBar",$obj).stop(false,true).animate({height:$(".lovelyScrollBar",$obj).attr("data-real-height")},400,"easeOutCirc");
				}

				var posOff = parseInt(curOffset.toString().replace("-",""));
				if (posOff>$(".lovelyScrollContents",$obj).outerHeight()-$obj.innerHeight()) {
					var newTop = $(".lovelyScrollContents",$obj).outerHeight()-$obj.innerHeight();
					$(".lovelyScrollContents",$obj).stop(false,true).animate({top:"-"+newTop},400,"easeOutCirc");
					//$(".lovelyScrollBar",$obj).stop(false,true).animate({height:$(".lovelyScrollBar",$obj).attr("data-real-height")},400,"easeOutCirc");
				}
		   	break;
		   	case "touchcancel":

		   	break;
		}

	}
}*/
var scrollStart = new Array();
var scrollDirectionTestY;
function moveBar ($obj) {
		var curOffset = parseInt($(".lovelyScrollContents",$obj).css("top"));
		var track = $(".lovelyScrollContents",$obj).outerHeight() - $obj.innerHeight();
	var pc = curOffset/track*100;
	pc = Math.floor(pc);
	var barTrack = $(".lovelyScrollTrack",$obj).height() - $(".lovelyScrollBar",$obj).outerHeight() - 8;
	var newTop = (pc*barTrack)/100;
	newTop=Math.floor(parseInt(newTop.toString().replace("-","")));

	$(".lovelyScrollBar",$obj).css("top",newTop+"px").attr("data-real-top",newTop);
}
function elasticBar ($obj) {
	var curOffset = parseInt($(".lovelyScrollContents",$obj).css("top"));
	if (curOffset>0) {
		var dist=curOffset;
	} else {
		var shouldBeLimit = $(".lovelyScrollContents",$obj).outerHeight() - $obj.innerHeight();
		var dist = parseInt(curOffset.toString().replace("-",""))-shouldBeLimit;
	}
	var ratio =  $obj.innerHeight()/ ($(".lovelyScrollContents",$obj).outerHeight()+dist);
		var trackH = $(".lovelyScrollTrack",$obj).height();
		var barH = trackH * ratio;
		barH=barH-8;
		var btDist = parseInt($(".lovelyScrollBar",$obj).css("height"));
		var fixTop = btDist-barH;

//	  		$(".lovelyScrollBar",$obj).css("height",barH+"px");

}
function addFormsToSettings () {
	$("#formsListSettings option").remove();
	$("#formsListSettings").append("<option value='0'>"+LangVars.None+"</option>");
	$("#formsWrapper .responsiveListItem.formItem").each(function(){
		$("#formsListSettings").append("<option value='"+$(this).attr("form-id")+"'>"+$(this).attr("name")+"</option>");
	});
	$("#formsListSettings option[value="+$("#formsListSettings").attr("data-current-form-checkout")+"]").attr("selected","selected");
}
var fadeOnStop;
var scrollWaiting=false;
var curOffset;
var lovelyScrollDrag = false;
(function($){
 $.fn.lovelyScrollMove = function (delta,scrollFunction) {
	return this.each(function() {
		var $obj=$(this);
		if (typeof myScroll[$(this).attr("id")] !='undefined') {

			if (delta>0) {
				if (myScroll[$(this).attr("id")].y < 0) {
					myScroll[$(this).attr("id")].scrollBy(0,delta);
				}
			} else {
				var limit = $(".lovelyScrollContents",$obj).outerHeight()-$obj.innerHeight();
				if (myScroll[$(this).attr("id")].y > parseInt('-'+limit)) {
					myScroll[$(this).attr("id")].scrollBy(0,delta);
				}
			}
		}

		/*
		var $obj=$(this);
		if ($obj.hasClass("lovelyScrollLocked")) {
			return false;
		}
		if (!$(".lovelyScrollBar:visible",$obj).length) {
			$(".lovelyScrollBar",$obj).fadeIn();
		}
		clearTimeout(fadeOnStop);
		curOffset = parseInt($(".lovelyScrollContents",$obj).css("top"));

		var newOffset = curOffset+delta;
		var posOff = parseInt(newOffset.toString().replace("-",""));

		if (newOffset<=0 && posOff<$(".lovelyScrollContents",$obj).outerHeight()-$obj.innerHeight()) {

			$(".lovelyScrollContents",$obj).css("top",newOffset);

		} else {

			//make sure it's at the limit

			if (delta>0) {
				$(".lovelyScrollContents",$obj).css("top",0);
			} else {
				if (!scrollWaiting) {
					scrollWaiting=true;
					if (typeof scrollFunction!=='undefined') {
						scrollFunction();
					}
				}
				var newTop = $(".lovelyScrollContents",$obj).outerHeight()-$obj.innerHeight();
				$(".lovelyScrollContents",$obj).css("top","-"+newTop+"px");
			}

		}
		moveBar($obj);
		fadeOnStop = setTimeout(function() {
			 $(".lovelyScrollBar",$obj).fadeOut();
		}, 2000);
		*/
	});
 }
 var draggingScroll=false;
 var scrolls = 1;
 $.fn.lovelyScroll = function(scrollFunction) {
	 return this.each(function() {
//		 if ($(this).hasClass("textEditingArea")) {
//			 return false;
//		 }
	 	var $obj = $(this);
	 	var $oo = $(this);

		function setHeights() {
			if (

				$obj.attr("id")!="settingsFlyinInner"
				&& !$oo.hasClass("paneTools")
				&& !$oo.parents(".paneTools").length
				&& $obj.attr("id")!="settingsTwoPaneLeft"
				&& $obj.attr("id")!="settingsTwoPaneRight"
				&& $obj.attr("id")!="launchPad"
			) {
		 		$obj.css("width","auto");
		 	}
		 	if (
		 		!$oo.hasClass("paneTools")
		 		&& !$oo.parents(".paneTools").length
	 		) {
				$obj.css("height","auto");
			}
    		$(".lovelyScrollContents",$obj).removeClass("lovelyScrollContents").addClass("tempScrollerWrap");
			$obj.css("height",$obj.height()+"px");
			if ($obj.attr("id")=="launchPad") {
				$obj.css("width",$obj.outerWidth()+"px");
			} else {
				$obj.css("width",$obj.width()+"px");
			}

    		$(".tempScrollerWrap",$obj).addClass("lovelyScrollContents").removeClass("tempScrollerWrap");

		}
		if ($obj.hasClass("scrollWrapper")) {

			setHeights();
			setTimeout(function () {
				myScroll[$obj.attr("id")].refresh();
			}, 1005);

			return false;
		} else {
			var pt = $obj.css("padding-top");
			var pl = $obj.css("padding-left");
			var pr = $obj.css("padding-right");
			var pb = $obj.css("padding-bottom");

		 	$obj.addClass("scrollWrapper");

			setHeights();

		 	$obj.wrapInner("<div class='lovelyScrollContents clearfix' style='padding-top:"+pt+";padding-left:"+pl+";padding-right:"+pr+";padding-bottom:"+pb+"'></div>");
			if (typeof $(this).attr("id") == 'undefined') {
				$(this).attr("id","scroll"+scrolls);
			}
	    	var ratio =  $obj.innerHeight()/($("> .lovelyScrollContents",$obj).outerHeight()-5);
	  		if (ratio>1) {
	  			$obj.css("height","auto");
	  			if (

					$obj.attr("id")!="settingsFlyinInner"
					&& !$oo.hasClass("paneTools")
					&& !$oo.parents(".paneTools").length
					&& $obj.attr("id")!="settingsTwoPaneLeft"
					&& $obj.attr("id")!="settingsTwoPaneRight"
					&& $obj.attr("id")!="launchPad"
				) {
	    			$obj.css("width","auto");
	    		}
		    	$("> .lovelyScrollContents > *:first",$obj).unwrap();
				$obj.removeClass("scrollWrapper");
	  			return false;
	  		}

		 	myScroll[$(this).attr("id")] = new IScroll($obj[0], {
		 		scrollbars: true,
		 		mouseWheel: true,
		 		interactiveScrollbars: true,
		 		shrinkScrollbars: 'scale',
				disableMouse:true,
				fadeScrollbars:true,
				probeType:2,
				scrollbars: 'custom'
		 	});
			var $s = $(this)
			myScroll[$(this).attr("id")].on('scroll', function(){
				// fire scrollFunction when near the bottom
				var limit = $(".lovelyScrollContents",$obj).outerHeight()-$obj.innerHeight() - 70;
				var offset = Math.abs(this.y);
				if (offset>limit) {
					if (!scrollWaiting) {
						scrollWaiting=true;
						if (typeof scrollFunction!=='undefined') {
							scrollFunction();
						}
					}
				}
			});
			myScroll[$(this).attr("id")].on('beforeScrollStart', function(){
				if ($s.parents(".paneTools").length) {
					if (typeof myScroll[$s.parents(".paneTools").attr("id")] !="undefined") {
						myScroll[$s.parents(".paneTools").attr("id")].disable();
					}
				}
			});
			myScroll[$(this).attr("id")].on('scrollEnd',function(){
				if ($s.parents(".paneTools").length) {
					if (typeof myScroll[$s.parents(".paneTools").attr("id")] !="undefined") {
						myScroll[$s.parents(".paneTools").attr("id")].enable();
					}
				}
			});
			$(".iScrollVerticalScrollbar",$obj).hover(function(){
				$(this).css("opacity","1");
			});

		}
		scrolls++;
	});
 }

})(jQuery);
var iOS = ( navigator.userAgent.match(/(iPad|iPhone|iPod)/g) ? true : false );

function uploadFilePaneDZOptions(clickable) {
	var options  = {
		url:"/admin/pageActions.php"
		,clickable:clickable
		,paramName: "file"
		,params:{pageAction:"addDownload"}
		,previewsContainer:"#null"
		,maxFilesize:m
		,dictInvalidFileType:LangVars.Upload_Error_Bad_Format
		,dictResponseError:LangVars.Misc_Error
		,dictFileTooBig:LangVars.File_Too_Large
		,init: function() {
			this.on("addedfile", function() {
				uploading("1");
			}),
			this.on("uploadprogress", function(file,progress) {
				if (updatedPercent==false) {
					uploading(progress);
					updatedPercent=true;
					setTimeout(function() {
						updatedPercent=false;
					}, 1000);
				}

			}),
			this.on("error", function(file,message) {
				$("#filesPaneInner").removeClass("dz-drag-hover");
				error(message);
			}),
			this.on("success", function(file,serverData,e,t) {
				$(".bpe_downloads,#downloads,#downloadsPopdownInner").html(serverData);
				if ($("#downloadsPopdown:visible").length) {
					assignHeaderMenus();
					rebindSearchList($("#downloadsPopdownInner"),"pageActions.php","pageAction=showMoreFiles&ajax=true","#downloadsPopdownInner");
					window.dropzoneFilePopdown.disable();
					window.dropzoneFilePopdown = new Dropzone("#downloadsPopdownInner",uploadFilePaneDZOptions($("#downloadsPopdownInner .uploadFile")[0]));
					$("#downloadsPopdownInner .pagesScroll").lovelyScroll(pagesScrollBottomDownloads);
				}

				setTimeout(function() {
				$("#filesPaneInner .insertTarget").html($("#downloads .pagesScroll").html());
				assignDragAssets($("#filesPaneInner .insertTarget"));
				}, 10);
				if ($("#rightPane:visible").length) {
					assign_click();
				}
				saved();
			});
  		}
	}
	return options;
}

$(window).focus(function(){
	modDown=false;
	metaDown=false;
});
function bindToggleLivePreview() {
	$(".toggleLivepreview").unbind().click(function(){
		if ($(this).hasClass("disabled")) {
			$("body").removeClass("livepreviewDisabled");
			$(this).removeClass("disabled");
			eraseCookie("livepreviewdisable");
			$("#livepreview").show();
/*			var cw = $("#livepreviewResize").offset().left;
			var cw2 = cw+16;
			$("#dragBoundry,#launchPad,#popupDialogue,#lightPagesOuter").attr("style","").css("width",cw2+"px");
			$("#contentWrapper,#rightPane .cleverFilterBar,#editPageTop").css("width",cw+"px");
			var di = cw-80;
			var lpw = $("#dragBoundry").width();
			var tw = $(window).width();
			tw = tw-lpw;
			var r = tw+"px";

			$("#dragInsert").css("width",di+"px");
			$("#livepreview,#livepreviewmask").css("left",$("#livepreviewResize").left+"px");
			$("#livepreviewResize").css("left",$("#livepreviewResize").left);*/

		} else {
			$("#livepreview").hide();
			$("#dragBoundry,#launchPad,#popupDialogue,#lightPagesOuter,#contentWrapper").css("width","auto").css("right","0");
			$(this).addClass("disabled");
			$("body").addClass("livepreviewDisabled");
			createCookie("livepreviewdisable","yes",365);
		}
		$(window).trigger("resize");

		refreshScrollHeights();
		$.fn.bpeditor.makeTabsOneLine();

	});
}
function dragInsertButtons() {
	$("#dragInsertIndex .lpBoxSmall").css("height","auto");
	var h = 0;
	var count = 1;
	$("#dragInsertIndex .lpBoxSmall").each(function(){
		if ($(this).height()>h) {
			h=$(this).height();
		}
		if (count%5==1) {
			$(this).addClass("fiveFirst");
		}
		if (count%5==0) {
			$(this).addClass("fiveLast");
		}
		count++;
	});
	$("#dragInsertIndex .lpBoxSmall").css("height",h+"px");
}
function selectAvailabilityDays () {
	// Forward facing collision check
	var end=false;
	var collisionFound=false;

	$("#bookingAvailabilityInner td:not(.greyDay)").each(function(){

		if (end) {
			if ($(this).hasClass("availabilityDragB")&&!$(this).hasClass("availabilityDragASealed")) {
				end=false;
				collisionFound=false;
			}
			if ($(this).hasClass("availabilityDragASealed")) {
				$(this).removeClass("availabilityDragASealed");
				collisionFound=true;
			}

			if ($(this).hasClass("availabilityDragBSealed")) {
				if (collisionFound) {
					$(this).removeClass("availabilityDragBSealed");
				}
				end=false;
			}

		} else {
			if ($(this).hasClass("availabilityDragA")) {
				end = true;
			}
			if ($(this).hasClass("availabilityDragB")) {
				end = false;
			}
		}
	});

	// Backwards facing collisions
	end=false;
	collisionFound=false;
	$("#bookingAvailabilityInner td:not(.greyDay)").each(function(){

		if (end) {
			if ($(this).hasClass("availabilityDragB")) {
				collisionFound=true;
			}
			if ($(this).hasClass("availabilityDragBSealed")) {
				if (collisionFound) {
					$(".leftCollisionStart",$("#bookingAvailabilityInner")).removeClass("availabilityDragASealed");
					$(this).removeClass("availabilityDragBSealed");
					collisionFound=false;
				}
				$(".leftCollisionStart",$("#bookingAvailabilityInner")).removeClass("leftCollisionStart");

				end=false;
			}

		} else {
			if ($(this).hasClass("availabilityDragASealed")) {
				$(this).addClass("leftCollisionStart");
				end = true;
			}
			if ($(this).hasClass("availabilityDragBSealed")) {
				$(this).removeClass("leftCollisionStart");
				end=false;
			}
		}
	});


	var end=false;
	$(".availabilityHighlight").removeClass("availabilityHighlight");

	$("#bookingAvailabilityInner td:not(.greyDay)").each(function(){

		if (end) {
			$(this).addClass("availabilityHighlight");
			if ($(this).hasClass(end)) {
				end = false;
			}
		} else {
			if ($(this).hasClass("availabilityDragASealed")) {
				end = "availabilityDragBSealed";
				$(this).addClass("availabilityHighlight");
			}
			if ($(this).hasClass("availabilityDragBSealed")) {
				end = "availabilityDragASealed";
				$(this).addClass("availabilityHighlight");
			}

			if ($(this).hasClass(end)) {

				end = false;
			}
		}
	});

	$("#bookingAvailabilityInner td:not(.greyDay)").each(function(){

		if (end) {
			$(this).addClass("availabilityHighlight");
			if ($(this).hasClass(end)) {
				end = false;
			}
		} else {
			if ($(this).hasClass("availabilityDragA")) {
				end = "availabilityDragB";
				$(this).addClass("availabilityHighlight");
			}
			if ($(this).hasClass("availabilityDragB")) {
				end = "availabilityDragA";
				$(this).addClass("availabilityHighlight");
			}

			if ($(this).hasClass(end)) {

				end = false;
			}
		}
	});
	var hasA;
	var hasB;
	var hasC;
	var hasD;
	var hasE;
	var hasF;
	var allA;
	var allB;
	var allC;
	var allD;
	var allE;
	var allF;
	var c=0;
	var block_eligible=true;
	var block_selected=false;
	var block_started=false;
	$("#bookingAvailabilityInner td.availabilityHighlight").each(function(){
		if ($(this).hasClass("availabilityDragASealed") && $(this).hasClass("availabilityDragBSealed")) {
			block_eligible=false;
		}
		if ($(this).hasClass("availabilityDragASealed") && ($(this).hasClass("block_middle")||$(this).hasClass("block_end"))) {
			block_eligible=false;
		}
		if ($(this).hasClass("availabilityDragBSealed") && ($(this).hasClass("block_middle")||$(this).hasClass("block_start"))) {
			block_eligible=false;
		}
		if ($(this).hasClass("availabilityDragASealed") && $(this).hasClass("block_start")) {
			block_started=true;
		}
		if ($(this).hasClass("availabilityDragBSealed") && !$(this).hasClass("block_end") && block_started) {
			block_eligible=false;
		}
		if ($(this).hasClass("block_end")&&!$(this).hasClass("availabilityDragBSealed")) {
			block_eligible=false;
		}
		if ($(this).hasClass("block_start")) {
			block_selected=true;
		}

		if (c===0) {
			if ($(this).hasClass("price-a")) {
				allA=true;
			}
			if ($(this).hasClass("price-b")) {
				allB=true;
			}
			if ($(this).hasClass("price-c")) {
				allC=true;
			}
			if ($(this).hasClass("price-d")) {
				allD=true;
			}
			if ($(this).hasClass("price-e")) {
				allE=true;
			}
			if ($(this).hasClass("price-f")) {
				allF=true;
			}

		}
		if (allA&&!$(this).hasClass("price-a")) {
			allA=false;
		}
		if (allB&&!$(this).hasClass("price-b")) {
			allB=false;
		}
		if (allC&&!$(this).hasClass("price-c")) {
			allC=false;
		}
		if (allD&&!$(this).hasClass("price-d")) {
			allD=false;
		}
		if (allE&&!$(this).hasClass("price-e")) {
			allE=false;
		}
		if (allF&&!$(this).hasClass("price-f")) {
			allF=false;
		}


		if ($(this).hasClass("price-a")) {
			hasA=true;
		}
		if ($(this).hasClass("price-b")) {
			hasB=true;
		}
		if ($(this).hasClass("price-c")) {
			hasC=true;
		}
		if ($(this).hasClass("price-d")) {
			hasD=true;
		}
		if ($(this).hasClass("price-e")) {
			hasE=true;
		}
		if ($(this).hasClass("price-f")) {
			hasF=true;
		}

		c++;
	});
	$(".bookingAvailabilityPriceLabel,.bookingAvailabilityTool").removeClass("selected multi");
	$(".bookingAvailabilityPriceLabel.priceCustom input").val("");
	if (allA) {
		$(".bookingAvailabilityPriceLabel.priceA").addClass("selected");
	} else {
		if (hasA) {
			$(".bookingAvailabilityPriceLabel.priceA").addClass("multi");
		}
	}
	if (allB) {
		$(".bookingAvailabilityPriceLabel.priceB").addClass("selected");
	} else {
		if (hasB) {
			$(".bookingAvailabilityPriceLabel.priceB").addClass("multi");
		}
	}
	if (allC) {
		$(".bookingAvailabilityPriceLabel.priceC").addClass("selected");
	} else {
		if (hasC) {
			$(".bookingAvailabilityPriceLabel.priceC").addClass("multi");
		}
	}
	if (allD) {
		$(".bookingAvailabilityPriceLabel.priceD").addClass("selected");
	} else {
		if (hasD) {
			$(".bookingAvailabilityPriceLabel.priceD").addClass("multi");
		}
	}
	if (allE) {
		$(".bookingAvailabilityPriceLabel.priceE").addClass("selected");
	} else {
		if (hasE) {
			$(".bookingAvailabilityPriceLabel.priceE").addClass("multi");
		}
	}
	if (allF) {
		$(".bookingAvailabilityPriceLabel.priceF").addClass("selected");
	} else {
		if (hasF) {
			$(".bookingAvailabilityPriceLabel.priceF").addClass("multi");
		}
	}
	$("#bookAsCompleteBlock").removeClass("selected");
	$("#bookingAvailabilityInner").removeClass("noblockends");
	if (block_eligible) {
		$("#bookAsCompleteBlock").removeClass("unavailable");
		if (block_selected) {
			$("#bookAsCompleteBlock").addClass("selected");
		}
	} else {
		$("#bookingAvailabilityInner").addClass("noblockends");
		$("#bookAsCompleteBlock").addClass("unavailable");
	}
	if ($("td.availabilityHighlight",$("#bookingAvailabilityInner")).length) {
		$("#bookingAvailabilityToolbar").removeClass("greyedOut");
	} else {
		$("#bookingAvailabilityToolbar").addClass("greyedOut");
	}

}
function applyProperties ($scope,itemclass) {
	var $paneTools = $(".paneTools",$scope);
	var ajaxPath = $scope.data("ajax-update-path");
	if ($("body").hasClass("selectingAll")) {
		var Ids="[";
		$("."+itemclass+":not(.responsiveListItem.listItemHighlight)",$scope).each(function(){
			if (Ids=="[") {
			Ids+='"'+$(this).data("id")+'"';
			} else {
			Ids+=',"'+$(this).data("id")+'"';
			}
		});
		Ids+="]";
		ajaxPath = ajaxPath+"&selectingAll=true";
	} else {
		var Ids="[";
		$(".listItemHighlight",$scope).each(function(){
			if (Ids=="[") {
			Ids+='"'+$(this).data("id")+'"';
			} else {
			Ids+=',"'+$(this).data("id")+'"';
			}
		});
		Ids+="]";
	}
	ajaxPath = ajaxPath+"&ids="+Ids;
	$(".item-tool-properties-menu:visible",$paneTools).each(function(){
		var variable = $(this).data("test-data");
		var value = $("a.bpe_current",$(this)).data("test-data-value")
		$(".listItemHighlight",$scope).data(variable,value);
		ajaxPath = ajaxPath+"&"+variable+"="+encodeURIComponent(value);
	});
	$(".item-tool-properties-checkbox:visible",$paneTools).each(function(){
		var variable = $(this).data("test-data");
		if ($(this).hasClass("bpe_current")) {
			var value=1;
		} else {
			var value=0;
		}
		$(".listItemHighlight",$scope).data(variable,value);
		ajaxPath = ajaxPath+"&"+variable+"="+encodeURIComponent(value);
	});
	$(".item-tool-properties-text:visible",$paneTools).each(function(){
		var variable = $(this).data("test-data");
		var value = $(this).text();
		$(".listItemHighlight",$scope).data(variable,value);
		ajaxPath = ajaxPath+"&"+variable+"="+encodeURIComponent(value);
	});
	var path = ajaxPath.split("?");
	$.ajax({
		type: "POST",
		url: path[0],
		data: path[1],
		success: function(msg){
					livepreview();
			if (msg!="ok") {
				error(LangVars.Error_Will_Reload);
				setTimeout(function () {
					window.location.reload();
				}, 6000);
			}
		}
	});
}
function cmsUpdateBookingPrices() {
	var total = 0;
	var surcharge = 0;

	$("#bookingsInner .cms-booking-product").each(function(){

		var use_min_charge = $(this).data("use-minimum-price");

		var qty_adults = parseInt($("#bookingsInner .cms-booking-product-normal-qty input").val());
		var qty_special = parseInt($("#bookingsInner .cms-booking-product-special-qty input").val());
		var qty_children = parseInt($("#bookingsInner .cms-booking-product-children-qty input").val());

		if (isNaN(qty_adults)) {
			qty_adults = 0;
		}
		if (isNaN(qty_special)) {
			qty_special = 0;
		}
		if (isNaN(qty_children)) {
			qty_children = 0;
		}
		$("#bookingsInner .cms-booking-product-toomany").removeClass("cms-booking-product-toomany");
		$("#bookingsInner td").each(function(){
			var t = qty_adults+qty_special+qty_children;
			if (t > $(this).data("available")) {
				$(this).addClass("cms-booking-product-toomany");

				var addOrRemove = true;
				if ($(this).hasClass("block-start")) {
					$(this).nextUntil($(".block-end")).each(function(){
						$(this).toggleClass("cms-booking-product-toomany",addOrRemove);
					}).next().toggleClass("cms-booking-product-toomany",addOrRemove);
				}
				if ($(this).hasClass("block-middle")) {
					$(this).nextUntil($(".block-end")).each(function(){
						$(this).toggleClass("cms-booking-product-toomany",addOrRemove);
					}).next().toggleClass("cms-booking-product-toomany",addOrRemove);
					if ($(this).next().hasClass("block-end")) {
						$(this).next().toggleClass("cms-booking-product-toomany",addOrRemove);
					}
					$(this).prevUntil($(".block-start")).each(function(){
						$(this).toggleClass("cms-booking-product-toomany",addOrRemove);
					}).prev().toggleClass("cms-booking-product-toomany",addOrRemove);
					if ($(this).prev().hasClass("block-start")) {
						$(this).prev().toggleClass("cms-booking-product-toomany",addOrRemove);
					}
				}
				if ($(this).hasClass("block-end")) {
					$(this).prevUntil($(".block-start")).each(function(){
						$(this).toggleClass("cms-booking-product-toomany",addOrRemove);
					}).prev().toggleClass("cms-booking-product-toomany",addOrRemove);
				}
			}
		});

		var days = "[";
		$("#bookingsInner .current_add:not(.cms-booking-product-toomany)").each(function(){

			var price_normal = parseInt($(this).data("price-normal"));
			var price_special = parseInt($(this).data("price-special"));
			var price_children = parseInt($(this).data("price-children"));
			var min_price = parseInt($(this).data("minimum-price-per-place"));

			var normal = price_normal * qty_adults;
			var special = price_special * qty_special;
			var children = price_children * qty_children;

			var subtotal = normal+special+children;
			var subsurcharge=0;
			if (subtotal < min_price && use_min_charge) {
				var subsurcharge = min_price-subtotal;
				surcharge = surcharge+subsurcharge;
			}
			total = total+subtotal+subsurcharge;
			if (days!="[") {
				days = days+',';
			}
			days = days+'"'+$(this).data("date")+'"';
		});
		days = days+"]";
		$("#bookingsInner .cms-booking-product-days-input").val(days);

	});
	if (surcharge>0) {
		$("#bookingsInner .cms-booking-product-total-surcharge").show();
		$("#bookingsInner .cms-booking-product-total-surcharge span").text(surcharge.toFixed(2));
	} else {
		$("#bookingsInner .cms-booking-product-total-surcharge").hide();
	}
	$("#bookingsInner .cms-booking-product-total-price span").text(total.toFixed(2));

}
function createGalleryFromImages(name) {
	var imagesJson = "[";
	$(".listItemHighlight").each(function(){
		if (imagesJson=="[") {
			imagesJson+='"'+$(this).attr("title")+'"';
		} else {
			imagesJson+=',"'+$(this).attr("title")+'"';
		}		
	});
	imagesJson += "]";

	working();
	$.ajax({
	  type: "POST",
	  url: "galleriesActions.php",
	  data: "galleriesAction=createFromImages&images="+imagesJson+"&title="+encodeURIComponent(name),
	  success: function(msg){

if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		
		$("#galleriesAdmin").load("galleriesActions.php?galleriesAction=show&to_prevent_cache="+(new Date).getTime(),function(){
			if ($("#dragInsert.showing").length) {
				switchToGallery(true);
			} else {
				switchToGallery(false);
			}
			
			$("body").attr("pane","galleries");

			$("#galleriesPaneInner .insertTarget").html($("#galleriesAdmin").html());
			$("#galleriesPaneInner .insertTarget .galleryItem:first").addClass("listItemHighlight");
			assignDragAssets($("#galleriesPaneInner .insertTarget"));
			$("#galleriesPaneInner").lovelyScroll();
			resetAddForms();
			assignGalleryAdd();
			assignGalleriesKeys();
			saved();
			selectionTools();
		});

		cancelDialogue();

		saved("Gallery added");

	  }
	});
}

function getVideoSize() {
	var maxwidth = $("#videoPlayer").width() - 90;
	var maxheight = $("#videoPlayer").height() - 70;
	var ratio = maxwidth/maxheight;
	var targetratio = 1920/1000;
	if (ratio>targetratio) {
		//wider, start with height
		var height = maxheight;
		var width = height*targetratio;
	} else {
		var width = maxwidth;
		var height = width/targetratio;
	}
	var ret = new Array();
	ret.push(width);
	ret.push(height);
	return ret;
}
var ismac=false;
$(document).ready(function(){
	if (navigator.userAgent.indexOf('Mac OS X') != -1) {
		ismac=true;
	}
	
	$(".paneToolsHelp").click(function(){
		$("body").addClass("brand-bg");				
		$("body").addClass("playingHelp");

		var video = $(this).data("play-video");
		var dim = getVideoSize();
		$("#helpVideoPlayer").data("playing",video);
		makeVideo("helpVideoPlayer",dim[0],dim[1],"/admin/graphics/play.png",video,true,false);
		return false;
	});
	$("#videoPlayer").click(function(e){
		if ($(e.target).attr("id")=="videoPlayer") {
			$("body").removeClass("playingHelp");				
			setTimeout(function () {
				$("body").removeClass("brand-bg");				
			}, 1000);
			$("#helpVideoPlayer .jplayer").jPlayer("pause");			
			return false;	
		}
	});
	$("#videoPlayer").click(function(){
		return false;
	});
	
	// Auto update toolbar items

	$(".paneTools,#rightPanePages").on("click",".autoCSVItem ul a",function(){
		var $target=$(this);
		var $data = $(this).parents(".autoCSVItem");
		var clickedIdAttr = $data.data("auto-csv-clicked-id");
		var $scope = $data.data("auto-csv-scope");
		var listItemId = $data.data("auto-csv-list-item-id");
		var ajaxpage = $data.data("auto-csv-ajax-page");
		var querystart  = $data.data("auto-csv-query-start");
		var hiddeninputcsvprefix = $data.data("auto-csv-hidden-input-prefix");
		var itemAttrToUpdate=  $data.data("auto-csv-attr-to-update");
		if (!$target.hasClass("greyedOut")) {
			if ($target.hasClass("bpe_current")) {
				var action = "remove";
			} else {
				var action = "add";
			}
			$clicked = $target;
			var catId = $target.attr(clickedIdAttr);
			var Ids="[";
			$(".listItemHighlight",$scope).each(function(){
				if (Ids=="[") {
				Ids+='"'+$(this).attr(listItemId)+'"';
				} else {
				Ids+=',"'+$(this).attr(listItemId)+'"';
				}
			});
			Ids+="]";
		
			working();
			$.ajax({
			  type: "POST",
			  url: ajaxpage,
			  data: querystart+"&ids="+Ids+"&action="+action+"&csvitemid="+catId,
			  success: function(msg){
		if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				$(".listItemHighlight",$scope).each(function(){
					if (action=="add") {
						if (!$("#"+hiddeninputcsvprefix+catId,$(this)).length) {
							$(this).append("<input type='hidden' id='"+hiddeninputcsvprefix+catId+"' value='"+catId+"' />")
						}
					} else {
						$("#"+hiddeninputcsvprefix+catId,$(this)).remove();
					}
					var catsCSV = new Array();
					$("input[type=hidden]",$(this)).each(function(){
						catsCSV.push($(this).val());
					});
					catsCSV.sort(function(b,a){return a-b});
					var newCats="";
					for (var i = 0; i < catsCSV.length; i++) {
						if (i==0) {
							newCats=catsCSV[i];
						} else {
							newCats=newCats+","+catsCSV[i];
						}
					};
					$(this).attr(itemAttrToUpdate,newCats);
				});
				selectionTools();
				saved();
			  }
			});

		}
		
		return false;
	});
	$(".paneTools,#adminPages").on("click",".autoUpdateItem",function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		var items = $(this).data("items");
		var title = $(this).data("dialogue-title");
		var info = $(this).data("dialogue-info");
		var url = $(this).data("update-url");
		var updateAttr = $(this).data("test-value");
		if (typeof $(this).data("link-builder") != 'undefined') {
			var linkBuilder = $(this).data("link-builder");	
		} else {
			var linkBuilder = false;		
		}

		
        if ($("body").hasClass("selectingAll")) {
          var Ids="[";
          $(items+":not(.responsiveListItem.listItemHighlight)").each(function(){
            if (Ids=="[") {
            Ids+='"'+$(this).data("id")+'"';
            } else {
            Ids+=',"'+$(this).data("id")+'"';
            }
          });
          Ids+="]";
          var selectingAll = "&selectingAll=true";
        } else {
          var selectingAll = "";
          var Ids="[";
          $(items+".listItemHighlight").each(function(){
            if (Ids=="[") {
            Ids+='"'+$(this).data("id")+'"';
            } else {
            Ids+=',"'+$(this).data("id")+'"';
            }
          });
          Ids+="]";
        }
		if ($(this).text()!=$(this).attr("data-if-empty-val")) {
			var t = $(this).text();
		} else {
			var t = "";
		}
		if ($(items+".listItemHighlight").length) {
prepDialogue("<h2>"+title+"</h2><p>"+info+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Save,false,false,true,true,"auto",linkBuilder,url,Ids,selectingAll,items,updateAttr,t);
		}
		return false;
	});
		
	$(".autoPaneToolToggleItem").click(function(){

		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		var items = $(this).data("items");
		var url = $(this).data("update-url");
		var updateAttr = $(this).data("test-value");
		
        if ($("body").hasClass("selectingAll")) {
          var Ids="[";
          $(items+":not(.responsiveListItem.listItemHighlight)").each(function(){
            if (Ids=="[") {
            Ids+='"'+$(this).data("id")+'"';
            } else {
            Ids+=',"'+$(this).data("id")+'"';
            }
          });
          Ids+="]";
          var selectingAll = "&selectingAll=true";
        } else {
          var selectingAll = "";
          var Ids="[";
          $(items+".listItemHighlight").each(function(){
            if (Ids=="[") {
            Ids+='"'+$(this).data("id")+'"';
            } else {
            Ids+=',"'+$(this).data("id")+'"';
            }
          });
          Ids+="]";
        }
		
		if ($(this).hasClass("bpe_current")) {
			$(this).removeClass("bpe_current");
			var newval = "0";
		} else {
			$(this).addClass("bpe_current");
			var newval = "1";			
		}
		
		if ($(items+".listItemHighlight").length) {
			var page = url.split("?");
			var data = page[1];

			$.ajax({
			  type: "POST",
			  url: page[0],
			  data: data+"&newvalue="+newval+"&ids="+Ids+selectingAll,
			  success: function(msg){
		if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				$(items+".listItemHighlight").each(function(){
					$(this).attr(updateAttr,newval);
				});
				selectionTools();
				cancelDialogue();
				saved();
				livepreview();
			  }
			});
		}
		return false;
	});
	function autoUpdateImageOptions(url,items) {

		var page = url.split("?");
		var data = page[1];
		
		var pairs = data.split("&");
		var params = {};
		for (var i = 0; i < pairs.length; i++) {
			var keyval = pairs[i].split("=");
			params[keyval[0]] = keyval[1];
		}
	  	var autoUpdateOptions  = {
	  		url:page[0]
	  		,clickable:true
	  		,selectMultiple:false
	  		,paramName: "file"
	  		,params:params
	  		,previewsContainer:"#null"
	  		,maxFilesize:m
			,acceptedMimeTypes:"image/*"
			
	  		,dictInvalidFileType:LangVars.Upload_Error_Bad_Format
	  		,dictResponseError:LangVars.Misc_Error
	  		,dictFileTooBig:LangVars.File_Too_Large
	  		,init: function() {
	  			this.on("addedfile", function() {
	  				uploading("1");
	  			}),
	  			this.on("uploadprogress", function(file,progress) {
	  				if (updatedPercent==false) {
	  					uploading(progress);
	  					updatedPercent=true;
	  					setTimeout(function() {
	  						updatedPercent=false;
	  					}, 1000);
	  				}

	  			}),
	  			this.on("sending", function(file, xhr, formData) {
		          if ($("body").hasClass("selectingAll")) {
		            var Ids="[";
		            $(items+":not(.responsiveListItem.listItemHighlight)").each(function(){
		              if (Ids=="[") {
		              Ids+='"'+$(this).data("id")+'"';
		              } else {
		              Ids+=',"'+$(this).data("id")+'"';
		              }
		            });
		            Ids+="]";
		            var selectingAll = true;
		          } else {
		            var selectingAll = false;
		            var Ids="[";
		            $(items+".listItemHighlight").each(function(){
		              if (Ids=="[") {
		              Ids+='"'+$(this).data("id")+'"';
		              } else {
		              Ids+=',"'+$(this).data("id")+'"';
		              }
		            });
		            Ids+="]";
		          }
	    		  formData.append("ids", Ids);
				  if (selectingAll) {
					  formData.append("selectingAll", "true");				  	
				  }


	  			}),
	  			this.on("error", function(file,message) {
	  				error(message);
	  			}),
	  			this.on("success", function(file,serverData,e,t) {
	  				if (serverData=="limit") {
	  					error(LangVars.Storage_Limit_Reached);
	  				} else {
	  					saved();

	  				}
	  			});
	    		}
	  	}
		return autoUpdateOptions;
	}

	$(".autoUpdateImage").each(function(){
		$(this).dropzone(autoUpdateImageOptions($(this).data("update-url"),$(this).data("items")));
	});
	$(".autoUpdateImage").click(function(){
		return false;
	});
	$(".backToDragInsertIndex").click(function(){
		swapDragTab("dragInsertIndex");
		$("body").removeClass("storageDraggable");
		$("#dragInsertIndex .lpBoxSmall").css("height","auto");
			var h = 0;
			var count = 1;
			$("#dragInsertIndex .lpBoxSmall").each(function(){
				if ($(this).height()>h) {
					h=$(this).height();
				}
				if (count%5==1) {
					$(this).addClass("fiveFirst");
				}
				if (count%5==0) {
					$(this).addClass("fiveLast");
				}
				count++;
			});
			$("#dragInsertIndex .lpBoxSmall").css("height",h+"px");

	});
	
	
	bindToggleLivePreview();
	if (readCookie("livepreviewdisable"))
	{
			$("body").addClass("livepreviewDisabled");
			$(".toggleLivepreview").addClass("disabled");
	}

	var grav = new Image();
	grav.src = $(".userMenu .target img").attr("src");
	grav.onerror = function() {
	   $(".userMenu .target img").attr("src","/admin/graphics/you.jpg")
	};
	var chat = readCookie("chat");
	if (chat) {
		var chatx = readCookie("chatx");
		var chaty = readCookie("chaty");
		if (chatx) {
			if ($(window).width>580 && $(window).height()>580) {

				$("#livechatFloater").css("left",chatx+"px").css("top",chaty+"px");
			}
		}
		$("#livechatiframe").attr("src",chat);
		$("#livechatFloater").show();
	}
	$("#livechatFloater").draggable({
		containment:$("body")
		,handle:$("#livechatFloaterHeader")
		,drag:function(){
			createCookie("chatx",$("#livechatFloater").offset().left,30);
			createCookie("chaty",$("#livechatFloater").offset().top,30);
		}
	});
	$("#closeLivechatFloater").click(function(){
		chatting=false;
		$("#livechatFloater").hide();
		createCookie("chat",false,-1);
		return false;
	});
	function swapDragTab (toShow) {
		hide_header_menus();
		$(".dragInsertTab.current").removeClass("current");
		$("."+toShow).addClass("current");
		$(".dragInsertTabContents").hide();
		$("#"+toShow).show();
		$(".assetPane").hide();
		$("#dragInsert").show();
		$("body").attr("pane","editContent");
		$("body").removeAttr("previous-pane");
		$(".dragInsertTabContentsMain:visible").css("width","auto").lovelyScroll();
		assignHeaderMenus();
		$(document).unbind("click");

		if (currentTooltip) {
			interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
			clearTimeout(toolTipTimeout);
		}
		currentTooltipItem=0;
		currentTooltip="dragItemsToPage";
		tooltip();
	}
	$("#iconbarDeleteFiles").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		if ($("#filesPane .listItemHighlight").length) {
prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Files_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteFiles,false,true);
		}
		return false;
	});
	$(".backToDragInsertIndex").click(function(){
		swapDragTab("dragInsertIndex");
		$("body").removeClass("storageDraggable");
		$("#dragInsertIndex .lpBoxSmall").css("height","auto");
			var h = 0;
			var count = 1;
			$("#dragInsertIndex .lpBoxSmall").each(function(){
				if ($(this).height()>h) {
					h=$(this).height();
				}
				if (count%5==1) {
					$(this).addClass("fiveFirst");
				}
				if (count%5==0) {
					$(this).addClass("fiveLast");
				}
				count++;
			});
			$("#dragInsertIndex .lpBoxSmall").css("height",h+"px");

	});
	$(".dragInsertTabText").click(function(){
		swapDragTab("dragInsertTabText");

		return false;
	});
	$(".dragInsertTabStorage").click(function(){
		$(".level2Switcher span span",$(this)).trigger("click");
		$(".target",$(this)).trigger("click");
		return false;
	});

	$(".dragInsertTabWidgets").click(function(){
		swapDragTab("dragInsertTabWidgets");
		return false;
	});
	$(".dragInsertTabLayout").click(function(){
		swapDragTab("dragInsertTabLayout");
		return false;
	});
	$("#sendListPopup").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		prepDialogue("<h2>"+$("span:visible",$(this)).text()+"</h2><p>"+LangVars.Send_To_Mailing_List_Info+"</p>",LangVars.Cancel,cancelDialogue,LangVars.Mailing_List_Send,sendToMailingLists,false,true,true,"mailingListSend");

		return false;
	});
	$("#linkOpensInNewWindow").click(function(){
		if ($(this).hasClass("checked")) {
			$(this).removeClass("checked");
		} else {
			$(this).addClass("checked");
		}
	});
	$("#popupInsertLinkToPage").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		showLightPages(insertLinkToDialogueField,"showTop",true,LangVars.Insert_Link_To_Page);
		return false;
	});
	$("#popupInsertLinkToFile").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		showDownloadPopdown(insertLinkToDialogueField,LangVars.Insert_Link_To_File);
		return false;
	});
			//Removed 9 Jan
			//$(".textEditingArea").lovelyScroll();

	$("#dragInsert").click(function(){
		hide_header_menus();
	});
	assignAddForms();
	$("#assetPaneMask").click(function(){
		$(".bpe_highlight,.listItemHighlight,.imageItemHighlight").removeClass("bpe_highlight").removeClass("imageItemHighlight").removeClass("listItemHighlight");
		hideAssetPanes();
		return false;
	});
	$(".closeAssetPane").click(function(){
		$(".bpe_highlight,.listItemHighlight,.imageItemHighlight").removeClass("bpe_highlight").removeClass("imageItemHighlight").removeClass("listItemHighlight");
		hideAssetPanes();
		return false;
	});
	$(".paneTools").click(function(e){
		if ($(e.target).hasClass('iScrollIndicator')) {
			return false;
		}
		hide_header_menus(true);
		//return false;
	});
	$("#pane-tools-booking-products").on("click",".subHeaderLeftMenuItem li a",function(){
		$(".bpe_current",$(this).parents("ul")).removeClass("bpe_current");
		$(this).addClass("bpe_current");
		$(".target",$(this).parents(".subHeaderLeftMenuItem")).text($(this).attr("data-lang"));
		applyProperties($("#bookingProductsPane"),"bookingProductItemMain");
		hide_header_menus(true);
		selectionTools();
		return false;
	});
	$("#pane-tools-booking-products").on("click",".item-tool-properties-checkbox",function(){
		$(this).toggleClass("bpe_current");
		applyProperties($("#bookingProductsPane"),"bookingProductItemMain");
		hide_header_menus(true);
		selectionTools();
		return false;
	});
	$("#pane-tools-booking-products").on("click",".item-tool-properties-text",function(){
		if (typeof $(this).data("text-edit-title") == 'undefined') {
			var title = $("h2",$(this).prev()).text();
		} else {
			var title = $(this).data("text-edit-title");
		}
		if (typeof $(this).data("text-edit-title") == 'undefined') {
			var info = "";
		} else {
			var info = $(this).data("text-edit-info");
		}
		$("#paneToolEditingText").removeAttr("id");
		$(this).attr("id","paneToolEditingText").data("scope","bookingProductsPane").data("itemclass","bookingProductItemMain");
		prepDialogue(
			"<h2>"+title+"</h2><p>"+info+"</p>" // text
			,LangVars.Cancel // primary text
			,cancelDialogue // primary function
			,LangVars.Save // secondary text
			,savePaneToolEditText // secondary function
			,false  // primaryImportant
			,true // secondaryImportant
			,true // textField
			,"panetoolproperty" // editingType
		);

		return false;
	});
	$("#newlivechatplayer").jPlayer({
		ready: function () {
			$(this).jPlayer("setMedia", {
				oga: "/admin/javascripts/new.oga",
				mp3: "/admin/javascripts/new.mp3"
			});
		},
		supplied: "oga, mp3",
		swfPath: "/admin/javascripts",
		solution: "html,flash"
	});
	m = parseFloat($("#maxUploadSize").val())/1024;
	m = m/1024;
	//working();
	$loadingPNG = $("#loadingPNG");
	var flag1=false;

	$("#systemMenu").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}

		if ($("ul:visible",$(this)).length)	 {
			$("ul",$(this)).slideUp();
			$("#systemMenuStatus").addClass("closed").removeClass("open");
			var sm = 1;
		} else {
			$("ul",$(this)).slideDown(300,function(){
				clearTimeout(pushDown);
			});

			pushDown = setInterval(pd,10);
			$("#systemMenuStatus").removeClass("closed").addClass("open");
			var sm = 0;
		}


		$.ajax({
			  type: "POST",
			  url: "adminUsersActions.php",
			  data: "adminUsersAction=systemMenu&systemMenu="+sm,
			  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			  }
		});

	});

	$(".showLeftPane").click(function(){
		if (!flag1) {
			flag1=true;
			setTimeout(function() {
				flag1=false;
			}, 500);
			$("body").addClass("slideoverLeftPane");
			$("#leftPaneMask").fadeIn(100);
			$("#fixedMenus").animate({left:"0px"},100,function(){


			});
		}

	});

	// Iconbars
	$(".dateFilterButton").click(function(){
		var $el = $(".dateFilterCalendar",$(this).parents(".rightPane"));
		if (!$el.is(":visible")) {
			$el.show();
		} else {
			$el.hide();
		}
		return false;
	});
	$("#popupDialogueMask").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		cancelDialogue();
		return false;
	});

	// Edit page

	$("#iconbarSettings").click(function(){
		if ($("#settingsIconbarMenu:visible").length) {
			$("#settingsIconbarMenu:visible").hide();
		} else {
			hide_iconbar_menus();
			logTrainingClick("clickSettingsEditPage");
			var smLeft = $("#iconbarSettings").offset().left;
			var ibLeft = $("#bottomIconbar").offset().left;
			smLeft = smLeft-ibLeft;
			smLeft=smLeft-7;
			$("#settingsIconbarMenu").css("left",smLeft+"px").show().removeClass("inNarrow");

		}
		return false;
	});
	$("#closeLivePreview").click(function(){
		$("#livepreview").hide();
		return false;
	});

	$("#showDragInsert").click(function(){
		dismissEditors();
		hidePaneTools();
		hideToolTips();
		hide_header_menus();
		$("#header").css("z-index","1");
		$("#dragInsertMask").show();
		$(".returnToLP").fadeOut();
		$(document).unbind("click");
		$("body").unbind("click");
		$("#dragInsertIndex .lpBoxSmall:even").addClass("smallLeft");
		$("#dragInsertIndex .lpBoxSmall:odd").addClass("smallRight");
		$("#dragInsertIndex .lpBoxSmall,#dragInsertIndex .dragInsertTab,#dragInsertIndex h1,#dragInsertIndex h3").css("opacity","0");
		var lpw = $("#contentWrapper").width();

		if ($("#livepreview:visible").length) {
			var tw = $(window).width();
			tw = tw-lpw;
			var r = tw+"px";
		} else {
			var r = "0%";
		}
		if ($(window).width()<480) {
			var di =  lpw-25;
		} else {
			var di =  lpw-80;
		}

		$("#dragInsert").css("width",di+"px");

		$("#dragInsert").stop(false,true).css("right","-90%").show().animate({right:r},300,function(){
			var time = 0;
			$("#dragInsertIndex .lpBoxSmall,#dragInsertIndex .dragInsertTab").each(function(){
				var $el = $(this);
				setTimeout(function() {
					$el.animate({opacity:1},200);
				}, time);
				time=time+50;
			});
			$("#dragInsertIndex h1,#dragInsertIndex h3").animate({opacity:1},200);
			dragInsertButtons();

			$("#dragInsert").addClass("showing");
			$(".dragInsertTabContentsMain").lovelyScroll();
			dragInsert=true;
		});
		if ($("body").attr("drag-pane")=="images") {
			$("#dragInsertIndex #tab2Images").trigger("click");
		}
		if ($("body").attr("drag-pane")=="videos") {
			$("#dragInsertIndex #tab2Videos").trigger("click");
		}
		if ($("body").attr("drag-pane")=="newsletter") {
			$("#dragInsertIndex #tab2Newsletter").trigger("click");
		}
		if ($("body").attr("drag-pane")=="galleries") {
			$("#dragInsertIndex #tab2Galleries").trigger("click");
		}
		if ($("body").attr("drag-pane")=="forms") {
			$("#dragInsertIndex #tab2Forms").trigger("click");
		}
		if ($("body").attr("drag-pane")=="products") {
			$("#dragInsertIndex #tab2Products").trigger("click");
		}
		if ($("body").attr("drag-pane")=="calendars") {
			$("#dragInsertIndex #tab2Calendars").trigger("click");
		}
		if ($("body").attr("drag-pane")=="snippets") {
			$("#dragInsertIndex #tab2Snippets").trigger("click");
		}
		if ($("body").attr("drag-pane")=="embedCodes") {
			$("#dragInsertIndex #tab2EmbedCodes").trigger("click");
		}
		if ($("body").attr("drag-pane")=="files") {
			$("#dragInsertIndex #tab2Files").trigger("click");
		}

		$("body").removeAttr("drag-pane");
		return false;
	});
	$("#dragInsertMask,.closeDragInsert").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		hide_menus();
		hideDragInsert();
		if ($(".assetPane:visible").length) {
			$("body").attr("drag-pane",$("body").attr("pane"));
		}
		setTimeout(function() {
			$("body").removeAttr("previous-pane");
			$("body").attr("pane","editContent");
			$("body").removeClass("storageDraggable");
		}, 300);
		hideAssetPanes();
		$.fn.bpeditor.assign_toggler();
		assignSaveListener();
		$(window).trigger("resize");
	});
	$("#previewPage,#previewPageTiny,#showSitePreview").click(function(){
		$("#livepreview").show();
		livepreview();
		return false;
		//logTrainingClick("clickPreview");
	});
	$("#iconbarVersions").click(function(){
		if ($("#versionsMenu:visible").length) {
			$("#versionsMenu:visible").hide();
		} else {
			hide_iconbar_menus();
			logTrainingClick("clickVersionsToolbarEditPage");
			$("#versionsMenu").show().removeClass("inNarrow");
		}
		return false;
	});
	$("#versionsTiny").html($("#versions").html());
	$("#versions,#versionsTiny").click(function(e){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}

		if ($(e.target)[0].tagName.toLowerCase()=="a") {
			window.location=$(e.target).attr("href");
		}
		if ($(e.target).parent()[0].tagName.toLowerCase()=="a") {
			window.location=$(e.target).parent().attr("href");
		}
		return false;
	});
	$("#iconbarStyles").click(function(){
		if ($("#stylesMenu:visible").length) {
			$("#stylesMenu:visible").hide();
		} else {
			if ($("#bpe_area #bpe_text_dropship").length){
				bpe_save();
			} else if ( $("#bpe_area .editingImage").length) {
				saveImage();
			}
				logTrainingClick("clickStyles");
				hide_iconbar_menus();
				if (!$(this).hasClass("greyedOut")) {
					$("#stylesMenuImage,#stylesMenuText,.stylesHeading").hide();
					$("#stylesMenu").removeClass("multipleGroups");
					if ($(".bpe_highlight.bpe_image").length && $("p.bpe_highlight,h1.bpe_highlight,h2.bpe_highlight,h3.bpe_highlight,h4.bpe_highlight,h5.bpe_highlight,pre.bpe_highlight,li.bpe_highlight,.bpe_table.bpe_highlight").length) {
						$(".stylesHeading").show();
						$("#stylesMenu").addClass("multipleGroups");
					}
					if ($(".bpe_highlight.bpe_image").length) {
						$("#stylesMenuImage").show();
					}
					if ($("p.bpe_highlight,h1.bpe_highlight,h2.bpe_highlight,h3.bpe_highlight,h4.bpe_highlight,h5.bpe_highlight,pre.bpe_highlight,li.bpe_highlight,.bpe_table.bpe_highlight").length) {
						$("#stylesMenuText").show();
					}
					$("#stylesMenu").show();

				}


		}
		return false;
	});
	$(".showPaneTwo").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		if ($(this).hasClass("greyedOut")) {
			return false;
		}
		$("#iconbarBlockClasses,#iconbarImageClasses,#chooseGalleriesList,#chooseFormsList,#blogAuthorsPane2,#blogCategoriesPane2").hide();
		if ($(this).hasClass("showBlockClasses")) {
			$("#iconbarBlockClasses").show();
		}
		if ($(this).hasClass("showImageClasses")) {
			$("#iconbarImageClasses").show();
		}
		if ($(this).hasClass("showChooseFormList")) {
			$("#chooseFormsList").show();
		}
		if ($(this).hasClass("showChooseGalleryList")) {
			$("#chooseGalleriesList").show();
		}
		if ($(this).hasClass("showBlogAuthors")) {
			logTrainingClick("iconbarBlogAuthor"+blogOrganiseAuthorsClick);
			$("#blogAuthorsPane2").show();
		}
		if ($(this).hasClass("showBlogCategories")) {
			$("#blogCategoriesPane2").show();
		}
		if ($(this).hasClass("themeOptionString")) {
			$(".iconbarPane2",$(this).parents(".iconbarMenu")).html($(this).next().html());
		}
		if ($(this).hasClass("changeSitewideContent")) {
			$(".iconbarPane2",$(this).parents(".iconbarMenu")).html($(this).next().html());
		}
		$(".iconbarPaneInner",$(this).parents(".iconbarMenu")).animate({left:"-220px"},200);
		$(".iconbarPaneOuter",$(this).parents(".iconbarMenu")).animate({height:$(".iconbarPane2",$(this).parents(".iconbarMenu")).height()+"px"},200);


		return false;
	});
	$("#changeTextAlign a").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}

		changeTextAlignment($(this).attr("rel"));
		return false;
	});
	$("#iconbarBlockClasses").click(function(e){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		$target = $(e.target);
		if ($target[0].tagName.toLowerCase()=="a") {
			changeAdvancedStyle($target.attr("rel"),"block");
		}
		if ($target[0].tagName.toLowerCase()=="span") {
			changeAdvancedStyle($target.parents("a").attr("rel"),"block");
		}
		return false;
	});
	$("#iconbarImageClasses,#iconbarImagePrimary").click(function(e){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		$target = $(e.target);

		if ($target[0].tagName.toLowerCase()=="a" ) {
			changeAdvancedStyle($target.attr("rel"),"image");
		}
		if ($target.parent()[0].tagName.toLowerCase()=="a" ) {
			changeAdvancedStyle($target.parent().attr("rel"),"image");
		}

		return false;
	});
	$("#changeImageSize").click(function(e){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		$target = $(e.target);
		if ($target[0].tagName.toLowerCase()=="a") {
			$(".bpe_image.bpe_highlight").each(function(){

				var newStr = $target.attr("string");
				var rotate=false;
				var src = $("img",$(this)).attr("src");
				var current = src.split("?");
				var file = current[0];
				var str = false;
				if (current.length>1) {
					str = current[1].split("rotate=");
					if (str.length>1) {
						rotate = str[1].split("&");
					}
				}
				var newSrc = file;

				newSrc += "?"+newStr;
				if (newStr!="") {
					newSrc+="&";
				}
				if (rotate) {
					if (rotate[0]=="r90") {
						newSrc += "rotate=r90";
					}
					if (rotate[0]=="180") {
						newSrc += "rotate=180";
					}
					if (rotate[0]=="l90") {
						newSrc += "rotate=l90";
					}
				}
				$("img",$(this)).attr("src",newSrc);
//				$.fn.bpeditor.clean(true);
				selectionTools();
				autosave(true);

			});
		}
		return false;
	});

	$("#changeStyleP").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		changeStyleP();
		return false;
	});
	$("#changeStyleH1").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		logTrainingClick("clickMainHeadingStyle")
		changeStyleH("h1");
		return false;
	});
	$("#changeStyleH2").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		changeStyleH("h2");
		return false;
	});
	$("#changeStyleH3").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		changeStyleH("h3");
		return false;
	});
	$("#changeStyleH4").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		changeStyleH("h4");
		return false;
	});
	$("#changeStyleUL").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		changeStyleUL();
		return false;
	});
	$("#changeStyleOL").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		changeStyleOL();
		return false;
	});
	$("#indentListItem").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		if ($(this).hasClass("faded")) {
			return false;
		}
		if ($(".bpe_highlight").attr("data-level")=='') {
			var level = 1;
		} else {
			var level = $(".bpe_highlight").attr("data-level");
		}
		level = parseInt(level);
		var newLevel = level+1;
		$(".bpe_highlight").attr("data-level",newLevel).removeClass("level-1 level-2 level-3");
		$(".bpe_highlight").addClass("level-"+newLevel);
		setTimeout(function () {
			$("textarea",$(".bpe_highlight")).trigger('autosize.destroy').autosize();
		}, 200);
		autosave(true);
		selectionTools();

		return false;
	});
	$("#removeIndentListItem").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		if ($(this).hasClass("faded")) {
			return false;
		}
		var $cur = $(".bpe_highlight:first");

		removeIndent($cur);
		setTimeout(function () {
			$("textarea",$cur).trigger('autosize.destroy').autosize();
		}, 200);

		fixTooDeep();
		autosave(true);
		selectionTools();
		return false;
	});
	$("#changeStylePre").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		changeStylePre();
		return false;
	});
	$("#changeStyleTable").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		changeStyleTable();
		return false;
	});
	$("#changeTemplate,#changeTemplateTiny").click(function(e){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		working();
		if ($(e.target)[0].tagName.toLowerCase()=="a") {
			var id = $("#kbid").val();
			var me = $(e.target);
			$.ajax({
			  type: "POST",
			  url: "pageActions.php",
			  data: "pageAction=change&action=template&template="+$(e.target).attr("href")+"&id="+id,
			  success: function(msg){
		if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
					$("#changeTemplateTiny a").removeClass("bpe_current");
					me.addClass("bpe_current");
					window.location.reload();
			  }
			});
		}

		return false;
	});
	$("#enablePreviewAsEmail").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		if ($(this).hasClass("bpe_current")) {
			var enable_preview_as_email = 0;
		} else {
			var enable_preview_as_email = 1;
		}
		var id = $("#kbid").val();
		$me = $(this);
		$.ajax({
		  type: "POST",
		  url: "pageActions.php",
		  data: "pageAction=togglePreviewAsEmail&enable_preview_as_email="+enable_preview_as_email+"&id="+id,
		  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				if (enable_preview_as_email==0) {
					$me.removeClass("bpe_current");
					$("#iframe1,#iframe2").each(function(){
						$(this).attr("src",$(this).attr("src").replace("&preview_as_email=1",""));
					});
					$("#previewPage").attr("href",$("#previewPage").attr("href").replace("&preview_as_email=1",""));
				} else {
					$me.addClass("bpe_current");
					$("#iframe1,#iframe2").each(function(){
						$(this).attr("src",$(this).attr("src")+"&preview_as_email=1");
					});
					$("#previewPage").attr("href",$("#previewPage").attr("href")+"&preview_as_email=1");
				}
				saved();
		  }
		});
		return false;
	});
	$("#enableCaching,#enableCachingTiny").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		if ($(this).hasClass("bpe_current")) {
			var disable_caching = 1;
		} else {
			var disable_caching = 0;
		}
		var id = $("#kbid").val();
		$me = $(this);
		$.ajax({
		  type: "POST",
		  url: "pageActions.php",
		  data: "pageAction=toggleCaching&disable_caching="+disable_caching+"&id="+id,
		  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				if (disable_caching==1) {
					$me.removeClass("bpe_current");
				} else {
					$me.addClass("bpe_current");
				}
				saved();
		  }
		});
		return false;
	});
	$("#editMetaTitle,#editMetaTitleTiny").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		prepDialogue("<h2>"+LangVars.Meta_Title+"</h2><p>"+LangVars.Meta_Title_Info+"</p>",LangVars.Cancel,cancelDialogue,LangVars.Save,saveMetaTitle,false,true,true,"metaTitle");
		return false;
	});
	$("#editMetaDescription,#editMetaDescriptionTiny").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		prepDialogue("<h2>"+LangVars.Meta_Description+"</h2><p>"+LangVars.Meta_Description_Info+"</p>",LangVars.Cancel,cancelDialogue,LangVars.Save,saveMetaDescription,false,true,true,"metaDescription");
		return false;
	});
	$("#editMetaKeywords,#editMetaKeywordsTiny").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		prepDialogue("<h2>"+LangVars.Meta_Keywords+"</h2><p>"+LangVars.Meta_Keywords_Info+"</p>",LangVars.Cancel,cancelDialogue,LangVars.Save,saveMetaKeywords,false,true,true,"metaKeywords");
		return false;
	});
	$("#editMetaTitleBlog,#editMetaTitleBlogTiny").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		prepDialogue("<h2>"+LangVars.Meta_Title+"</h2><p>"+LangVars.Meta_Title_Info+"</p>",LangVars.Cancel,cancelDialogue,LangVars.Save,saveMetaTitleBlog,false,true,true,"metaTitleBlog");
		return false;
	});
	$("#editMetaDescriptionBlog,#editMetaDescriptionBlogTiny").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		prepDialogue("<h2>"+LangVars.Meta_Description+"</h2><p>"+LangVars.Meta_Description_Info+"</p>",LangVars.Cancel,cancelDialogue,LangVars.Save,saveMetaDescriptionBlog,false,true,true,"metaDescriptionBlog");
		return false;
	});
	$("#editMetaKeywordsBlog,#editMetaKeywordsBlogTiny").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		prepDialogue("<h2>"+LangVars.Meta_Keywords+"</h2><p>"+LangVars.Meta_Keywords_Info+"</p>",LangVars.Cancel,cancelDialogue,LangVars.Save,saveMetaKeywordsBlog,false,true,true,"metaKeywordsBlog");
		return false;
	});

	$("#editBlogTags").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		prepDialogue("<h2>"+LangVars.Tags+"</h2><p>"+LangVars.Tags_Info+"</p>",LangVars.Cancel,cancelDialogue,LangVars.Save,saveTagsBlog,false,true,true,"blogTags");
		return false;
	});
	$("#editBlogDate").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		prepDialogue("<h2>"+LangVars.Published_Date+"</h2><p>"+LangVars.Published_Date_Info+"</p>",LangVars.Cancel,cancelDialogue,LangVars.Save,saveBlogDate,false,true,true,"blogDate");
		return false;
	});
	$("#editMoreButton").click(function(){
		if ($("#editMoreMenu:visible").length) {
			$("#editMoreMenu:visible").hide();
		} else {
			hide_iconbar_menus();
			$("#editMoreMenu").show();
		}
		return false;
	});
	$("#narrowVersionsButton").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		hide_iconbar_menus();
		$("#versionsMenu").show().addClass("inNarrow");
		return false;
	});
	$("#narrowSettingsButton").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		hide_iconbar_menus();
		$("#settingsIconbarMenu").show().addClass("inNarrow").css("left","auto");
		return false;
	});
	// Pages iconbar

	$("#iconbarLanguagePages").click(function(){
		if ($(this).hasClass("greyedOut")) {
			return false;
		}
		if ($("#languageMenuPages:visible").length) {
			$("#languageMenuPages:visible").hide();
		} else {
			hide_iconbar_menus();
			$("#languageMenuPages").show();

		}
		return false;
	});
	$("#iconbarStatusPages").click(function(){
		if ($(this).hasClass("greyedOut")) {
			return false;
		}
		if ($("#statusMenuPages:visible").length) {
			$("#statusMenuPages:visible").hide();
		} else {
			logTrainingClick("statusToolbar");
			hide_iconbar_menus();

			var smLeft = $("#iconbarStatusPages").offset().left;
			var ibLeft = $("#bottomIconbarPages").offset().left;
			smLeft = smLeft-ibLeft;
			smLeft=smLeft-7;
			$("#statusMenuPages").css("left",smLeft+"px").show();

		}
		return false;
	});


	$("#iconbarPageTrash").click(function(){
		$("#deletedPagesMenu").html($("#adminPages #deletedPages").html());
		if ($("#trashMenuPages:visible").length) {
			$("#trashMenuPages:visible").hide();
		} else {
			hide_iconbar_menus();

			var smLeft = $("#iconbarPageTrash").offset().left;
			var ibLeft = $("#bottomIconbarPages").offset().left;
			smLeft = smLeft-ibLeft;
			smLeft=smLeft+5;
			$("#trashMenuPages").css("left",smLeft+"px").show().removeClass("inNarrow");

		}
		return false;
	});



	$("#iconbarSecurityPages").click(function(){
		if ($(this).hasClass("greyedOut")) {
			return false;
		}
		if ($("#securityMenuPages:visible").length) {
			$("#securityMenuPages:visible").hide();
		} else {
			hide_iconbar_menus();
			$("#securityMenuPages").show();

		}
		return false;
	});


	$("#pagesMoreButton").click(function(){
		if ($("#pagesMoreMenu:visible").length) {
			$("#pagesMoreMenu:visible").hide();
		} else {
			hide_iconbar_menus();
			$("#pagesMoreMenu").show();
		}
		return false;
	});
	$("#pagesMoreTrash").click(function(){
		$("#deletedPagesMenu").html($("#adminPages #deletedPages").html());
		hide_iconbar_menus();
		$("#trashMenuPages").show().addClass("inNarrow").css("left","auto");


		return false;
	});
	$("#pagesMoreLangs").click(function(){
		if ($(this).hasClass("greyedOut")) {
			return false;
		}
		hide_iconbar_menus();
		$("#languageMenuPages").show().addClass("inNarrow").css("left","auto");


		return false;
	});
	// Images iconbar

	$("#iconbarSelectAllImages").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		$("#rightPaneImages .contentImage").addClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarDeselectAllImages").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		$("#rightPaneImages .contentImage").removeClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarDeleteImages").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		if (!$(this).hasClass("greyedOut"))	{
			prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Image_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteImages,false,true,false,"");

		}
		return false;
	});

	$("#iconbarAddImage").dropzone(imagePaneDZOptions(true));



	/*if (!window.bpe_upload_imagePaneDone) {

	}
	window.bpe_upload_imagePaneDone=true;*/
	if (!window.bpe_upload_imagePaneInnerDone) {
		$("#imagesPaneInner").dropzone(imagePaneDZOptions(false));
	}
	window.bpe_upload_imagePaneInnerDone=true;

	$("#iconbarRotateImages").click(function(){
		rotateImage();
		return false;
	});
	$("#createGalleryFromSelection").click(function(){

		prepDialogue("<h2>"+LangVars.Enter_Gallery_Name+"</h2><p>"+LangVars.Enter_Gallery_Name_Info+"</p>",LangVars.Cancel,cancelDialogue,LangVars.Create_Gallery,createGalleryFromImages,false,true,true,"");
		return false;
	});
	// videos iconbar
	$("#changeVidThumb").dropzone(videoThumbPaneDZOptions(true));
	$("#changeVidThumb").click(function(){
		return false;
	});
	$("#iconbarAddVideo").dropzone(videoPaneDZOptions(true));
	if (!window.bpe_upload_videoPaneInnerDone) {
		$("#videosPaneInner").dropzone(videoPaneDZOptions(false));
	}
	window.bpe_upload_videoPaneInnerDone=true;

	$("#iconbarSelectAllVideos").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		$("#rightPaneVideos .thumbItem").addClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarDeselectAllVideos").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		$("#rightPaneVideos .imageItemHighlight").removeClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarDeleteVideos").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		if ($("#videosPane .listItemHighlight").length) {
prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Video_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteVideos,false,true,false,"");
		}
		return false;
	});
	// galleries iconbar

	$("#iconbarDeleteGalleries").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		if ($("#galleriesPaneInner .listItemHighlight").length) {
			var containsCatBased=false;
			var containsUploadBased=false;
			$("#galleriesPaneInner .listItemHighlight").each(function(){
				if ($(this).data("dynamic")==1) {
					containsCatBased=true;
				}
				if ($(this).data("dynamic")==0) {
					containsUploadBased=true;
				}
			});
			if (containsUploadBased) {
				prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Gallery_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteGalleries,false,true,false,"");				
				
			} else {
				prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Gallery_Text_Cats_Based+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteGalleries,false,true,false,"");				
				
			}

		}
		return false;
	});
	$("#iconbarSelectAllGalleries").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		$("#rightPaneGalleries .responsiveListItem").addClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarDeselectAllGalleries").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		$("#rightPaneGalleries .responsiveListItem").removeClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarAddGallery").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		addGallery();
		return false;
	});
	// gallery image iconbar
	$("#imagesCategoriesListForGals").click(function(e){

		var $target=false;
		if ($(e.target).hasClass("overflowEllipsis")) {
			$target = $(e.target).parent();
		}
		if ($(e.target).hasClass("bpe_selection_tool")) {
			$target = $(e.target);
		}
		if (!$target) {
			return false;
		}

		if (!$target.hasClass("greyedOut")) {
			if ($target.hasClass("bpe_current")) {
				var action = "removeFromCat";
			} else {
				var action = "addToCat";
			}
			$clicked = $target;
			var catId = $target.attr("images-category-id");
			var Ids="[";
			$("#galleriesPaneInner .listItemHighlight").each(function(){
				if (Ids=="[") {
				Ids+='"'+$(this).attr("gallery-id")+'"';
				} else {
				Ids+=',"'+$(this).attr("gallery-id")+'"';
				}
			});
			Ids+="]";
		
			working();
			$.ajax({
			  type: "POST",
			  url: "galleriesActions.php",
			  data: "galleriesAction=changeTagsInGalleries&ids="+Ids+"&action="+action+"&cat="+catId,
			  success: function(msg){
		if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				$("#galleriesPaneInner .listItemHighlight").each(function(){
					if (action=="addToCat") {
						if (!$("#tagingal"+catId,$(this)).length) {
							$(this).append("<input type='hidden' id='tagingal"+catId+"' value='"+catId+"' />")
						}
					} else {
						$("#tagingal"+catId,$(this)).remove();
					}
					var catsCSV = new Array();
					$("input[type=hidden]",$(this)).each(function(){
						catsCSV.push($(this).val());
					});
					catsCSV.sort(function(b,a){return a-b});
					var newCats="";
					for (var i = 0; i < catsCSV.length; i++) {
						if (i==0) {
							newCats=catsCSV[i];
						} else {
							newCats=newCats+","+catsCSV[i];
						}
					};
					$(this).attr("data-images-from-categories",newCats);
				});
				selectionTools();
				saved();
			  }
			});

		}
		return false;
	});
	$("#editGalleryImagesButton").click(function(){
		showGalleryImages($("#galleriesPaneInner .listItemHighlight"),false);
		return false;
	});
	$("#editGalleryName").click(function(e){
		if ($(e.target)[0].tagName.toLowerCase()=="span") {
			editMe($(this));
		}
		return false;
	});
	/*
	$("#iconbarAddGalleryImage").click(function(){
		addImagesToGallery();
		return false;
	});*/
	$("#iconbarAddGalleryImage").dropzone(galImagePaneDZOptions(true));



	/*
	if (!window.galImagePaneDone) {
		$("#iconbarAddGalleryImage .buttonLegend,#iconbarAddGalleryImage .toolbarButtonIcon").dropzone(galImagePaneDZOptions(true));
	}*/

	//window.galImagePaneDone=true;
	if (!window.galImagePaneInnerDone) {
		$("#galleryImagesPaneInner").dropzone(galImagePaneDZOptions(false));
	}
	window.galImagePaneInnerDone=true;

	$("#iconbarRotateGalleryImages").click(function(){
		rotateGalleryImage();
		return false;
	});

	$("#iconbarDeleteGalleryImages").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		if ($("#rightPaneGalleryImages .listItemHighlight").length) {
prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Image_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteGalleryImages,false,true,false,"");
		}
		hide_iconbar_menus();

		return false;
	});
	$("#iconbarSelectAllGalleryImages").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		$("#galleryImagesPane .thumbItem").addClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarDeselectAllGalleryImages").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		$("#galleryImagesPane .listItemHighlight").removeClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	$("#galleryStyles").click(function(){
		if ($("#stylesMenuGalleries:visible").length) {
			$("#stylesMenuGalleries:visible").hide();
		} else {
			hide_iconbar_menus();
			galleryStyleTicks();

			$("#stylesMenuGalleries").show();
		}
		return false;
	});
	$("#stylesMenuGalleriesJS").click(function(e){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		$clicked = $(e.target);
		if ($clicked[0].tagName.toLowerCase()=="a") {
			changeGalleryStyle($clicked.attr("gal-style"));
		}
		if ($clicked.hasClass("overflowEllipsis")) {
			changeGalleryStyle($clicked.parent().attr("gal-style"));
		}
		return false;
	});
	// Forms iconbar
	$("#changeFormAutoresponderContent").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		logTrainingClick("clickMailingListContent");
		showLightPages(changeFormAutoresponderContent,"showTop",true,LangVars.Choose_page);
		return false;
	});

	$("#iconbarDuplicateForms").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		duplicateForms();
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarDeleteForms").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		if ($("#rightPaneForms .listItemHighlight").length) {
prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Forms_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteForms,false,true,false,"");
		}
		hide_iconbar_menus();
		return false;
	});
	$("#exportFormSubmissions").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		exportFormData();
		return false;
	});
	$("#iconbarAddForm").click(function(){
		addForm();
		return false;
	});
	$("#iconbarSelectAllForms").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		$("#formsPane .formItem").addClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarDeselectAllForms").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		$("#formsPane .listItemHighlight").removeClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});

	// form input iconbar
	$("#editFormName").click(function(e){
		if ($(e.target)[0].tagName.toLowerCase()=="span") {
			editMe($(this));
		}
		return false;
	});
	$("#iconbarAddFormInput").click(function(){
		addInput();
		return false;
	});
	$("#iconbarRequiredFormInputs").click(function(){
		if (!$(this).hasClass("greyedOut")) {
			if ($("#requiredMenuFormInputs:visible").length) {
				$("#requiredMenuFormInputs:visible").hide();
			} else {
				hide_iconbar_menus();
				$("#requiredMenuFormInputs").show();
			}
		}
		return false;
	});
	$("#changeInputRequired").click(function(){
		if ($(this).hasClass("bpe_current")) {
			changeRequired("no");
		} else {
			changeRequired("yes");
		}
		return false;
	});
	$("#inputRequiredYes").click(function(){
		changeRequired("yes");
		hide_iconbar_menus();

		return false;
	});
	$("#inputRequiredNo").click(function(){
		changeRequired("no");
		hide_iconbar_menus();

		return false;
	});
	$("#iconbarKindFormInputs").click(function(){
		if (!$(this).hasClass("greyedOut")) {
			if ($("#kindMenuFormInputs:visible").length) {
				$("#kindMenuFormInputs:visible").hide();
			} else {
				hide_iconbar_menus();
				$("#kindMenuFormInputs").show();
			}
		}
		return false;
	});
	$("#changeFieldTypeNewRow").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		changeInputType("clear");

		return false;
	});
	$("#changeFieldTypeHR").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		changeInputType("hr");

		return false;
	});
	$("#changeFieldTypeName").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		changeInputType("name");

		return false;
	});
	$("#changeFieldTypeEmail").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		changeInputType("email");

		return false;
	});
	$("#changeFieldTypePhone").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		changeInputType("phone");

		return false;
	});
	$("#changeFieldTypeShort").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		changeInputType("short");

		return false;
	});
	$("#changeFieldTypeDate").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		changeInputType("date");

		return false;
	});
	$("#changeFieldTypeLong").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		changeInputType("long");

		return false;
	});
	$("#changeFieldTypeCheckbox").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		changeInputType("checkbox");

		return false;
	});
	$("#changeFieldTypeSelect").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		changeInputType("select");

		return false;
	});
	$("#changeFieldTypeRadiogroup").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		changeInputType("radiogroup");

		return false;
	});
	$("#changeFieldTypeFile").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		changeInputType("file");

		return false;
	});
	$("#changeFieldTypeText").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		changeInputType("text");

		return false;
	});
	$("#changeFieldTypeHeading").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		changeInputType("heading");

		return false;
	});
	$("#changeInputWidth a").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		var w = $(this).data('item-value');
		
		changeInputWidth(w);

		return false;
	});
	$("#iconbarSelectAllFormInputs").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		$("#formInputsPane .formInputItem").addClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarDeselectAllFormInputs").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		$("#formInputsPane .listItemHighlight").removeClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarDeleteFormInputs").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		if ($("#rightPaneFormInputs .listItemHighlight").length) {
prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Inputs_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteInput,false,true,false,"");
		}
		return false;
	});
	$("#iconbarDuplicateFormInputs").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		if ($("#rightPaneFormInputs .listItemHighlight").length) {
			duplicateFormInputs();
			hide_iconbar_menus();
		}
		return false;
	});
	// Input Options
	$("#backToInputs").click(function(){
		var formId = $(this).attr("form-id");
		showFormInputs($("#formsPaneInner #form"+formId),false);
		return false;
	});
	$("#editInputName").click(function(e){
		if ($(e.target)[0].tagName.toLowerCase()=="span") {
			editMe($(this));
		}
		return false;
	});
	$("#iconbarAddFormInputOption").click(function(){
		addInputOption();
		return false;
	});

	$("#iconbarDeleteFormInputOptions").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		if ($("#rightPaneFormInputOptions .listItemHighlight").length) {
prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Input_Options_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteInputOption,false,true,false,"");
		}
		return false;
	});
	$("#iconbarSelectAllFormInputOptions").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		$("#rightPaneFormInputOptions .responsiveListItem").addClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarDeselectAllFormInputOptions").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		$("#rightPaneFormInputOptions .listItemHighlight").removeClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarFormDestination").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		if ($("#rightPaneForms .listItemHighlight").length) {
prepDialogue("<h2>"+LangVars.Change_Destination_Heading+"</h2><p>"+LangVars.Change_Destination_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Done,changeRecipient,false,true,true,"formDestination");
		}
		return false;
	});
	$("#iconbarFormAutoresponder").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		if ($("#rightPaneForms .listItemHighlight").length) {
prepDialogue("<h2>"+LangVars.AutoResponder+"</h2><p>"+LangVars.AutoResponder_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Done,changeAutoresponder,false,true,true,"formAutoresponder");
		}
		return false;
	});
	$("#iconbarFormRedirectOnSend").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		if ($("#rightPaneForms .listItemHighlight").length) {
prepDialogue("<h2>"+LangVars.Redirect_On_Send+"</h2><p>"+LangVars.Redirect_On_Send_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Done,changeRedirectOnSend,false,true,true,"formRedirectOnSend");
		}
		return false;
	});
	$("#changeFormNewsletterGroup").on('click',"a",function(){
		var value = $(this).data('id');

		var Ids="[";
		$("#rightPaneForms .listItemHighlight").each(function(){
			if (Ids=="[") {
			Ids+='"'+$(this).attr("form-id")+'"';
			} else {
			Ids+=',"'+$(this).attr("form-id")+'"';
			}
		});
		Ids+="]";
		working();
		$.ajax({
		  type: "POST",
		  url: "formsActions.php",
		  data: "formsAction=changeFormAddToNewsletterId&ids="+Ids+"&value="+value,
		  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

			$("#formsWrapper").load("formsActions.php?formsAction=show&to_prevent_cache="+(new Date).getTime(),function(){
				$("#formsPaneInner .insertTarget").html($("#formsWrapper").html());
				var toHighlight = jQuery.parseJSON( Ids );
				for (var i=0; i < toHighlight.length; i++) {
			 		$("#rightPaneForms #form"+toHighlight[i]).addClass("listItemHighlight");
				};
				selectionTools();
				cancelDialogue();
				saved();
			});
		  }
		});
	});
	// products

	$("#iconbarSelectAllProducts").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		$("#rightPaneProducts .productItemMain").addClass("listItemHighlight");
		$("body").addClass("selectingAll");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarDeselectAllProducts").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		$("body").removeClass("selectingAll");
		$("#rightPaneProducts .listItemHighlight").removeClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarDeleteProducts").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		if ($("#productsPaneInner .listItemHighlight").length) {
prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Product_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteProducts,false,true,"");
		}
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarDuplicateProducts").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		duplicateProducts();
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarAddProduct").click(function(){
		addProduct();
		return false;
	});
	$("#sortProductsByCreated").click(function(){
		$(".productSortOption").removeClass("bpe_current");
		$(this).addClass("bpe_current");
		productSortBy("productsid");
		return false;
	});
	$("#sortProductsByName").click(function(){
		$(".productSortOption").removeClass("bpe_current");
		$(this).addClass("bpe_current");
		productSortBy("name");
		return false;
	});
	$("#sortProductsByPrice").click(function(){
		$(".productSortOption").removeClass("bpe_current");
		$(this).addClass("bpe_current");
		productSortBy("price");
		return false;
	});
	$("#sortProductsByStock").click(function(){
		$(".productSortOption").removeClass("bpe_current");
		$(this).addClass("bpe_current");
		productSortBy("in_stock");
		return false;
	});
	$("#sortProductsReverse").click(function(){
		if ($(this).hasClass("bpe_current")) {
			$(this).removeClass("bpe_current");
			productSortReverse("0");
		} else {
			$(this).addClass("bpe_current");
			productSortReverse("1");
		}

		return false;
	});

	$("#iconbarDeleteProductCategories").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		if ($("#productCategoriesPaneInner .listItemHighlight").length) {
prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Product_Category_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteProductCategories,false,true,"");
		}
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarProductType").click(function(){
		if (!$(this).hasClass("greyedOut")) {
			if ($("#productTypeMenu:visible").length) {
				$("#productTypeMenu:visible").hide();
			} else {
				hide_iconbar_menus();
				setTicksInTypeMenu();
				$("#productTypeMenu").show();

			}
		}
		return false;
	});
	$("#changeProductTypeSimple").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		changeProductType("simple","");
		return false;
	});
	$("#changeProductTypeDonation").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		changeProductType("donation","");
		return false;
	});
  $("#changeProductTypeDigital").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		changeProductType("digital","");
		return false;
	});
	$("#chooseGalleriesList").click(function(e){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		$clicked = $(e.target);
		if ($clicked[0].tagName.toLowerCase()=="a") {
			changeProductType("gallery",$clicked.attr("gallery-id"));
		}
		if ($clicked.hasClass("overflowEllipsis")) {
			changeProductType("gallery",$clicked.parent().attr("gallery-id"));
		}
		return false;
	});
	$("#chooseFormsList").click(function(e){
		$clicked = $(e.target);
		if ($clicked[0].tagName.toLowerCase()=="a") {
			changeProductType("form",$clicked.attr("form-id"));
		}
		if ($clicked.hasClass("overflowEllipsis")) {
			changeProductType("form",$clicked.parent().attr("form-id"));
		}
		return false;
	});
	$("#changeProductTypeMulti").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		if ($(this).hasClass("bpe_current")) {
			changeProductHasOptions("no");
		} else {
			changeProductHasOptions("yes");
		}
		return false;
	});
	$("#iconbarProductSettings").click(function(){
		if (!$(this).hasClass("greyedOut")) {
			if ($("#productSettingsMenu:visible").length) {
				$("#productSettingsMenu:visible").hide();
			} else {
				hide_iconbar_menus();
				setTicksInTypeMenu();
				$("#productSettingsMenu").show();


			}
		}
		return false;
	});
	$("#iconbarProductPrice").click(function(){
		if (!$(this).hasClass("greyedOut")) {
			prepDialogue("<h2>"+LangVars.Change_Product_Price_Heading+"</h2><p>"+LangVars.Change_Product_Price_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Save,changeProductPrice,false,true,true,"productPrice");

		}
		return false;
	});

  $("#iconbarProductSerialNumbers").click(function(){
		if (!$(this).hasClass("greyedOut")) {
			prepDialogue("<h2>"+LangVars.Serial_Numbers+"</h2><p>"+LangVars.Serial_Numbers_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Save,changeProductSerialNumber,false,true,true,"productSerialNumber");

		}
		return false;
	});
  function uploadDigitalProduct() {
  	var options  = {
  		url:"/admin/shopActions.php"
  		,clickable:true
  		,selectMultiple:false
  		,paramName: "file"
  		,params:{shopAction:"uploadDigitalFile"}
  		,previewsContainer:"#null"
  		,maxFilesize:m
  		,dictInvalidFileType:LangVars.Upload_Error_Bad_Format
  		,dictResponseError:LangVars.Misc_Error
  		,dictFileTooBig:LangVars.File_Too_Large
  		,init: function() {
  			this.on("addedfile", function() {
  				uploading("1");
  			}),
  			this.on("uploadprogress", function(file,progress) {
  				if (updatedPercent==false) {
  					uploading(progress);
  					updatedPercent=true;
  					setTimeout(function() {
  						updatedPercent=false;
  					}, 1000);
  				}

  			}),
  			this.on("sending", function(file, xhr, formData) {
          if ($("body").hasClass("selectingAll")) {
            var Ids="[";
            $("#rightPaneProducts .productItemMain:not(.responsiveListItem.listItemHighlight)").each(function(){
              if (Ids=="[") {
              Ids+='"'+$(this).attr("product-id")+'"';
              } else {
              Ids+=',"'+$(this).attr("product-id")+'"';
              }
            });
            Ids+="]";
            var selectingAll = "&selectingAll=true";
          } else {
            var selectingAll = "";
            var Ids="[";
            $("#rightPaneProducts .listItemHighlight").each(function(){
              if (Ids=="[") {
              Ids+='"'+$(this).attr("product-id")+'"';
              } else {
              Ids+=',"'+$(this).attr("product-id")+'"';
              }
            });
            Ids+="]";
          }
    			formData.append("ids", Ids);
  			}),
  			this.on("error", function(file,message) {
  				error(message);
  			}),
  			this.on("success", function(file,serverData,e,t) {
  				if (serverData=="limit") {
  					error(LangVars.Storage_Limit_Reached);
  				} else {
  					saved();

  				}
  			});
    		}
  	}
  	return options;
  }
  $("#iconbarProductUploadFile").dropzone(uploadDigitalProduct());
  $("#iconbarProductUploadFile").click(function(){
    return false;
  });

	$("#productChangeStock").click(function(){
		if (!$(this).hasClass("greyedOut")) {
prepDialogue("<h2>"+LangVars.Change_Product_Stock_Heading+"</h2><p>"+LangVars.Change_Product_Stock_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Save,changeProductStock,false,true,true,"productStock");
		}
		return false;
	});
	$("#productOptionChangeStock").click(function(){
		if (!$(this).hasClass("greyedOut")) {
			prepDialogue("<h2>"+LangVars.Change_Product_Stock_Heading+"</h2><p>"+LangVars.Change_Product_Stock_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Save,changeProductOptionStock,false,true,true,"productOptionStock");
		}

		return false;
	});
	$("#productChangeSellIfInStock").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		if ($(this).hasClass("bpe_current")) {
			var stock_limits_basket_quantity = "0";
		} else {
			var stock_limits_basket_quantity = "1";
		}
		if ($("body").hasClass("selectingAll")) {
				var Ids="[";
				$("#rightPaneProducts .productItemMain:not(.responsiveListItem.listItemHighlight)").each(function(){
					if (Ids=="[") {
					Ids+='"'+$(this).attr("product-id")+'"';
					} else {
					Ids+=',"'+$(this).attr("product-id")+'"';
					}
				});
				Ids+="]";
				var selectingAll = "&selectingAll=true";
			} else {
				var selectingAll = "";
				var Ids="[";
				$("#rightPaneProducts .listItemHighlight").each(function(){
					if (Ids=="[") {
					Ids+='"'+$(this).attr("product-id")+'"';
					} else {
					Ids+=',"'+$(this).attr("product-id")+'"';
					}
				});
				Ids+="]";
			}
	working();
		$me = $(this);
		working();
		$.ajax({
		  type: "POST",
		  url: "shopActions.php",
		  data: "shopAction=toggleStockLimitsBasketQuantity&ids="+Ids+"&stock_limits_basket_quantity="+stock_limits_basket_quantity+selectingAll+"&filterCat="+filterProductsByCategory,
		  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				if (stock_limits_basket_quantity=="1") {
					$me.addClass("bpe_current");
				} else {
					$me.removeClass("bpe_current");
				}
				$("#rightPaneProducts .listItemHighlight").each(function(){
					$(this).attr("product-sell-only-if-stock",stock_limits_basket_quantity);
				});
				selectionTools();
				saved();
		  }
		});

		return false;
	});
	$("#productChangeWeight").click(function(){
prepDialogue("<h2>"+LangVars.Change_Product_Weight_Heading+"</h2><p>"+LangVars.Change_Product_Weight_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Save,changeProductWeight,false,true,true,"productWeight");
		return false;
	});
	$("#addVolumeDiscount,#productVolumeDiscount1").click(function(){
		if (!$(this).hasClass("greyedOut")) {
		prepDialogue("<h2>"+LangVars.Add_Quantity_Discount+"</h2><p>"+LangVars.Add_Quantity_Discount_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Save,addProductVolumeDiscount,false,true,true,"productVolume1Discount");
		}
		return false;
	});
	$("#addVolumeDiscount2,#productVolumeDiscount2").click(function(){
		if (!$(this).hasClass("greyedOut")) {
		prepDialogue("<h2>"+LangVars.Add_Quantity_Discount+"</h2><p>"+LangVars.Add_Quantity_Discount_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Save,addProductVolumeDiscount2,false,true,true,"productVolume2Discount");
		}
		return false;
	});
	$("#productChangeOnlyOne").click(function(){
		changeOnlyOne();
		return false;
	});
	$("#productChangeSeparateOptionsStock").click(function(){
		changeSeparateOptionsStock();
		return false;
	});
	// Bookings


	$("#bookingsInner").on('click','#bookingsRightInner ol li',function(){
		$("#bookingsTabs a").removeClass("currenttab");
		$("#addBooking,#createBooking").hide();
		$("#editBooking").show().addClass("currenttab");
		$("#saveBooking").show();
		$("#bookingsRightInner,#bookingsRightAddBooking").hide();
		$("#bookingsRightAddBooking").show();
		$("#addBookingFirstName").val($(this).data("first-name"));
		$("#addBookingLastName").val($(this).data("last-name"));
		$("#addBookingAddress1").val($(this).data("street"));
		$("#addBookingAddressCity").val($(this).data("city"));
		$("#addBookingAddressState").val($(this).data("state"));
		$("#addBookingAddressCountry").val($(this).data("country"));
		$("#addBookingAddressZip").val($(this).data("zip"));
		$("#addBookingAddressEmail").val($(this).data("email"));
		$("#addBookingAddressPhone").val($(this).data("phone"));
		$("#addBookingAddressPayment").val($(this).data("paid"));
		$("#editBookingID").val($(this).data("buyer-id"));
		$("#editOrderID").val($(this).data("order-id"));
		$("#bookingsInner td.current").removeClass("current");
		var d = $(this).data("days");
		$(".current_add").removeClass("current_add");
		for (var i = 0; i < d.length; i++) {
			$("#bookingsInner td[data-date=\""+d[i]+"\"]").trigger("click");
		}
	}).on("change",".cms-booking-product-qty input",function(){
		cmsUpdateBookingPrices();
	}).on("keyup",".cms-booking-product-qty input",function(){
		cmsUpdateBookingPrices();
	}).on("click",".cms-booking-qty-plus",function(){
		var val = parseInt($("input",$(this).parent()).val());
		val = val+1;
		$("input",$(this).parent()).val(val);
		cmsUpdateBookingPrices();
	}).on("click",".cms-booking-qty-minus",function(){
		var val = parseInt($("input",$(this).parent()).val());
		val = val-1;
		if (val<0) {
			val=0;
		}
		if ($(this).parents(".cms-booking-product").data("adult-required")===1 && $(this).parents(".cms-booking-product").data("product-type")!==0 && $(".cms-booking-product-children-qty",$(this).parents(".cms-booking-product")).length && $(this).parents(".cms-booking-product-qty").hasClass("cms-booking-product-normal-qty")) {
			if (val===0){
				val=1;
			}
		}
		$("input",$(this).parent()).val(val);
		cmsUpdateBookingPrices();
	}).on("click","td",function(){

		$("#bookingsInner .current").removeClass("current");

		if ($("#bookingsRightAddBooking:visible").length) {

			if ($(this).hasClass("cms-booking-product-available") && !$(this).hasClass("cms-booking-product-history")) {
				if ($(this).hasClass("current_add")) {
					var addOrRemove = false;
				}  else {
					var addOrRemove = true;
				}
				if ($(this).hasClass("block_start")) {
					$(this).nextUntil(".block-end").each(function(){
						$(this).toggleClass("current_add",addOrRemove);
					}).next().toggleClass("current_add",addOrRemove);
					if ($(this).next().hasClass("block-end")) {
						$(this).next().toggleClass("current_add",addOrRemove);
					}
				}
				if ($(this).hasClass("block_middle")) {
					$(this).nextUntil(".block_end").each(function(){
						$(this).toggleClass("current_add",addOrRemove);
					}).next().toggleClass("current_add",addOrRemove);
					if ($(this).next().hasClass("block_end")) {
						$(this).next().toggleClass("current_add",addOrRemove);
					}
					$(this).prevUntil(".block_start").each(function(){
						$(this).toggleClass("current_add",addOrRemove);
					}).prev().toggleClass("current_add",addOrRemove);
					if ($(this).prev().hasClass("block_start")) {
						$(this).prev().toggleClass("current_add",addOrRemove);
					}
				}
				if ($(this).hasClass("block_end")) {
					$(this).prevUntil(".block_start").each(function(){
						$(this).toggleClass("current_add",addOrRemove);
					}).prev().toggleClass("current_add",addOrRemove);
					if ($(this).prev().hasClass("block_start")) {
						$(this).prev().toggleClass("current_add",addOrRemove);
					}
				}

				$(this).toggleClass("current_add",addOrRemove);
			}

			cmsUpdateBookingPrices();
		}  else {
			$(this).addClass("current");
		}


		showBookingDay();
		if ($(this).attr("data-bookings")!="[]"&&$(this).attr("data-bookings")!="") {
			$("#bookingsRight").show();
		}

	}).on("click","#closeBookingsRight",function(){
		$("#bookingsRight").hide();
	}).on("click","#bookingsRight li",function(){
		$("#bookingsRight .details").slideUp();
		$(".details",$(this)).slideDown();
	}).on("click","#bookingsTabs a:not(.disabled,#editBooking)",function(){
		$("#addBooking").show();
		$("#editBooking").hide();
		$("#saveBooking").hide();
		$("#createBooking").show();
		
		$("#bookingsTabs a").removeClass("currenttab");
		$(this).addClass("currenttab");
		$("#bookingsRightInner,#bookingsRightAddBooking").hide();
		$($(this).attr("href")).show();
		if ($(this).attr("href")=="#bookingsRightAddBooking") {
			$("#bookingsInner td.current").removeClass("current").trigger("click");
			
			$("#addBookingFirstName").val("");
			$("#addBookingLastName").val("");
			$("#addBookingAddress1").val("");
			$("#addBookingAddressCity").val("");
			$("#addBookingAddressState").val("");
			$("#addBookingAddressCountry").val($(this).data("country"));
			$("#addBookingAddressZip").val("");
			$("#addBookingAddressEmail").val("");
			$("#addBookingAddressPhone").val("");
			$("#addBookingAddressPayment").val("");
			

			cmsUpdateBookingPrices();
		} else {

			
			$("#bookingsInner .cms-booking-product-toomany").removeClass("cms-booking-product-toomany");

			$("#bookingsInner td.current_add:last").addClass("current");
			$("#bookingsInner td.current_add").removeClass("current_add");
			showBookingDay();
		}
		return false;
	}).on("click","#bookingsClose",function(){

		$("#bookingsOuter").hide();
		setTimeout(function () {
			$("#bookings").removeClass("visible");
			returnToLP();
		}, 5);
	}).on("change","#productList select",function(){

		$("#bookingsInner").load("shopActions.php?shopAction=showBookings&productid="+$(this).val(),function(){
			showBookingDay();
		});
	}).on('click', '#bookingAvailabilityNext,#bookingAvailabilityPrev',  function(e){
		$("#bookingsInner").load("shopActions.php?shopAction=showBookings&year="+$(this).text()+"&productid="+$("#productList select").val(),function(){
			showBookingDay();
		});
	}).on('click', '#createBooking,#saveBooking',  function(e){
		if ($("#bookingsInner .cms-booking-product-total-price span").text()=="0.00") {
			alert(LangVars.Insufficient_Availability);
			return false;
		}
		var more = "";
		if ($("#bookingsInner #specialQty").length) {
			more = more+"&special="+$("#bookingsInner #specialQty").val();
		}
		if ($("#bookingsInner #childrenQty").length) {
			more = more+"&children="+$("#bookingsInner #childrenQty").val();
		}
		more = more+"&first_name="+encodeURIComponent($("#bookingsInner #addBookingFirstName").val());
		more = more+"&last_name="+encodeURIComponent($("#bookingsInner #addBookingLastName").val());
		more = more+"&address_street="+encodeURIComponent($("#bookingsInner #addBookingAddress1").val());
		more = more+"&address_city="+encodeURIComponent($("#bookingsInner #addBookingAddressCity").val());
		more = more+"&address_state="+encodeURIComponent($("#bookingsInner #addBookingAddressState").val());
		more = more+"&address_country="+encodeURIComponent($("#bookingsInner #addBookingAddressCountry").val());
		more = more+"&address_zip="+encodeURIComponent($("#bookingsInner #addBookingAddressZip").val());
		more = more+"&payer_email="+encodeURIComponent($("#bookingsInner #addBookingAddressEmail").val());
		more = more+"&phone="+encodeURIComponent($("#bookingsInner #addBookingAddressPhone").val());
		more = more+"&mc_gross="+encodeURIComponent($("#bookingsInner #addBookingAddressPayment").val());
		if ($(this).attr("id")=="saveBooking") {
			more = more+"&edit_booking_id="+encodeURIComponent($("#bookingsInner #editBookingID").val());
			more = more+"&edit_order_id="+encodeURIComponent($("#bookingsInner #editOrderID").val());
		}
		working();
		$.ajax({
		  type: "POST",
		  url: "shopActions.php",
		  data: "shopAction=addBooking&productid="+$("#productList select").val()+"&days="+encodeURIComponent($("#bookingsInner #daysInput").val())+"&number="+$("#bookingsInner #normalQty").val()+more,
		  success: function(msg){
	  		$("#bookingsInner").load("shopActions.php?shopAction=showBookings&year="+$("#bookingsInner #bookingAvailabilityCurrent").text()+"&productid="+$("#productList select").val(),function(){
	  			showBookingDay();
				saved();
	  		});
		  }
		});

		return false;
	});


	// Booking Products
	$("#chooseRates").on("change","select",function(){
		$("#availabilityRateName").val($("#chooseRates option:selected").data("name"));
		$("#availabilityRateNormal").val($("#chooseRates option:selected").data("price-normal"));
		$("#availabilityRateNormalChildren").val($("#chooseRates option:selected").data("price-children"));
		$("#availabilityRateNormalConcessions").val($("#chooseRates option:selected").data("price-special"));
		$("#availabilityRateNormalMinPerSpace").val($("#chooseRates option:selected").data("min-price"));
		if ($("#chooseRates option:selected").val()!=0 && $("#chooseRates option").length>2) {
			$("#deleteRate").show();
		} else {
			$("#deleteRate").hide();
		}
	});
	$("#deleteRate").click(function(){
		var answer = confirm(LangVars.Delete_Rate_Confirm);
		if (answer){
			var id = $("#bookingAvailability").data("editing-product-id");

			var s = "ratesid="+$("#chooseRates select").val()+"&booking_productsid="+id;
			$.ajax({
			  type: "POST",
			  url: "shopActions.php",
				dataType:"json",
			  data: "shopAction=deleteBookingProductRate&"+s,
			  success: function(msg){
				  $("#bookingprod"+id).data("rates",msg);

		  				$("#bookingAvailabilityInner").load("shopActions.php?shopAction=showBookingAvailability&year="+$("#bookingAvailabilityCurrent").text()+"&booking_productsId="+$("#bookingAvailability").data("editing-product-id"),function(){
		  			$("#bookingAvailabilityInner .availabilityMonth td").each(function(){
		  				if ($(this).data("rate")!=0) {
		  					$(this).addClass($("#rate"+$(this).data("rate")).data("value"));
		  				}
		  			});
		  		});


				  showBookingProdRates();
					$("#chooseRates select").trigger("change");
			  }
			});
		}
		return false;
	});
	$("#manageRates").click(function(){

		var id = $("#bookingAvailability").data("editing-product-id");
		var type = $("#bookingAvailability").data("editing-product-type");
		var childrenSeparate = $("#bookingAvailability").data("editing-product-children-separate");
		var specialSeparate = $("#bookingAvailability").data("editing-product-special-separate");
		var minCharge = $("#bookingAvailability").data("editing-product-min-charge-per-space");
		$("#editOnly").hide();
		$("#addOrEdit,#chooseRates").show();
		$("#chooseRates select").trigger("change");
		if ($("#chooseRates select option").length>6) {
			$("#chooseRates select option:first").remove();
			$("#chooseRates select option:first").attr("selected","selected");
			$("#editOnly").show();
			$("#addOrEdit").hide();
			$("#chooseRates select").trigger("change");
		}
		$("#addRate").hide();
		$("#chooseRates").show();
		$("#manageBookingAvailabilityRates,#editRate").show();
		$("#availabilityRateNormalConcessions,#availabilityRateNormalChildren,#availabilityRateNormalMinPerSpace").parent().hide();
		$("#bookingProdTypeSeatOrSpace,#bookingProdTypeObject").hide();
		if (type=="1"||type=="2") {
			$("#bookingProdTypeSeatOrSpace").show();
			if (childrenSeparate=="1") {
				$("#availabilityRateNormalChildren").parent().show();
			}
			if (specialSeparate=="1") {
				$("#availabilityRateNormalConcessions").parent().show();
			}
		} else {
			$("#bookingProdTypeObject").show();
		}
		if (type=="2") {
			if (minCharge=="1") {
				$("#availabilityRateNormalMinPerSpace").parent().show();
			}
		}
		$("#addEditRate .replace-with-space-name").each(function(){
			if (type=="2") {
				$(this).html($(this).data("original-string").replace("{*}",LangVars['Booking_Prod_Name_'+$("#pane-tools-booking-products div[data-test-data=place-name] li a.bpe_current").data("lang")].toLowerCase()));
			}
		});
	});
	$("#saveEditRate").click(function(){
		var title = encodeURIComponent($("#availabilityRateName").val());
		var id = $("#bookingAvailability").data("editing-product-id");
		var normal = encodeURIComponent($("#availabilityRateNormal").val());
		var more = "";
		var empty = false;
		if (title=="") {
			empty=true;
		}
		if ($("#availabilityRateNormalChildren").parent().is(":visible")) {
			var val = encodeURIComponent($("#availabilityRateNormalChildren").val());
			more = more+"&children="+val;
			if (val=="") {
				empty=true;
			}
		}
		if ($("#availabilityRateNormalConcessions").parent().is(":visible")) {
			var val = encodeURIComponent($("#availabilityRateNormalConcessions").val());
			more = more+"&concessions="+val;
			if (val=="") {
				empty=true;
			}
		}
		if ($("#availabilityRateNormalMinPerSpace").parent().is(":visible")) {
			var val = encodeURIComponent($("#availabilityRateNormalMinPerSpace").val());
			more = more+"&min_price="+val;
			if (val=="") {
				empty=true;
			}
		}
		if (empty) {
			error(LangVars.Rate_Cant_Be_Empty);
			return false;
		}
		if ($("#chooseRates:visible").length) {
			more = more+"&ratesid="+$("#chooseRates select").val();
		} else {
			more = more+"&ratesid=0";
		}

		$.ajax({
		  type: "POST",
		  url: "shopActions.php",
			dataType:"json",
		  data: "shopAction=addBookingProductRate&name="+title+"&booking_productsid="+id+"&normal="+normal+more,
		  success: function(msg){
			  $("#bookingprod"+id).data("rates",msg);
			  showBookingProdRates();
			$("#manageBookingAvailabilityRates").fadeOut();
		  }
		});
	});
	$("#cancelEditRate").click(function(){
		if ($("#addRate:visible").length) {
			$("#bookingAvailabilityClose").trigger("click");
		} else {
			$("#manageBookingAvailabilityRates").fadeOut();
		}
	});
	$("#iconbarDeleteBookingProducts").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		if ($("#bookingProductsPaneInner .listItemHighlight").length) {
prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Product_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteBookingProducts,false,true,"");
		}
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarDuplicateBookingProducts").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		duplicateBookingProducts();
		hide_iconbar_menus();
		return false;
	});
	$("#bookingAvailabilityInner").on('click', '#bookingAvailabilityNext,#bookingAvailabilityPrev',  function(e){
		$("#bookingAvailabilityInner").load("shopActions.php?shopAction=showBookingAvailability&year="+$(this).text()+"&booking_productsId="+$("#bookingAvailability").data("editing-product-id"),function(){
			$("#bookingAvailabilityInner .availabilityMonth td").each(function(){
				if ($(this).data("rate")!=0) {
					$(this).addClass($("#rate"+$(this).data("rate")).data("value"));
				}
			});
		});
	});

	$("#bookingAvailabilityInner").on('click', '#bookingAvailabilityClose',  function(e){
		assignBookingProductsKeys();
		$("#bookingAvailability").removeClass("visible");
		setTimeout(function () {
			$("#bookingAvailabilityOuter").hide();
		}, 1000);
		livepreview();
	});
	var availabilityDragging;

	$(document).on("mouseup",function(){

		availabilityDragging=false;
		$(".dragThis",$("#bookingAvailabilityInner")).removeClass("dragThis");
		$(".availabilityDragA",$("#bookingAvailabilityInner")).addClass("availabilityDragASealed").removeClass("availabilityDragA");
		$(".availabilityDragB",$("#bookingAvailabilityInner")).addClass("availabilityDragBSealed").removeClass("availabilityDragB");
		var flip=false;
		var end=false;

		$("#bookingAvailabilityInner td:not(.greyDay)").each(function(){
			if (end) {
				if ($(this).hasClass(end)) {
					end = false;
					if (flip) {
						$(".availabilityFlip",$("#bookingAvailabilityInner")).removeClass("availabilityDragBSealed").addClass("availabilityDragASealed").removeClass("availabilityFlip");
						$(this).removeClass("availabilityDragASealed").addClass("availabilityDragBSealed");
						flip=false;
					}
				}
			} else {
				if ($(this).hasClass("availabilityDragASealed")) {
					end = "availabilityDragBSealed";
				}
				if ($(this).hasClass("availabilityDragBSealed") && !$(this).hasClass("availabilityDragASealed")) {
					end = "availabilityDragASealed";
					flip=true;
					$(this).addClass("availabilityFlip");
				}
				if ($(this).hasClass(end)) {
					end = false;
				}
			}
		});
		selectAvailabilityDays();

	});
	$("#bookingAvailabilityInner").on('mousedown', 'td:not(.greyDay)',  function(e){
		availabilityDragging=true;
		var toggle=false;
		if (!shiftDown) {
			if ($(this).hasClass("availabilityDragASealed")&&$(this).hasClass("availabilityDragBSealed")) {
				toggle=true;
			}
			$(".availabilityHighlight",$("#bookingAvailabilityInner")).removeClass("availabilityHighlight");
			$(".availabilityDragASealed",$("#bookingAvailabilityInner")).removeClass("availabilityDragASealed");
			$(".availabilityDragBSealed",$("#bookingAvailabilityInner")).removeClass("availabilityDragBSealed");
			if (toggle) {
				return false;
			}
		}

		if ($(this).hasClass("availabilityHighlight")) {
			$(this).addClass("availabilityMiddle");
			var endContender=false;
			var end=false;
			$("#bookingAvailabilityInner td:not(.greyDay)").each(function(){
				if (end) {
					if ($(this).hasClass(end)) {
						$(this).removeClass("sealed");
						return false;
					}
				} else {
					if ($(this).hasClass("availabilityDragA")) {
						$(".availabilityStartContender",$("#bookingAvailabilityInner")).removeClass("availabilityStartContender");
						$(this).addClass("availabilityStartContender");
						endContender = "availabilityDragB";
					}
					if ($(this).hasClass("availabilityDragB")) {
						$(".availabilityStartContender",$("#bookingAvailabilityInner")).removeClass("availabilityStartContender");
						$(this).addClass("availabilityStartContender");
						endContender = "availabilityDragA";
					}
					if ($(this).hasClass("availabilityMiddle")) {
						$(this).removeClass("availabilityMiddle");
						$(".availabilityStartContender",$("#bookingAvailabilityInner")).removeClass("sealed").removeClass("availabilityStartContender");
						end = endContender;
					}
				}

			});

		} else {
			$(this).addClass("availabilityDragA").addClass("availabilityDragB");
		}
		selectAvailabilityDays();

	});
	$("#bookingAvailabilityInner").on('mouseover', 'td:not(.greyDay)',  function(e){
		if (availabilityDragging) {
			var end=false;
			var collision = false;
			var collisionFound=false;

			$(".availabilityDragB:not(.sealed)",$("#bookingAvailabilityInner")).removeClass("availabilityDragB");
			$(this).addClass("availabilityDragB");

			selectAvailabilityDays();
		}
	});
	$("#bookAsCompleteBlock").click(function(e){
		if ($(this).hasClass("unavailable")) {
			return false;
		}
		if (!$(this).hasClass("selected")){
			var adding="true";
			$(this).addClass("selected");
		} else {
			var adding="false";
			$(this).removeClass("selected");
		}

		var days_start_dates = new Array();
		var days_middle_dates = new Array();
		var days_end_dates = new Array();
		$(".availabilityHighlight",$("#bookingAvailabilityInner")).each(function(){
			$(this).removeClass("block_start block_middle block_end");
			if ($(this).hasClass("availabilityDragASealed")&&!$(this).hasClass("availabilityDragBSealed")) {
				days_start_dates.push($(this).data("date"));
				if (adding=="true") {
					$(this).addClass("block_start");
				}

			}
			if (!$(this).hasClass("availabilityDragASealed")&&!$(this).hasClass("availabilityDragBSealed")) {
				days_middle_dates.push($(this).data("date"));
				if (adding=="true") {
					$(this).addClass("block_middle");
				}
			}
			if (!$(this).hasClass("availabilityDragASealed")&&$(this).hasClass("availabilityDragBSealed")) {
				days_end_dates.push($(this).data("date"));
				if (adding=="true") {
					$(this).addClass("block_end");
				}
			}

		});

		$.ajax({
		  type: "POST",
		  url: "shopActions.php",
		  data: "shopAction=toggleBookAsBlock&booking_productsid="+$("#bookingAvailability").data("editing-product-id")+"&block_start_dates="+JSON.stringify(days_start_dates)+"&block_middle_dates="+JSON.stringify(days_middle_dates)+"&block_end_dates="+JSON.stringify(days_end_dates)+"&adding="+adding,
		  success: function(msg){
			if (msg!="ok") {
				error(LangVars.Error_Will_Reload);
				setTimeout(function () {
					window.location.reload();
				}, 6000);
			}
		  }
		});
	});
	$("#bookingAvailabilityToolbar").on("click",".bookingAvailabilityPriceLabel",function(e){
		if ($(this).hasClass("bookingAvailabilityPriceLabel") && e.target.nodeName.toLowerCase()=="input") {
			return false;
		}
		if ($(this).hasClass("bookingAvailabilityPriceLabel")&&$(this).hasClass("priceCustom")&&($("input",$(this)).val()==""||$("input",$(this)).val()=="-")) {
			return false;
		}
		if (!$(this).hasClass("selected")){
			if ($(this).hasClass("bookingAvailabilityPriceLabel")) {
				$(".availabilityHighlight",$("#bookingAvailabilityInner")).removeClass("price-a price-b price-c price-d price-e price-f price-custom").removeAttr("data-custom-price").addClass($(this).attr("data-value"));
			} else {
				$(".availabilityHighlight",$("#bookingAvailabilityInner")).addClass($(this).attr("data-value"));
			}
			var adding="true";
		} else {
			var adding="false";
			if ($(this).hasClass("bookingAvailabilityPriceLabel")) {
				$(".availabilityHighlight",$("#bookingAvailabilityInner")).removeClass("price-a price-b price-c price-d price-e price-f price-custom").removeAttr("data-custom-price");
			} else {
				$(".availabilityHighlight",$("#bookingAvailabilityInner")).removeClass("notfirstday");
			}
		}
		var days = new Array();
		$(".availabilityHighlight",$("#bookingAvailabilityInner")).each(function(){
			days.push($(this).data("date"));
			$(this).data("rate",$(this).data("ratesid"));
		});
		$.ajax({
		  type: "POST",
		  url: "shopActions.php",
		  data: "shopAction=toggleRates&booking_productsid="+$("#bookingAvailability").data("editing-product-id")+"&ratesid="+$(this).data("ratesid")+"&dates="+JSON.stringify(days)+"&adding="+adding,
		  success: function(msg){
			if (msg!="ok") {
				error(LangVars.Error_Will_Reload);
				setTimeout(function () {
					window.location.reload();
				}, 6000);
			}
		  }
		});
		selectAvailabilityDays();
		return false;
	});
	$(".bookingAvailabilityPriceLabel input").keydown(function(e){
		if (e.keyCode=="13") {
			$(this).parent().trigger("click");
		}
	});
	$("#iconbarAddBookingProduct").click(function(){
		addBookingProduct();
		return false;
	});

	// Product categories
	$("#iconbarProductCategories").click(function(){
		if (!$(this).hasClass("greyedOut")) {
			if ($("#productCategoriesMenu:visible").length) {
				$("#productCategoriesMenu:visible").hide();
			} else {
				hide_iconbar_menus();
				setTicksInProdCatsMenu();
				$("#productCategoriesMenu").show();

			}
		}
		return false;
	});
	$("#iconbarSelectAllProductCategories").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		$("#rightPaneProductCategories .responsiveListItem").addClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarDeselectAllProductCategories").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		$("#rightPaneProductCategories .listItemHighlight").removeClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});

	$("#manageProductCategories").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		//hidePanes();
		$("input").unbind();
		$("#loadingMask").show();
		$(".assetPane").hide();
		hide_iconbar_menus();
		$("#rightPaneProductCategories").attr("showing-parent-id","0");


		displayProdCats("0",true);

		assignListLasso($("#productCategoriesPaneInner"));
		assignListPane($("#productCategoriesPaneInner"),editProductCategory);
		//$("#rightPaneProductCategories").show();
		$("#rightPaneProductCategoriesInner").css("width","auto");
		showPane($("#rightPaneProductCategories"),false,true);
		setTimeout(function() {$("#productCategoriesPaneInner").lovelyScroll();}, 400);

		assignProductCategoriesKeys();
		$("#loadingMask").hide();
		return false;
	});
	$("#productFilterCategories,#showAllProducts").click(function(e){
		var $target=false;
		if ($(e.target).parent().hasClass("filterLink")) {
			$target = $(e.target).parent();
		}
		if ($(e.target).hasClass("filterLink")) {
			$target = $(e.target);
		}
		if (!$target) {
			return false;
		}

		$("#productFilterCategories a,#showAllProducts").removeClass("bpe_current");
		$target.addClass("bpe_current");
		$(".target",$("#productFilterCategories").parents(".subHeaderLeftMenuItem")).text($target.attr("data-lang"));
		filterProductsByCategory=$target.attr("category-id");
		working();
		$("#productsPaneInner .insertTarget").load("shopActions.php?shopAction=showProducts&ajax=yes&initPane=yes&filterCat="+filterProductsByCategory,function(){
			saved();
			//assignRightPanePaginate("shopActions.php","shopAction=showProducts&pagination=true&ajax=true&start=","#productsPaneInner");

			setTimeout(function() {$("#productsPaneInner").lovelyScroll(pagesScrollBottomProducts);}, 400);
			assignDragAssets($("#productsPaneInner .insertTarget"));
		});
		return false;
	});
	$("#productCategoriesList").click(function(e){
		var $target=false;
		if ($(e.target).hasClass("overflowEllipsis")) {
			$target = $(e.target).parent();
		}
		if ($(e.target).hasClass("bpe_selection_tool")) {
			$target = $(e.target);
		}
		if (!$target) {
			return false;
		}

		if (!$target.hasClass("greyedOut")) {
			if ($target.hasClass("bpe_current")) {
				var action = "removeFromCat";
			} else {
				var action = "addToCat";
			}
			$clicked = $target;
			var catId = $target.attr("product-cat-id");
			if ($("body").hasClass("selectingAll")) {
				var Ids="[";
				$("#rightPaneProducts .productItemMain:not(.responsiveListItem.listItemHighlight)").each(function(){
					if (Ids=="[") {
					Ids+='"'+$(this).attr("product-id")+'"';
					} else {
					Ids+=',"'+$(this).attr("product-id")+'"';
					}
				});
				Ids+="]";
				var selectingAll = "&selectingAll=true";
			} else {
				var selectingAll = "";
				var Ids="[";
				$("#rightPaneProducts .listItemHighlight").each(function(){
					if (Ids=="[") {
					Ids+='"'+$(this).attr("product-id")+'"';
					} else {
					Ids+=',"'+$(this).attr("product-id")+'"';
					}
				});
				Ids+="]";
			}
			working();
			$.ajax({
			  type: "POST",
			  url: "shopActions.php",
			  data: "shopAction=changeInCategories&ids="+Ids+"&action="+action+"&cat="+catId+selectingAll+"&filterCat="+filterProductsByCategory,
			  success: function(msg){
		if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				$("#rightPaneProducts .listItemHighlight").each(function(){
					if (action=="addToCat") {
						if (!$("#cat"+catId,$(this)).length) {
							$(this).append("<input type='hidden' id='cat"+catId+"' value='"+catId+"' />")
						}
					} else {
						$("#cat"+catId,$(this)).remove();
					}
					var catsCSV = new Array();
					$("input[type=hidden]",$(this)).each(function(){
						catsCSV.push($(this).val());
					});
					catsCSV.sort(function(b,a){return a-b});
					var newCats="";
					for (var i = 0; i < catsCSV.length; i++) {
						if (i==0) {
							newCats=catsCSV[i];
						} else {
							newCats=newCats+","+catsCSV[i];
						}
					};
					$(this).attr("data-product-cats",newCats);
				});
				selectionTools();
				saved();
			  }
			});

		}
		return false;
	});
	$("#bottomIconbarProductCategories").click(function(){
		if ($("#actionMenuProductCategories:visible").length) {
			$("#actionMenuProductCategories:visible").hide();
		} else {
			hide_iconbar_menus();
			$("#actionMenuProductCategories").show();
		}
		return false;
	});
	$("#iconbarAddProductCategory").click(function(){
		addProductCategory();
		return false;
	});
	// Product options
	$("#editProductName").click(function(e){
		if ($(e.target)[0].tagName.toLowerCase()=="span") {
			editMe($(this));
		}
		return false;
	});
	$("#iconbarAddProductOption").click(function(){
		addProductOption();
		return false;
	});
	$("#addVolumeDiscountOptions,#productOptionsVolumeDiscount1").click(function(){
		prepDialogue("<h2>"+LangVars.Add_Quantity_Discount+"</h2><p>"+LangVars.Add_Quantity_Discount_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Save,addProductOptionsVolumeDiscount,false,true,true,"productVolume1Discount");
		return false;
	});
	$("#addVolumeDiscount2Options,#productOptionsVolumeDiscount2").click(function(){
		prepDialogue("<h2>"+LangVars.Add_Quantity_Discount+"</h2><p>"+LangVars.Add_Quantity_Discount_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Save,addProductOptionsVolumeDiscount2,false,true,true,"productVolume2Discount");
		return false;
	});
	$("#iconbarProductOptionPrice").click(function(){
		if (!$(this).hasClass("greyedOut")) {

				prepDialogue("<h2>"+LangVars.Change_Product_Price_Heading+"</h2><p>"+LangVars.Change_Product_Price_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Save,changeProductOptionPrice,false,true,true,"productOptionPrice");


		}
		return false;
	});

	$("#iconbarDeleteProductOptions").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		if ($("#rightPaneProductOptions .listItemHighlight").length) {
prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Product_Options_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteProductOption,false,true);
		}
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarSelectAllProductOptions").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		$("#rightPaneProductOptions .productOption").addClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarDeselectAllProductOptions").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		$("#rightPaneProductOptions .listItemHighlight").removeClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	// Calendars
	$("#iconbarAddCalendar").click(function(){
		addCalendar();
		return false;
	});

	$("#iconbarDeleteCalendars").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		if ($("#calendarsPaneInner .listItemHighlight").length) {
prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Calendar_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteCalendars,false,true);
		}
		hide_iconbar_menus();

		return false;
	});
	$("#iconbarSelectAllCalendars").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		$("#calendarsPaneInner .calendarItem").addClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarDeselectAllCalendars").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		$("#calendarsPaneInner .listItemHighlight").removeClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	// Events Groups
	$("#manageEventsGroups").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		//hidePanes();
		$("input").unbind();
		$("#loadingMask").show();
		$(".assetPane,#rightPaneCalendarEvents").hide();
		hide_iconbar_menus();
		displayEventGroups();
//		assignListLasso($("#eventsGroupsPaneInner"));
		assignListPane($("#eventsGroupsPaneInner"),editEventGroup);
		assignSortableListItems($("#eventsGroupsPaneInner"),"listItemHighlight","responsiveListItem");
		$("#eventsGroupsPaneInner").css("width","auto");
		showPane($("#rightPaneEventsGroups"),false,true);
		setTimeout(function() {$("#eventsGroupsPaneInner").lovelyScroll();}, 400);

		assignEventGroupKeys();
		$("#loadingMask").hide();
		return false
	});
	$("#iconbarDeleteEventsGroups").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		deleteEventGroupPrep();
		return false;
	});
	$("#iconbarAddEventsGroup").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		addEventGroup();
		return false;
	});
	$("#eventsGroupsList").click(function(e){
		var $target=false;
		if ($(e.target).hasClass("overflowEllipsis")) {
			$target = $(e.target).parent();
		}
		if ($(e.target).hasClass("bpe_selection_tool")) {
			$target = $(e.target);
		}
		if (!$target) {
			return false;
		}

		if (!$target.hasClass("greyedOut")) {
			if ($target.hasClass("bpe_current")) {
				var action = "removeFromCat";
			} else {
				var action = "addToCat";
			}
			$clicked = $target;
			var catId = $target.attr("event-group-id");
			if ($("body").hasClass("selectingAll")) {
				var Ids="[";
				$("#calendarEventsPaneInner .responsiveListItem:not(.responsiveListItem.listItemHighlight)").each(function(){
					if (Ids=="[") {
					Ids+='"'+$(this).attr("event-id")+'"';
					} else {
					Ids+=',"'+$(this).attr("event-id")+'"';
					}
				});
				Ids+="]";
				var selectingAll = "&selectingAll=true";
			} else {
				var selectingAll = "";
				var Ids="[";
				$("#calendarEventsPaneInner .listItemHighlight").each(function(){
					if (Ids=="[") {
					Ids+='"'+$(this).attr("event-id")+'"';
					} else {
					Ids+=',"'+$(this).attr("event-id")+'"';
					}
				});
				Ids+="]";
			}
			working();
			$.ajax({
			  type: "POST",
			  url: "calendarActions.php",
			  data: "calendarAction=changeInGroups&ids="+Ids+"&action="+action+"&cat="+catId+selectingAll+"&showingCat="+$("#calendarEventsDateFilter #showing_cat").val(),
			  success: function(msg){
		if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				$("#calendarEventsPaneInner .listItemHighlight").each(function(){
					if (action=="addToCat") {
						if (!$("#eventgroup"+catId,$(this)).length) {
							$(this).append("<input type='hidden' id='eventgroup"+catId+"' value='"+catId+"' />")
						}
					} else {
						$("#eventgroup"+catId,$(this)).remove();
					}
					var catsCSV = new Array();
					$("input[type=hidden]",$(this)).each(function(){
						catsCSV.push($(this).val());
					});
					catsCSV.sort(function(b,a){return a-b});
					var newCats="";
					for (var i = 0; i < catsCSV.length; i++) {
						if (i==0) {
							newCats=catsCSV[i];
						} else {
							newCats=newCats+","+catsCSV[i];
						}
					};
					$(this).attr("data-events-groups",newCats);
				});
				selectionTools();
				saved();
			  }
			});

		}
		return false;
	});
	// Events
	$("#iconbarExportEvents").click(function(){
		var showCatId = $("#calendarEventsDateFilter #showing_cat").val();
		window.location.href = "calendarActions.php?calendarAction=exportCSV&categoryid="+showCatId;
		return false;
	});
	$("#iconbarImportEvents").click(function(){
		prepDialogue("<h2>"+LangVars.Import_Events+"</h2><p>"+LangVars.Import_Events_Text+"</p>",LangVars.Cancel,cancelDialogue,LangVars.Import,importEventsCSV,false,true,true,"eventsImport");

		return false;
	});
	$("#addEventCustomField").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		prepDialogue("<h2>"+LangVars.Add_Custom_Field+"</h2><p>"+LangVars.Add_Custom_Field_Text+"</p>",LangVars.Cancel,cancelDialogue,LangVars.Add,addEventCustomField,false,true,true,"addNewsletterCustomField");
		return false;
	});
	$("#eventsCopy").click(function () {
		var Ids="[";
		$("#calendarEventsPaneInner .eventItem.listItemHighlight").each(function(){
			if (Ids=="[") {
			Ids+='"'+$(this).attr("event-id")+'"';
			} else {
			Ids+=',"'+$(this).attr("event-id")+'"';
			}
		});
		Ids+="]";
		$("#eventsPaste").removeClass("greyedOut");
		eraseCookie("eventsCut");
		eraseCookie("eventsCopy");
		createCookie("eventsCopy",Ids,0);
		hide_menus();
		
		return false;
	});
	$("#eventsCut").click(function () {
		var Ids="[";
		$("#calendarEventsPaneInner .eventItem.listItemHighlight").each(function(){
			if (Ids=="[") {
			Ids+='"'+$(this).attr("event-id")+'"';
			} else {
			Ids+=',"'+$(this).attr("event-id")+'"';
			}
		});
		Ids+="]";
		$("#eventsPaste").removeClass("greyedOut");
		eraseCookie("eventsCut");
		eraseCookie("eventsCopy");
		createCookie("eventsCut",Ids,0);
		hideCutEvents();
		hide_menus();
		
		return false;
	});
	$("#eventsPaste").click(function () {
    	if (readCookie("eventsCut")) {
			var Ids = readCookie("eventsCut");
			var action= "pasteFromCutEvent";
			eraseCookie("eventsCut");
			$("#eventsPaste").addClass("greyedOut");
    	}
    	if (readCookie("eventsCopy")) {
			var action= "pasteFromCopyEvent";			
			var Ids = readCookie("eventsCopy");
    	}

		var date = $(".dateInput",$("#calendarEventsPaneInner .eventForm")).val();
		var splitd = date.split("/");
		
		var showCatId = $("#calendarEventsDateFilter #showing_cat").val();

		var showCatString = "&showCat="+showCatId;
		var addToCatString = "&addToCat="+showCatId;
		
		
		working();
		$.ajax({
		  type: "POST",
		  url: "calendarActions.php",
		  data: "calendarAction="+action+"&ids="+Ids+"&date="+date+addToCatString,
		  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

				month = splitd[1];
				year = splitd[2];
				day = splitd[0];
				$("#calendarEventsDateFilter").load("/actions/ShowCal/?month="+month+"&year="+year+"&day="+day+showCatString,function(){
	
					$("#calendarEventsPaneInner .eventForm .focus").val("");
					$("#calendarEventsPaneInner .eventForm .focus").unbind();
					$("#calendarEventsPaneInner .eventForm").hide();

					$target = $("#rightPaneCalendarEvents .selectedDay");
					$("#calendarEventsPaneInner .insertTarget").html($(".eventList",$target).html());
					setTimeout(function() {$("#calendarEventsPaneInner").lovelyScroll();}, 400);
	
					setTimeout(function() {
						$("#calendarEventsPaneInner .insertTarget .eventItem:first").addClass("listItemHighlight");
						$(".addEventFake").unbind().click(function(){
							addEvent();
							return false;
						});
						assignListLasso($("#rightPaneCalendarEvents"));
						assignListPane($("#rightPaneCalendarEvents .insertTarget"),editCalendarEvents);
						assignCalendarEventsKeys();
						hideCutEvents();
						hide_menus();
						
						selectionTools();
		
					}, 10);

					saved();
				});
		  }
		});
		
		return false;
	});
	$("#iconbarAddCalendarEvent").click(function(){
		addEvent();
		return false;
	});
	$("#editCalendarName").click(function(e){
		if ($(e.target)[0].tagName.toLowerCase()=="span") {
			editMe($(this));
		}
		return false;
	});
	$("#calendarEventsDateFilter").click(function(e){
		$target = $(e.target);
		if ($target.attr("id")=="prev_month") {
			month = $("#calendarEventsDateFilter #prev_month_val").val();
			year = $("#calendarEventsDateFilter #prev_month_year").val();
			var showCatId = $("#calendarEventsDateFilter #showing_cat").val();
			var showCatString = "&showCat="+showCatId;
			working();
			$("#calendarEventsDateFilter").load("/actions/ShowCal/?month="+month+"&year="+year+showCatString,function(){
				saved();
			});
		}
		if ($target.attr("id")=="next_month") {
			month = $("#calendarEventsDateFilter #next_month_val").val();
			year = $("#calendarEventsDateFilter #next_month_year").val();
			var showCatId = $("#calendarEventsDateFilter #showing_cat").val();
			var showCatString = "&showCat="+showCatId;
			working();
			$("#calendarEventsDateFilter").load("/actions/ShowCal/?month="+month+"&year="+year+showCatString,function(){
				saved();
			});
		}
		if ($target[0].tagName.toLowerCase()=="td" || $target.parents("td").length) {
			if ($target.parents("td").length) {
				$target = $target.parents("td");
			}
			$("#calendarEventsDateFilter .selectedDay").removeClass("selectedDay");
			$target.addClass("selectedDay");
			var month = $("#calendarEventsDateFilter #current_month_text").val();
			var year = parseInt($("#calendarEventsDateFilter #current_year").val());
			if ($target.hasClass("prevMonth")) {
				month = $("#calendarEventsDateFilter #prev_month_text").val();
				year = year-1;
			}
			if ($target.hasClass("nextMonth")) {
				month = $("#calendarEventsDateFilter #next_month_text").val();
				year = year+1;
			}
			$("#calendarEventsDateFilterButton").html($target.attr("day")+" "+month+" "+year);
			if ($(".eventList .eventItem",$target).length) {
				$("#calendarEventsPaneInner .insertTarget").html($(".eventList",$target).html());
			} else {
				$("#calendarEventsPaneInner .insertTarget").html($(".eventList",$target).html()+"<div class='noPages'>"+LangVars.There_Are_No_Events_For+" "+$target.attr("day")+" "+month+" "+year+"</div>");
			}
			hideCutEvents();
		hide_iconbar_menus();
			
			setTimeout(function() {$("#calendarEventsPaneInner").lovelyScroll();}, 400);

			setTimeout(function() {
				$(".addEventFake").unbind("click").click(function(){
					addEvent();
					return false;
				});
			}, 10);


		}
		return false;

	});


	$("#iconbarDeleteCalendarEvents").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		if ($("#rightPaneCalendarEvents .listItemHighlight").length) {
prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Calendar_Event_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteCalendarEvents,false,true);
		}
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarSelectAllCalendarEvents").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		$("#calendarEventsPaneInner .eventItem").addClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarDeselectAllCalendarEvents").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		$("#calendarEventsPaneInner .listItemHighlight").removeClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	// Tables
	$("#iconbarDeleteTables").click(function(){
		if ($("#tablesPaneInner .listItemHighlight").length) {
			prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Tables_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteTables,false,true);
		}
	});
	$("#tableHeadersJS a").click(function(){
		var newValue = $(this).data("item-value");
		var Ids="[";
		$("#tablesPane .listItemHighlight").each(function(){
			if (Ids=="[") {
			Ids+='"'+$(this).attr("table-id")+'"';
			} else {
			Ids+=',"'+$(this).attr("table-id")+'"';
			}
		});
		Ids+="]";

		working();
		$.ajax({
		  type: "POST",
		  url: "tablesActions.php",
		  data: "tablesAction=changeHeaders&ids="+Ids+"&headers="+newValue,
		  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

				$("#tablesPane .insertTarget .listItemHighlight").each(function(){
					$(this).attr("data-table-header",newValue);
				});
				selectionTools();
				saved();
		
		  }
		});
	});
	$("#iconbarAddTable").click(function(){
		addTable();
		return false;
	});
	
	// Snippets
	$("#iconbarAddSnippet").click(function(){
		addSnippet();
		return false;
	});

	$("#iconbarDeleteSnippets").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		if ($("#snippetsPaneInner .listItemHighlight").length) {
prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Snippets_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteSnippets,false,true);
		}
		return false;
	});
	$("#iconbarDuplicateSnippets").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		if ($("#snippetsPaneInner .listItemHighlight").length) {
			duplicateSnippets();
		}
		return false;
	});
	$("#iconbarSelectAllSnippets").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		$("#snippetsPaneInner .snippetItem").addClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarDeselectAllSnippets").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		$("#snippetsPaneInner .listItemHighlight").removeClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});

	// Snippet categories
	$("#manageSnippetCategories").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		//hidePanes();
		$("input").unbind();
		$("#loadingMask").show();
		$(".assetPane").hide();
		hide_iconbar_menus();
		displaySnippetCats();
		assignListLasso($("#snippetCategoriesPaneInner"));
		assignListPane($("#snippetCategoriesPaneInner"),editSnippetCategory);
		$("#rightPaneSnippetCategoriesInner").css("width","auto");
		showPane($("#rightPaneSnippetCategories"),false,true);
		setTimeout(function() {$("#snippetCategoriesPaneInner").lovelyScroll();}, 400);

		assignSnippetCategoriesKeys();
		$("#loadingMask").hide();
		return false
	});
	$("#iconbarDeleteSnippetCategories").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		deleteSnippetCategoriesPrep();
		return false;
	});
	$("#iconbarAddSnippetCategory").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		addSnippetCategory();
		return false;
	});
	$("#snippetFilterCategories,#showAllSnippets").click(function(e){
		var $target=false;
		if ($(e.target).parent().hasClass("filterLink")) {
			$target = $(e.target).parent();
		}
		if ($(e.target).hasClass("filterLink")) {
			$target = $(e.target);
		}
		if (!$target) {
			return false;
		}

		$("#snippetFilterCategories a,#showAllSnippets").removeClass("bpe_current");
		$target.addClass("bpe_current");
		$(".target",$("#snippetFilterCategories").parents(".subHeaderLeftMenuItem")).text($target.attr("data-lang"));
		filterSnippetsByCategory=$target.attr("category-id");
		working();
		$("#snippetsPaneInner .insertTarget").load("snippetsActions.php?snippetsAction=showSnippets&rightPane=&filterCat="+filterSnippetsByCategory,function(){
			saved();
			//assignRightPanePaginate("shopActions.php","shopAction=showProducts&pagination=true&ajax=true&start=","#productsPaneInner");

			setTimeout(function() {$("#snippetsPaneInner").lovelyScroll(pagesScrollBottomSnippets);}, 400);
			assignDragAssets($("#snippetsPaneInner .insertTarget"));
		});
		hide_menus();
		return false;
	});
	$("#snippetCategoriesList").click(function(e){
		var $target=false;
		if ($(e.target).hasClass("overflowEllipsis")) {
			$target = $(e.target).parent();
		}
		if ($(e.target).hasClass("bpe_selection_tool")) {
			$target = $(e.target);
		}
		if (!$target) {
			return false;
		}

		if (!$target.hasClass("greyedOut")) {
			if ($target.hasClass("bpe_current")) {
				var action = "removeFromCat";
			} else {
				var action = "addToCat";
			}
			$clicked = $target;
			var catId = $target.attr("snippet-cat-id");
			if ($("body").hasClass("selectingAll")) {
				var Ids="[";
				$("#rightPaneSnippets .snippetItem:not(.responsiveListItem.listItemHighlight)").each(function(){
					if (Ids=="[") {
					Ids+='"'+$(this).attr("snippet-id")+'"';
					} else {
					Ids+=',"'+$(this).attr("snippet-id")+'"';
					}
				});
				Ids+="]";
				var selectingAll = "&selectingAll=true";
			} else {
				var selectingAll = "";
				var Ids="[";
				$("#rightPaneSnippets .listItemHighlight").each(function(){
					if (Ids=="[") {
					Ids+='"'+$(this).attr("snippet-id")+'"';
					} else {
					Ids+=',"'+$(this).attr("snippet-id")+'"';
					}
				});
				Ids+="]";
			}
			working();
			$.ajax({
			  type: "POST",
			  url: "snippetsActions.php",
			  data: "snippetsAction=changeInCategories&ids="+Ids+"&action="+action+"&cat="+catId+selectingAll+"&filterCat="+filterSnippetsByCategory,
			  success: function(msg){
		if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				$("#rightPaneSnippets .listItemHighlight").each(function(){
					if (action=="addToCat") {
						if (!$("#snipcat"+catId,$(this)).length) {
							$(this).append("<input type='hidden' id='snipcat"+catId+"' value='"+catId+"' />")
						}
					} else {
						$("#snipcat"+catId,$(this)).remove();
					}
					var catsCSV = new Array();
					$("input[type=hidden]",$(this)).each(function(){
						catsCSV.push($(this).val());
					});
					catsCSV.sort(function(b,a){return a-b});
					var newCats="";
					for (var i = 0; i < catsCSV.length; i++) {
						if (i==0) {
							newCats=catsCSV[i];
						} else {
							newCats=newCats+","+catsCSV[i];
						}
					};
					$(this).attr("data-snippet-categories",newCats);
				});
				selectionTools();
				saved();
			  }
			});

		}
		return false;
	});
	$("#pinSnippetCat").click(function(){
		hardRetrunToLP=true;
		working();
		if ($(this).hasClass("bpe_current")) {
			var action = "remove";
		} else {
			var action = "add";
		}
		var Ids="[";
		$("#rightPaneSnippetCategories .listItemHighlight").each(function(){
			if (Ids=="[") {
			Ids+='"'+$(this).attr("snippet-category-id")+'"';
			} else {
			Ids+=',"'+$(this).attr("snippet-category-id")+'"';
			}
		});
		Ids+="]";

		$.ajax({
		  type: "POST",
		  url: "snippetsActions.php",
		  data: "snippetsAction=togglePinned&ids="+Ids+"&action="+action,
		  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			$("#rightPaneSnippetCategories .listItemHighlight").each(function(){
				if (action=="add") {
				$(this).attr("data-pinned","1");
				} else {
				$(this).attr("data-pinned","0");
				}

			});
			$("#snippetCategoriesList").show().load("snippetsActions.php?snippetsAction=showCategories",function(){
				saved();
				selectionTools();
			});

		  }
		});
	});
	// Mailing List
	var displayingCampaigns;
	function showCampaigns() {
		$("#campaignsInner").load("/admin/newsletterActions.php?newsletterAction=showCampaigns");
	}
	var campaignToAbort;
	function abortCampaign() {
		working();
		$.ajax({
		  type: "POST",
		  url: "newsletterActions.php",
		  data: "newsletterAction=abort&abortid="+campaignToAbort,
		  success: function(msg){
			 if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				saved();
				hide_menus();
				cancelDialogue();
		  }
		});

	}
	$("#campaignsInner").on('click', '.abort',  function(e){
		campaignToAbort=$(this).attr("abortid");
		prepDialogue("<h2>"+LangVars.Abort_Remaining+"</h2><p>"+LangVars.Abort_Remaining_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Yes,abortCampaign,false,true,false,"");
	}).on('click', '.title a',  function(e){
		window.open($(this).attr("href"),'_blank');
		return false;
	});
	$("#showCampaigns").click(function(){
		$(window).trigger("resize");
		$("#campaigns").addClass("show");
		showCampaigns();
		displayingCampaigns = setInterval(showCampaigns,2000);
		return false;
	});
	$("#closeCampaigns").click(function(){
		clearTimeout(displayingCampaigns);
		$("#campaigns").removeClass("show");
		return false;
	});
	$("#iconbarMailingListAutoresponder").click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		if ($("#newsletterPaneInner .listItemHighlight").length) {
			if ($("#newsletterPaneInner .listItemHighlight[group-id=]").length) {
				error(LangVars.Not_On_Default_Mailing_List);
			} else {
					prepDialogue("<h2>"+LangVars.AutoResponder+"</h2><p>"+LangVars.MailingListAutoResponder_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Done,changeMailingListAutoresponder,false,true,true,"mailingListAutoresponder");
			}

		}
		return false;
	});

	$("#changeMailingListAutoresponderContent").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		logTrainingClick("clickMailingListContent");
		showLightPages(changeMailingListAutoresponderContent,"showTop",true,LangVars.Choose_page);
		return false;
	});

	$("#iconbarAddMailingList").click(function(){
		addMailingList();
		return false;
	});
	$("#iconbarDeleteNewsletter").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		deleteMailingListPrep();
		return false;
	});
	$("#iconbarSelectAllNewsletter").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		$("#newsletterPaneInner .responsiveListItem").addClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarDeselectAllNewsletter").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		$("#newsletterPaneInner .listItemHighlight").removeClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	$("#changeMailingListSubject").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		logTrainingClick("clickMailingListSubject");
		prepDialogue("<h2>"+LangVars.Change_Mailing_List_Subject_Heading+"</h2><p>"+LangVars.Change_Mailing_List_Subject_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Save,changeMailingListSubject,false,true,true,"newsletterSubject");

		return false
	});
	$("#changeMailingListPageContent").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		logTrainingClick("clickMailingListContent");
		showLightPages(changeMailingListPageContent,"showTop",true,LangVars.Choose_page);
		return false;
	});


	$("#notifyMeChange").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		if ($(this).hasClass("bpe_current")) {
			var notifyMe = "";
		} else {
			var notifyMe = "yes";
		}
		$me = $(this);
		working();
		$.ajax({
		  type: "POST",
		  url: "newsletterActions.php",
		  data: "newsletterAction=toggleNotifyMe",
		  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				if (msg=="1") {
					$me.addClass("bpe_current");
				} else {
					$me.removeClass("bpe_current");
				}
				saved();
		  }
		});
		return false;
	});
	$("#newsletterFromSetting").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		logTrainingClick("clickMailingListFrom");
		prepDialogue("<h2>"+LangVars.From_Title+"</h2><p>"+LangVars.From_Info+"</p>",LangVars.Cancel,cancelDialogue,LangVars.Save,changeMailingListFrom,false,true,true,"newsletterFrom");
		return false;
	});
	$("#newsletterSMTPSetting").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		prepDialogue("<h2>"+LangVars.SMTP_Title+"</h2><p>"+LangVars.Newsletter_SMTP_Info+"</p>",LangVars.Cancel,cancelDialogue,LangVars.Save,changeMailingListSMTP,false,true,true,"newsletterSMTP");
		return false;
	});
// subscribers

	$("#iconbarAddSubscriber").click(function(){
		newSubscriber();
		return false;
	});
	$("#editNewsletterSubscribersTitle").click(function(e){
		if ($(e.target)[0].tagName.toLowerCase()=="span") {
			editMe($(this));
		}
	});
	$("#iconbarStatusSubscribers").click(function(){
		if (!$(this).hasClass("greyedOut")) {
			if ($("#statusMenuSubscribers:visible").length) {
				$("#statusMenuSubscribers:visible").hide();
			} else {
				hide_iconbar_menus();
				$("#statusMenuSubscribers").show();
			}
		}
		return false;
	});
	$("#iconbarImportSubscribers").click(function(){
		prepDialogue("<h2>"+LangVars.Import_Subscribers+"</h2><p>"+LangVars.Import_Subscribers_Text+"</p>",LangVars.Cancel,cancelDialogue,LangVars.Import,importNewsletterCSV,false,true,true,"newsletterImport");

		return false;
	});
	$("#iconbarExportSubscribers").click(function(){
		window.location.href = "newsletterActions.php?newsletterAction=exportCSV&filterCat="+filterSubscribersByCategory+filterSubscribersByCategoryMatchAll+filterSubscribersByStatus;
		return false;
	});

	$("#subActive").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		toggleSubInactive("");
		return false;
	});
	$("#subInactive").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		toggleSubInactive("yes");
		return false;
	});
	$("#addNewsletterCustomField").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		prepDialogue("<h2>"+LangVars.Add_Custom_Field+"</h2><p>"+LangVars.Add_Custom_Field_Text+"</p>",LangVars.Cancel,cancelDialogue,LangVars.Add,addNewsletterCustomField,false,true,true,"addNewsletterCustomField");
		return false;
	});
	$("#iconbarDeleteNewsletterSubscribers").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		deleteSubscribersPrep();
		return false;
	});
	$("#iconbarSelectAllNewsletterSubscribers").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		$("#newsletterSubscribersPaneInner .responsiveListItem").addClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarDeselectAllNewsletterSubscribers").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		$("#newsletterSubscribersPaneInner .listItemHighlight").removeClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	$("#subscriberCustomFields").click(function(e) {
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		if ($(e.target).hasClass("paneToolTextItem")) {
			$("#subscriberCustomFields .editingField").removeClass("editingField");
			$(e.target).addClass("editingField");
			prepDialogue("<h2>"+$(e.target).prev().html()+"</h2>",LangVars.Cancel,cancelDialogue,LangVars.Save,changeNewsletterCustomField,false,true,true,"changeNewsletterCustomField");
		}
		return false;
	});
	
	// Subscriber categories
	$("#manageSubscriberCategories").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		//hidePanes();
		$("input").unbind();
		$("#loadingMask").show();
		$(".assetPane,#rightPaneNewsletterSubscribers").hide();
		hide_iconbar_menus();
		displaySubscriberCats();
		assignListLasso($("#subscriberCategoriesPaneInner"));
		assignListPane($("#subscriberCategoriesPaneInner"),editSubscriberCategory);
		$("#rightPaneSubscriberCategoriesInner").css("width","auto");
		showPane($("#rightPaneSubscriberCategories"),false,true);
		setTimeout(function() {$("#subscriberCategoriesPaneInner").lovelyScroll();}, 400);

		assignSubscriberCategoriesKeys();
		$("#loadingMask").hide();
		return false
	});
	$("#iconbarDeleteSubscriberCategories").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		deleteSubscriberCategoriesPrep();
		return false;
	});
	$("#iconbarAddSubscriberCategory").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		addSubscriberCategory();
		return false;
	});
	function showEmails() {
		working();
		$("#newsletterSubscribersPaneInner .insertTarget").load("newsletterActions.php?newsletterAction=showEmails&filterCat="+filterSubscribersByCategory+filterSubscribersByCategoryMatchAll+filterSubscribersByStatus,function(){
			saved();
			setTimeout(function() {$("#newsletterSubscribersPaneInner").lovelyScroll(pagesScrollMailingListSubs);}, 400);
			assignDragAssets($("#newsletterSubscribersPaneInner .insertTarget"));
		});
		//hide_menus();
	}
	$("#subscriberFilterCategoriesMatchAll").click(function(){
		if ($(this).hasClass("bpe_current")) {
			$(this).removeClass("bpe_current");
			filterSubscribersByCategoryMatchAll="&matchAll=false";
		} else {
			$(this).addClass("bpe_current");
			filterSubscribersByCategoryMatchAll="&matchAll=true";
		}
		showEmails();
		return false;
	});
	$("#statusShowAnySubscribers").click(function(){
		$("#statusShowAnySubscribers,#statusShowActiveSubscribers,#statusShowInactiveSubscribers").removeClass("bpe_current");
		$(this).addClass("bpe_current");
		filterSubscribersByStatus="";
		showEmails();
		return false;
	});
	$("#statusShowActiveSubscribers").click(function(){
		$("#statusShowAnySubscribers,#statusShowActiveSubscribers,#statusShowInactiveSubscribers").removeClass("bpe_current");
		$(this).addClass("bpe_current");
		filterSubscribersByStatus="&filterStatus=";
		showEmails();
		return false;
	});
	$("#statusShowInactiveSubscribers").click(function(){
		$("#statusShowAnySubscribers,#statusShowActiveSubscribers,#statusShowInactiveSubscribers").removeClass("bpe_current");
		$(this).addClass("bpe_current");
		filterSubscribersByStatus="&filterStatus=yes";
		showEmails();
		return false;
	});
	$("#subscriberFilterCategories,#showAllSubscribers").click(function(e){
		var $target=false;
		if ($(e.target).parent().hasClass("filterLink")) {
			$target = $(e.target).parent();
		}
		if ($(e.target).hasClass("filterLink")) {
			$target = $(e.target);
		}
		if (!$target) {
			return false;
		}

		$("#showAllSubscribers").removeClass("bpe_current");
		if ($target.attr("category-id")=="") {
			$("#subscriberFilterCategories a").removeClass("bpe_current");
		}
		if ($target.hasClass("bpe_current") && !$target.attr("category-id")=="") {
			$target.removeClass("bpe_current")
		} else {
			$target.addClass("bpe_current");
		}
		filterSubscribersByCategory="";
		$("#subscriberFilterCategories a.bpe_current").each(function(){
			if (filterSubscribersByCategory!="") {
				var comma = ",";
			} else {
				var comma = "";
			}
			filterSubscribersByCategory=filterSubscribersByCategory+comma+$(this).attr("category-id");

		});
		if (filterSubscribersByCategory=="") {
			$("#showAllSubscribers").addClass("bpe_current");
		}
		var label  ="";
		$("#subscriberFilterCategories a.bpe_current,#showAllSubscribers.bpe_current").each(function(){
			if (label!="") {
				var comma = ",";
			} else {
				var comma = "";
			}
			label=label+comma+$(this).attr("data-lang");
		});
		$(".target",$("#subscriberFilterCategories").parents(".subHeaderLeftMenuItem")).text(label);

		showEmails();
		return false;
	});
	$("#subscriberCategoriesList").click(function(e){
		var $target=false;
		if ($(e.target).hasClass("overflowEllipsis")) {
			$target = $(e.target).parent();
		}
		if ($(e.target).hasClass("bpe_selection_tool")) {
			$target = $(e.target);
		}
		if (!$target) {
			return false;
		}

		if (!$target.hasClass("greyedOut")) {
			if ($target.hasClass("bpe_current")) {
				var action = "removeFromCat";
			} else {
				var action = "addToCat";
			}
			$clicked = $target;
			var catId = $target.attr("subscriber-cat-id");
			if ($("body").hasClass("selectingAll")) {
				var Ids="[";
				$("#rightPaneNewsletterSubscribers .responsiveListItem:not(.responsiveListItem.listItemHighlight)").each(function(){
					if (Ids=="[") {
					Ids+='"'+$(this).attr("subscriber-id")+'"';
					} else {
					Ids+=',"'+$(this).attr("subscriber-id")+'"';
					}
				});
				Ids+="]";
				var selectingAll = "&selectingAll=true";
			} else {
				var selectingAll = "";
				var Ids="[";
				$("#rightPaneNewsletterSubscribers .listItemHighlight").each(function(){
					if (Ids=="[") {
					Ids+='"'+$(this).attr("subscriber-id")+'"';
					} else {
					Ids+=',"'+$(this).attr("subscriber-id")+'"';
					}
				});
				Ids+="]";
			}
			working();
			$.ajax({
			  type: "POST",
			  url: "newsletterActions.php",
			  data: "newsletterAction=changeInCategories&ids="+Ids+"&action="+action+"&cat="+catId+selectingAll+"&filterCat="+filterSubscribersByCategory+filterSubscribersByCategoryMatchAll+filterSubscribersByStatus,
			  success: function(msg){
		if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				$("#rightPaneNewsletterSubscribers .listItemHighlight").each(function(){
					if (action=="addToCat") {
						if (!$("#subcat"+catId,$(this)).length) {
							$(this).append("<input type='hidden' id='subcat"+catId+"' value='"+catId+"' />")
						}
					} else {
						$("#subcat"+catId,$(this)).remove();
					}
					var catsCSV = new Array();
					$("input[type=hidden]",$(this)).each(function(){
						catsCSV.push($(this).val());
					});
					catsCSV.sort(function(b,a){return a-b});
					var newCats="";
					for (var i = 0; i < catsCSV.length; i++) {
						if (i==0) {
							newCats=catsCSV[i];
						} else {
							newCats=newCats+","+catsCSV[i];
						}
					};
					$(this).attr("data-subscriber-categories",newCats);
				});
				selectionTools();
				saved();
			  }
			});

		}
		return false;
	});

	// Blog
	$("#iconbarBlogOrganise").click(function(){
		if (!$(this).hasClass("greyedOut")) {
			if ($("#organiseMenuBlog:visible").length) {
				$("#organiseMenuBlog:visible").hide();
			} else {
				hide_iconbar_menus();
				logTrainingClick("iconbarBlogOrganise"+blogOrganiseClick);
				$("#organiseMenuBlog").show();

			}
		}
		return false;
	});
	$("#manageAuthors").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		$("input").unbind();
		$("#loadingMask").show();
		$("#rightPaneBlog").hide();
		hide_iconbar_menus();
		logTrainingClick("iconbarBlogManageAuthors");
		$("#blogAuthorsPaneInner .insertTarget").html("");
		$("#blogAuthorsPaneInner .insertTarget").append($("#blogPaneInner #authorsMenuList .addBlogAuthor").clone());
		$("#blogAuthorsPaneInner .insertTarget").append("<div class='dropzone'><div></div></div>");
		if (!$("#blogAuthorsList a").length) {
			$("#blogAuthorsPaneInner .insertTarget").append("<div class='noPages'>"+LangVars.No_Blog_Authors+"</div>");
		}
		$("#blogAuthorsList a.authorItem").each(function(){
			$("#blogAuthorsPaneInner .insertTarget").append("<div class='responsiveListItem' blog-author-id='"+$(this).attr("blog-author-id")+"' blog-author-bio=\""+htmlentities($(this).attr("blog-author-bio"))+"\"><span class='overflowEllipsis'>"+$(this).attr("data-lang")+"</span></div><div class='responsiveListAddForm inline' style='display:none'><div class='imageContextEditFieldset'><div class='imageContextEditLabel'>"+LangVars.Blog_Author_Name+"</div><div class='imageContextEditInputWrap'><input type='text' name='' class='focus newBlogAuthorName' value=\""+$(this).attr("data-lang")+"\" original=\""+$(this).attr("data-lang")+"\"/></div></div><div class='imageContextEditFieldset'><div class='imageContextEditLabel'>"+LangVars.Blog_Author_Bio+"</div><div class='imageContextEditInputWrap'><input type='text' name='' class='newBlogAuthorBio' value=\""+htmlentities($(this).attr("blog-author-bio"))+"\" original=\""+htmlentities($(this).attr("blog-author-bio"))+"\" /></div></div></div><div class='dropzone'><div></div></div>");
		});
		assignListLasso($("#blogAuthorsPaneInner"));
		assignListPane($("#blogAuthorsPaneInner"),editBlogAuthor);
		assignBlogAuthorsKeys();

		$("#rightPaneBlogAuthors").show();
		$("#blogAuthorsPaneInner").lovelyScroll();
		$("#loadingMask").hide();
    $(window).trigger("resize");
		return false;
	});
	$("#manageCategories").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		hidePanes();
		$("input").unbind();
		$("#loadingMask").show();
		$("#rightPaneBlog").hide();
		hide_iconbar_menus();
		$("#blogCategoriesPaneInner .insertTarget").html("");
		$("#blogCategoriesPaneInner .insertTarget").append($("#blogPaneInner #catsMenuList .addBlogCategory").clone());
		$("#blogCategoriesPaneInner .insertTarget").append("<div class='dropzone'><div></div></div>");
		if (!$("#blogCategoriesList a").length) {
			$("#blogCategoriesPaneInner .insertTarget").append("<div class='noPages'>"+LangVars.No_Blog_Categories+"</div>");
		}
		$("#blogCategoriesList a").each(function(){
			$("#blogCategoriesPaneInner .insertTarget").append("<div class='responsiveListItem' blog-category-id='"+$(this).attr("blog-category-id")+"' data-reverse-order=\""+$(this).attr("data-reverse-order")+"\"><span class='overflowEllipsis'>"+$(this).attr("data-lang")+"</span></div><div class=\"responsiveListAddForm inline\" action=\"\" method=\"post\" style='display:none;' rel=\""+$(this).attr("blog-category-id")+"\"><input type=\"text\" name=\"\" value=\""+$(this).attr("data-lang")+"\" class=\"focus\"	/></div><div class='dropzone'><div></div></div>");
		});
		assignListLasso($("#blogCategoriesPaneInner"));
		assignListPane($("#blogCategoriesPaneInner .insertTarget"),editBlogCategory);

		assignBlogCategoriesKeys();
		$("#rightPaneBlogCategories").show();
		$("#blogCategoriesPaneInner").lovelyScroll();
		$("#loadingMask").hide();
    $(window).trigger("resize");
		return false;
	});
	$("#blogCategoriesList").click(function(e){

		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		$this = $(e.target);
		var target=false;
		if ($this[0].tagName.toLowerCase()=="a") {
			$target = $this;
		}
		if ($this.parent()[0].tagName.toLowerCase()=="a") {
			$target = $this.parent();
		}
		if ($target) {
			var catId = $target.attr("blog-category-id");
			if ($target.hasClass("bpe_current")) {
				var action = "removeCat";
				$target.removeClass("bpe_current");
			} else {
				var action = "addCat";
				$target.addClass("bpe_current");
			}
			
			var selection = getSelectedBlogs();
			var selectingAll = selection[0];
			var Ids = selection[1];
			
			working();
			$.ajax({
			  type: "POST",
			  url: "blogActions.php",
			  data: "blogAction=change&ids="+Ids+"&action="+action+"&cat="+catId+selectingAll,
			  success: function(msg){
		if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				$("#blogPaneInner .listItemHighlight").each(function(){
					var cats = $(this).attr("blog-categories").split(",");

					if (action=="addCat") {
						cats.push(catId);
					} else {
						var index=cats.indexOf(catId);
						cats.splice(index, 1);
					}
					cats.sort(function(a,b){return a-b});
					var newCats="";
					for (var i = 0; i < cats.length; i++) {
						if (i==0) {
							newCats=cats[i];
						} else {
							newCats=newCats+","+cats[i];
						}
					};
					$(this).attr("blog-categories",newCats).attr("data-blog-categories",newCats);
					
					
				});
				if ($("#blogFilterCategoriesToUpdate a.bpe_current[blog-category-id=\""+catId+"\"]").length && action=="removeCat") {
					switchToBlog(true,true);
				} else {
					saved();					
				}
				
				
				selectionTools();

			  }
			});
		}
		return false;
	});
	$("#blogAuthorsList").click(function(e){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		$this = $(e.target);
		var target=false;
		if ($this[0].tagName.toLowerCase()=="a") {
			$target = $this;
		}
		if ($this.parent()[0].tagName.toLowerCase()=="a") {
			$target = $this.parent();
		}
		if ($target) {
			if ($target.hasClass("bpe_current")) {
				var authorId = "";
			} else {
				var authorId = $target.attr("blog-author-id");
			}

			var selection = getSelectedBlogs();
			var selectingAll = selection[0];
			var Ids = selection[1];
	
			working();
			$.ajax({
			  type: "POST",
			  url: "blogActions.php",
			  data: "blogAction=change&ids="+Ids+"&action=author&author="+authorId+selectingAll,
			  success: function(msg){
		if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				$("#blogPaneInner .listItemHighlight").attr("blog-author",authorId).attr("data-blog-author",authorId);
				$("#blogAuthorsList a").removeClass("bpe_current");
				if (authorId!="") {
					$target.addClass("bpe_current");
				}
				selectionTools();
				saved();
			  }
			});
		}
		return false;
	});
	$("#iconbarLanguageBlog").click(function(){
		if ($(this).hasClass("greyedOut")) {
			return false;
		}
		if ($("#languageMenuBlog:visible").length) {
			$("#languageMenuBlog:visible").hide();
		} else {
			hide_iconbar_menus();
			$("#languageMenuBlog").show().removeClass("inNarrow");

		}
		return false;
	});

	$("#addLanguageBlogNew").unbind().click(function(e){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}

		if ($(e.target)[0].tagName.toLowerCase()=="a") {
			if ($(e.target).hasClass("bpe_current")) {
				return false;
			}
			if ($(e.target).hasClass("changeLanguage")) {
				changeLanguageBlog($(e.target).attr("fakehref"));
			} else {
				pagesAddLanguage($(e.target));
			}

		}


		return false;
	});

	$("#iconbarDeleteBlog").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		deleteBlogPrep();
		return false;
	});
	$("#iconbarSelectAllBlog").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		$("#blogPaneInner .responsiveListItem").addClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarDeselectAllBlog").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		$("#blogPaneInner .listItemHighlight").removeClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarBlogSettings").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		logTrainingClick("blogSettings");
		if ($("#settingsMenuBlog:visible").length) {
			$("#settingsMenuBlog:visible").hide();
		} else {
			hide_iconbar_menus();
			$("#settingsMenuBlog").show().removeClass("inNarrow");
		}
		return false;
	});
	$("#newCommentApprovalToggle").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		if ($(this).hasClass("bpe_current")) {
			var action = "";
		} else {
			var action = "yes";
		}
		var el = $(this);
		$.ajax({
		  type: "POST",
		  url: "blogActions.php",
		  data: "blogAction=changeConfig&action=manual_approve&manual_approve="+action,
		  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				if (action=="yes") {
					el.addClass("bpe_current");
				} else {
					el.removeClass("bpe_current");
				}

		  }
		});
		return false;
	});
	$("#changeCommentNotificationEmail").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
			prepDialogue("<h2>"+LangVars.Change_Comment_Notification_Heading+"</h2><p>"+LangVars.Change_Comment_Notification_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Save,changeCommentNotificationEmail,false,true,true,"commentNotification");
		return false;
	});
	$("#changeSecretPass").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		prepDialogue("<h2>"+LangVars.Change_Secret_Pass_Heading+"</h2><p>"+LangVars.Change_Secret_Pass_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Save,changeSecretPass,false,true,true,"secretPass");
		return false;
	});
	$("#changeArticlePerPage").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		prepDialogue("<h2>"+LangVars.Change_Number_On_Page_Heading+"</h2><p>"+LangVars.Change_Number_On_Page_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Save,changeArticlesOnPage,false,true,true,"articlesPerPage");
		return false;
	});
	$("#iconbarStatusBlog").click(function(){
		if (!$(this).hasClass("greyedOut")) {
			if ($("#statusMenuBlog:visible").length) {
				$("#statusMenuBlog:visible").hide();
			} else {
				hide_iconbar_menus();

				var smLeft = $("#iconbarStatusBlog").offset().left;
				var ibLeft = $("#bottomIconbarBlog").offset().left;
				smLeft = smLeft-ibLeft;
				smLeft=smLeft-7;
				$("#statusMenuBlog").css("left",smLeft+"px").show();

			}
		}

		return false;
	});
	$("#blogLive").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		toggleBlogLive("yes");
		return false;
	});
	$("#blogOffline").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		toggleBlogLive("");
		return false;
	});
	$("#iconbarAddBlog").click(function(){
		addBlog();
		return false;
	});
	$("#blogMoreButton").click(function(){
		if ($("#blogMoreMenu:visible").length) {
			$("#blogMoreMenu:visible").hide();
		} else {
			hide_iconbar_menus();
			$("#blogMoreMenu").show();
		}
		return false;
	});
	$("#blogMoreSettings").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		hide_iconbar_menus();
		$("#settingsMenuBlog").show().addClass("inNarrow");

		return false;
	});
	$("#blogMoreLangs").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		if ($(this).hasClass("greyedOut")) {
			return false;
		}
		hide_iconbar_menus();
		$("#languageMenuBlog").show().addClass("inNarrow");


		return false;
	});
	// Blog authors
	$("#iconbarAddBlogAuthor").click(function(){
		addBlogAuthor();
		return false;
	});

	$("#iconbarDeleteBlogAuthors").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		deleteBlogAuthorsPrep();
		return false;
	});
	$("#iconbarSelectAllBlogAuthors").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		$("#blogAuthorsPaneInner .responsiveListItem").addClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarDeselectAllBlogAuthors").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		$("#blogAuthorsPaneInner .listItemHighlight").removeClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	// blog categories
	$("#iconbarAddBlogCategory").click(function(){
		addBlogCategory();
		return false;
	});

	$("#iconbarDeleteBlogCategories").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		deleteBlogCategoriesPrep();
		return false;
	});
	$("#reverseBlogsToggle").click(function(){
		toggleReverseBlogCats();
		return false;
	});
	$("#iconbarSelectAllBlogCategories").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		$("#blogCategoriesPaneInner .responsiveListItem").addClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarDeselectAllBlogCategories").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		$("#blogCategoriesPaneInner .listItemHighlight").removeClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	// Blog comments
	$("#iconbarToggleApprovalBlogComments").click(function(){
		if (!$(this).hasClass("greyedOut")) {
			if ($("#approvalMenuBlogComments:visible").length) {
				$("#approvalMenuBlogComments:visible").hide();
			} else {
				hide_iconbar_menus();
				$("#approvalMenuBlogComments").show();
			}
		}
		return false;
	});
	$("#commentApprove").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		blogCommentApproval("approve");
		return false;
	});
	$("#commentUnapprove").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		blogCommentApproval("unapprove");
		return false;
	});
	$("#iconbarAddBlogComment").click(function(){
		addCommentReply();
		return false;
	});

	$("#iconbarDeleteBlogComments").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		deleteBlogCommentsPrep();
		return false;
	});
	$("#iconbarSelectAllBlogComments").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		$("#blogCommentsPaneInner .responsiveListItem").addClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarDeselectAllBlogComments").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		$("#blogCommentsPaneInner .listItemHighlight").removeClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});

	// Checkout
	$("#checkoutFromSetting").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		prepDialogue("<h2>"+LangVars.From_Title+"</h2><p>"+LangVars.From_Info+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Done,changeCheckoutFrom,false,true,true,"checkoutFrom");

		return false;
	});
	$("#checkoutSMTPSetting").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
				prepDialogue("<h2>"+LangVars.SMTP_Title+"</h2><p>"+LangVars.Checkout_SMTP_Info+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Done,changeCheckoutSMTP,false,true,true,"checkoutSMTP");

		return false;
	});
	$("#iconbarCheckoutSettings").click(function(){
		if (!$(this).hasClass("greyedOut")) {
			if ($("#settingsMenuCheckout:visible").length) {
				$("#settingsMenuCheckout:visible").hide();
			} else {
				hide_iconbar_menus();

				var smLeft = $("#iconbarCheckoutSettings").offset().left;
				var ibLeft = $("#bottomIconbarCheckout").offset().left;
				smLeft = smLeft-ibLeft;
				smLeft=smLeft-7;
				$("#settingsMenuCheckout").css("left",smLeft+"px").show();

			}
		}
		return false;
	});
	$("#changePayPalEmail").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
			prepDialogue("<h2>"+LangVars.Change_PayPal_Email_Heading+"</h2><p>"+LangVars.Change_PayPal_Email_Text+"<p>",LangVars.Change_PayPal_Email_Button_No,cancelDialogue,LangVars.Change_PayPal_Email_Button_Yes,changePayPalEmail,false,true,true,"paypalEmail");
		return false;
	});
	$("#changeMerchantID").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
			prepDialogue("<h2>"+LangVars.Change_Merchant_ID_Heading+"</h2><p>"+LangVars.Change_Merchant_ID_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Save,changeMerchantID,false,true,true,"merchantID");
		return false;
	});
	$("#enableTaxCheckout").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		working();
		var el = $(this);
		if ($(this).hasClass("bpe_current")) { // turn it off
			var enable = '0';
		} else {
			var enable = '1';			
		}
		$.ajax({
		  type: "POST",
		  url: "shopActions.php",
		  data: "shopAction=saveSettings&enable_tax="+enable,
		  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			if (msg != "error") {
				if (enable=="1") {
					el.addClass("bpe_current");					
				} else {
					el.removeClass("bpe_current");					
				}

			}
			saved();
		  }
		});
		return false;
	});
	$("#taxIncludedOrExcluded").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		working();
		var el = $(this);
		if ($(this).hasClass("bpe_current")) { // turn it off
			var enable = '1';
		} else {
			var disable = '0';			
		}
		$.ajax({
		  type: "POST",
		  url: "shopActions.php",
		  data: "shopAction=saveSettings&add_tax="+enable,
		  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			if (msg != "error") {
				if (enable=="1") {
					el.removeClass("bpe_current");					
				} else {
					el.addClass("bpe_current");					
				}

			}
			saved();
		  }
		});
		return false;
	});
	$("#changeSalesTax").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		prepDialogue("<h2>"+LangVars.Change_Sales_Tax+"</h2><p>"+LangVars.Change_Sales_Tax_Info+"</p>" //text
			,LangVars.Cancel //primaryText
			,cancelDialogue //primaryFun
			,LangVars.Done //secondaryText
			,changeSalesTax //secondaryFun
			,false //primaryImportant
			,true //secondaryImportant
			,true //textField
			,"" //editingType
			,"" //linkBuilder
			,"" //url
			,"" //ids
			,"" //selectingAll
		 	,""//items
		 	,""//updateAttr
			,$(this).find(".value .overflowEllipsis").text()//prefill

		);
		return false;
	});
	$("#changeSalesTaxName").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		prepDialogue("<h2>"+LangVars.Change_Sales_Tax_Name+"</h2><p>"+LangVars.Change_Sales_Tax_Name_Info+"</p>" //text
			,LangVars.Cancel //primaryText
			,cancelDialogue //primaryFun
			,LangVars.Done //secondaryText
			,changeSalesTaxName //secondaryFun
			,false //primaryImportant
			,true //secondaryImportant
			,true //textField
			,"" //editingType
			,"" //linkBuilder
			,"" //url
			,"" //ids
			,"" //selectingAll
		 	,""//items
		 	,""//updateAttr
			,$(this).find(".value .overflowEllipsis").text()//prefill
		);
		return false;
	});
	$("#enableCheckoutMessage").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		working();
		var el = $(this);
		if ($(this).hasClass("bpe_current")) { // turn it off
			$.ajax({
			  type: "POST",
			  url: "shopActions.php",
			  data: "shopAction=saveSettings&no_note=0",
			  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				if (msg != "error") {
					el.removeClass("bpe_current");
				}
				saved();
			  }
			});
		} else { // turn it on
			$.ajax({
			  type: "POST",
			  url: "shopActions.php",
			  data: "shopAction=saveSettings&no_note=1",
			  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				if (msg != "error") {
				 	el.addClass("bpe_current");
				}
				saved();
			  }
			});
		}
		return false;
	});
	$("#changeCurrency").change(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		var id = $(this).val();
		//var el = $(this);
		$.ajax({
		  type: "POST",
		  url: "shopActions.php",
		  data: "shopAction=saveSettings&currency="+id,
		  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			if (msg != "error") {
				saved("Currency changed to "+id);
				$("#currentCurrency").html(id);

			}
		  }
		});
		return false;
	});
	$("#checkoutSuccessPage").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		showLightPages(changeSuccessPage,"showTop",true,LangVars.Choose_page);
		return false;
	});
	$("#checkoutFailPage").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		showLightPages(changeFailPage,"showTop",true,LangVars.Choose_page);
		return false;
	});
	$("#formsListSettings").change(function(){
		$(this).attr("data-current-form-checkout",$(this).val());
		$.ajax({
		  type: "POST",
		  url: "settingsActions.php",
		  data: "settingsAction=formOnCheckout&formId="+$(this).val(),
		  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

			if (msg != "ok") {
				error(LangVars.Misc_Error);
			}
		  }
		});
		return false;
	});
	$("#orderReceivedTemplate").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		prepDialogue("<h2>"+LangVars.Order_Received_Template+"</h2><p>"+LangVars.Order_Received_Template_Info.replace(/\|\|/g,"<br/>")+"<p><p class='popupExpand'>"+LangVars.Order_Received_Template_Info_Ex.replace(/\|\|/g,"<br/>")+"</p>",LangVars.Cancel,cancelDialogue,LangVars.Done,changeOrderReceivedTemplate,false,true,true,"orderReceivedTemplate");
		return false;
	});
	$("#orderDispatchedTemplate").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		prepDialogue("<h2>"+LangVars.Order_Dispatched_Template+"</h2><p>"+LangVars.Order_Dispatched_Template_Info.replace(/\|\|/g,"<br/>")+"<p><p class='popupExpand'>"+LangVars.Order_Dispatched_Template_Info_Ex.replace(/\|\|/g,"<br/>")+"</p>",LangVars.Cancel,cancelDialogue,LangVars.Done,changeOrderDispatchedTemplate,false,true,true,"orderDispatchedTemplate");
		return false;
	});

	$("#downloadCSV,#downloadCSVOpen").click(function(){
					window.open($(this).attr('href'),'null');
		return false;
	});
	$("#showInvoice").click(function(){
		if (!$(this).hasClass("unavailable")) {
			var href = $("#openOrders .listItemHighlight").data('invoice-address');
			window.open(href,'null');
		}
		return false;
	});
	$("#iconbarCheckoutDispatch").click(function(){
		if ($("#checkoutPaneInner .listItemHighlight").length) {
	prepDialogue("<h2>"+LangVars.Dispatch_Heading+"</h2><p>"+LangVars.Dispatch_Text+"<p>",LangVars.Dispatch_Button_No,cancelDialogue,LangVars.Dispatch_Button_Yes,dispatchOrders,false,true);
		}
		return false;
	});

	$("#iconbarSelectAllCheckout").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		$("#checkoutPaneInner .responsiveListItem").addClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarDeselectAllCheckout").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		$("#checkoutPaneInner .listItemHighlight").removeClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarDeleteCheckout").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		deleteOrdersPrep();
		return false;
	});

	// Dashboard
	$("#iconbarDashboardTraining").click(function(){
		if ($("#dashboardTrainingMenu:visible").length) {
			$("#dashboardTrainingMenu:visible").hide();
		} else {
			hide_iconbar_menus();

			var smLeft = $("#iconbarDashboardTraining").offset().left;
			var ibLeft = $("#bottomIconbarDashboard").offset().left;
			smLeft = smLeft-ibLeft;
			smLeft=smLeft+3;
			$("#dashboardTrainingMenu").css("left",smLeft+"px").show();

		}
		return false;
	});
	$("#systemMenuHints").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		working();
		var el = $("a",$(this));
		if (el.hasClass("bpe_current")) {
			var ht = "1";
			$(".listTipUp").hide();
		} else {
			var ht = "0";
			$(".listTipUp").show();
		}
		$.ajax({
			  type: "POST",
			  url: "adminUsersActions.php",
			  data: "adminUsersAction=hideTips&hideTips="+ht,
			  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				saved();
				if (ht=="0") {
					el.addClass("bpe_current");
					el.html(LangVars.Hide_Hints);
					$("body").removeClass("hideTips");
				} else {
					el.removeClass("bpe_current");
					el.html(LangVars.Show_Hints);
					$("body").addClass("hideTips");
				}

			  }
			});
		return false;
	});
	$("#trainingList a").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		currentTrainingSet = $(this).attr("training-set");
		currentTrainingStep = $(this).attr("first-step");

		showTraining(false);
		hide_iconbar_menus();
		return false;
	});
	$("#settingsFlyinMask,#closeSettingsFlyin").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		$("#settingsFlyinMask").fadeOut(200,function(){
			cancelDialogue();
		});
		$("#websiteSettings,#websiteSettingsPopin,#singleSetup").removeClass("selected");
		$("#settingsFlyin").animate({right:"-400px"},200,function(){
			$("#settingsFlyin").hide();
		});
		$("#themeOptions .settingsItem.editing").removeClass("editing");
		return false;
	});

	$("#lpSettings,#backToSettings,#lpDesign").click(function(){
		$("#settingsFlyinHeaderText,#designFlyinHeaderText").hide();
		if ($(this).attr("id")=="lpDesign") {
			$("#designFlyinHeaderText").show();
		} else {
			$("#settingsFlyinHeaderText").show();
		}
		dismissEditors();
		unassignKeys();
		$(this).addClass("selected");

		if (!$(".settingsGroupContent").length) {
			var settingsCell=1;
			$("#settingsFlyinInner .settingsGroupHeading").each(function(){
				$(this).hide();
				if (typeof $(this).attr("id") != "undefined") {
					var i = $(this).attr("id");
				} else {
					var i = "";
				}
				if ($(this).hasClass("design-mode")) {
					var dm = "design-mode";
				} else {
					var dm= "";
				}
				$("#settingsTwoPaneLeft").append("<div class='settingsCellButton "+dm+"' data-cell='settingsCell"+settingsCell+"' data-orig-id='"+i+"'>"+$(this).html()+"</div>");
				$(this).after("<div class='settingsGroupContent' id='settingsCell"+settingsCell+"'></div>");
				var $cell = $(this).next();
				$cell.nextAll().each(function(){
					if ($(this).hasClass("settingsGroupHeading") || $(this).hasClass("stopAtTheme")) {
						return false;
					}
					$(this).appendTo($cell);
				});
				settingsCell++;
			});
			$("#settingsFlyinInner .settingsCellButton:first").addClass("current");
			$("#settingsFlyinInner .settingsGroupContent").hide();
			$("#settingsFlyinInner .settingsGroupContent:first").show();
			$("#settingsFlyinInner .settingsCellButton").click(function(){
				var target = $(this).attr("data-cell");
				$("#settingsFlyinInner .settingsCellButton").removeClass("current");
				$(this).addClass("current");
				$("#settingsFlyinInner .settingsGroupContent").hide();
				$("#settingsFlyinInner #"+target).show();
				$("#settingsTwoPaneRight").lovelyScroll();

				if ($("#settingsTwoPaneLeft").css("right")=="auto") {
					$("#settingsTwoPaneLeft").animate({right:"100%"},300);
					$("#settingsTwoPaneRight").animate({left:"0%"},300);
					$("#backSettingsFlyinMain").fadeIn();
					$("#settingsFlyinHeaderText,#designFlyinHeaderText").html($(this).html());
				}


			});
			$("#backSettingsFlyinMain").click(function(){
				$("#settingsFlyinHeaderText").html($("#settingsFlyinHeaderText").attr("original"));
				$("#designFlyinHeaderText").html($("#designFlyinHeaderText").attr("original"));
				$("#backSettingsFlyinMain").fadeOut();
				$("#settingsTwoPaneLeft").animate({right:"0%"},300,function(){
				$("#settingsTwoPaneLeft").css("right","auto");
				});
				$("#settingsTwoPaneRight").animate({left:"100%"},300);
			});
			$(".settingsDropdown select").css("display","block");
		}
		if ($(this).attr("id")=="backToSettings") {

			$h = $("#settingsFlyinInner .settingsCellButton[data-orig-id=sitewideSettingsHeading]");
			if ($("#settingsTwoPaneLeft").css("right")=="auto") {
				$("#settingsTwoPaneLeft").animate({right:"100%"},300);
				$("#settingsTwoPaneRight").animate({left:"0%"},300);
				$("#backSettingsFlyinMain").fadeIn();
			}
			$("#settingsFlyinHeaderText,#designFlyinHeaderText").html($h.html());

			var target = $h.attr("data-cell");
			$("#settingsFlyinInner .settingsCellButton").removeClass("current");
			$h.addClass("current");
			$("#settingsFlyinInner .settingsGroupContent").hide();
			$("#settingsFlyinInner #"+target).show();
		}
		if ($(this).attr("id")=="lpDesign") {
			$(".settingsCellButton").hide();
			$(".settingsCellButton.design-mode").show();
			$("#settingsFlyinInner .settingsCellButton").removeClass("current");
			setTimeout(function () {
			$("#settingsFlyinInner .settingsCellButton.design-mode").first().addClass("current").trigger("click");				
			}, 20);

		}  else {
			$(".settingsCellButton").hide();
			$(".settingsCellButton:not(.design-mode)").show();
			setTimeout(function () {
			$(".settingsCellButton:not(.design-mode)").first().addClass("current").trigger("click");
			}, 20);
		}

		$("#settingsFlyin").show();

		$("#settingsTwoPaneLeft,#settingsTwoPaneRight").lovelyScroll();			


		//});
		//return false;
	});
	$("#settingsFlyinHeader").scroll(function(){

		justScrolled=true;
		if (scrollTimeout) {
			clearTimeout(scrollTimeout);
		}
		scrollTimeout = setTimeout(function() {
			justScrolled=false;
		},500);
	});
	$("#systemMenuStats").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}

		window.location="/admin/?stats";
		return false;
	});
	$("#systemMenuLogout,#systemMenuLogoutPopin").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}

		window.location="logout.php";
		return false;
	});


	$("#stats").append($("#statsNote"));
	$("#iconbarDashboardSettings").click(function(){
		if ($("#dashboardSettingsMenu:visible").length) {
			$("#dashboardSettingsMenu:visible").hide();
		} else {
			hide_iconbar_menus();

			var smLeft = $("#iconbarDashboardSettings").offset().left;
			var ibLeft = $("#bottomIconbarDashboard").offset().left;
			smLeft = smLeft-ibLeft;
			smLeft=smLeft-7;
			$("#dashboardSettingsMenu").css("left",smLeft+"px").show();

		}
		return false;
	});
	$("#settingsFlyinInner #themeOptions select").change(function(){

		buildThemeVars();
	});
	$("#backSettingsFlyin").click(function(){
		$("#settingsFlyinInner").animate({left:"0"});
		$("#settingsFlyinInner2").animate({left:"100%"});
		$("#backSettingsFlyin").fadeOut();
		$("#backSettingsFlyinMain.hidden").show();
		$("#settingsFlyinHeaderText").text($("#settingsFlyinHeaderText").attr("original-altered"));
		$("#designFlyinHeaderText").text($("#designFlyinHeaderText").attr("original-altered"));
		$("#themeOptions .settingsItem.editing").removeClass("editing");

	});
	$("#settingsFlyinInner .themeOptionImage:not(.video)").dropzone({
		url:"/admin/settingsActions.php"
		,clickable:true
		,paramName: "image"
		,params:{settingsAction:"addThemeImage"}
		,previewsContainer:"#null"
		,maxFilesize:m
		,acceptedMimeTypes:"image/*"
		,dictInvalidFileType:LangVars.Upload_Error_Bad_Format
		,dictResponseError:LangVars.Misc_Error
		,dictFileTooBig:LangVars.File_Too_Large
		,init: function() {
			this.on("addedfile", function() {
				working();
			}),
			this.on("sending", function(file, xhr, formData) {
				if ($(this.element).hasClass("overflowEllipsis")) {
					var $target=$(this.element).parent();
				} else {
					var $target=$(this.element);
				}
			  	formData.append("varName", $target.attr("rel"));
			});
			this.on("error", function(file,message) {
				error(message);
			}),
			this.on("success", function(file,serverData,e,t) {
				if ($(this.element).hasClass("overflowEllipsis")) {
					var $target=$(this.element).parent();
				} else {
					var $target=$(this.element);
				}
				$target.attr("value",serverData);
				buildThemeVars();
				setTimeout(function () {
					saved();
				}, 1000);
			});
  		}
	});
	$("#settingsFlyinInner .themeOptionImage.video").dropzone({
		url:"/admin/settingsActions.php"
		,clickable:true
		,paramName: "image"
		,params:{settingsAction:"addThemeImageVideo"}
		,previewsContainer:"#null"
		,maxFilesize:m
		,dictInvalidFileType:LangVars.Upload_Error_Bad_Format
		,dictResponseError:LangVars.Misc_Error
		,dictFileTooBig:LangVars.File_Too_Large
		,init: function() {
			this.on("addedfile", function() {
				working();
			}),
			this.on("sending", function(file, xhr, formData) {
				if ($(this.element).hasClass("overflowEllipsis")) {
					var $target=$(this.element).parent();
				} else {
					var $target=$(this.element);
				}
			  	formData.append("varName", $target.attr("rel"));
			});
			this.on("error", function(file,message) {
				error(message);
			}),
			this.on("success", function(file,serverData,e,t) {
				if ($(this.element).hasClass("overflowEllipsis")) {
					var $target=$(this.element).parent();
				} else {
					var $target=$(this.element);
				}
				$target.attr("value",serverData);
				buildThemeVars();
				setTimeout(function () {
					saved();
				}, 1000);
			});
  		}
	});
	$("#settingsFlyinInner2").click(function(e){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		$this = $(e.target);
		if ($this.parent().hasClass("settingsImagePreview")) {
			$clicked = $this.parent();
		}
		if ($this.parent().parent().hasClass("settingsImagePreview")) {
			$clicked = $this.parent().parent();
		}
		$("#themeOptions .settingsItem.editing").attr("var-value",$clicked.attr("option-value"));
		$("#settingsFlyinInner").animate({left:"0"});
		$("#settingsFlyinInner2").animate({left:"100%"});
		$("#backSettingsFlyin").fadeOut();
		$("#backSettingsFlyinMain.hidden").show();
		$("#settingsFlyinHeaderText").text($("#settingsFlyinHeaderText").attr("original-altered"));
		$("#designFlyinHeaderText").text($("#designFlyinHeaderText").attr("original-altered"));
		$("#themeOptions .settingsItem.editing .settingsFlyinThumb").attr("src",$("img",$clicked).attr("src"));
		$("#themeOptions .settingsItem.editing .value .overflowEllipsis").html($clicked.attr("option-display-value")).attr("title",$clicked.attr("option-display-value"));
		$("#themeOptions .settingsItem.editing").removeClass("editing");
		buildThemeVars();

	});
	$("#settingsFlyinInner").click(function(e){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}

		$this = $(e.target);
		var $themeOption = false;
		var $themeText = false;
		var $themeToggle = false;
		var $themeImage = false;
		var $themeOptionImagePreview = false;

		if ($this.attr("id")=="changeHomepage") {
			showLightPages(changeHomepage,"showTop",false,LangVars.Choose_Homepage);

			return false;
		}

		if ($this.hasClass("changeThemeOption")) {
			$themeOption = $this;
		}
		if ($this.parent().hasClass("changeThemeOption")) {
			$themeOption = $this.parent();
		}
		if ($this.hasClass("themeOptionText")) {
			$themeText = $this;
		}
		if ($this.parent().hasClass("themeOptionText")) {
			$themeText = $this.parent();
		}
		if ($this.parent().parent().hasClass("themeOptionText")) {
			$themeText = $this.parent().parent();
		}
		if ($this.hasClass("settingsDropdownImagePreviews")) {
			$themeOptionImagePreview = $this;
		}
		if ($this.parent().hasClass("settingsDropdownImagePreviews")) {
			$themeOptionImagePreview = $this.parent();
		}
		if ($this.parent().parent().hasClass("settingsDropdownImagePreviews")) {
			$themeOptionImagePreview = $this.parent().parent();
		}
		if ($this.hasClass("themeOptionToggle")) {
			$themeToggle = $this;
		}
		if ($this.parent().hasClass("themeOptionToggle")) {
			$themeToggle = $this.parent();
		}
		if ($this.hasClass("themeOptionImage")) {
			$themeImage = $this;
		}
		if ($this.hasClass("removeThemeImage")) {
			$this.parents(".themeOptionImage").attr("value","");
			buildThemeVars();
			return false;
		}
		if ($this.parent().hasClass("themeOptionImage")) {
			$themeImage = $this.parent();
		}

		if ($this.hasClass("returnTrue")) {
			window.location=$this.attr("href");
			return false;
		}
		if ($this.parent().hasClass("returnTrue")) {
			window.location=$this.parent().attr("href");
			return false;
		}

		if ($themeOption) {
			$('.themeOptionsChoices[theme-var-name="'+$themeOption.attr("theme-var-name")+'"] .bpe_current').removeClass("bpe_current");
			$('.themeOptionsChoices[theme-var-name='+$themeOption.attr("theme-var-name")+'] .changeThemeOption[href="'+$themeOption.attr("href")+'"]').addClass("bpe_current");
			$(".changeThemeOption",$themeOption.parent()).removeClass("bpe_current");
			$themeOption.addClass("bpe_current");
			buildThemeVars();
			return false;
		}
		if ($themeText) {
			$themeText.addClass("editing");	prepDialogue("<h2>"+htmlentities($themeText.attr("theme-var-display-name"))+"</h2><p>"+htmlentities($themeText.attr("theme-var-info"))+"</p>",LangVars.Cancel,cancelDialogue,LangVars.Save,changeThemeOption,false,true,true,"themeOption");
			return false;
		}
		if ($themeOptionImagePreview) {
			$("#settingsFlyinInner2 > div").html($(".imageOptions",$themeOptionImagePreview).html());

			$("#settingsFlyinInner").animate({left:"-100%"});
			$("#settingsFlyinInner2").animate({left:"0px"});
			$("#backSettingsFlyin").fadeIn();
			$("#settingsFlyinHeaderText").attr("original-altered",$("#settingsFlyinHeaderText").text());
			$("#designFlyinHeaderText").attr("original-altered",$("#designFlyinHeaderText").text());
			$("#backSettingsFlyinMain:visible").hide().addClass("hidden");
			$("#settingsFlyinHeaderText").text($themeOptionImagePreview.attr("display-name"));
			$("#designFlyinHeaderText").text($themeOptionImagePreview.attr("display-name"));
			$themeOptionImagePreview.addClass("editing");
		}
		if ($themeToggle) {
			if ($themeToggle.hasClass("bpe_current")) {
				$themeToggle.removeClass("bpe_current");
			} else {
				$themeToggle.addClass("bpe_current");
			}
			buildThemeVars();
			return false;
		}

	});

	$("#changeAdminEmail").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
			prepDialogue("<h2>"+LangVars.Change_Account_Email_Heading+"</h2><p>"+LangVars.Change_Account_Email_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Save,changeAccountEmail,false,true,true,"accountEmail");
		return false;
	});
	$("#changeAdminPassword").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
			prepDialogue("<h2>"+LangVars.Change_Account_Password_Heading+"</h2>",LangVars.Cancel,cancelDialogue,LangVars.Save,changeAccountPassword,false,true,true,"accountPassword");
		return false;
	});
	$("#systemMenuYou").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}

			prepDialogue("",LangVars.Cancel,cancelDialogue,LangVars.Save,changeYourAccount,false,true,true,"yourAccount");
		return false;
	});
	$('#systemMenuResetTips').click(function(){
		working();
		$.ajax({
		  type: "POST",
		  url: "adminUsersActions.php",
		  data: "adminUsersAction=updateViewedTips&hidenTips=",
		  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			window.location.href="/admin/";

		  }
		});
		return false;
	});
	// Livechat
	$("#iconbarLivechatSettings").click(function(){
		if (!$(this).hasClass("greyedOut")) {
			if ($("#settingsMenuLivechat:visible").length) {
				$("#settingsMenuLivechat:visible").hide();
			} else {
				hide_iconbar_menus();

				var smLeft = $("#iconbarLivechatSettings").offset().left;
				var ibLeft = $("#bottomIconbarLivechat").offset().left;
				smLeft = smLeft-ibLeft;
				smLeft=smLeft-7;
				$("#settingsMenuLivechat").css("left",smLeft+"px").show();

			}
		}
		return false;
	});
	$("#livechatStatus").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
			working();
			var el = $(this);
			if (!$(this).hasClass("bpe_current")) {
					$.ajax({
					  type: "POST",
					  url: "livechatActions.php",
					  data: "livechatAction=changeStatus&livechat_status=on",
					  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
						saved("Livechat status online");
						el.addClass("bpe_current");
						poller = setInterval(onlineFail, 30000);
						onlineFail();
					  }
					});
			} else {
					$.ajax({
					  type: "POST",
					  url: "livechatActions.php",
					  data: "livechatAction=changeStatus&livechat_status=off",
					  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
						saved("Livechat status offline");
						el.removeClass("bpe_current");
					  }
					});

			}
		return false;
	});
	$("#livechatMessage").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		prepDialogue("<h2>"+LangVars.Change_Livechat_Message_Heading+"</h2><p>"+LangVars.Change_Livechat_Message_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Save,changeLivechatMessage,false,true,true,"livechatMessage");

		return false;
	});

	$("#livechatName").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		prepDialogue("<h2>"+LangVars.Change_Livechat_Name_Heading+"</h2><p>"+LangVars.Change_Livechat_Name_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Save,changeLivechatName,false,true,true,"livechatName");

		return false;
	});

	$("#iconbarLivechatArchives").click(function(){
		if ($("#menuLivechatArchive:visible").length) {
			$("#menuLivechatArchive:visible").hide();
		} else {
			hide_iconbar_menus();
			$("#menuLivechatArchive").show();
		}
		return false;
	});
	$("#iconbarSelectAllLivechat").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		$("#livechatPaneInner .responsiveListItem").addClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarDeselectAllLivechat").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		$("#livechatPaneInner .listItemHighlight").removeClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarDeleteLivechat").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		prepDeleteLivechats();
		return false;
	});
	$("#viewLivechatLog").click(function(e){

		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		if ($(e.target)[0].tagName.toLowerCase()=="a") {
			window.open($(e.target).attr("livechat-href"),'null','toolbar=0,scrollbars=0,location=0,statusbar=0,menubar=0,resizable=0,width=311,height=349');

		}
		return false;
	});

	// Staff
	$("#iconbarNewStaff").click(function(){
		addStaff();
		return false;
	});

	$("#iconbarDeleteStaff").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
    if (!$(this).hasClass("unavailable")) {
		  prepDeleteStaff();
    }

		return false;
	});

	$("#iconbarSelectAllStaff").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		$("#rightPaneStaff .responsiveListItem").addClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarDeselectAllStaff").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		$("#rightPaneStaff .listItemHighlight").removeClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	$("#resetStaffPassword").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		prepDialogue("<h2>"+LangVars.Reset_Password+"</h2>",LangVars.Cancel,cancelDialogue,LangVars.Save,resetStaffPassword,false,true,true,"resetStaffPass");
		return false;
	});
	$("#iconbarPrivsStaff").click(function(){
		if ($("#privsMenuStaff:visible").length) {
			$("#privsMenuStaff:visible").hide();
		} else {
			hide_iconbar_menus();
			var allTheSame=true;
			var firstPrivs = $("#rightPaneStaff .listItemHighlight:first").attr("privs");
			$("#rightPaneStaff .listItemHighlight").each(function(){
				if ($(this).attr("privs")!=firstPrivs) {
					allTheSame=false;
				}
			});
			$("#privsMenuStaff .privilegeItem,#allPrivs").removeClass("bpe_current");
			var fpArray = firstPrivs.split(",");
			if (allTheSame) {
				var privCounter = 0;
				var allEnabled=true;
				$("#privsMenuStaff .privilegeItem").each(function(){
					if (fpArray[privCounter]=="1") {
						$(this).addClass("bpe_current");
					} else {
						allEnabled=false;
					}
					privCounter++;
				});
				if (allEnabled) {
					$("#allPrivs").addClass("bpe_current");
				}
			}
			$("#privsMenuStaff").show();
		}
		return false;
	});
	
	$("#staffPane .privilegeItem").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}

		if ($(this).hasClass("bpe_current")) {
			$(this).removeClass("bpe_current");
			if ($(this).hasClass("allTickCandidate")) {
				$("#allPrivs").removeClass("bpe_current");
			}

		} else {
			$(this).addClass("bpe_current");
		}
		changePrivs();
		return false;
	});
	$("#allPrivs").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		if ($(this).hasClass("bpe_current")) {
			$(this).removeClass("bpe_current");
			$("#staffPane .privilegeItem.allTickCandidate").removeClass("bpe_current");
		} else {
			$(this).addClass("bpe_current");
			$("#staffPane .privilegeItem.allTickCandidate").addClass("bpe_current");
		}
		changePrivs();
		return false;
	});
	// embed codes

	$("#iconbarNewEmbedCodes").click(function(){
		addEmbedCodes();
		return false;
	});

	$("#iconbarDeleteEmbedCodes").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		prepDeleteEmbedCodes();
		return false;
	});
	$("#iconbarSelectAllEmbedCodes").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		$("#rightPaneEmbedCodes .responsiveListItem").addClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarDeselectAllEmbedCodes").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		$("#rightPaneEmbedCodes .listItemHighlight").removeClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});


	///

	///

	///

	var slmaskw= $("#slideMask .slide1").width();
	$("#slideMask").css("width",slmaskw+"px");
/*	$("#deleteSelectedSlide2").click(function(){
		var sl2w = $("#slideMask .slide2").width();
		var sl1w = $("#slideMask .slide1").width();
		var half = sl2w-sl1w;
		sl1w = sl1w+20;
		$("#slideMask .slideWrapper").animate({left:'-'+sl1w+"px"});
		$("#slideMask").animate({ width:sl2w+"px" });

		half = half / 2;
		var curleft = $("#popupControl").offset().left;
		half = curleft-half;
		$("#popupControl").animate({left:half+'px'});
		return false;
	});

	$("#cancelPopupControl").click(function(){
		cancelPopupControl();
		return false;
	});
	$("#dismissPopupControl").click(function(){
		dismissPopupController();
		return false;
	});
	$("#confirmPopupControl").click(function(){
		if ($("#adminPages").hasClass("ticking")) {
			var Ids="";
			$(".editPageBar.checked").each(function(){
				if (Ids=="") {
				Ids=$(this).attr("rel");
				} else {
				Ids+=","+$(this).attr("rel");
				}
			});
			working();
			$.ajax({
			  type: "POST",
			  url: "pageActions.php",
			  data: "pageAction=deleteMulti&ids="+Ids,
			  success: function(msg){
		if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

					if (msg!="ok") {
						error(msg);
					} else {
						$("#adminPages").load("pages.php",function(){
							$("#copyPage").html($("#adminPages").html());
							assign_page_filter($("#copyPage"));

							$("#copyPageWithSubs").html($("#adminPages").html());
							assign_page_filter($("#copyPageWithSubs"));

							$("#movePage").html($("#adminPages").html());
							assign_page_filter($("#movePage"));

							if ($("#cloneSource").length) {
								$("#cloneSource").html($("#adminPages").html());
								assign_page_filter($("#cloneSource"));
							}

							assignPages();
							assign_page_filter();
							dismissPopupController();
							saved();
						});
					}
			  }
			});
		}
	});
	*/
	$("#popupControl").hide();
	$("#cloneDelete").click(function(){
		working();
		$.ajax({
		  type: "POST",
		  url: "pageActions.php",
		  data: "pageAction=removeCloneSource&pageId="+$("#kbid").val(),
		  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

				if (msg!="ok") {
					error(msg);
				} else {
					document.location.reload();

				}

		  }
		});
		return false;
	});
	function setCloneSource ($target) {
		var sourceId = $target.attr("rel");
		var pageName = $target.attr("title");

		var id = $("#kbid").val();
		if (id==sourceId) {
			error(LangVars.Page_Cant_Clone);
		} else {
			working();
			$.ajax({
			  type: "POST",
			  url: "pageActions.php",
			  data: "pageAction=addCloneSource&cloneSource="+sourceId+"&pageId="+$("#kbid").val(),
			  success: function(msg){
		if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
					if (msg=="") {
						error(LangVars.Misc_Error);
					} else {
						saved();
						hide_menus();
						$("#entryWrapper").hide();
						$("#bpe_add_menu").hide();
						$("#saveEditPage,#publishInPreview").hide();
						$("#cloning").show();
						$("#dragInsert").hide();
						$("#cloning p").attr("title",LangVars.Clone_Source_URL+": "+msg);
						$("#cloningPageName").html(pageName);
						$("#versionsToHide").hide();
						$(".textEditingArea .listTipEditor").hide();
					}
			  }
			});
		}
	}
	$("#cloneSource,#cloneSourceTiny").click(function(event){
		showLightPages(setCloneSource,"showTop",true,LangVars.Choose_page);
		return false;
	});
	$("#copyPage,#copyPageWithSubs,#movePage").click(function(event){
		if ($(this).attr("id")=="copyPage") {
			var action = "copy";
		} else if ($(this).attr("id")=="copyPageWithSubs") {
			var action = "copyWithSubs";
		} else {
			var action = "move";
		}
		var $target = $(event.target);
		var ok = false;
		if ( $target.hasClass("copyPageDestinaiton") || $target.hasClass("movePageDestinaiton")) {
			ok = true;
			var str = $target.attr("id").split("|");
			type = str[0];
			var parentId = str[1];
		}
		if ( $target.parents(".copyPageDestinaiton").length) {
			ok = true;
			var str = $target.parents(".copyPageDestinaiton").attr("id").split("|");
			type = str[0];
			var parentId = str[1];
		}
		if ( $target.parents(".movePageDestinaiton").length) {
			ok = true;
			var str = $target.parents(".movePageDestinaiton").attr("id").split("|");
			type = str[0];
			var parentId = str[1];
		}
		if (ok==true) {

			if (type=="") {
				type = "topLevel";
			}
			var id = $("#kbid").val();
			if (id==parentId) {
				error(LangVars.Page_Not_Inside_Itself);
			} else {
					working();
					$.ajax({
					  type: "POST",
					  url: "pageActions.php",
					  data: "pageAction="+action+"&parent="+parentId+"&type="+type+"&id="+id,
					  success: function(msg){
				if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

							if (msg!="ok") {
								error(msg);
							} else {
								$("#adminPages").load("pages.php",function(){
									$("#copyPage").html($("#adminPages").html());
									assign_page_filter($("#copyPage"));

									$("#copyPageWithSubs").html($("#adminPages").html());
									assign_page_filter($("#copyPageWithSubs"));

									$("#movePage").html($("#adminPages").html());
									assign_page_filter($("#movePage"));
									if ($("#cloneSource").length) {
										$("#cloneSource").html($("#adminPages").html());
										assign_page_filter($("#cloneSource"));
									}

									assignPages();
									assign_page_filter();

									saved();
									hide_menus();
								});

							}

					  }
					});
			}

		}

	});
/* EXAMPLE SYNTAX
	 $("a").click(function(){
	   alert("Example");
	 });
	$('#gallery a').lightBox(); // Lightbox script.
*/
	$("#popupControl").click(function(){
		return false;
	});
	$(document).click(function(e){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		hide_menus();
	});
	//assign_help();
if ($("#entryleftWrapper").css("display")=="block") {
	$("#entryleft").bpeditor();
}
if ($("#entryrightWrapper").css("display")=="block") {
	$("#entryright").bpeditor();
}
if ($("#entry2leftWrapper").css("display")=="block") {
	$("#entry2left").bpeditor();
}
if ($("#entry2rightWrapper").css("display")=="block") {
	$("#entry2right").bpeditor();
}


$("#entry").bpeditor();

if ($("#cloning").css("display")=="block") {
	$("#bpe_add_menu").hide();
}
//$("#entry2").bpeditor();
$("body").mousedown(function(){
	$("#saved").hide();
	$("#error").hide();
	$("#message").hide();
});
$("#overlay,#saved,#error,#message,#newConvo").click(function(){
	$("#overlay").fadeOut(200);
	$("#savedLog").fadeOut(200);
	$("#saved").fadeOut(200);
	$("#error").fadeOut(200);
	$("#message").fadeOut(200);
	$("#newConvo").fadeOut(200);
});




	function assignGalleries () {
		$(".showAddImageForm").click(function(){
			if ($("#"+$(this).attr("id")+"form").css("display")=="none") {
				$(".uploadForm").hide(500);
				$("#"+$(this).attr("id")+"form").fadeIn(500);
			} else {
				$("#"+$(this).attr("id")+"form").fadeOut(500);
			}
			return false;
		});
		$(".pagesTable tr:even").addClass("alt");
		$(".uploadForm").submit(function(){
			working();
			function showResponse (responseText, statusText) {
if (responseText =="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				if (responseText=="notjpg") {
					error(LangVars.Misc_Error);
				} else if (responseText=="ok") {
					$("#galleriesAdmin").load("galleriesActions.php?galleriesAction=show&to_prevent_cache="+(new Date).getTime(),function(){
						assignGalleries();
						saved("Image Added");
					});
				} else {
					error(LangVars.Misc_Error);
				}

			}
			var options = {
		        success:       showResponse  // post-submit callback
		    };
			if ($("input[name=image]",this).val()=="")  {
				cancel();
			} else {
				$(this).ajaxSubmit(options);
			}
			return false;
		});
		$(".submitAddImageForm").click(function(){
			$(this).parent().parent().submit();
			return false;
		});

		$(".addImagesToGallery").click(function(){
			$(".drag").remove();

			return false;
		});
		$("#showAddGalForm").click(function(){
			clickToAddNew($(this),$("#addGalleryForm")," Type a name and hit enter",false);
			return false;
		});


		$(".renameGalleryForm").submit(function(){
			var id = $("input[name=id]",$(this)).val();
			working();
			function showResponse (responseText, statusText) {
if (responseText =="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				$("#galleriesAdmin").load("galleriesActions.php?galleriesAction=show&to_prevent_cache="+(new Date).getTime(),function(){
					assignGalleries();
					saved("Gallery Renamed");
				});
				if ($(".ComponentGallery-"+id).length) {
					window.location.reload();
				}
			}
			var options = {
		        success:       showResponse  // post-submit callback
		    };
		if ($("input[name=name]",this).val()=="")  {
			cancel();
		} else {
			$(this).ajaxSubmit(options);
		}
				return false;
		});

		$(".toggleRenameGallery").click(function(){
			clickToEdit($(this),$("#"+$(this).attr('id')+"form")," Type a name and hit enter",true);
			return false;
		});

		$(".confirmDeleteGallery").click(function(){
			working();
			id  = $(this).attr('id');
				$.ajax({
				  type: "POST",
				  url: "galleriesActions.php",
				  data: "galleriesAction=deleteGallery&id="+id,
				  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
					$("#galleriesAdmin").load("galleriesActions.php?galleriesAction=show&to_prevent_cache="+(new Date).getTime(),function(){
						assignGalleries();
						saved("Gallery Removed");
					});
					if ($(".ComponentGallery-"+id).length) {
						window.location.reload();
					}
					assignSaveListener();
				  }
				});
				return false;
		});
		$(".renameImageForm").hide();
		$(".renameImageLink").click(function(){
			clickToEdit($(this),$("#"+$(this).attr('id')+"form")," Type a caption and hit enter",true);
			return false;
		});
		$(".galleryThumb").unbind("mouseover");
		$(".galleryThumb").unbind("mouseout");
//		$(".galleryThumb").mouseover(function(){
//			$(this).append("<span class='bpe_big_image_top'><img src='"+$("img",$(this)).attr("src")+"'/></span>");
//		});
//		$(".galleryThumb").mouseout(function(){
//			$(".bpe_big_image_top",$(this)).remove();
//		});



		$(".deleteImageButton").click(function(){
			working();
			var galid  = $(this).attr('href');
				$.ajax({
				  type: "POST",
				  url: "galleriesActions.php",
				  data: "galleriesAction=deleteImage&imagesid="+$(this).attr('id'),
				  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
					$("#galleriesAdmin").load("galleriesActions.php?galleriesAction=show&show="+galid+"&to_prevent_cache="+(new Date).getTime(),function(){
						assignGalleries();
						saved("Image Removed");
					});
				  }
				});

			return false;
		});
		//assign_menus($("#galleriesAdmin"));
		$(".insertComponentMenuGallery").html("");
		var galList;
		if ($(".toggleRenameGallery").length==0) {
			$(".insertComponentMenuGallery").html("<span class='bpe_menu_message'>No galleries available</span>");
		}
		$(".toggleRenameGallery").each(function(){
			var id = $(this).attr("id").replace("renameGallery-","");
			var title = $(this).attr("title");
			$(".insertComponentMenuGallery").append("<a href=\""+id+"\" class=\"insertGallery\">"+title+"</a>");
		});

		$(".sortable",$("#galleriesAdmin")).sortable({
//			connectWith: ".sortable",
			handle: ".galImageDrag",
			update: function(){
				working();
				var order = "";
				$(".sortable",$("#galleriesAdmin")).each(function(){
					var id = $(this).attr("id").replace("galleryImages-","");
					order=order+"!!"+id+"*";
					var orderNo = 10;
					$(".galleryThumb",$(this)).each(function(){
						picId = $(this).attr("id").replace("galleryThumb-","");
						order=order+orderNo+"|"+picId+",";
						orderNo=orderNo+10;
					});
				});
				$.ajax({
				  type: "POST",
				  url: "galleriesActions.php",
				  data: "galleriesAction=imageSort&data="+order,
				  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
					if (msg=="ok") {
						saved("Order Changed");
					} else {
						error(LangVars.Misc_Error);
					}

				  }
				});
			}
		});
		$("#galleriesAdmin").parents(".menuScroll").removeClass("menuScrollDone");
		menuScroll($("#galleriesAdmin").parents(".menuScroll"));
		$(".menuScroll:visible",$("#galleriesAdmin")).each(function(){
			menuScroll($(this));
		});

	}
	/*
	assign_menus($("#mainMenu"));*/
	$("#galleriesAdmin").load("galleriesActions.php?galleriesAction=show&to_prevent_cache="+(new Date).getTime(),function(){
		if ($("#galleriesAdmin .responsiveListItem").length) {
			$("#dragInsertGallery").removeClass("greyedOut");
		}
//		assignGalleries();
//		$("#formsWrapper").load("formsActions.php?formsAction=show&to_prevent_cache="+(new Date).getTime(),function(){
//			assign_forms();
//			assignProducts();
		});
//	});

$("#formsWrapper").load("formsActions.php?formsAction=show&to_prevent_cache="+(new Date).getTime(),function(){
		addFormsToSettings();
		if ($("#formsWrapper .responsiveListItem").length) {

			$("#dragInsertForm").removeClass("greyedOut");
		}


//			assign_forms();
//			assignProducts();
		});



	/* languages module */
	function assignLanguages () {
		$(".confirmDeleteLanguage").click(function(){
				working();
				id = $(this).attr('id');

					$.ajax({
					  type: "POST",
					  url: "languagesActions.php",
					  data: "languagesAction=deleteLanguage&id="+id,
					  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
						if (msg=="ok") {
							$("#languagesWrapper").load("languagesActions.php?languagesAction=show&to_prevent_cache="+(new Date).getTime(),function(){
								assignLanguages();
									$("#adminPages").load("pages.php",function(){
										assignPages();
										assign_page_filter();
										$("#blogEntries").load("blogActions.php?blogAction=showEntries&to_prevent_cache="+(new Date).getTime(),function(){
											assignBlogEntries();
											saved("Language removed");
										});
									});


							});
						}
					  }
					});
					return false;


		});


		$("#addLanguage a:not(.filterBox a)").unbind("click");
		$("#addLanguage a:not(.filterBox a)").click(function(){
			working();
			var lang = $(this).attr("href");
			$.ajax({
			  type: "POST",
			  url: "languagesActions.php",
			  data: "languagesAction=addLanguage&lang="+lang,
			  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				$("#languagesWrapper").load("languagesActions.php?languagesAction=show&to_prevent_cache="+(new Date).getTime(),function(){
					assignLanguages();
					$("#adminPages").load("pages.php",function(){
						assignPages();
						assign_page_filter();
						$("#blogEntries").load("blogActions.php?blogAction=showEntries&to_prevent_cache="+(new Date).getTime(),function(){
							assignBlogEntries();
							saved("Language added");
						});
					});
					$("#addLanguage").parents(".bpe_menu_sub_items2").hide();
					$(".bpe_sub_hilite2").removeClass("bpe_sub_hilite2");
				});
			  }
			});
			return false;
		});
		$("#submitLangugeForm").click(function(){
			$("#languageForm").submit();
			return false;
		});
		//assign_menus($("#languagesWrapper"));
	}
//	softPagination($("#addLanguage"));
	/*
	$("#languagesWrapperBlog").load("languagesActions.php?languagesAction=show&to_prevent_cache="+(new Date).getTime(),function(){
		//assignLanguages();
		$("#languagesWrapper").html($("#languagesWrapperBlog").html());

		if ($("#languagesWrapper a").length) {
			$("#languagesWrapper a:not(:eq(0))").each(function(){
				$("#otherLangsSitewide").append("<div class='otherLangSitewide' language='"+$(this).text()+"' language-code='"+$(this).attr("fakehref")+"'></div>");
			});
			$("#otherLangsSitewide > div").html($("#primaryLangSitewide").html());
			$("#otherLangsSitewide > div").each(function(){
				$div = $(this);
				$(".settingsItem a",$(this)).each(function(){
					$(this).append(" ("+$div.attr("language")+")").attr("href",$(this).attr("href")+"&language="+$div.attr("language-code"));
				});

			});
		}
	});

	*/
	updateSitewideLangs();
	$("#closeMessage").click(function(){
		$(this).parent().fadeOut(300);
		return false;
	});


	$("#toggleAddCalCat").click(function(){
		clickToAddNew($(this),$("#addCalCat")," Type a new category name and hit enter",false);
		return false;
	});
	$("#addCalCat").submit(function(){
		working();
		var name = encodeURIComponent($("input[name=name]",$(this)).val());
		$.ajax({
		  type: "POST",
		  url: "calendarActions.php",
		  data: "calendarAction=addCat&name="+name,
		  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			$("#calCatsList").html(msg);
			assignCalCats();
			$(".menuForm").hide();
			date = $("#eventDate").val();
			var splitd = date.split("/");
			day = splitd[0]
			month = splitd[1]
			year = splitd[2];
			$("#cal").load("/actions/ShowCal/?month="+month+"&year="+year+"&day="+day,function(){
				assignCal();
				saved("Calendar category added");
			});
		  }
		});
		return false;
	});
	function assignCalCats () {
		//assign_menus($("#calCatsList"));

		$(".renameCalCatLink").unbind();
		$(".renameCalCatLink").click(function(){
			clickToEdit($(this),$(this).parent().next(),"",true,true);
			return false;
		});
		$(".renamecalCatForm").submit(function(){
			var catId = $("input[name=id]",$(this)).val();
			working()
			function showResponse (responseText, statusText) {
if (responseText =="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				$("#calCatsList").html(responseText);
				assignCalCats();
				date = $("#eventDate").val();
				var splitd = date.split("/");
				day = splitd[0]
				month = splitd[1]
				year = splitd[2];
				$("#cal").load("/actions/ShowCal/?month="+month+"&year="+year+"&day="+day,function(){
					assignCal();
					saved("Calendar category renamed");
				});
				if ($(".ComponentCalendarCat-"+catId).length) {
					window.location.reload();
				}
			}
			var options = {
		        success:       showResponse  // post-submit callback
		    };
			$(this).ajaxSubmit(options);
			return false;
		});
		$(".choices3.confirmDelete a.deleteCalCat").click(function(){
			var catId = $(this).attr("id");
			working();
			$.ajax({
			  type: "POST",
			  url: "calendarActions.php",
			  data: "calendarAction=deleteCat&id="+catId,
			  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				$("#calCatsList").html(msg);
				assignCalCats();
				$(".menuForm").hide();
				date = $("#eventDate").val();
				var splitd = date.split("/");
				day = splitd[0]
				month = splitd[1]
				year = splitd[2];
				$("#cal").load("/actions/ShowCal/?month="+month+"&year="+year+"&day="+day,function(){
					assignCal();
					saved("Calendar category deleted");
				});
				if ($(".ComponentCalendarCat-"+catId).length) {
					window.location.reload();
				}
			  }
			});
			return false;
		});
	}
	assignCalCats();


	windowH = $(window).height()-230;
	lines = windowH / 23;
	lines = Math.floor(lines-3);

	$("#renameSnippet").unbind("click").click(function(e){
		if ($(e.target)[0].tagName.toLowerCase()=="span") {
			dismissEditors();
			editMe($(this));
		}
		return false;
	});
	$("#renameSnippetForm").unbind("submit").submit(function(){
		sendForm($(this),$("#snippetsWrapper"));
		var newname = $("input[name=name]",$(this)).val();
		$("#renameSnippet").attr("title", newname );
		var trunc = newname.substring(0, 45);
		if (newname.length>45) {
		trunc = trunc+"&hellip;";
		}
		$("#renameSnippet span").html(trunc);
		$("#renameSnippet").css("width","auto");
		var width2 = $("#renameSnippet span").width()+10;
		$("#renameSnippet").css("width",width2+"px").addClass("centered");
		return false;
	});
	$("#renamePage").click(function(e){
		if ($(e.target)[0].tagName.toLowerCase()=="span") {
			dismissEditors();

			editMe($(this));
		}
	});
	$(".renamePageForm").submit(function(){
		function showResponse (responseText, statusText) {

if (responseText =="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			if (responseText=="exists") {
				error(LangVars.Page_Name_Exists);
			} else if (responseText=="empty") {
				error(LangVars.Misc_Error);
			} else {
				var newTitles = responseText.split("|!|!******");
				$("#viewURL").attr("href","/"+newTitles[1]);
				$("#renamePage span").html(newTitles[0]);
				$("#renamePage").attr("title",newTitles[2]);
				$("#renamePage").css("width","auto");
				var width = $("#renamePage span").width()+10;
				width  = width;
				$("#renamePage").css("width",width+"px").addClass("centered");
				$(".menuForm").hide();
				$(".menuFormLink").show();
				$(".editPageMenu").hide();
				$("#adminPages").load("pages.php?to_prevent_cache="+(new Date).getTime(),function(){
					assignPages();
					assign_page_filter();
					saved("Page Renamed");
				});
				$(document).click(function(){
					if (justScrolled) {return false;}
					if (ignoreClickCatchup) {return false;}
					hide_menus();
				});
			}
		}
		var options = {
	        success:       showResponse  // post-submit callback
	    };
		$(this).ajaxSubmit(options);
		return false;
	});
	/* end edit  page */
	$("#renameEntry").click(function(e){
//		clickToEdit($(this),$("#renameBlogPageForm")," Type page name then Enter",true);
		if ($(e.target)[0].tagName.toLowerCase()=="span") {
			dismissEditors();
			editMe($(this));
		}
		return false;
	});
	/*
	$("#renameBlogPageForm").submit(function(){
		working();
		function showResponse (responseText, statusText) {
if (responseText =="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			if (responseText=="exists") {
				error(LangVars.Page_Name_Exists);
			} else {
				newTitles = responseText.split("|!|!******");
				$("#viewURL").attr("href","/"+newTitles[1]+"/");
				$("#renameEntry span").html(newTitles[0]);
				$("#renameEntry").attr("title",newTitles[2]);
				$("#renameEntry").css("width","auto");
				var width = $("#renameEntry span").width()+10;
				width  = width;
				$("#renameEntry").css("width",width+"px");
				$(".menuForm").hide();
				$(".menuFormLink").show();
				$(".editPageMenu").hide();
				$("#blogEntries").load("blogActions.php?blogAction=showEntries&to_prevent_cache="+(new Date).getTime(),function(){
					assignBlogEntries();
					saved("Page renamed");
				});
			}
		}
		var options = {
	        success:       showResponse  // post-submit callback
	    };
		$(this).ajaxSubmit(options);
		return false;
	});*/
	var width1 = $("span",$("#renameEntry")).width()+10;
//	$("#renameEntry").css("width",width1+"px");
	var width2 = $("span",$("#renamePage")).width()+10;
//	$("#renamePage").css("width",width2+"px");

	var width4 = $("span",$("#renameSnippet")).width()+10;
//	$("#renameSnippet").css("width",width4+"px");

	var width3 = $("span",$("#siteWideTitle")).width()+10;
//	$("#siteWideTitle").css("width",width3+"px");
//	$("#siteWideTitle").click(function(){return false;});
	/* forms module */

	function assign_forms () {



		$(".fieldRequired").unbind();
		$(".fieldRequired").click(function(){

			if ($(this).hasClass("choice_selected")) {
				required = "no";
			} else {
				required = "yes";
			}
			obj = $(this);
			options_start(obj);
			showId = $(this).attr("id");
			$.ajax({
			  type: "POST",
			  url: "formsActions.php",
			  data: "formsAction=editInput&inputsId="+$(this).attr('href')+"&required="+required,
			  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				option_end(obj);
				$("#formsWrapper").load("formsActions.php?formsAction=show&showForm="+showId+"&to_prevent_cache="+(new Date).getTime(),function(){
					assign_forms();
				});
			  }
			});
			return false;
		});


		//


		//

	}



	/** blog page **/




	checkStatus();


	$("#toggleChangeEmailMe").click(function(){
		clickToAddNew($(this).parents("#sendToMe"),$("#changeEmailMeForm")," Enter a subject, then hit enter",true);

		/*
		$(document).unbind("keypress");
		$("#changeEmailMeForm").show();
		$(this).parents("#sendToMe").hide();
		$(".focus","#changeEmailMeForm").val(" Enter your email address, then hit enter");
		$(".focus","#changeEmailMeForm").addClass("greyedOut");
		$(".focus","#changeEmailMeForm").each(function(){
			this.setSelectionRange(1,0);
		});
		$(".focus","#changeEmailMeForm").focus();
		$(".focus","#changeEmailMeForm").keypress(function(){
			$(this).val("");
			$(this).removeClass("greyedOut");
			$(this).unbind();
		});*/
	});
	$("#changeEmailMeForm").submit(function(){
		working();
		function showResponse (responseText, statusText) {
if (responseText =="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			if (responseText=="error") {
				error(LangVars.Misc_Error);
			} else {
				saved("Changed my email address");
				assignSaveListener();
				$("#emailMe").html(responseText);
				$("#changeEmailMeForm").hide();
				$("#sendToMe").show();
			}
		}
		var options = {
			success:       showResponse  // post-submit callback
		};
		$('#changeEmailMeForm').ajaxSubmit(options);
		return false;
	});
	$("#editNewsletterSubject").unbind("click");
	$("#editNewsletterSubject").click(function(){
		clickToAddNew($(this),$("#changeSubjectForm")," Enter a subject, then hit enter",true);
	});
	$("#changeSubjectForm").unbind("submit");
	$("#changeSubjectForm").submit(function(){
		working();
		function showResponse (responseText, statusText) {
if (responseText =="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			if (responseText=="error") {
				error(LangVars.Misc_Error);
			} else {
				saved("Subject changed");
				$("#changeSubjectForm").hide();
				$("#editNewsletterSubject").show();
				$("#newsletterSubject").load("newsletterActions.php?newsletterAction=showSubject",function(){});
				assignSaveListener();
				checkStatus();
			}
		}
		var options = {
			success:       showResponse  // post-submit callback
		};
		$('#changeSubjectForm').ajaxSubmit(options);
		return false;
	});
	$("#sendToMe").click(function(e){

		if ($(e.target).parent().attr("id")!="toggleChangeEmailMe") {
			if (!$(this).hasClass("greyedOut")) {
				working();
				var page = $("#newsletterContentPageVal").val();
						$.ajax({
						  type: "POST",
						  url: "newsletterActions.php?newsletterAction=send&test=yes&page="+page,
						  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
							msg = msg.split("||");
							if (msg[0]!="ok") {
								error(msg[1]);
							} else {
								saved(msg[1]);
							}
						  }
						});


			}
		}


		return false;
	});




	livechat_init();



	function onlineFail() {
		$.ajax({
			type: "GET",
			url: "../livechat/actions/stillonline.php?to_prevent_cache="+(new Date).getTime(),
			success: function(msg) {
			}
		});
	}
	if ($("#livechatStatus").length && $("#livechatStatus").hasClass("bpe_current")) {
		poller = setInterval(onlineFail, 30000);
		onlineFail();
	}

	// start security
	function assignAccessGroups () {
		$(".confirmDeleteAccessGroup").click(function(){
			var id = $(this).attr("id");
			working();
			$.ajax({
			  type: "POST",
			  url: "accessGroupActions.php",
			  data: "accessGroupActions=delete&id="+id,
			  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				if (msg == "ok") {
					$("#groupList").load("accessGroupActions.php?accessGroupActions=showAccessGroups",function(){
						assignAccessGroups();
						$("#adminPages").load("pages.php?to_prevent_cache="+(new Date).getTime(),function(){
							assignPages();
							assign_page_filter();
							saved("Access group removed");

						});
					});
				} else {
					error(LangVars.Misc_Error);
				}
			  }
			});
		});
		//assign_menus($("#groupList"));
		return false;
	};


	//end security
	//start admin users

	function keepalive () {
		if (keepaliveok==true) {
			$.ajax({
		  		type: "POST",
		  		url: "loginCheck.php",
		  		data: "keepalive=yes",
		  		success: function(msg){
					if (msg =="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				}
		  	});
		}
		setTimeout(keepalive, 50000);
	}
	//setTimeout(keepalive, 25000);

	$.ajax({
  		type: "POST",
  		url: "showStats.php?d="+(new Date).getTime(),
  		success: function(msg){
			if (msg !="" && msg !=0) {
				$("#statsWrapper").html(msg);

			}
		}
  	});
	// automatic binding/rebinding of ajax forms and lists


//	rebindSearchList();


	$(".toggleForm").unbind("click").click(function(){ // sho add new item form
		clickToAddNew($(this),$("#"+$(this).attr("id")+"Form")," Type a new name then enter",false);
		return false;
	});
	$(".toggleFormHideSelf").unbind("click").click(function(){ // sho add new item form
		clickToAddNew($(this),$("#"+$(this).attr("id")+"Form")," Type a new name then enter",true);
		return false;
	});
	$(".ajaxSubmit").unbind("submit").submit(function(){ // submit add new item form
		sendForm($(this),$(this).next());
		return false;
	});
	$(".ajaxSubmitV2").unbind("submit").submit(function(){ // submit add new item form
		sendForm($(this),$("#"+$("input[name=target]",$(this)).val()));
		return false;
	});
	$(".ajaxHref").unbind("click").click(function(){
		working();
		var el = $(this);
		var string = $(this).attr("href").split("?");
		var target=$(this).attr("target");
		$.ajax({
	  		type: "POST",
	  		url: string[0],
	  		data: string[1],
	  		success: function(msg){
				if (msg =="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
					if (el.hasClass("toggleTick")) {
						if (msg=="ticked") {
							el.addClass("bpe_current");
						} else {
							el.removeClass("bpe_current");
						}
						saved();
					}
					if (target=="snippetsWrapper") {
						$("#snippetsWrapper,#insertComponentMenuSnippets").html(msg);
						rebindSearchList($("#insertComponentMenuSnippets"));
						assignSnippets();
						saved();
					}

			}
	  	});
		return false;
	});

	$(".toggleLink").unbind("click").click(function(){
		$t = $(this);
		$.ajax({
	  		type: "POST",
	  		url: $t.attr("href"),
	  		success: function(msg){
				if (msg =="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				if (msg==0) {
					$t.removeClass("bpe_current");
				}
				if (msg==1) {
					$t.addClass("bpe_current");
				}
			}
	  	});
		return false;
	});
	//rebind($("#emailGroupsList")); // set initial binds

	//
});
var keepaliveok=true;
	function sendForm (form,toUpdate) {
		working();
		function showResponse (responseText, statusText) {
if (responseText =="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			if (responseText=="Exists") {
				error(LangVars.Misc_Error);
			} else {
				toUpdate.html(responseText);
				if (form.hasClass("refreshPage")) {
				window.location.reload();
				}
				rebind(toUpdate);

				if (toUpdate.attr("id")=="snippetsWrapper") {
					$("#insertComponentMenuSnippets").html(responseText);
					rebindSearchList($("#insertComponentMenuSnippets"));
					assignSnippets();
				}
				form.hide();
				saved();
			}

		}
		var options = {
	        success:       showResponse  // post-submit callback
	    };
		form.ajaxSubmit(options);
	}
function assignOptions() {
	$(".changeOptionOr").unbind("click").click(function(){
		working();
		var el = $(this);
		var string = $(this).attr("href").split("?");
		$.ajax({
	  		type: "POST",
	  		url: string[0],
	  		data: string[1],
	  		success: function(msg){
				if (msg =="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				if (msg=="ok") {
					$(".choice_selected",el.parent()).removeClass("choice_selected");
					el.addClass("choice_selected");
					saved();
				} else {
					error(LangVars.Misc_Error);
				}

			}
	  	});
		return false;
	});
}

function assignSnippets () {
	$("#snippetsWrapper .snippetItem").each(function(){
		if ($(".ComponentSnippet-"+$(this).attr("alt")).length)  {
			$(".removeItem",$(this)).addClass("refreshPage");
		}
	});
	rebind($("#snippetsWrapper"));
	$("#snippetsWrapper .menu_with_options.snippetItem").click(function(e){
		if ($(e.target).hasClass("snippetItem")||$(e.target).hasClass("titleHover")||$(e.target).hasClass("titleNotHover")) {
		window.location="/admin/editSnippet.php?id="+$(this).attr("id");
		}

	});

}
function rebindSearchList (obj,p1,p2,p3) {

	lightPagesHeight();

	//popdownPaginate(p1,p2,p3);
	/*$(".searchList",obj).unbind("focus");
	$(".searchList",obj).focus(function(){
		if ($(this).val()==LangVars.Search) {
			$(this).val("");
		}
		$(document).unbind("keyup");
		$(document).unbind("keydown");
	});
	$(".searchList",obj).unbind("blur");
	$(".searchList",obj).blur(function(){
		if ($(this).val()=="") {
			$(this).val(LangVars.Search);
		}
	});*/
	$(".clearSearch",obj).unbind("click").click(function(){
		working();
		var url = $(this).attr("href").split("?");
		var target=$("input.searchList",$(this).parents("form")).attr("target");
		$.ajax({
		  type: "POST",
		  url: url[0],
		  data: url[1],
		  success: function(msg){
			if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				if (target=="snippetsWrapper") {
					$("#snippetsWrapper,#insertComponentMenuSnippets").html(msg);
					rebindSearchList($("#insertComponentMenuSnippets"),p1,p2,p3);
					assignSnippets();
					saved();
				}
				if (target=="downloads") {
					$("#downloads,#downloadsPopdownInner").html(msg);
					assignHeaderMenus();
					rebindSearchList($("#downloadsPopdownInner"),p1,p2,p3);
					window.dropzoneFilePopdown.disable();
					window.dropzoneFilePopdown = new Dropzone("#downloadsPopdownInner",uploadFilePaneDZOptions($("#downloadsPopdownInner .uploadFile")[0]));
					$("#downloadsPopdownInner .pagesScroll").lovelyScroll(pagesScrollBottomDownloads);
					saved();
				}

		  	}
		});
		return false;
	});
	$(".filterBox",obj).unbind("submit").submit(function(){
		working();
		var url = $("input.searchList",$(this)).attr("alt").split("?");
		var target=$("input.searchList",$(this)).attr("target");
		var string  = $("input.searchList",$(this)).val();
		$.ajax({
		  type: "POST",
		  url: url[0],
		  data: url[1]+string,
		  success: function(msg){
			if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				if (target=="snippetsWrapper") {
					$("#snippetsWrapper,#insertComponentMenuSnippets").html(msg);
					rebindSearchList($("#insertComponentMenuSnippets"),p1,p2,p3);
					assignSnippets();
					saved();
				}
				if (target=="downloads") {
					$("#downloads,#downloadsPopdownInner").html(msg);
					assignHeaderMenus();
					rebindSearchList($("#downloadsPopdownInner"),p1,p2,p3);
					window.dropzoneFilePopdown.disable();
					window.dropzoneFilePopdown = new Dropzone("#downloadsPopdownInner",uploadFilePaneDZOptions($("#downloadsPopdownInner .uploadFile")[0]));
					$("#downloadsPopdownInner .pagesScroll").lovelyScroll(pagesScrollBottomDownloads);
					saved();
				}

		  	}
		});
		return false;
	});
/*
	$(".ajaxHref",obj).unbind("click").click(function(){
		working();
		var el = $(this);
		var string = $(this).attr("href").split("?");
		var target=$(this).attr("target");
		$.ajax({
	  		type: "POST",
	  		url: string[0],
	  		data: string[1],
	  		success: function(msg){
				if (msg =="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
					if (el.hasClass("toggleTick")) {
						if (msg=="ticked") {
							el.addClass("bpe_current");
						} else {
							el.removeClass("bpe_current");
						}
						saved();
					}
					if (target=="snippetsWrapper") {
						$("#snippetsWrapper,#insertComponentMenuSnippets").html(msg);
						rebindSearchList($("#insertComponentMenuSnippets"),p1,p2,p3);
						assignSnippets();
						saved();
					}
					if (target=="downloads") {

						$("#downloads,#downloadsPopdownInner").html(msg);
						assignHeaderMenus();
						rebindSearchList($("#downloadsPopdownInner"),p1,p2,p3);
						$("#downloadsPopdownInner .pagesScroll").lovelyScroll(pagesScrollBottomDownloadsFiles);
						saved();
					}

			}
	  	});
		return false;
	});*/

}
function rebind (obj) {
	$(".renameItem",obj).unbind("click").click(function(){ // show rename item form
		clickToEdit($(this),$(this).parent().next()," Type author name, then hit enter",true);
		return false;
	});
	$(".renameForm",obj).unbind("submit").submit(function(){ // submit rename item form
		sendForm($(this),$(this).parents(".listToUpdate"));
		return false;
	});
	rebindSearchList(obj);
	$(".removeItem",obj).unbind("click").click(function(){
		var string = $(this).attr("href").split("?");
		toUpdate = $(this).parents(".listToUpdate");
		var el = $(this);
		working();
		$.ajax({
	  		type: "POST",
	  		url: string[0],
	  		data: string[1],
	  		success: function(msg){
				if (msg =="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				toUpdate.html(msg);
				rebind(toUpdate);

				if (toUpdate.attr("id")=="snippetsWrapper") {
					$("#insertComponentMenuSnippets").html(msg);
					rebindSearchList($("#insertComponentMenuSnippets"));
					assignSnippets();
				}
				if (el.hasClass("refreshPage")) {
				window.location.reload();
				}
				saved();
			}
	  	});
	});
	$(".duplicateItem",obj).unbind("click").click(function(){
		var string = $(this).attr("href").split("?");
		toUpdate = $(this).parents(".listToUpdate");
		working();
		$.ajax({
	  		type: "POST",
	  		url: string[0],
	  		data: string[1],
	  		success: function(msg){
				if (msg =="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				toUpdate.html(msg);
				rebind(toUpdate);

				if (toUpdate.attr("id")=="snippetsWrapper") {
					$("#insertComponentMenuSnippets").html(msg);
					rebindSearchList($("#insertComponentMenuSnippets"));
					assignSnippets();
				}

				saved();
			}
	  	});
	});
	$(".ajaxHref",obj).unbind("click").click(function(){
		working();
		var el = $(this);
		var string = $(this).attr("href").split("?");
		var target=$(this).attr("target");
		$.ajax({
	  		type: "POST",
	  		url: string[0],
	  		data: string[1],
	  		success: function(msg){
				if (msg =="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
					if (el.hasClass("toggleTick")) {
						if (msg=="ticked") {
							el.addClass("bpe_current");
						} else {
							el.removeClass("bpe_current");
						}
						saved();
					}
					if (target=="snippetsWrapper") {
						$("#snippetsWrapper,#insertComponentMenuSnippets").html(msg);
						rebindSearchList($("#insertComponentMenuSnippets"));
						assignSnippets();
						saved();
					}

			}
	  	});
		return false;
	});
	//assign_menus(obj);

	if (obj.attr("id")=="emailGroupsList") {
		$("#newsletter").load("newsletterActions.php?newsletterAction=showEmails&to_prevent_cache="+(new Date).getTime(),function(){
			assignNewsletter();
		});
		var sendToListList = "";
		var componentList = "";
		$("#emailGroupsList .renameItem").each(function(){
			sendToListList += "<a href='' id='"+$(this).attr("id")+"' class='sendToGroupList'>Yes, send to everyone in ‘"+$(this).html()+"’ group</a>";
			componentList += "<a href='"+$(this).attr("id")+"' class='insertNewsletter dropship_component_item'>‘"+$(this).html()+"’ group</a>";
		});
		$("#sentToGroupList").html(sendToListList);
		$(".addNewsletterGroupList").html(componentList);
	}
}
function assignNewsletter () {

	$(".pagesTable tr:even").addClass("alt");
	$(".pagesTable tr").each(function(){
		$("td:odd",this).addClass("alt");
		$("th:odd",this).addClass("alt");
	});
	$("input[type='checkbox']","#newsletter").each(function(){
		if ($(this).is(":checked")) {
			this.checked = true;
		} else {
			this.checked = false;
		}
	});
	$("#toggleAddRecipient").unbind("click");
	$("#toggleAddRecipient").click(function(){
		clickToAddNew($(this),$("#addRecipient")," Enter name, a space, then email address, then hit enter",false);
	});
	$("#addRecipient").unbind("submit");
	$("#addRecipient").submit(function(){
		working();
		function showResponse (responseText, statusText) {
if (responseText =="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			if (responseText=="error") {
				error(LangVars.Misc_Error);
			} else {


				$("#newsletter").load("newsletterActions.php?newsletterAction=showEmails&to_prevent_cache="+(new Date).getTime(),function(){
					assignNewsletter();
					assignSaveListener();
					saved("Recipient Added");
					$("#addRecipient").hide();
				});
			}

		}
		var options = {
			success:       showResponse  // post-submit callback
		};
		$('#addRecipient').ajaxSubmit(options);
		return false;
	});
	$(".toggleRenameRecipient").unbind("click");
	$(".toggleRenameRecipient").click(function(){
		clickToEdit($(this),$("#"+$(this).attr("id")+"form")," Type new name, then hit enter",false);
	});
	$(".changeRecipientName").unbind("submit");
	$(".changeRecipientName").submit(function(){
		working();
		function showResponse (responseText, statusText) {
if (responseText =="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

			if (responseText=="error") {
				error(LangVars.Misc_Error);
			} else {


				$("#newsletter").load("newsletterActions.php?newsletterAction=showEmails&to_prevent_cache="+(new Date).getTime(),function(){
					assignNewsletter();
					assignSaveListener();
					saved("Recipient Renamed");

				});
			}

		}
		var options = {
			success:       showResponse  // post-submit callback
		};
		$(this).ajaxSubmit(options);
		return false;
	});
	//
	$(".toggleRecipientEmail").unbind("click");
	$(".toggleRecipientEmail").click(function(){
		clickToEdit($(this),$("#"+$(this).attr("id")+"form")," Type new email, then hit enter",false);
	});
	$(".changeRecipientEmail").unbind("submit");
	$(".changeRecipientEmail").submit(function(){
		working();
		function showResponse (responseText, statusText) {
if (responseText =="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

			if (responseText=="error") {
				error(LangVars.Misc_Error);
			} else {


				$("#newsletter").load("newsletterActions.php?newsletterAction=showEmails&to_prevent_cache="+(new Date).getTime(),function(){
					assignNewsletter();
					assignSaveListener();
					saved("Recipient changed");

				});
			}

		}
		var options = {
			success:       showResponse  // post-submit callback
		};
		$(this).ajaxSubmit(options);
		return false;
	});//
	$(".confirmDeleteRecipient").click(function(){
		var id = $(this).attr("id");
		$.ajax({
		  type: "POST",
		  url: "newsletterActions.php",
		  data: "newsletterAction=removeEmail&id="+id,
		  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
					$("#newsletter").load("newsletterActions.php?newsletterAction=showEmails&to_prevent_cache="+(new Date).getTime(),function(){
					assignNewsletter();

					saved("Recipient removed");

				});
		  }
		});
	});
	$(".deleteRecipient").click(function(){
		working();
		var answer = confirm("Are you sure you want to remove this email address?");
		if (answer){
			data = $(this).attr('id').split("||");
			$.ajax({
			  type: "POST",
			  url: "/newsletter_remove.php",
			  data: "id="+data[0]+"&email="+data[1],
			  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				$("#newsletter").load("newsletterActions.php?newsletterAction=showEmails&to_prevent_cache="+(new Date).getTime(),function(){
					assignNewsletter();
				});
				saved("Recipient removed");
			  }
			});

		} else {
			error(LangVars.Misc_Error);
		}

		return false;
	});
	$(".toggleEmailActive a").click(function(){
		working();
		var bits = $(this).attr("href").split("|");
		var inactive = bits[0];
		var id = bits[1];
		if (inactive=="yes") {
			var verb = "Active";
		} else {
			var verb = "Inactive";
		}
		$.ajax({
		  type: "POST",
		  url: "newsletterActions.php",
		  data: "newsletterAction=changeActive&action=toggleActive&inactive="+inactive+"&id="+id,
		  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			$("#newsletter").load("newsletterActions.php?newsletterAction=showEmails&to_prevent_cache="+(new Date).getTime(),function(){
				assignNewsletter();
			});
			saved("Recipient is now "+verb);
		  }
		});
		return false;
	});
	$(".makeEmailInactive").click(function(){
		working();
		id = $(this).attr('id');

		if ($(this).is(':checked')) {
				$.ajax({
				  type: "POST",
				  url: "newsletterActions.php",
				  data: "newsletterAction=changeActive&action=makeActive&id="+id,
				  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
					$("#newsletter").load("newsletterActions.php?newsletterAction=showEmails&to_prevent_cache="+(new Date).getTime(),function(){
						assignNewsletter();
					});
					saved("Recipient is now active");
				  }
				});
		} else {
				$.ajax({
				  type: "POST",
				  url: "newsletterActions.php",
				  data: "newsletterAction=changeActive&action=makeInactive&id="+id,
				  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
					$("#newsletter").load("newsletterActions.php?newsletterAction=showEmails&to_prevent_cache="+(new Date).getTime(),function(){
						assignNewsletter();
					});
					saved("Recipient is now innactive");
				  }
				});

		}
	});
	$("#makeAllActive").click(function(){
		working();
			$.ajax({
			  type: "POST",
			  url: "newsletterActions.php",
			  data: "newsletterAction=changeActive&action=makeAllActive",
			  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				$("#newsletter").load("newsletterActions.php?newsletterAction=showEmails&to_prevent_cache="+(new Date).getTime(),function(){
					assignNewsletter();
					saved("All users made active");
				});
			  }
			});


		return false;
	});
	$("#makeAllInactive").click(function(){
		working();
		$.ajax({
		  type: "POST",
		  url: "newsletterActions.php",
		  data: "newsletterAction=changeActive&action=makeAllInactive",
		  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				$("#newsletter").load("newsletterActions.php?newsletterAction=showEmails&to_prevent_cache="+(new Date).getTime(),function(){
					assignNewsletter();
					saved("All users made inactive");
				});
		  }
		});
		return false;
	});
	$("#newsletterPage").change(function(){
		working();
		id = $(this).val();
		$.ajax({
		  type: "POST",
		  url: "pageActions.php",
		  data: "pageAction=change&action=newsletter&id="+id,
		  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			saved("Newsletter page changed");
		  }
		});
	});
	//assign_menus($("#newsletter"));
	$("#newsletter .pageFilterSearch").keyup(function(e){
		if (e.which==13) {
			working();
			var string = $(this).val();
			$.ajax({
			  type: "POST",
			  url: "newsletterActions.php",
			  data: "newsletterAction=filterSearch&string="+string,
			  success: function(msg){
				if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

				$("#newsletter").load("newsletterActions.php?newsletterAction=showEmails&to_prevent_cache="+(new Date).getTime(),function(){
					assignNewsletter();
					saved();
				});
			  }
			});
		}
	});
	$("#newsletter .clearSearch").click(function(){
		working();
		$.ajax({
		  type: "POST",
		  url: "newsletterActions.php",
		  data: "newsletterAction=filterSearch&string=",
		  success: function(msg){
			if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

				$("#newsletter").load("newsletterActions.php?newsletterAction=showEmails&to_prevent_cache="+(new Date).getTime(),function(){
					assignNewsletter();
					saved();
				});
		  }
		});
	});
	$("#newsletter .pageFilterSearch").focus(function(){
		miniSearchStart($(this).parents(".topBar"));
		if ($(this).val()=="Search") {
			$(this).val("");
		}
		return false;
	});
	$("#newsletter .pageFilterSearch").blur(function(){
		miniSearchStop($(this).parents(".topBar"));
		if ($(this).val()=="") {
			$(this).val("Search");
		}
	});
	$("#newsletter .filterPage").click(function(){
		working();
		var page = $(this).attr("href");
		$.ajax({
		  type: "POST",
		  url: "newsletterActions.php",
		  data: "newsletterAction=changeView&showPage="+page,
		  success: function(msg){
			if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			$("#newsletter").load("newsletterActions.php?newsletterAction=showEmails&to_prevent_cache="+(new Date).getTime(),function(){
				assignNewsletter();
				saved();
			});
		  }
		});
		return false;
	});
	$("#newsletter .filterGroup").click(function(){
		working();
		var string = $(this).attr("href").split("?");
		$.ajax({
		  type: "POST",
		  url: string[0],
		  data: string[1],
		  success: function(msg){
			if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			$("#newsletter").load("newsletterActions.php?newsletterAction=showEmails&to_prevent_cache="+(new Date).getTime(),function(){
				assignNewsletter();
				saved();
			});
		  }
		});
		return false;
	});
	$(".sendToGroupList").unbind().click(function(){
		if (!$(this).parents("#sendToList").hasClass("greyedOut")) {
			working();
			var page = $("#newsletterContentPageVal").val();
			var group = $(this).attr("id");
			$.ajax({
			  type: "POST",
			  url: "newsletterActions.php?newsletterAction=send&v=2&group="+group+"&page="+page,
			  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				msg = msg.split("||");
				if (msg[0]!="ok") {
					error(msg[1]);

				} else {
					saved(msg[1]);
					$("#sendListResult").html(msg[1]);
				}
				$(".bpe_menu_sub_items2").hide();
				$(".bpe_menu_sub_items2").prev().removeClass("bpe_sub_hilite2");
				$("#newsletter").load("newsletterActions.php?newsletterAction=showEmails&to_prevent_cache="+(new Date).getTime(),function(){
					assignNewsletter();
				});
			  }
			});
		}


		return false;
	});
	assignOptions();
}

function buildThemeVars () {
	var json_str = "{";
	$("#themeOptions .settingsDropdown").each(function(){
		if (json_str!="{") {
			json_str += ',';
		}
		json_str += '"'+$("select",$(this)).attr("name")+'": "'+$("select",$(this)).val()+'"';
	});
	$("#themeOptions .settingsDropdownImagePreviews").each(function(){
		if (json_str!="{") {
			json_str += ',';
		}
		json_str += '"'+$(this).attr("var-name")+'": "'+$(this).attr("var-value")+'"';
	});
	$("#themeOptions .themeOptionText").each(function(){
		if (json_str!="{") {
				json_str += ',';
			}
		if ($(this).attr("theme-var-value")!="") {
			var textarray = $(this).attr("theme-var-value").replace(/\\/g, "\\\\").replace(/(["])/g, "\\$1").replace(/\t/g, "\\t").split(/\n/);

			var textarraystring = "[";
			for (var i = 0; i < textarray.length; i++) {
				if (textarraystring!="[") {
					textarraystring +=",";
				}
				textarraystring += '"'+textarray[i]+'"';
			}
			textarraystring +="]";
			json_str += '"'+$(this).attr("theme-var-name")+'": '+textarraystring;
		} else {
			json_str += '"'+$(this).attr("theme-var-name")+'": ""';
		}
	});
	$("#themeOptions .themeOptionToggle").each(function(){
		if (json_str!="{") {
				json_str += ',';
			}
		if ($(this).hasClass("bpe_current")) {
			json_str += '"'+$(this).attr("rel")+'": "1"';
		} else {
			json_str += '"'+$(this).attr("rel")+'": "0"';
		}
	});
	$("#themeOptions .themeOptionImage").each(function(){
		if (json_str!="{") {
				json_str += ',';
			}
		if ($(this).attr("value")!="") {

			json_str += '"'+$(this).attr("rel")+'": "'+$(this).attr("value").replace(/\\/g, "\\\\").replace(/(["])/g, "\\$1")+'"';
			$(".removeThemeImage",$(this)).show();
		} else {
			json_str += '"'+$(this).attr("rel")+'": ""';
			$(".removeThemeImage",$(this)).hide();
		}
	});
	json_str += "}";
	$.ajax({
	  type: "POST",
	  url: "settingsActions.php",
	  data: "settingsAction=changeThemeVars&theme_vars="+encodeURIComponent(json_str),
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
		if (msg=="ok") {
			saved();
		} else {
			error(LangVars.Misc_Error);
		}
	  }
	});
}



// Image Categories groups

function editImagesCategory ($clicked) {
	editMeListItem($clicked);
	return false;
}
function deleteImagesCategoryPrep () {
	if ($("#imagesCategoriesPaneInner .listItemHighlight").length) {
prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Images_Category_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deleteImagesCategory,false,true);
	}
}
function renameImagesCategoryCallback() {
	$("#imagesCategoriesList").load("pageActions.php?pageAction=showImagesCategories",function(){
		$("#imagesCategoriesListForGals").html($("#imagesCategoriesList").html());
		if ($("#imagesCategoriesList li").length==0) {
			$("#filterByImagesCategory").hide();
			$("#imagesCategoriesList").next().hide();
			$("#imagesCategoriesList").hide();
		}
		if ($("#rightPaneImagesCategories .imagesCategoryItem").length===0) {
			$("#rightPaneImagesCategories .noPages").show();
		}
		selectionTools();
		cancelDialogue();
		assignImagesCategoriesKeys();
		saved();
		$("#eventsGroupsPaneInner").lovelyScroll();
	});
	
}
function deleteImagesCategory () {
	var Ids="[";
	$("#imagesCategoriesPaneInner .listItemHighlight").each(function(){
		if (Ids=="[") {
		Ids+='"'+$(this).attr("images-category-id")+'"';
		} else {
		Ids+=',"'+$(this).attr("images-category-id")+'"';
		}
	});
	Ids+="]";
	working();
	$.ajax({
	  type: "POST",
	  url: "pageActions.php",
	  data: "pageAction=deleteImagesCategories&ids="+Ids,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

		$("#imagesCategoriesList").load("pageActions.php?pageAction=showImagesCategories",function(){
			$("#imagesCategoriesListForGals").html($("#imagesCategoriesList").html());
			if ($("#imagesCategoriesList li").length==0) {
				$("#filterByImagesCategory").hide();
				$("#imagesCategoriesList").next().hide();
				$("#imagesCategoriesList").hide();
			}
			if ($("#rightPaneImagesCategories .imagesCategoryItem").length===0) {
				$("#rightPaneImagesCategories .noPages").show();
			}
			displayImagesCategories();
			
			if (!$('#filterByImagesCategory .filterBy.bpe_current').length) {
				$("#showAllImages").trigger("click");
			}
			selectionTools();

			cancelDialogue();
			assignImagesCategoriesKeys();
			saved();
			$("#eventsGroupsPaneInner").lovelyScroll();
		});

	  }
	});
}
function addImageCategory () {
	$(document).unbind("click");
	$(document).unbind("keyup");
	$(document).unbind("keydown");
	$(document).unbind("keypress");
	$("#rightPaneImagesCategories .noPages").hide();
	$("#rightPaneImagesCategories .addImagesCategory").show();
	prepFancyLabelForms($("#rightPaneImagesCategories .addImagesCategory"));
	$("#rightPaneImagesCategories .addImagesCategory .focus").focus();
	function saveOrCancel () {
		$("#rightPaneImagesCategories .addImagesCategory .focus").unbind("blur");
		if ($("#rightPaneImagesCategories .addImagesCategory .focus").val()=="" || $("#rightPaneImagesCategories .addImagesCategory .focus").val()==" ") {
			resetAddForms();
			if ($("#rightPaneImagesCategories .imagesCategoryItem").length===0) {
				$("#rightPaneImagesCategories .noPages").show();
			}
		} else {
			working();
			$.ajax({
			  type: "POST",
			  url: "pageActions.php",
			  data: "pageAction=addImagesCategory&name="+encodeURIComponent($("#rightPaneImagesCategories .addImagesCategory .focus").val()),
			  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				postAddImageCat(false);
			  }
			});
		}
	}
	$("#rightPaneImagesCategories .addImagesCategory .focus").unbind("blur").blur(function(){
		saveOrCancel();
		return false;
	});
	$(document).keyup(function(e){
		if (e.keyCode==13) { // enter
			saveOrCancel();
			return false;
		}
	});
	$(document).keydown(function(e){
		if (e.keyCode==13) { // enter

			return false;
		}
		if (e.keyCode==27) { // esc
			saveOrCancel();
			return false;
		}
	});
}

function displayImagesCategories () {

	$("#imagesCategoriesPaneInner .insertTarget").html("");
	$("#imagesCategoriesPaneInner .insertTarget").append("<div class='dropzone'><div></div></div>");
	
	hidePaneTools();

	var c = 0;
	$("#imagesCategoriesList a").each(function(){
		$("#imagesCategoriesPaneInner .insertTarget").append("<div class='responsiveListItem imagesCategoryItem' images-category-id='"+$(this).attr("images-category-id")+"' title=\""+$(".overflowEllipsis",$(this)).html()+"\"><span class='overflowEllipsis'>"+$(".overflowEllipsis",$(this)).html()+"</span></div><div class='dropzone'><div></div></div>");
		c++;
	});
	if (c==0) {
		$("#imagesCategoriesPaneInner .insertTarget").append("<div class='noPages'>"+LangVars.No_Event_Groups+"</div>");
	}

	updateImagesCategoryFilterMenu();

}
function updateImagesCategoryFilterMenu() {
	if ($("#imagesCategoriesList a").length) {
		$("#rightPaneImages .filterBar").show();
		$("#imagesPaneInner").addClass("withFilterBar");
		$("#imagesFilterCategories").html("");
		$("#imagesCategoriesList a").each(function(){
			$("#imagesFilterCategories:hidden").show();
			$("#imagesFilterCategories").append('<li><a href="#" class="filterBy filterLink" data-lang="'+htmlentities($(".overflowEllipsis",$(this)).html())+'" category-id="'+$(this).attr("images-category-id")+'"><span>'+htmlentities($(".overflowEllipsis",$(this)).html())+'</span></a></li>');
		});
	} else {
		$("#rightPaneImages .filterBar").hide();
		$("#imagesPaneInner").removeClass("withFilterBar");
	}
}
function assignImagesCategoriesKeys () {
	$(document).unbind("keydown");
	$(document).unbind("keyup");
	$(document).unbind("keypress");
	assignSelectionKeys();
	$(document).keyup(function (e) {
		if (e.keyCode==13) { // enter
			if ($("#rightPaneImagesCategories .listItemHighlight").length==1) {
				editImagesCategory($("#imagesCategoriesPaneInner .listItemHighlight"));
			}
			return false;
		}
	});
	$(document).keydown(function (e) {
		if (e.keyCode==8) { // backspace
			deleteImagesCategoryPrep();
			return false;
		}
		if (e.keyCode==78) { // n
			if (!metaDown) {
				addImageCategory();
				e.preventDefault();
			}

			return false;
		}
		if (e.keyCode==33) { // pageup
			var pageH = $("#imagesCategoriesPaneInner").height();
			$("#imagesCategoriesPaneInner").lovelyScrollMove(pageH);
			return false;
		}
		if (e.keyCode==34) { // subscriberCategoriesPaneInner
			var pageH = $("#imagesCategoriesPaneInner").height();
			$("#imagesCategoriesPaneInner").lovelyScrollMove(-pageH);
			return false;
		}
	});
}
function postAddImageCat(applyTo,catId) {
	$("#filterByImagesCategory").show();
	$("#imagesCategoriesList").next().show();
	$("#imagesCategoriesList").show().load("pageActions.php?pageAction=showImagesCategories",function(){
		$("#imagesCategoriesListForGals").html($("#imagesCategoriesList").html());
		saved();
		displayImagesCategories();
		$("#imagesCategoriesPaneInner .responsiveListItem:first").addClass("listItemHighlight");
		$("#imagesCategoriesPaneInner").lovelyScroll();
		assignImagesCategoriesKeys();
		assignSortableListItems($("#imagesCategoriesPaneInner"),"listItemHighlight","responsiveListItem");
		
		if (applyTo) {
			$("#imagesPaneInner .listItemHighlight").each(function(){
				
				if (!$("#imagescategory"+catId,$(this)).length) {
					$(this).append("<input type='hidden' id='imagescategory"+catId+"' value='"+catId+"' />")
				}
			
				var catsCSV = new Array();
				$("input[type=hidden]",$(this)).each(function(){
					catsCSV.push($(this).val());
				});
				catsCSV.sort(function(b,a){return a-b});
				var newCats="";
				for (var i = 0; i < catsCSV.length; i++) {
					if (i==0) {
						newCats=catsCSV[i];
					} else {
						newCats=newCats+","+catsCSV[i];
					}
				};
				$(this).attr("data-images-categories",newCats);
			});
			if ($("#quickAddImageGallery").is(":checked"))  {
				$("#galleriesAdmin").load("galleriesActions.php?galleriesAction=show&to_prevent_cache="+(new Date).getTime(),function(){
					$("#galleriesPaneInner .insertTarget").html($("#galleriesAdmin").html());
					$("#galleriesPaneInner .insertTarget .galleryItem:first").addClass("listItemHighlight");
					assignDragAssets($("#galleriesPaneInner .insertTarget"));
					$("#galleriesPaneInner").lovelyScroll();
					resetAddForms();
					assignGalleryAdd();
					assignGalleriesKeys();
					saved();
					selectionTools();
				});
			}
		}
		setTimeout(function() {
			selectionTools();
		}, 100);

		resetAddForms();
		cancelDialogue();
	});
	
}
function quickAddImageCategory(text) {
	var addGal = $("#quickAddImageGallery").is(":checked");
	if (addGal) {
		var addGalStr = "&addgal=1";
	} else {
		var addGalStr = "";
	}
	if ($("body").hasClass("selectingAll")) {
		var Ids="[";
		$("#imagesPaneInner .responsiveListItem:not(.responsiveListItem.listItemHighlight)").each(function(){
			if (Ids=="[") {
			Ids+='"'+$(this).attr("id")+'"';
			} else {
			Ids+=',"'+$(this).attr("id")+'"';
			}
		});
		Ids+="]";
		var selectingAll = "&selectingAll=true";
	} else {
		var selectingAll = "";
		var Ids="[";
		$("#imagesPaneInner .listItemHighlight").each(function(){
			if (Ids=="[") {
			Ids+='"'+$(this).attr("id")+'"';
			} else {
			Ids+=',"'+$(this).attr("id")+'"';
			}
		});
		Ids+="]";
	}
	
	working();
	$.ajax({
	  type: "POST",
	  url: "pageActions.php",
	  data: "pageAction=quickAddImagesCategory&ids="+Ids+"&name="+encodeURIComponent(text)+addGalStr,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			postAddImageCat(true,msg);
	  }
	});
}
$(document).ready(function(){
	$("#quickAddImagesCategories").click(function(){
		prepDialogue("<h2>"+LangVars.Quick_Add+"</h2><p>"+LangVars.Quick_Add_Image_Info+"</p>",LangVars.Cancel,cancelDialogue,LangVars.Add,quickAddImageCategory,false,true,true,"quickAddImageCategory");
		return false;
	});
	$("#manageImagesCategories").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		//hidePanes();
		$("input").unbind();
		$("#loadingMask").show();
		$(".assetPane").hide();
		hide_iconbar_menus();
		displayImagesCategories();
		assignListPane($("#imagesCategoriesPaneInner"),editImagesCategory);
//		assignSortableListItems($("#imagesCategoriesPaneInner"),"listItemHighlight","responsiveListItem");
		$("#imagesCategoriesPaneInner").css("width","auto");
		showPane($("#rightPaneImagesCategories"),false,true);
		setTimeout(function() {$("#imagesCategoriesPaneInner").lovelyScroll();}, 400);

		assignImagesCategoriesKeys();
		$("#loadingMask").hide();
		return false
	});
	$("#iconbarDeleteImagesCategory").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		deleteImagesCategoryPrep();
		return false;
	});
	$("#iconbarAddImagesCategory").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		addImageCategory();
		return false;
	});
	$("#imagesCategoriesList").click(function(e){
		var $target=false;
		if ($(e.target).hasClass("overflowEllipsis")) {
			$target = $(e.target).parent();
		}
		if ($(e.target).hasClass("bpe_selection_tool")) {
			$target = $(e.target);
		}
		if (!$target) {
			return false;
		}

		if (!$target.hasClass("greyedOut")) {
			if ($target.hasClass("bpe_current")) {
				var action = "removeFromCat";
			} else {
				var action = "addToCat";
			}
			$clicked = $target;
			var catId = $target.attr("images-category-id");
			if ($("body").hasClass("selectingAll")) {
				var Ids="[";
				$("#imagesPaneInner .responsiveListItem:not(.responsiveListItem.listItemHighlight)").each(function(){
					if (Ids=="[") {
					Ids+='"'+$(this).attr("id")+'"';
					} else {
					Ids+=',"'+$(this).attr("id")+'"';
					}
				});
				Ids+="]";
				var selectingAll = "&selectingAll=true";
			} else {
				var selectingAll = "";
				var Ids="[";
				$("#imagesPaneInner .listItemHighlight").each(function(){
					if (Ids=="[") {
					Ids+='"'+$(this).attr("id")+'"';
					} else {
					Ids+=',"'+$(this).attr("id")+'"';
					}
				});
				Ids+="]";
			}
			working();
			$.ajax({
			  type: "POST",
			  url: "pageActions.php",
			  data: "pageAction=changeImagesInCategories&ids="+Ids+"&action="+action+"&cat="+catId+selectingAll,
			  success: function(msg){
		if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				$("#imagesPaneInner .listItemHighlight").each(function(){
					if (action=="addToCat") {
						if (!$("#imagescategory"+catId,$(this)).length) {
							$(this).append("<input type='hidden' id='imagescategory"+catId+"' value='"+catId+"' />")
						}
					} else {
						$("#imagescategory"+catId,$(this)).remove();
					}
					var catsCSV = new Array();
					$("input[type=hidden]",$(this)).each(function(){
						catsCSV.push($(this).val());
					});
					catsCSV.sort(function(b,a){return a-b});
					var newCats="";
					for (var i = 0; i < catsCSV.length; i++) {
						if (i==0) {
							newCats=catsCSV[i];
						} else {
							newCats=newCats+","+catsCSV[i];
						}
					};
					$(this).attr("data-images-categories",newCats);
				});
				selectionTools();
				saved();
			  }
			});

		}
		return false;
	});
	$("#imagesFilterCategories,#showAllImages,#showImagesWithoutCat").click(function(e){
		var $target=false;
		if ($(e.target).parent().hasClass("filterLink")) {
			$target = $(e.target).parent();
		}
		if ($(e.target).hasClass("filterLink")) {
			$target = $(e.target);
		}
		if (!$target) {
			return false;
		}

		$("#imagesFilterCategories a,#showAllImages,#showImagesWithoutCat").removeClass("bpe_current");
		$target.addClass("bpe_current");
		$(".target",$("#imagesFilterCategories").parents(".subHeaderLeftMenuItem")).text($target.attr("data-lang"));
		cat=$target.attr("category-id");
		working();
		
		$.ajax({
		  type: "POST",
		  url: "pageActions.php",
		  data: "pageAction=filterImages&cat="+cat,
		  success: function(msg){
			if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			$(".bpe_images,#bpe_images,#bpe_dropship_images .insertTarget,#imagesPaneInner .insertTarget").html(msg);
			assignListLasso($("#imagesPaneInner"));
			assignListPane($("#imagesPaneInner"),doNothing);
			assignDragAssets($("#imagesPaneInner .insertTarget"));
			if (!($("body").hasClass("storageDraggable"))) {
				assignSortableListItems($("#imagesPaneInner"),"listItemHighlight","contentImage");		
			}
			setTimeout(function() {
				$("#imagesPaneInner").lovelyScroll(scrollImagesBottom);
			}, 400);
			saved();
		  }
		});
		
		return false;
	});
});



// Image Categories groups

function editPermissionGroups ($clicked) {
	editMeListItem($clicked);
	return false;
}
function deletePermissionGroupsPrep () {
	if ($("#permissionGroupsPaneInner .listItemHighlight").length) {
prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Permission_Groups_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deletePermissionGroups,false,true);
	}
}
function deletePermissionGroups () {
	var Ids="[";
	$("#permissionGroupsPaneInner .listItemHighlight").each(function(){

		if (Ids=="[") {
		Ids+='"'+$(this).attr("permission-group-id")+'"';
		} else {
		Ids+=',"'+$(this).attr("permission-group-id")+'"';
		}
	});
	Ids+="]";
	working();
	$.ajax({
	  type: "POST",
	  url: "adminUsersActions.php",
	  data: "adminUsersAction=deletePermissionGroups&ids="+Ids,
	  success: function(msg){
if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }

		$("#permissionGroupsList").load("adminUsersActions.php?adminUsersAction=showPermissionGroups",function(){
			$("#permissionGroupsListForGals").html($("#permissionGroupsList").html());
			if ($("#permissionGroupsList li").length==0) {
				$("#filterByPermissionGroups").hide();
				$("#permissionGroupsList").next().hide();
				$("#permissionGroupsList").hide();
			}
			if ($("#rightPanePermissionGroups .permissionGroupsItem").length===0) {
				$("#rightPanePermissionGroups .noPages").show();
			}
			displayPermissionGroups();
			cancelDialogue();
			selectionTools();
			
			assignPermissionGroupsKeys();

			saved();
			$("#eventsGroupsPaneInner").lovelyScroll();
		});

	  }
	});
}
function addPermissionCategory () {
	$(document).unbind("click");
	$(document).unbind("keyup");
	$(document).unbind("keydown");
	$(document).unbind("keypress");
	$("#rightPanePermissionGroups .noPages").hide();
	$("#rightPanePermissionGroups .addPermissionGroup").show();
	prepFancyLabelForms($("#rightPanePermissionGroups .addPermissionGroup"));
	$("#rightPanePermissionGroups .addPermissionGroup .focus").focus();
	function saveOrCancel () {
		$("#rightPanePermissionGroups .addPermissionGroup .focus").unbind("blur");
		if ($("#rightPanePermissionGroups .addPermissionGroup .focus").val()=="" || $("#rightPanePermissionGroups .addPermissionGroup .focus").val()==" ") {
			resetAddForms();
			if ($("#rightPanePermissionGroups .permissionGroupsItem").length===0) {
				$("#rightPanePermissionGroups .noPages").show();
			}
		} else {
			working();
			$.ajax({
			  type: "POST",
			  url: "adminUsersActions.php",
			  data: "adminUsersAction=addPermissionGroup&name="+encodeURIComponent($("#rightPanePermissionGroups .addPermissionGroup .focus").val()),
			  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			if (msg=="exists") {
				error(LangVars.Permission_Exists);
			}
				postAddPermissionGroup(false);
			  }
			});
		}
	}
	$("#rightPanePermissionGroups .addPermissionGroup .focus").unbind("blur").blur(function(){
		saveOrCancel();
		return false;
	});
	$(document).keyup(function(e){
		if (e.keyCode==13) { // enter
			saveOrCancel();
			return false;
		}
	});
	$(document).keydown(function(e){
		if (e.keyCode==13) { // enter

			return false;
		}
		if (e.keyCode==27) { // esc
			saveOrCancel();
			return false;
		}
	});
}

function displayPermissionGroups () {

	$("#permissionGroupsPaneInner .insertTarget").html("");
	$("#permissionGroupsPaneInner .insertTarget").append("<div class='dropzone'><div></div></div>");
	
	hidePaneTools();

	var c = 0;
	$("#permissionGroupsList a").each(function(){
		$("#permissionGroupsPaneInner .insertTarget").append("<div class='responsiveListItem permissionGroupsItem' permission-group-id='"+$(this).attr("permission-group-id")+"' title=\""+$(".overflowEllipsis",$(this)).html()+"\"><span class='overflowEllipsis'>"+$(".overflowEllipsis",$(this)).html()+"</span></div><div class='dropzone'><div></div></div>");
		c++;
	});
	if (c==0) {
		$("#permissionGroupsPaneInner .insertTarget").append("<div class='noPages'>"+LangVars.No_Event_Groups+"</div>");
	}


}
function renamePermissionGroupsCallback() {
	$("#permissionGroupsList").load("adminUsersActions.php?adminUsersAction=showPermissionGroups",function(){
		$("#permissionGroupsListForGals").html($("#permissionGroupsList").html());
		if ($("#permissionGroupsList li").length==0) {
			$("#filterByPermissionGroups").hide();
			$("#permissionGroupsList").next().hide();
			$("#permissionGroupsList").hide();
		}
		if ($("#rightPanePermissionGroups .permissionGroupsItem").length===0) {
			$("#rightPanePermissionGroups .noPages").show();
		}
		selectionTools();
		cancelDialogue();
		assignPermissionGroupsKeys();
		saved();
		$("#eventsGroupsPaneInner").lovelyScroll();
	});
}

function assignPermissionGroupsKeys () {
	$(document).unbind("keydown");
	$(document).unbind("keyup");
	$(document).unbind("keypress");
	assignSelectionKeys();
	$(document).keyup(function (e) {
		if (e.keyCode==13) { // enter
			if ($("#rightPanePermissionGroups .listItemHighlight").length==1) {
				editEventGroup($("#permissionGroupsPaneInner .listItemHighlight"));
			}
			return false;
		}
	});
	$(document).keydown(function (e) {
		if (e.keyCode==8) { // backspace
			deletePermissionGroupsPrep();
			return false;
		}
		if (e.keyCode==78) { // n
			if (!metaDown) {
				addPermissionCategory();
				e.preventDefault();
			}

			return false;
		}
		if (e.keyCode==33) { // pageup
			var pageH = $("#permissionGroupsPaneInner").height();
			$("#permissionGroupsPaneInner").lovelyScrollMove(pageH);
			return false;
		}
		if (e.keyCode==34) { // subscriberCategoriesPaneInner
			var pageH = $("#permissionGroupsPaneInner").height();
			$("#permissionGroupsPaneInner").lovelyScrollMove(-pageH);
			return false;
		}
	});
}

function postAddPermissionGroup(applyTo,catId) {
	$("#filterByPermissionGroups").show();
	$("#permissionGroupsList").next().show();
	$("#permissionGroupsList").show().load("adminUsersActions.php?adminUsersAction=showPermissionGroups",function(){
		$(".permission-groups").html($("#permissionGroupsList").html());
//		$("#permissionGroupsListForGals").html($("#permissionGroupsList").html()); // item level group list
		saved();
		displayPermissionGroups();
		$("#permissionGroupsPaneInner .responsiveListItem:first").addClass("listItemHighlight");
		$("#permissionGroupsPaneInner").lovelyScroll();
		assignPermissionGroupsKeys();
		assignSortableListItems($("#permissionGroupsPaneInner"),"listItemHighlight","responsiveListItem");
		
		setTimeout(function() {
			selectionTools();
		}, 100);

		resetAddForms();
		cancelDialogue();
	});
	
}

$(document).ready(function(){

	$("#iconbarDeletePermissionGroups").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		deletePermissionGroupsPrep();
		return false;
	});
	$("#managePermissionGroups").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		//hidePanes();

		$("input").unbind();
		$("#loadingMask").show();
		$(".assetPane,.rightPane").hide();
		hide_iconbar_menus();
		displayPermissionGroups();
		assignListPane($("#permissionGroupsPaneInner"),editPermissionGroups);
		assignSortableListItems($("#permissionGroupsPaneInner"),"listItemHighlight","responsiveListItem");
		$("#permissionGroupsPaneInner").css("width","auto");
		showPane($("#rightPanePermissionGroups"),false,true);
		setTimeout(function() {$("#permissionGroupsPaneInner").lovelyScroll();}, 400);

		assignPermissionGroupsKeys();

		$("#loadingMask").hide();
		return false;
	});
	
	$("#iconbarAddPermissionGroup").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		addPermissionCategory();
		return false;
	});
	$("#permissionGroupsList").click(function(e){
		var $target=false;
		if ($(e.target).hasClass("overflowEllipsis")) {
			$target = $(e.target).parent();
		}
		if ($(e.target).hasClass("bpe_selection_tool")) {
			$target = $(e.target);
		}
		if (!$target) {
			return false;
		}

		if (!$target.hasClass("greyedOut")) {
			if ($target.hasClass("bpe_current")) {
				var action = "removeFromCat";
			} else {
				var action = "addToCat";
			}
			$clicked = $target;
			var catId = $target.attr("permission-group-id");
			
			var Ids="[";
			$("#staffPaneInner .listItemHighlight").each(function(){
				if (Ids=="[") {
				Ids+='"'+$(this).attr("staff-id")+'"';
				} else {
				Ids+=',"'+$(this).attr("staff-id")+'"';
				}
			});
			Ids+="]";
		
			working();
			$.ajax({
			  type: "POST",
			  url: "adminUsersActions.php",
			  data: "adminUsersAction=changeAdminUserInGroups&ids="+Ids+"&action="+action+"&group="+catId,
			  success: function(msg){
		if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
				$("#staffPaneInner .listItemHighlight").each(function(){
					if (action=="addToCat") {
						if (!$("#permissiongroup"+catId,$(this)).length) {
							$(this).append("<input type='hidden' id='permissiongroup"+catId+"' value='"+catId+"' />")
						}
					} else {
						$("#permissiongroup"+catId,$(this)).remove();
					}
					var catsCSV = new Array();
					$("input[type=hidden]",$(this)).each(function(){
						catsCSV.push($(this).val());
					});
					catsCSV.sort(function(b,a){return a-b});
					var newCats="";
					for (var i = 0; i < catsCSV.length; i++) {
						if (i==0) {
							newCats=catsCSV[i];
						} else {
							newCats=newCats+","+catsCSV[i];
						}
					};
					$(this).attr("data-permission-groups",newCats);
				});
				selectionTools();
				saved();
			  }
			});

		}
		return false;
	});

});


function hide_header_menus (pt){
	//if ($(window).width()<570) {
	//	$("#dragInsert").fadeOut();	
	//}
	/*
	if ($("#dragInsert").hasClass("showing")) {
	
		$("#dragInsert").stop(false,true).animate({right:"-220px"},300,function(){
			$("#dragInsert").css("z-index","200");
			$("#dragInsert").removeClass("showing");
			dragInsert=false;
		});
	
	}*/
	if (pt===true) {
		var str = ".subHeaderLeftMenuItem.showing";
	} else {
		var str = ".subHeaderLeftMenuItem.showing:not(.paneTools .subHeaderLeftMenuItem.showing)";
	}
	$(str).each(function(){
		
		if (!$(this).hasClass("dontHide")) {
			var $t = $(this);
			var $ul =$("> ul",$(this));
			var $ts = $(".triShadow",$(this));
			var $mt = $(".mtri",$(this));
			if ($(this).hasClass("above")) {
				$ul.animate({bottom:"+=15px",opacity:0},150,function(){
					$ul.hide();
				});	
			} else {
				$ul.animate({top:"-=15px",opacity:0},150,function(){
					$ul.hide();
				});
			}
			
			$mt.animate({top:"-=15px",opacity:0},150,function(){
				$mt.hide();
			});	
			$ts.animate({top:"-=15px",opacity:0},150,function(){
				$ts.hide();
				$t.removeClass("showing");
				if ($t.parents("#header").length && !$("#header .subHeaderLeftMenuItem ul:visible").length) {
					$("#header").css("z-index","1");
				}
			});	
		}
	});
	$(".lovelyScrollLocked").removeClass("lovelyScrollLocked");
	$("#level1Target").removeClass("showing");
};	

function setMaxHeightsOnHeaderMenus () {

	$(".subHeaderLeftMenuItem.showing").each(function(){
		var offset=$(this).offset();
		var oftop = offset.top+30;
		var wh = $(window).height();
		var space = wh-oftop;
		space=space-30;
		$("ul",$(this)).css("max-height",space+"px");
	});


}
function setModKeys () {
	if (isMac()) {
		var modifier = "⌘";
		var shift = "⇧";			
	} else {
		var modifier = "Ctrl+";			
		var shift = "⇧+";
	}
	$(".mod").html(modifier);
	$(".shift").html(shift);
}
function showSwitcher ($switcher,$this) {
	$switcher.parent().addClass("dontHide");
	hideToolTips(false);
	hide_header_menus();
	if ($this.attr("id")=="level1Target") {
		$this.addClass("showing");	
	}
	
	if ($switcher.parent().hasClass("showing")) {
		$switcher.parent().removeClass("showing");
		var $ul =$switcher;
		var $ts = $(".triShadow",$switcher.parent());
		var $mt = $(".mtri",$switcher.parent());
		$ul.animate({top:"-=15px",opacity:0},150,function(){
			$ul.hide();
		});
		$mt.animate({top:"-=15px",opacity:0},150,function(){
			$mt.hide();
		});
		$ts.animate({top:"-=15px",opacity:0},150,function(){
			$ts.hide();
		});
		
	} else {
		var targetWidth = $this.width();
		$switcher.parent().css("width",targetWidth);
		$switcher.parent().addClass("showing");
		var offset = $this.offset();
		var offLeft = offset.left;
		var pageWidth = $("#dragBoundry").width();
		var dif = pageWidth-offLeft;
		
		var oftop = offset.top+30;
		var wh = $("body").height();
		var space = wh-oftop;
		space=space-30;

		var $ul = $switcher;
		var $ts = $(".triShadow",$switcher.parent());
		var $mt = $(".mtri",$switcher.parent());

		var targetTop = offset.top+10;
		var targetTopAfterAnimate = targetTop+16;
		var halfW = $this.outerWidth()/2;
		var targetLeft = offset.left-halfW;
		var targetRight = targetLeft+targetWidth;
		
		$ul.css("max-height",space+"px").css("left",targetLeft+"px").css("top",targetTop+"px").css("display","block").css("opacity","0").animate({top:"+=15px",opacity:1},150);
		if (dif<$ul.width()+10) {
			var ulLeft = "auto";
			var ulRight = targetRight;	
		} else {
			var ulLeft = targetLeft;	
			var ulRight = "auto";	
		}
		$ul.css("left",ulLeft).css("right",ulRight);
		var mtLeft = offset.left+halfW;
		var arrowTop=targetTop+10;
		$mt.css("display","block").css("left",mtLeft).css("top",arrowTop).css("opacity","0").animate({top:"+=15px",opacity:1},150,function(){
			$switcher.parent().removeClass("dontHide");
		});
		$ul.lovelyScroll();
		$ts.css("display","block").css("left",mtLeft).css("top",arrowTop+12).css("opacity","0").animate({top:"+=15px",opacity:1},150);
	}
}
function assignHeaderMenus () {
	$(".level2Switcher span span,#dragInsertStorageSwitcher").unbind("click").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}

		showSwitcher($("#level2Switcher"),$(this));
		return false;
	});

	$(".level1Switcher").unbind("click").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}

		showSwitcher($("#level1Switcher"),$(this));
		return false;
	});

	$(".subHeaderLeftMenuItem .target").unbind("click").click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		
		hideToolTips(false);
		if ($(this).parents(".faded").length) {
			return false;
		}
		$(".showSubMenu",$(this).parent()).next().hide();
		$(".showSubMenu").removeClass("showingSubMenu");
		$(this).parent().addClass("dontHide");
		$tp = $(this).parent();
		
		if (!$(this).parents(".paneTools").length) {
			//hidePaneTools();
		} 
		hide_header_menus(true);
		if ($(this).parent().hasClass("showing")) {
			

			var $ul =$("> ul",$(this).parent());
			var $ts = $(".triShadow",$(this).parent());
			var $mt = $(".mtri",$(this).parent());
			if ($(this).parent().hasClass("above")) {
				$ul.animate({bottom:"+=15px",opacity:0},150,function(){
					$ul.hide();
				});	
			} else {
				$ul.animate({top:"-0px",opacity:0},150,function(){
					$ul.hide();
				});
			}
			
		
			$mt.animate({top:"-=15px",opacity:0},150,function(){
				$mt.hide();
			});
			$ts.animate({top:"-=15px",opacity:0},150,function(){
				$ts.hide();
				$tp.removeClass("dontHide");
				$tp.removeClass("showing");
			});
			
		} else {
			
			if ($(this).parents("#header").length) {
				$("#header").css("z-index","10");
			}
			var $ul = $("> ul",$(this).parent());
			$(this).parent().addClass("showing");
			var offset = $(this).offset();
			var offLeft = offset.left;
			if ($("#lightPagesList").length) {
				var pageWidth = $("#lightPagesList").width()+$("#lightPagesList").offset().left;
			} else {
				var pageWidth = $("#dragBoundry").width();
			}
		

			var rightEdge = offLeft+$ul.width()+5;
			var dif = pageWidth-rightEdge;
			
			var oftop = offset.top+30;
			if ($(this).parents(".paneTools").length) {
				var wh = $(this).parents(".paneTools").height();
			} else {
				var wh = $(window).height();
			}
			var space = wh-oftop;
			space=space-30;
			var ULTop = 16;
			var mtTop = 25;
			var tsTop = 35;
			if ($(this).parent().hasClass("bigAssetMenu")) {
				ULTop=26;
				var mtTop = 35;
				var tsTop = 45;
			}
			var $ts = $(".triShadow",$(this).parent());
			var $mt = $(".mtri",$(this).parent());
			if (dif<0) {
				var ulLeft = dif+"px";	
			} else {
				var ulLeft = "0"
			}
			
			$ul.css("left",ulLeft);
			if ($(this).parents(".paneTools").length) {
			$ul.css("left",ulLeft-10);				
			}

			if ($(this).parents(".paneTools").length) {
				$(this).parent().removeClass("above");
				$(this).parents(".paneTools").addClass("lovelyScrollLocked");
				space = space+$(this).parents(".paneTools").offset().top;
				if (space<80) {
					$(this).parent().addClass("above");
					var topSpace = offset.top - 35 - $(this).parents(".paneTools").offset().top;
					mtTop=mtTop-35;
					tsTop=tsTop-35;
					$("> ul",$(this).parent()).css("max-height",topSpace+"px").css("display","block").css("opacity","0").css("top","auto").animate({bottom:"21px",opacity:1},150);
					$mt.css("display","block").css("opacity","0").css("top",mtTop-15).animate({top:mtTop+"px",opacity:1},150,function(){
						$tp.removeClass("dontHide");
					});
					$ts.css("display","block").css("opacity","0").animate({top:tsTop+"px",opacity:1},150);
				} else {
					
					$("> ul",$(this).parent()).css("max-height",space+"px").css("display","block").css("opacity","0").css("bottom","auto").animate({top:ULTop,opacity:1},150);
					$mt.css("display","block").css("opacity","0").animate({top:mtTop+"px",opacity:1},150,function(){
						$tp.removeClass("dontHide");
					});
					$ts.css("display","block").css("opacity","0").animate({top:tsTop+"px",opacity:1},150);	
				}
				

			} else {

				if ($ul.hasClass("contextMenu")) {
					var newX = mouseX-$(this).parent().offset().left;
					var newY = mouseY-$(this).parent().offset().top-15;
					$ul.css("left",newX).css("top",newY);
					$ul.css("max-height",space+"px").css("display","block").css("opacity","0");

					var rightEdge = $ul.offset().left + $ul.outerWidth() + 15;
					if (rightEdge>$("#dragBoundry").width()) {
						var moveLeft =rightEdge-$("#dragBoundry").width();
					}
					newX = newX-moveLeft;
					$ul.css("left",newX);

					var bottomEdge = $ul.offset().top + $ul.outerHeight() + 15;
					if (bottomEdge>$("#dragBoundry").height()) {
						var moveUp =bottomEdge-$("#dragBoundry").height();
					}
					newY = newY-moveUp;
					$ul.css("top",newY);


					$mt.hide();
					$ts.hide();
					$("> ul",$(this).parent()).css("max-height",space+"px").animate({opacity:1},150,function(){
						$tp.removeClass("dontHide");
					});

				} else {
					$("> ul",$(this).parent()).css("max-height",space+"px").css("display","block").css("opacity","0").animate({top:ULTop,opacity:1},150);
					$mt.css("display","block").css("opacity","0").animate({top:mtTop+"px",opacity:1},150,function(){
						$tp.removeClass("dontHide");
					});
					$ts.css("display","block").css("opacity","0").animate({top:tsTop+"px",opacity:1},150);

				}
			}
			
		
			$("> ul",$(this).parent()).lovelyScroll();
			if ($(".filterBox",$tp).length) {
				$(".filterBox .focus",$tp).focus();
			} else {
				focusCutCopyPaste();
			}

		}
		
		return false;
	});
	$(".showSubMenu").unbind().click(function(){

		if ($("ul:visible",$(this).parent()).length) {
			$("ul:visible",$(this).parent()).slideUp(300,function(){
				$(".paneTools:visible").lovelyScroll();
			});
			$(this).removeClass("showingSubMenu");

		} else {
			$("ul",$(this).parent()).slideDown(300,function(){
				$(".paneTools:visible").lovelyScroll();
				$(".showing > ul").lovelyScroll();
			});
			$(this).addClass("showingSubMenu");
		}
		return false;
	});
}
function assignEditMenuPages () {
	setModKeys();
	$("#iconbarSelectAllPages").unbind().click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		if ($("#adminPages #mainMenuPagesMain").css("display")=="block") {
			$("#adminPages #mainMenuPagesMain .responsiveListItem:not(.notokperms)").addClass("listItemHighlight");
		}
		if ($("#adminPages #nonLinkingPagesMain").css("display")=="block") {
			$("#adminPages #nonLinkingPagesMain .responsiveListItem:not(.notokperms)").addClass("listItemHighlight");
		}
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarDeselectAllPages").unbind().click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		$("#adminPages .listItemHighlight").removeClass("listItemHighlight");
		selectionTools();
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarDuplicatePages").unbind().click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		pastePages("duplicate_pages");
		hide_iconbar_menus();
		return false;
	});
	$("#iconbarCopyPages").unbind().click(function(){
		if (justScrolled) {return false;}
		if (ignoreClickCatchup) {return false;}
		if (!$(this).hasClass("greyedOut"))	{
			pagesCutCopy("copy_page");
		}
		return false;
	});
	$("#iconbarCutPages").unbind().click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		if (!$(this).hasClass("greyedOut"))	{
			pagesCutCopy("cut_page");
		}
		return false;
	});
	$("#iconbarPastePages").unbind().click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		if (!$(this).hasClass("greyedOut"))	{
			pastePages("paste_page");
		}
		return false;
	});
	$("#iconbarDeletePages").unbind().click(function(){
		if (justScrolled) {return false;}
			if (ignoreClickCatchup) {return false;}
		if (!$(this).hasClass("greyedOut")&&!$(this).parents('.disabled').length)	{
			prepDialogue("<h2>"+LangVars.Are_You_Sure+"</h2><p>"+LangVars.Delete_Page_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Delete,deletePages,false,true,false,"");
		}	
		return false;		
	});
}
function initLP(){
	//$("#launchPad .lpBoxSmall,#launchPad .lpBoxBig").css("opacity","0");
	//$("#launchPad .lpBoxSmall").css("height","auto");
	$("#launchPad .lpBoxSmall a").removeAttr("style");
	$("#launchPad .lpBoxSmall a").css("padding-top","20px").css("padding-bottom","20px");
	var h = 0;
	var count = 1;
	if ($("#lpContent").width()<600) {
		$("#launchPad .lpBoxSmall a").css("padding-left","10px").css("padding-right","10px").css("font-size","14px");
	}
	$("#launchPad .lpBoxSmall").each(function(){
		if ($("a",$(this)).height()>h) {
			h=$("a",$(this)).height();
		}
		if (count%5==1) {
			$(this).addClass("fiveFirst");
		}
		if (count%5==0) {
			$(this).addClass("fiveLast");
		}
		count++;
	});

	$("#launchPad .lpBoxSmall").each(function(){
		//if ($("a",$(this)).height()<h) {
			var dif = (h-$("a",$(this)).height())/2;
			dif = dif + 20;
			$("a",$(this)).css("padding-top",dif+"px").css("padding-bottom",dif+"px");
		//}
	});
	



	//$("#launchPad .lpBoxSmall").css("height",h+"px");

	$(".lpBoxBigInner").css("height","auto");
	var h = 0;
	$(".lpBoxBigInner").each(function(){
		if ($(this).height()>h) {
			h=$(this).height();
		}
	});
	$(".lpBoxBigInner").css("height",h+"px");
	/*var delay = 0;
	$("#launchPad .lpBoxSmall,#launchPad .lpBoxBig").each(function(){
		var $t = $(this);
		setTimeout(function() {
			$t.animate({opacity:1},200);
		}, delay);
		delay=delay+50;
	});*/
	$("#launchPad").lovelyScroll();
	$(document).keydown(function (e) {
		if (e.keyCode==33) { // pageup
			var pageH = $("#launchPad").height();
			$("#launchPad").lovelyScrollMove(pageH);
			return false;
		}
		if (e.keyCode==34) { // pagedown
			var pageH = $("#launchPad").height();
			$("#launchPad").lovelyScrollMove(-pageH);
			return false;
		}
	});
}
var hardRetrunToLP=false;
function returnToLP () {
	if (hardRetrunToLP) {
		window.location="/admin/";
		return false;
	}
	hide_header_menus();
	hideToolTips();

	$("body").attr("pane","lp");
	$("body").removeAttr("previousPane");
	$("#growingBox").remove();
	$("body,html").scrollTop(0);
	$("body").append("<div id='growingBox' style='display:none;'></div>");
	
	$("#growingBox").css({width:$("#dragInsert").width(),height:"100%",top:"0",left:"0"});
	$("#growingBox").stop(true,true).fadeIn(200,function(){
	
		$("#launchPad").removeClass("hidden");
		$("#settingsFlyin").hide();
		if ($(window).width()>1300) {
			var nl = "25%";
		} else {
			var nl = "50%";
		}
		initLP();
		$("#growingBox").stop(true,true).animate({top:"50%",left:nl,width:0,height:0,opacity:0},300,function(){
			$("#rightPane").hide();
			$("#growingBox").remove();
			$("body").unbind();
			$(".assetPane").hide();
			livepreview();
			
			
		});	
	});
	cancelDialogue();
}

function bindReturnsToLP() {
	$(".returnToLP").unbind().click(function(){
		if (($("body").attr("previous-pane")=="editContent"||$("body").attr("pane")=="editContent") && !$("#saveEditPage").hasClass("unavailable")) {
			prepDialogue("<h2>"+LangVars.Page_Not_Published+"</h2><p>"+LangVars.Page_Not_Published_Text+"<p>",LangVars.Cancel,cancelDialogue,LangVars.Pages_Not_Published_Yes,returnToLP,false,true);
			return false;
		}
		returnToLP();
		return false;
	});
}
$(document).ready(function(){
	
	$("#launchPad .lpBoxSmall:even").addClass("smallLeft");
	$("#launchPad .lpBoxSmall:odd").addClass("smallRight");
	bindReturnsToLP();
	
	$(".lpBoxBig,#systemMenuStaff,#launchPad .lpBoxSmall").click(function(){
		$("#growingBox").remove();
		$("body").append("<div id='growingBox'></div>");
		if ($(this).attr("id")=="lpWebpages") {
			var showWelcomeToolTip=false;
		} else {
			var showWelcomeToolTip=true;
		}
		var ot = $(this).offset().top;
		var ol = $(this).offset().left;
		var w = $(this).outerWidth();
		var h = $(this).outerHeight();
		/*if ($(window).width()>1300) {
			var nw = "50%";
		} else {
			var nw = "100%";
		}*/
		nw = $("#dragBoundry").width();
		if ($(this).attr("id")=="lpStats") {
			var stats =true;
		} else {
			var stats=false;
		}
		$("#growingBox").css({top:ot+"px",left:ol+"px",width:w+"px",height:h+"px"});
		$("#growingBox").stop(true,true).animate({top:"0px",left:"0px",width:nw,height:"100%"},450,function(){
			$("#launchPad").addClass("hidden");
			$("#growingBox").fadeOut(300,function(){
				$("#growingBox").remove();
			});
			if (stats) {
				window.location="/admin/?stats";
			}
			if (showWelcomeToolTip) {
				setTimeout(function() {
				if (currentTooltip) {
					interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
					clearTimeout(toolTipTimeout);
				}
				currentTooltipItem=0;
				currentTooltip="returntowelcome";
				toolTipTimeout = setTimeout(tooltip, 10);
				if (!$("#settingsFlyin:visible").length) {
					if (currentTooltip) {
						interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
						clearTimeout(toolTipTimeout);
					}
					currentTooltipItem=0;
					currentTooltip="contextmenu";
					toolTipTimeout = setTimeout(tooltip, 10);
				}
				


			}, 1000);
			}
			
		});
		
	});
	if ($("#dragInsert").length) {
		$("body").attr("pane","editContent");
	}
	livepreview();
	$(window).resize(function(){
		hidePaneTools();
		$(".paneTools").removeAttr("style");
		setMaxHeightsOnHeaderMenus();
		initLP();
	});
	$(".dragInsertTabContents").hide();
	$(".dragInsertTabContents:first").show();
	/*
	$("#dragInsert h2:not(#dragInsert h2:first)").removeClass("expanded");	
	$("#dragInsert ul.noCollapse").show();
	//$("#dragInsert ul:not(.noCollapse):first").show();
	$("#dragInsert h2").click(function(){
		if ($(this).hasClass("expanded")) {
			$(this).next().slideUp(150,function(){
				$("#dragInsertInner").lovelyScroll();
			});
			$(this).removeClass("expanded");
		} else {
			$(this).next().slideDown(150,function(){
				$("#dragInsertInner").lovelyScroll();
			});
			$(this).addClass("expanded");
		}

		return false;
	});
*/
	assignHeaderMenus();
	
});

var currentTooltip = false;
var currentTooltipItem = 0;
var interuptedChains = new Array();
var tooltips = new Array();


function logTrainingClick () {};
function hideTraining () {};
function showTraining () {};
function hideToolTips(advance) {
	$("body").removeClass("showingResize");
	$("#toolTipEnlarge").fadeOut();
	$(".reveal").removeClass("reveal");

	$("#toolTip").fadeOut(200);
	if (advance){

		toolTipTimeout = setTimeout(tooltip, 300);
	}
}
function showToolTip(){
	
	if ($("#toolTip:visible").length) {
		interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
		return false;
	}
	$("#dismissToolTip").attr("showing",currentTooltip+"-"+currentTooltipItem);
	$(".reveal").removeClass("reveal");
	if (tooltips[currentTooltip][currentTooltipItem].reveal)  {
		$(tooltips[currentTooltip][currentTooltipItem].reveal).addClass("reveal");
	}

	$('#dontShowToolTipAgain').addClass("checked");
	var texts = toHTML(tooltips[currentTooltip][currentTooltipItem].texts);

	if (iOS||!isMouseBased) {
		if (tooltips[currentTooltip][currentTooltipItem].texts_touch) {
			var texts_touch = toHTML(tooltips[currentTooltip][currentTooltipItem].texts_touch);
			$("#toolTipText").html(texts_touch);
		} else {
			$("#toolTipText").html(texts);
		}
	} else {
		$("#toolTipText").html(texts);
	}

	$("#toolTip").removeClass("nudgeP55");
	$("#toolTip").removeClass("nudgeP60");
	$("#toolTip").removeClass("nudgeP65");
	$("#toolTip").removeClass("nudgeP70");
	$("#toolTip").removeClass("nudgeP75");
	$("#toolTip").removeClass("nudgeP80");
	$("#toolTip").removeClass("nudgeP85");
	$("#toolTip").removeClass("nudgeP90");
	$("#toolTip").removeClass("nudgeP95");

	$("#toolTip").css("visibility","hidden").show();
	var toolTipHeight = $("#toolTip").outerHeight();
	var toolTipInnerWidth = $("#toolTip").width();
	var toolTipWidth = $("#toolTip").outerWidth();
	$("#toolTip").hide().css("visibility","visible");
	$("#toolTip").removeClass("body_center").removeClass("top_left").removeClass("top_center").removeClass("right_center").removeClass("center_center").removeClass("top_right").removeClass("bottom_left").removeClass("bottom_center").removeClass("bottom_right");
	$("#toolTip").addClass(tooltips[currentTooltip][currentTooltipItem].pos);
	$(".toolTip").css("margin-top","0").css("margin-left","0");
	if (tooltips[currentTooltip][currentTooltipItem].withEnlarge===true) {
		$("#toolTipEnlarge").css("display","table-cell");
		$("body").addClass("showingResize");
	}
	if (tooltips[currentTooltip][currentTooltipItem].pos=="top_left")  {
		var ofTop = $(tooltips[currentTooltip][currentTooltipItem].itarget).offset().top + $(tooltips[currentTooltip][currentTooltipItem].itarget).outerHeight();
		var ofLeft = $(tooltips[currentTooltip][currentTooltipItem].itarget).offset().left;
		$(".toolTip").css({top:ofTop-10+"px",left:ofLeft+"px",opacity:0,display:"block"}).animate({top:ofTop+10,opacity:1});
	}
	if (tooltips[currentTooltip][currentTooltipItem].pos=="center_center")  {
		var ofTop = $(tooltips[currentTooltip][currentTooltipItem].itarget).offset().top + ( $(tooltips[currentTooltip][currentTooltipItem].itarget).outerHeight()/2 ) - (toolTipHeight/2);
		var ofLeft = $(tooltips[currentTooltip][currentTooltipItem].itarget).offset().left + ( $(tooltips[currentTooltip][currentTooltipItem].itarget).outerWidth()/2 ) - (310/2);
		$(".toolTip").css({top:ofTop-10+"px",left:ofLeft+"px",opacity:0,display:"block"}).animate({top:ofTop+10,opacity:1});
	}

	if (tooltips[currentTooltip][currentTooltipItem].pos=="body_center")  {
		var mt = toolTipHeight/2;
		var ml = toolTipWidth/2;
		var ofTop = $(tooltips[currentTooltip][currentTooltipItem].itarget).offset().top + ( $(tooltips[currentTooltip][currentTooltipItem].itarget).outerHeight()/2 ) - (toolTipHeight/2);
		var ofLeft = $(tooltips[currentTooltip][currentTooltipItem].itarget).offset().left + ( $(tooltips[currentTooltip][currentTooltipItem].itarget).outerWidth()/2 ) - (310/2);
		$(".toolTip").css({top:"50%",left:"50%",marginTop:"-"+mt+"px",marginLeft:"-"+ml+"px",opacity:0,display:"block"}).animate({opacity:1});
	}

	if (tooltips[currentTooltip][currentTooltipItem].pos=="bottom_center")  {
		var ofTop = $(tooltips[currentTooltip][currentTooltipItem].itarget).offset().top - toolTipHeight;
		var ofLeft = $(tooltips[currentTooltip][currentTooltipItem].itarget).offset().left  - 150 + ($(tooltips[currentTooltip][currentTooltipItem].itarget).outerWidth()/2);

		var rightEdge = ofLeft+toolTipWidth+40;
		var diff = rightEdge - $(window).width()-20;
		if (rightEdge > $(window).width()-20) {
			ofLeft = ofLeft-diff;
			var percentageDiff = (diff / (toolTipInnerWidth))*100;

			percentageDiff=  5 * Math.round(percentageDiff/5);
			percentageDiff = percentageDiff+50;
			$("#toolTip").addClass("nudgeP"+percentageDiff);
		}



		if ($(tooltips[currentTooltip][currentTooltipItem].itarget).offset().top<toolTipHeight+10) {

			$("#toolTip").removeClass("top_left").removeClass("top_center").removeClass("center_center").removeClass("top_right").removeClass("bottom_left").removeClass("bottom_center").removeClass("bottom_right");

			$("#toolTip").addClass("top_center");
			var ofTop = $(tooltips[currentTooltip][currentTooltipItem].itarget).offset().top + $(tooltips[currentTooltip][currentTooltipItem].itarget).outerHeight();
			var ofLeft = $(tooltips[currentTooltip][currentTooltipItem].itarget).offset().left  - 150 + ($(tooltips[currentTooltip][currentTooltipItem].itarget).outerWidth()/2);

			var rightEdge = ofLeft+toolTipWidth+40;
			var diff = rightEdge - $(window).width()-20;
			if (rightEdge > $(window).width()-20) {
				ofLeft = ofLeft-diff;
				var percentageDiff = (diff / (toolTipInnerWidth))*100;

				percentageDiff=  5 * Math.round(percentageDiff/5);
				percentageDiff = percentageDiff+50;
				$("#toolTip").addClass("nudgeP"+percentageDiff);
			}



			$(".toolTip").css({top:ofTop-10+"px",left:ofLeft+"px",opacity:0,display:"block"}).animate({top:ofTop+10,opacity:1});
		} else {



			$(".toolTip").css({top:ofTop+10+"px",left:ofLeft+"px",opacity:0,display:"block"}).animate({top:ofTop-10,opacity:1});
		}
	}
	if (tooltips[currentTooltip][currentTooltipItem].pos=="top_center")  {
		var ofTop = $(tooltips[currentTooltip][currentTooltipItem].itarget).offset().top + $(tooltips[currentTooltip][currentTooltipItem].itarget).height();
		var ofLeft = $(tooltips[currentTooltip][currentTooltipItem].itarget).offset().left  - 150 + ($(tooltips[currentTooltip][currentTooltipItem].itarget).outerWidth()/2);

		var rightEdge = ofLeft+toolTipWidth+40;
		var diff = rightEdge - $(window).width()-20;
		if (rightEdge > $(window).width()-20) {
			ofLeft = ofLeft-diff;
			var percentageDiff = (diff / (toolTipInnerWidth))*100;

			percentageDiff=  5 * Math.round(percentageDiff/5);
			percentageDiff = percentageDiff+50;
			$("#toolTip").addClass("nudgeP"+percentageDiff);
		}


		if ($(tooltips[currentTooltip][currentTooltipItem].itarget).offset().top<toolTipHeight+10) {
			$("#toolTip").removeClass("top_left").removeClass("top_center").removeClass("top_right").removeClass("bottom_left").removeClass("bottom_center").removeClass("bottom_right");
			$("#toolTip").addClass("top_center");
			var ofTop = $(tooltips[currentTooltip][currentTooltipItem].itarget).offset().top + $(tooltips[currentTooltip][currentTooltipItem].itarget).outerHeight();

			$(".toolTip").css({top:ofTop-10+"px",left:ofLeft+"px",opacity:0,display:"block"}).animate({top:ofTop+10,opacity:1});

		} else {


			$(".toolTip").css({top:ofTop+10+"px",left:ofLeft+"px",opacity:0,display:"block"}).animate({top:ofTop-10,opacity:1});
		}
	}
	if (tooltips[currentTooltip][currentTooltipItem].pos=="bottom_right")  {
		var ofTop = $(tooltips[currentTooltip][currentTooltipItem].itarget).offset().top - toolTipHeight;
		var ofLeft = $(tooltips[currentTooltip][currentTooltipItem].itarget).offset().left  - 290 + $(tooltips[currentTooltip][currentTooltipItem].itarget).outerWidth();
		$(".toolTip").css({top:ofTop+10+"px",left:ofLeft+"px",opacity:0,display:"block"}).animate({top:ofTop-10,opacity:1});
	}
	if (tooltips[currentTooltip][currentTooltipItem].pos=="top_right")  {
		var ofTop = $(tooltips[currentTooltip][currentTooltipItem].itarget).offset().top + $(tooltips[currentTooltip][currentTooltipItem].itarget).height() + 20;
		var ofLeft = $(tooltips[currentTooltip][currentTooltipItem].itarget).offset().left  - 300 + $(tooltips[currentTooltip][currentTooltipItem].itarget).outerWidth();
		$(".toolTip").css({top:ofTop+10+"px",left:ofLeft+"px",opacity:0,display:"block"}).animate({top:ofTop-10,opacity:1});
	}
	if (tooltips[currentTooltip][currentTooltipItem].pos=="bottom_left")  {
		var ofTop = $(tooltips[currentTooltip][currentTooltipItem].itarget).offset().top - toolTipHeight;
		var ofLeft = $(tooltips[currentTooltip][currentTooltipItem].itarget).offset().left;
		$(".toolTip").css({top:ofTop+10+"px",left:ofLeft+"px",opacity:0,display:"block"}).animate({top:ofTop-10,opacity:1});
	}
	if (tooltips[currentTooltip][currentTooltipItem].pos=="right_center")  {
		var ofTop = $(tooltips[currentTooltip][currentTooltipItem].itarget).offset().top + ($(tooltips[currentTooltip][currentTooltipItem].itarget).height()/2) - (toolTipHeight/2);
		var ofLeft = $(tooltips[currentTooltip][currentTooltipItem].itarget).offset().left - 340;
		$(".toolTip").css({top:ofTop+10+"px",left:ofLeft+"px",opacity:0,display:"block"}).animate({top:ofTop-10,opacity:1});
	}

	if (ofLeft<15) {
		$(".toolTip")
		$(".toolTip").css({left:"10px"});
	}
	var TTH = $(".toolTip").outerHeight();
	var bottomDist = TTH+ofTop+20;
	if (bottomDist>$(window).height()) {
		if (tooltips[currentTooltip][currentTooltipItem].pos=="center_center") {
			var ofTop = $(tooltips[currentTooltip][currentTooltipItem].itarget).offset().top + ($(window).height()/2) - (toolTipHeight/2);
			$(".toolTip").stop(false,true).css({top:ofTop+"px",left:ofLeft+"px"});
		}
		if (tooltips[currentTooltip][currentTooltipItem].pos=="top_right") {
			$(".toolTip").removeClass("top_right").addClass("right_center");
			var ofTop = $(tooltips[currentTooltip][currentTooltipItem].itarget).offset().top + ($(tooltips[currentTooltip][currentTooltipItem].itarget).height()/2) - (toolTipHeight/2);
			var ofLeft = $(tooltips[currentTooltip][currentTooltipItem].itarget).offset().left - 310;
			$(".toolTip").stop(false,true).css({top:ofTop+"px",left:ofLeft+"px"});
		}
		if (tooltips[currentTooltip][currentTooltipItem].pos=="top_center") {
			$(".toolTip").removeClass("top_center").addClass("left_center");
			var ofTop = $(tooltips[currentTooltip][currentTooltipItem].itarget).offset().top + ($(tooltips[currentTooltip][currentTooltipItem].itarget).height()/2) - (toolTipHeight/2);
			$(".toolTip").stop(false,true).css({top:ofTop+10+"px"});
		}
	}

	currentTooltipItem++;
};
function skipToolTip(){
	if (interuptedChains.length) {
			if (currentTooltip!==false) {
				if (currentTooltipItem<tooltips[currentTooltip].length) {
					currentTooltipItem++;
					interuptedChains.push({currentTooltip:currentTooltip,currentTooltipItem:currentTooltipItem});
					clearTimeout(toolTipTimeout);
				}
			}

			currentTooltipItem=interuptedChains[interuptedChains.length-1].currentTooltipItem;
			currentTooltip=interuptedChains[interuptedChains.length-1].currentTooltip;
			interuptedChains.pop();
			toolTipTimeout = setTimeout(tooltip, 100);
		} else {
			if (currentTooltip!==false) {
				if (currentTooltipItem<tooltips[currentTooltip].length) {
					currentTooltipItem++;
					tooltip();
				}
			}

		}
};
function tooltip () {
	return false;
	
	if (
		currentTooltip
		&& typeof tooltips[currentTooltip][currentTooltipItem] != "undefined"
		&& $(tooltips[currentTooltip][currentTooltipItem].itarget).length
		&& hidden_tips.indexOf(currentTooltip+"-"+currentTooltipItem) == -1
		&& hide_tips===0
		)
		{
			if (tooltips[currentTooltip][currentTooltipItem].mouseOnly===true) {
				if (isMouseBased) {
					showToolTip();
				} else {
					skipToolTip();
				}
				return false;
			}
			if (tooltips[currentTooltip][currentTooltipItem].touchOnly===true) {
				if (iOS||!isMouseBased) {
					showToolTip();
				} else {
					skipToolTip();
				}
				return false;
			}
			if (typeof tooltips[currentTooltip][currentTooltipItem].touchOnly == "undefined" && typeof tooltips[currentTooltip][currentTooltipItem].mouseOnly == "undefined") {
				showToolTip();
			}


	} else {
		skipToolTip();

	}
}
var toolTipTimeout;
var hidden_tips;
var hide_tips=0;
var hidden_tips_session = new Array();
$(document).ready(function(){
	hidden_tips = $("#hiddenTips").val().split(",");
	if ($("#hide_tips").length) {
	hide_tips = 1;
	}

	$("#toolTip").click(function(){
		return false;
	});
	$("#dismissToolTip").click(function(){
		$(".tooltipTarget").removeClass("tooltipTarget");
		hidden_tips.push($(this).attr("showing"));
		hidden_tips_session.push($(this).attr("showing"));
		$.ajax({
			  type: "POST",
			  url: "adminUsersActions.php",
			  data: "adminUsersAction=updateViewedTips&hidenTips="+hidden_tips,
			  success: function(msg){
	if (msg=="<script>window.location='/admin/';</script>") { window.location='/admin/login.php?m=3'; return false; }
			  }
		});
		hideToolTips(true);
		if ($("#bpe_text_dropship").length) {
			$("#bpe_text_dropship textarea").focus();
		}
		return false;
	});
	$('#dontShowToolTipAgain').click(function(){
		if ($(this).hasClass("checked")) {
			$(this).removeClass("checked");
		} else {
			$(this).addClass("checked");
		}
		return false;
	});
});


function assignDarkMenu () {
	$(document).click(function(){
		$("#darkMenuOuter,.darkSubMenuOuter").fadeOut();
		$("#statsWrapper").fadeTo(50,"1");
	});
	$("#urchinInner").hoverIntent(function(e){
		hide_menus();
		$("#darkMenuOuter").show();
		darkScroll($("#darkScroll"));
		$("#statsWrapper").fadeTo("slow","0.33");
	},function(){ });
	$("#darkMenuInner a").hoverIntent(function(){
		if (!$(this).parents(".darkSubMenuOuter").length) {
			$(".darkSubMenuOuter").hide();
			$(".darkSubMenuOuter",$(this).parent()).show();	
			darkScroll($(".darkSubMenuOuter",$(this).parent()));		
		}
	},function(){ });
	$(".darkSubMenuInner").click(function(){
		return false;
	});
}
function newConvo (acceptLink) {


		//$("#status").html("WORKING");
		$("#newConvo").fadeIn(300);
		$("#accept").attr("href",acceptLink);
		
	}
$(document).ready(function(){
	$("#ignore").click(function(){
		$("#newConvo").fadeOut(500);
		return false;
	});	
	
});
function randomString() {
	var chars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz";
	var string_length = 5;
	var randomstring = '';
	for (var i=0; i<string_length; i++) {
		var rnum = Math.floor(Math.random() * chars.length);
		randomstring += chars.substring(rnum,rnum+1);
	}
	return randomstring;
}
function poll () {

	if (!$("#checkoutPaneInner .listItemHighlight").length) {
$("#checkoutPaneInner .insertTarget").load("shop.php?to_prevent_cache="+(new Date).getTime(),function(){
			$("#checkoutPaneInner").lovelyScroll();

			urchin();
		});		
	}
	

	var numberOfConvos = $(".responsiveListItem","#convos").length;
	
	$.ajax({
		type: "GET",
		url: "../livechat/actions/checkconvos.php?to_prevent_cache="+(new Date).getTime(),
		success: function (msg) {
			
				$("#hiddenConvos").html(msg);
				
				var newConvos = $(".responsiveListItem","#hiddenConvos").length;
				if (newConvos!=numberOfConvos) {
					if (msg!=0) {
						$('#convos').html(msg);					
					} else {
						if (numberOfConvos!=0) {
							$('#convos').html(msg);
						}
					}
					var numberOfConvos2 = $(".responsiveListItem","#convos").length;

					if (numberOfConvos2!=numberOfConvos) {
						if (numberOfConvos2!=0) {
								setTimeout(function() {
	//								$("#newmessage").each(function(){
	//									this.Play();
	//								});
								}, 300);
								acceptLink = $(".responsiveListItem:last",$("#convos")).attr("livechat-href");

								//newConvo(acceptLink);
						}
						urchin();


					}
					if (numberOfConvos2<numberOfConvos) {
						$("#viewLivechatLog").load("livechat.php",function(){
							$("#chat_archived_wrap").show();
				
						});
					}



					$("#accept").click(function(){
						$("#overlay").fadeOut(500);
						$("#newConvo").fadeOut(500);
					});
				}
				
				
		}
	});


}
// urchin
function urchin () {
	var orders = $("#openOrders .responsiveListItem").length;
	$("#ordersCounter").show();
	$("#ordersCounter").html(orders);
	if (orders===0) {
	$("#ordersCounter").hide();	
	}
	var convos = $(".responsiveListItem",$("#convos")).length;
	$("#livechatCounter").show();
	var oldconvos=parseInt($("#livechatCounter").html());

	$("#livechatCounter").html(convos);
	if (convos===0) {
	$("#livechatCounter").hide();	
	}
	var total = orders+convos;

//	$("#urchinInner div").html(total);
	if (window.fluid) { window.fluid.dockBadge = total; }
	
	if (!$("body").attr("original-title")) {
		$("body").attr("original-title",document.title);
	}
	if (total!=0) {
		document.title = "("+total+") "+$("body").attr("original-title");
		$("#primaryNotify").html(total);
		//$(".primaryNotify").remove();
		$(".returnToLP").addClass("showingCounter").html(total);
	} else {
		document.title = $("body").attr("original-title");
		$("#primaryNotify").hide();
		//$(".primaryNotify").remove();
		$(".returnToLP").removeClass("showingCounter").html("");
	}
	
	if (total==0 && $("#urchin:visible").length) {
		$("#statsWrapper").fadeTo(50,"1");
		$("#urchin").fadeOut();
		$("#darkMenuOuter,.darkSubMenuOuter").fadeOut();
	}
	if (total!=0 && !$("#urchin:visible").length) {
		$("#urchin").fadeIn();
	}
	if (oldconvos!=convos&&convos!=0) {
		if ($("#lpLivechat").length) {
			$("#newlivechatplayer").jPlayer("play");		
		}		
	}
}
// end urchin
var poller;
var poller2;
function livechat_init () {
	
	$("#checkoutPaneInner .insertTarget").load("shop.php?to_prevent_cache="+(new Date).getTime(),function(){
			if ($("#checkoutPaneInner .insertTarget").html()=="redirect") {
				window.location.href=$("#redirectOnExpire").val();
			}
			urchin();
			$("#checkoutPaneInner").lovelyScroll();

		});		
	$.ajax({
		type: "GET",
		url: "../livechat/actions/showconvos.php?to_prevent_cache="+(new Date).getTime(),
		success: function(msg) {
	

			if (msg!=0) {
				$('#convos').html(msg);					
			}
			
			if ($("#darkMenuOuter:visible").length) {
				darkScroll($("#darkScroll"));
			}			
			$("a.convo",$("#convos")).unbind();
	
			$("a.convo",$("#convos")).click(function  () {
				href= this.href;
				rand = randomString();
				window.open(href,rand,'toolbar=0,scrollbars=0,location=0,statusbar=0,menubar=0,resizable=0,width=311,height=349');
				return false;
			});
			hidePaneTools();
			urchin();
			clearInterval(poller2);
			poll();
			poller2 = setInterval(poll, 10000);
		}
	});
	$.ajax({
		type: "GET",
		url: "livechat.php?to_prevent_cache="+(new Date).getTime(),
		success: function(msg) {
			if (msg!=0) {
				$('#viewLivechatLog').html(msg);					
			}
		}
	});
}

